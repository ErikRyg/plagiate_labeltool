<?xml version="1.0" encoding="UTF-8"?>
<quiz>
<!-- question: 2182764  -->
  <question type="coderunner">
    <name>
      <text>Faktorisierung (ÄNDERN NACH SEMESTER TESTS WEG GEMACHT)</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Schreiben Sie eine Funktion, die zu einer ganzen Zahl zwei mögliche Faktoren, die zusammen die übergebene Zahl ergeben, zurückgibt. Dabei soll der triviale Fall:<br></p><ul><li>eingabe = eingabe * 1</li></ul><p><b>nur</b> für Primzahlen und Spezialfälle wie 0 und 1 auftreten.<br>Da C-Funktionen immer nur <u>einen</u> Rückgabewert haben können (und wir 2 Werte zurückgeben wollen), soll die Wertrückgabe über Zeiger erfolgen.<br>Verwenden Sie für die Funktion den folgenden Funktionskopf:<br></p><ul><li>void factorize(long product, long *f1, long *f2)<br></li></ul><p>Schreiben Sie außerdem eine <i>main</i>-Funktion, die eine ganze Zahl vom Benutzer einliest, diese mit Hilfe der Funktion in Faktoren zerlegt und anschließend die eingegebene Zahl und die Faktoren auf der Konsole ausgibt.<br><br><br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1</defaultgrade>
    <penalty>0</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <coderunnertype>c_program</coderunnertype>
    <prototypetype>0</prototypetype>
    <allornothing>1</allornothing>
    <penaltyregime>0, 0, 0, 10, 20, ...</penaltyregime>
    <precheck>0</precheck>
    <hidecheck>0</hidecheck>
    <showsource>0</showsource>
    <answerboxlines>32</answerboxlines>
    <answerboxcolumns>100</answerboxcolumns>
    <answerpreload><![CDATA[#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	// Your factorization
}

int main(){
	printf("Please enter an Integer: ");
	printf("Possible Factors of %ld are %ld and %ld.\n");
	return 0;
}
]]></answerpreload>
    <globalextra></globalextra>
    <useace></useace>
    <resultcolumns></resultcolumns>
    <template></template>
    <iscombinatortemplate></iscombinatortemplate>
    <allowmultiplestdins></allowmultiplestdins>
    <answer><![CDATA[#include <stdio.h>

// Entschuldige. Diese Aufgabe war etwas dämlich gestellt.

void factorize(long product, long *f1, long *f2)
{
	unsigned long div = product/2;

	if(product == 0 || product == 1){
		*f1 = 1;
		*f2 = product;
		return;
	}
	while((product%div)!=0)
		div--;
	*f1 = div;
	*f2 = product/div;
	return;
}



int main(){
	long number = 0, factor1 = 0, factor2 = 0;
	printf("Please enter an Integer: ");
	scanf("%ld", &number);
	getchar();
	factorize(number, &factor1, &factor2);
	printf("Possible Factors of %ld are %ld and %ld.\n",
			number, factor1, factor2);
	return 0;
}
]]></answer>
    <validateonsave>1</validateonsave>
    <testsplitterre></testsplitterre>
    <language></language>
    <acelang></acelang>
    <sandbox></sandbox>
    <grader></grader>
    <cputimelimitsecs></cputimelimitsecs>
    <memlimitmb></memlimitmb>
    <sandboxparams></sandboxparams>
    <templateparams></templateparams>
    <hoisttemplateparams>1</hoisttemplateparams>
    <templateparamslang>twig</templateparamslang>
    <templateparamsevalpertry>0</templateparamsevalpertry>
    <templateparamsevald></templateparamsevald>
    <twigall>0</twigall>
    <uiplugin></uiplugin>
    <uiparameters></uiparameters>
    <attachments>0</attachments>
    <attachmentsrequired>0</attachmentsrequired>
    <maxfilesize>10240</maxfilesize>
    <filenamesregex></filenamesregex>
    <filenamesexplain></filenamesexplain>
    <displayfeedback>1</displayfeedback>
    <giveupallowed>0</giveupallowed>
    <prototypeextra></prototypeextra>
    <testcases>
      <testcase testtype="0" useasexample="1" hiderestiffail="0" mark="1.0000000" >
      <testcode>
                <text>1. Test</text>
      </testcode>
      <stdin>
                <text>50</text>
      </stdin>
      <expected>
                <text>Please enter an Integer: Possible Factors of 50 are 25 and 2.
</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>SHOW</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="1" hiderestiffail="0" mark="1.0000000" >
      <testcode>
                <text>2. Test</text>
      </testcode>
      <stdin>
                <text>1</text>
      </stdin>
      <expected>
                <text>Please enter an Integer: Possible Factors of 1 are 1 and 1.
</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>SHOW</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.0000000" >
      <testcode>
                <text>3. Test</text>
      </testcode>
      <stdin>
                <text>50</text>
      </stdin>
      <expected>
                <text>Please enter an Integer: Possible Factors of 50 are 25 and 2.
</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>HIDE</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.0000000" >
      <testcode>
                <text>4. Test</text>
      </testcode>
      <stdin>
                <text>50</text>
      </stdin>
      <expected>
                <text>Please enter an Integer: Possible Factors of 50 are 25 and 2.
</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>HIDE</text>
      </display>
    </testcase>
      <testcase testtype="0" useasexample="0" hiderestiffail="0" mark="1.0000000" >
      <testcode>
                <text>5. Test (Primzahl)</text>
      </testcode>
      <stdin>
                <text>50</text>
      </stdin>
      <expected>
                <text>Please enter an Integer: Possible Factors of 50 are 25 and 2.
</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>HIDE</text>
      </display>
    </testcase>
    </testcases>
  </question>

</quiz>