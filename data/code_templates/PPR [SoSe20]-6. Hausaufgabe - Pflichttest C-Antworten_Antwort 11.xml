<?xml version="1.0" encoding="UTF-8"?>
<quiz>
<!-- question: 2173350  -->
  <question type="coderunner">
    <name>
      <text>for/while (leicht)</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p>Implementieren Sie ein Programm HelloLoop, das 10-mal <span class="" style="color: rgb(152, 202, 62);">Hello Loop!</span> auf der Konsole <span class="" style="color: rgb(152, 202, 62);">ausgibt.</span> Verwenden Sie für die ersten fünf Ausgaben eine for-Schleife und für die zweiten fünf Ausgaben eine while-Schleife.<br><br><br><br></p>]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1</defaultgrade>
    <penalty>0</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <coderunnertype>c_program</coderunnertype>
    <prototypetype>0</prototypetype>
    <allornothing>1</allornothing>
    <penaltyregime>0, 10, 20, ...</penaltyregime>
    <precheck>0</precheck>
    <hidecheck>0</hidecheck>
    <showsource>0</showsource>
    <answerboxlines>18</answerboxlines>
    <answerboxcolumns>100</answerboxcolumns>
    <answerpreload>int main(){
    
}</answerpreload>
    <globalextra></globalextra>
    <useace></useace>
    <resultcolumns></resultcolumns>
    <template><![CDATA[{{ STUDENT_ANSWER | replace({'int main': 'void student_main', }) }} 

int main(){
{% if not 'for' in STUDENT_ANSWER %}
    printf("ERROR. You must use for");
    return 0;
{% endif %}
{% if not 'while' in STUDENT_ANSWER %}
    printf("ERROR. You must use while");
    return 0;
{% endif %}
    {{ TEST.testcode }};
return 0;
}]]></template>
    <iscombinatortemplate></iscombinatortemplate>
    <allowmultiplestdins></allowmultiplestdins>
    <answer><![CDATA[#include <stdio.h>

int main(){
    // for−Schleife
    for(int i = 0; i < 5; ++i) {
        printf("Hello Loop!\n");
    }
    //while−Schleife
    int i = 0;
    while(i < 5) {
        printf("Hello Loop!\n");
        ++i;
    }
}]]></answer>
    <validateonsave>1</validateonsave>
    <testsplitterre><![CDATA[|#<ab@17943918#@>#\n|ms]]></testsplitterre>
    <language></language>
    <acelang></acelang>
    <sandbox></sandbox>
    <grader></grader>
    <cputimelimitsecs></cputimelimitsecs>
    <memlimitmb></memlimitmb>
    <sandboxparams></sandboxparams>
    <templateparams></templateparams>
    <hoisttemplateparams>1</hoisttemplateparams>
    <templateparamslang>twig</templateparamslang>
    <templateparamsevalpertry>0</templateparamsevalpertry>
    <templateparamsevald></templateparamsevald>
    <twigall>0</twigall>
    <uiplugin></uiplugin>
    <uiparameters></uiparameters>
    <attachments>0</attachments>
    <attachmentsrequired>0</attachmentsrequired>
    <maxfilesize>10240</maxfilesize>
    <filenamesregex></filenamesregex>
    <filenamesexplain></filenamesexplain>
    <displayfeedback>1</displayfeedback>
    <giveupallowed>0</giveupallowed>
    <prototypeextra></prototypeextra>
    <testcases>
      <testcase testtype="0" useasexample="1" hiderestiffail="0" mark="1.0000000" >
      <testcode>
                <text>student_main()</text>
      </testcode>
      <stdin>
                <text></text>
      </stdin>
      <expected>
                <text>Hello Loop!
Hello Loop!
Hello Loop!
Hello Loop!
Hello Loop!
Hello Loop!
Hello Loop!
Hello Loop!
Hello Loop!
Hello Loop!
</text>
      </expected>
      <extra>
                <text></text>
      </extra>
      <display>
                <text>SHOW</text>
      </display>
    </testcase>
    </testcases>
  </question>

</quiz>