,semester,ha,task,prog_lang,surname1,lastname1,surname2,lastname2,code1,code2,label,hand_labled
0,WS2021,9,Antwort 10,C,Jolanda Marietta,Schumann,David,Stubler,"#include <stdio.h>

void aussortieren (char* string)
{
	for(int i = 0; string[i] != '\0'; i++)
	{
		if(string[i] == 'x' || string[i] == 'y' || string[i] == 'q' || string[i] == 'X' || string[i] == 'Y' || string[i] == 'Q' )
		{
			for(int k = i; string[k] != '\0'; k++)
			{
				string[k] = string[k+1];
			}
			i = i -1;
		}
	}
}

void zeichen3 (char* string)
{
	
	int z = 0;
	while(string[z] != '\0')
	{
	z++;
	}
	
	char tmp[z]; 


	for(int j = 0; j < z; j++)
	{
		if(j % 3 == 0)
		{
			tmp[j] = string[j];
		}
		else tmp[j] = 0;
	}
	
	int s =0;
	for(int i = 0; i < z; i++)
	{
		if(tmp[i] != 0)
		{
			string[s] = tmp[i];
			s++;
		}
	}
	string[s] = '\0';
	
}



int main(int argc, char* argv[])
{
	int z = 0;

	

	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			z++;		
		}				
	}
	char string[z+1];
	string[z] = '\0';
	int s = 0;
	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			
			string[s] = argv[k][i];
			s++;
		}

	}
	aussortieren(string);
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"",&string[0]);

	zeichen3(string);
	printf(""Der neue String lautet: %s \n"",&string[0]);
}","#include <stdio.h>
#include <stdlib.h>

int main( int argc, char** argv)
{
    char text[100] = ""lasse roland max ivo"";
    char temp[100];
    char NeuString[100];
    int J = 0;
    int K = 0;
    int a = 1;
    int i;
    for ( i = 0; *(argv+i) != '\0'; i++)
    {
        if (*(argv+i) == ' ' || *(argv+i) == 'x' || *(argv+i) == 'y' || *(argv+i) == 'q'|| *(argv+i) == 'X'|| *(argv+i) == 'Y'|| *(argv+i) == 'Q')
            a++;
            continue;
        temp[J++] = *(argv+i);
    }
    temp[J] = 0;
    printf( ""x,y,q und X,Y,Q aussortiert: %s \n"", temp );
    for ( i = 0; temp[i] != '\0'; i++)
    {
        if (i == 0 || i % 3 == 0)
        NeuString[K++] = temp[i];
        continue;
    }
    NeuString[K] = 0;
    printf( ""Der neue String lautet: %s \n"", NeuString);
}",0.0,1
1,WS2021,9,Antwort 10,C,Jolanda Marietta,Schumann,Daniel Dominik,Eichstädt,"#include <stdio.h>

void aussortieren (char* string)
{
	for(int i = 0; string[i] != '\0'; i++)
	{
		if(string[i] == 'x' || string[i] == 'y' || string[i] == 'q' || string[i] == 'X' || string[i] == 'Y' || string[i] == 'Q' )
		{
			for(int k = i; string[k] != '\0'; k++)
			{
				string[k] = string[k+1];
			}
			i = i -1;
		}
	}
}

void zeichen3 (char* string)
{
	
	int z = 0;
	while(string[z] != '\0')
	{
	z++;
	}
	
	char tmp[z]; 


	for(int j = 0; j < z; j++)
	{
		if(j % 3 == 0)
		{
			tmp[j] = string[j];
		}
		else tmp[j] = 0;
	}
	
	int s =0;
	for(int i = 0; i < z; i++)
	{
		if(tmp[i] != 0)
		{
			string[s] = tmp[i];
			s++;
		}
	}
	string[s] = '\0';
	
}



int main(int argc, char* argv[])
{
	int z = 0;

	

	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			z++;		
		}				
	}
	char string[z+1];
	string[z] = '\0';
	int s = 0;
	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			
			string[s] = argv[k][i];
			s++;
		}

	}
	aussortieren(string);
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"",&string[0]);

	zeichen3(string);
	printf(""Der neue String lautet: %s \n"",&string[0]);
}","#include <stdio.h>

char aussortieren (char buchstabe)
{if (buchstabe=='x'||buchstabe=='y'||buchstabe=='q'||
     buchstabe=='X'||buchstabe=='Y'||buchstabe=='Q')
    return 1;
else return 0;
}

void ersetzen (char*src)
{char tmp[100]="""";
 int fw=0;
 while (src[fw]!='\0')
    {tmp[fw]=src[fw];fw++;}
    tmp[fw]='\0';
    fw=0;
int fw_mod=0;
while (tmp[fw]!='\0')
    {if (fw%3!=0)
        {fw++;}
    else 
        {src[fw_mod]=tmp[fw];
         fw++;
         fw_mod++;}
    }
src[fw_mod]='\0';
}

int main (int argc,char*argv[])
{char str[100]="""";
int c=1;
int lv_c=0;
int lv_argc=0;
while (c!=argc)
    {while (argv[c][lv_argc]!='\0')
        {if (aussortieren(argv[c][lv_argc])) 
         lv_argc++;
         else
         {str[lv_c]=argv[c][lv_argc];
          lv_c++;
          lv_argc++;}}
    c++;lv_argc=0;}
printf (""x,y,q und X,Y,Q aussortiert: %s\n"",str);
ersetzen(str);
printf (""Der neue String lautet: %s\n"",str);
}",0.0,1
2,WS2021,9,Antwort 10,C,Jolanda Marietta,Schumann,Mohamad Anas,Allaham,"#include <stdio.h>

void aussortieren (char* string)
{
	for(int i = 0; string[i] != '\0'; i++)
	{
		if(string[i] == 'x' || string[i] == 'y' || string[i] == 'q' || string[i] == 'X' || string[i] == 'Y' || string[i] == 'Q' )
		{
			for(int k = i; string[k] != '\0'; k++)
			{
				string[k] = string[k+1];
			}
			i = i -1;
		}
	}
}

void zeichen3 (char* string)
{
	
	int z = 0;
	while(string[z] != '\0')
	{
	z++;
	}
	
	char tmp[z]; 


	for(int j = 0; j < z; j++)
	{
		if(j % 3 == 0)
		{
			tmp[j] = string[j];
		}
		else tmp[j] = 0;
	}
	
	int s =0;
	for(int i = 0; i < z; i++)
	{
		if(tmp[i] != 0)
		{
			string[s] = tmp[i];
			s++;
		}
	}
	string[s] = '\0';
	
}



int main(int argc, char* argv[])
{
	int z = 0;

	

	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			z++;		
		}				
	}
	char string[z+1];
	string[z] = '\0';
	int s = 0;
	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			
			string[s] = argv[k][i];
			s++;
		}

	}
	aussortieren(string);
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"",&string[0]);

	zeichen3(string);
	printf(""Der neue String lautet: %s \n"",&string[0]);
}","#include <stdio.h>
#include <stdlib.h>

int length(char *p)
{
 int i = 0; 
    while (p[i] != '\0')
      i++;
  return i; 
}
 
void ersetzen(char* dest, int zahl, char* src)
{  
  int sizeS = length(src);
  int sizeD = length(dest);
 /*     char temp[sizeS]; 
    for (int i = 0; i <= sizeS-1; i++) 
        temp [i] = src[i];

  for (int i = 0; i <= zahl-1; i++) {
    if (i <= sizeD && i <= sizeS) {
        //dest[i] = temp[i];
        *dest = temp[i]; 

    }
  }*/
  int i = 1;
   while(*src && i <= sizeS && i <= sizeD && i <= zahl) {
    *dest++ = *src++;
    i++;
 }
}

void swap(char* a, char* b){
    char c = *a;
    *a = *b;
    *b = c;
}


void umdrehen( char* str )
{
    if (!*str) 
        return;

    char* i = str;
    char* j = i + length(str) - 1;
    while (i < j) {
        swap(i, j);
        i++;
        j--;
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.0,1
4,WS2021,9,Antwort 10,C,Jolanda Marietta,Schumann,Gabriel,Ullrich,"#include <stdio.h>

void aussortieren (char* string)
{
	for(int i = 0; string[i] != '\0'; i++)
	{
		if(string[i] == 'x' || string[i] == 'y' || string[i] == 'q' || string[i] == 'X' || string[i] == 'Y' || string[i] == 'Q' )
		{
			for(int k = i; string[k] != '\0'; k++)
			{
				string[k] = string[k+1];
			}
			i = i -1;
		}
	}
}

void zeichen3 (char* string)
{
	
	int z = 0;
	while(string[z] != '\0')
	{
	z++;
	}
	
	char tmp[z]; 


	for(int j = 0; j < z; j++)
	{
		if(j % 3 == 0)
		{
			tmp[j] = string[j];
		}
		else tmp[j] = 0;
	}
	
	int s =0;
	for(int i = 0; i < z; i++)
	{
		if(tmp[i] != 0)
		{
			string[s] = tmp[i];
			s++;
		}
	}
	string[s] = '\0';
	
}



int main(int argc, char* argv[])
{
	int z = 0;

	

	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			z++;		
		}				
	}
	char string[z+1];
	string[z] = '\0';
	int s = 0;
	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			
			string[s] = argv[k][i];
			s++;
		}

	}
	aussortieren(string);
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"",&string[0]);

	zeichen3(string);
	printf(""Der neue String lautet: %s \n"",&string[0]);
}","#include <stdio.h>
void xyqentfernen(char* str1){
	int i;
	int j;
	for ( i = 0,  j = 0;j<100; ++j){
	if ((str1[j] != 'x')&&(str1[j] != 'X')&&(str1[j] != 'y')&&(str1[j] != 'Y')&&(str1[j] != 'q')&&(str1[j] != 'Q'))
	str1[i++] = str1[j];
	
	}
}

void zsmfuegen(char* str1, char* str2){
	int j=0;
	for(;(str2[j])!=('\0');j++){}
	for (int i=0;str1[i]!='\0';i++){
		str2[j+i]=str1[i];
	}	
;}

void neuerstring(char* str1,char* str2){
	for (int i=0;str1[i]!='\0';i++){
		if((i+3)%3==0)str2[((i+3)/3)-1]=str1[i];
	}
}


int main(int argc,char** argv){
	if (argc<2) return 0;
	char zsm[100]="""";
	char neustr[100]="""";
	for(int i=1;i<argc;i++) {
		zsmfuegen(argv[i],zsm);}
		xyqentfernen(zsm);
	neuerstring(zsm,neustr);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",zsm);
	printf(""Der neue String lautet: %s"",neustr);
}",0.0,1
6,WS2021,9,Antwort 10,C,Jolanda Marietta,Schumann,Florian Philipp,Meyer,"#include <stdio.h>

void aussortieren (char* string)
{
	for(int i = 0; string[i] != '\0'; i++)
	{
		if(string[i] == 'x' || string[i] == 'y' || string[i] == 'q' || string[i] == 'X' || string[i] == 'Y' || string[i] == 'Q' )
		{
			for(int k = i; string[k] != '\0'; k++)
			{
				string[k] = string[k+1];
			}
			i = i -1;
		}
	}
}

void zeichen3 (char* string)
{
	
	int z = 0;
	while(string[z] != '\0')
	{
	z++;
	}
	
	char tmp[z]; 


	for(int j = 0; j < z; j++)
	{
		if(j % 3 == 0)
		{
			tmp[j] = string[j];
		}
		else tmp[j] = 0;
	}
	
	int s =0;
	for(int i = 0; i < z; i++)
	{
		if(tmp[i] != 0)
		{
			string[s] = tmp[i];
			s++;
		}
	}
	string[s] = '\0';
	
}



int main(int argc, char* argv[])
{
	int z = 0;

	

	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			z++;		
		}				
	}
	char string[z+1];
	string[z] = '\0';
	int s = 0;
	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			
			string[s] = argv[k][i];
			s++;
		}

	}
	aussortieren(string);
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"",&string[0]);

	zeichen3(string);
	printf(""Der neue String lautet: %s \n"",&string[0]);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
   for(int i=0; i<zahl && *src!='\0' && *dest!='\0'; i++)
  {
      *dest = *src;
      dest++;
      src++;
  } 
}

void umdrehen( char* str )
{
    char temp[100] = """";
    char* ptemp = temp;
    for(int i=0; str[i]!=0; i++)
        temp[i] = str[i]; 

    while(*ptemp != '\0')
        ptemp++;
    
    ptemp--;
     
    while(*str!='\0')
    {
        *str = *ptemp;       
        ptemp--;
        str++;       
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.0,1
7,WS2021,9,Antwort 10,C,Jolanda Marietta,Schumann,Leonhard,Dirks,"#include <stdio.h>

void aussortieren (char* string)
{
	for(int i = 0; string[i] != '\0'; i++)
	{
		if(string[i] == 'x' || string[i] == 'y' || string[i] == 'q' || string[i] == 'X' || string[i] == 'Y' || string[i] == 'Q' )
		{
			for(int k = i; string[k] != '\0'; k++)
			{
				string[k] = string[k+1];
			}
			i = i -1;
		}
	}
}

void zeichen3 (char* string)
{
	
	int z = 0;
	while(string[z] != '\0')
	{
	z++;
	}
	
	char tmp[z]; 


	for(int j = 0; j < z; j++)
	{
		if(j % 3 == 0)
		{
			tmp[j] = string[j];
		}
		else tmp[j] = 0;
	}
	
	int s =0;
	for(int i = 0; i < z; i++)
	{
		if(tmp[i] != 0)
		{
			string[s] = tmp[i];
			s++;
		}
	}
	string[s] = '\0';
	
}



int main(int argc, char* argv[])
{
	int z = 0;

	

	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			z++;		
		}				
	}
	char string[z+1];
	string[z] = '\0';
	int s = 0;
	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			
			string[s] = argv[k][i];
			s++;
		}

	}
	aussortieren(string);
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"",&string[0]);

	zeichen3(string);
	printf(""Der neue String lautet: %s \n"",&string[0]);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	int position = 0;
	while(position < zahl && dest[position] != '\0' && src[position] != '\0'){
		dest[position] = src[position];
		position ++;
	}
}

void umdrehen( char* str )
{
	int groesse = 0;
	while(str[groesse] != '\0') groesse++;
	char kopie[groesse];
	for(int i = 0; i < groesse; i++) kopie[i] = str[i];
	for(int i = 0; i < groesse; i++){
		str[i] = kopie[groesse - 1 - i];
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.02,1
8,WS2021,9,Antwort 10,C,Jolanda Marietta,Schumann,Annegret Claire,Kruschel,"#include <stdio.h>

void aussortieren (char* string)
{
	for(int i = 0; string[i] != '\0'; i++)
	{
		if(string[i] == 'x' || string[i] == 'y' || string[i] == 'q' || string[i] == 'X' || string[i] == 'Y' || string[i] == 'Q' )
		{
			for(int k = i; string[k] != '\0'; k++)
			{
				string[k] = string[k+1];
			}
			i = i -1;
		}
	}
}

void zeichen3 (char* string)
{
	
	int z = 0;
	while(string[z] != '\0')
	{
	z++;
	}
	
	char tmp[z]; 


	for(int j = 0; j < z; j++)
	{
		if(j % 3 == 0)
		{
			tmp[j] = string[j];
		}
		else tmp[j] = 0;
	}
	
	int s =0;
	for(int i = 0; i < z; i++)
	{
		if(tmp[i] != 0)
		{
			string[s] = tmp[i];
			s++;
		}
	}
	string[s] = '\0';
	
}



int main(int argc, char* argv[])
{
	int z = 0;

	

	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			z++;		
		}				
	}
	char string[z+1];
	string[z] = '\0';
	int s = 0;
	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			
			string[s] = argv[k][i];
			s++;
		}

	}
	aussortieren(string);
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"",&string[0]);

	zeichen3(string);
	printf(""Der neue String lautet: %s \n"",&string[0]);
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){

char* compactstring = (char*) malloc(400* sizeof(char));
int x = 0;
for(int i=1; i < argc; i++){
	int j = 0;
while(*(argv[i]+j) != '\0'){
if((*(argv[i]+j) != 'x') && (*(argv[i]+j)!= 'y') && (*(argv[i]+j) != 'q')&& (*(argv[i]+j) != 'X')&& (*(argv[i]+j) != 'Y')&& (*(argv[i]+j) != 'Q')){
			*(compactstring+x) = *(argv[i]+j);
			x++;
	}
	j++;
}
}
compactstring = (char*) realloc(compactstring,x+sizeof(char));
int shortendlength=(x+1)/3;
char* shortend = (char*) malloc(shortendlength * sizeof(char));
int y = 0;
for (int i=0;i<x+1;i++){
if((i%3)==0){
	*(shortend+y) = *(compactstring+i);
	y++;
}
}
printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", compactstring,shortend);
}",0.0,1
11,WS2021,9,Antwort 10,C,Jolanda Marietta,Schumann,Lucie Chantal,Girod,"#include <stdio.h>

void aussortieren (char* string)
{
	for(int i = 0; string[i] != '\0'; i++)
	{
		if(string[i] == 'x' || string[i] == 'y' || string[i] == 'q' || string[i] == 'X' || string[i] == 'Y' || string[i] == 'Q' )
		{
			for(int k = i; string[k] != '\0'; k++)
			{
				string[k] = string[k+1];
			}
			i = i -1;
		}
	}
}

void zeichen3 (char* string)
{
	
	int z = 0;
	while(string[z] != '\0')
	{
	z++;
	}
	
	char tmp[z]; 


	for(int j = 0; j < z; j++)
	{
		if(j % 3 == 0)
		{
			tmp[j] = string[j];
		}
		else tmp[j] = 0;
	}
	
	int s =0;
	for(int i = 0; i < z; i++)
	{
		if(tmp[i] != 0)
		{
			string[s] = tmp[i];
			s++;
		}
	}
	string[s] = '\0';
	
}



int main(int argc, char* argv[])
{
	int z = 0;

	

	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			z++;		
		}				
	}
	char string[z+1];
	string[z] = '\0';
	int s = 0;
	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			
			string[s] = argv[k][i];
			s++;
		}

	}
	aussortieren(string);
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"",&string[0]);

	zeichen3(string);
	printf(""Der neue String lautet: %s \n"",&string[0]);
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){
	
	char* text_str = malloc(400* sizeof(char));
	int idx = 0;
	for(int i = 1; i < argc; i++){
		int j = 0;
		while(*(argv[i]+j) != '\0'){
			if((*(argv[i]+j) != 'x') && (*(argv[i]+j) != 'y') && (*(argv[i]+j) != 'q') && (*(argv[i]+j) != 'X') && (*(argv[i]+j) != 'Y') && (*(argv[i]+j) != 'Q')){
			*(text_str+idx) = *(argv[i]+j);
			idx++;
			}
			j++;
		}
	}
	
	text_str = realloc(text_str,idx+1 * sizeof(char));
	int solution_length = (idx+1) / 3;
	char* solution = malloc(solution_length * sizeof(char));
	int count = 0;
	for(int i = 0; i < idx+1; i++){
		if((i % 3) == 0){
			*(solution+count) = *(text_str+i);
			count++;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", text_str, solution);
	
}",0.0,1
13,WS2021,9,Antwort 10,C,Jolanda Marietta,Schumann,Moritz,Batilla,"#include <stdio.h>

void aussortieren (char* string)
{
	for(int i = 0; string[i] != '\0'; i++)
	{
		if(string[i] == 'x' || string[i] == 'y' || string[i] == 'q' || string[i] == 'X' || string[i] == 'Y' || string[i] == 'Q' )
		{
			for(int k = i; string[k] != '\0'; k++)
			{
				string[k] = string[k+1];
			}
			i = i -1;
		}
	}
}

void zeichen3 (char* string)
{
	
	int z = 0;
	while(string[z] != '\0')
	{
	z++;
	}
	
	char tmp[z]; 


	for(int j = 0; j < z; j++)
	{
		if(j % 3 == 0)
		{
			tmp[j] = string[j];
		}
		else tmp[j] = 0;
	}
	
	int s =0;
	for(int i = 0; i < z; i++)
	{
		if(tmp[i] != 0)
		{
			string[s] = tmp[i];
			s++;
		}
	}
	string[s] = '\0';
	
}



int main(int argc, char* argv[])
{
	int z = 0;

	

	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			z++;		
		}				
	}
	char string[z+1];
	string[z] = '\0';
	int s = 0;
	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			
			string[s] = argv[k][i];
			s++;
		}

	}
	aussortieren(string);
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"",&string[0]);

	zeichen3(string);
	printf(""Der neue String lautet: %s \n"",&string[0]);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    int x;
    for(x = 0; x < zahl && *dest != '\0' && *src != '\0'; x++)
    {
       *dest = *src;
       src++;
       dest++;
    }
}

void umdrehen( char* str )
{
    int y = 0;
    int count = 0;
    int tmp = 0;

    for(count=0; str[count] != 0; count++);
    for(y = 0; y <count/2; y++)
    {
        tmp = str[y];
        str[y]=str[count - 1 - y];
        str[count - 1 - y] = tmp;
    }
    for(y = 0; y < count; y++);
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.0,1
14,WS2021,9,Antwort 10,C,Jolanda Marietta,Schumann,Can Mert,Ergin,"#include <stdio.h>

void aussortieren (char* string)
{
	for(int i = 0; string[i] != '\0'; i++)
	{
		if(string[i] == 'x' || string[i] == 'y' || string[i] == 'q' || string[i] == 'X' || string[i] == 'Y' || string[i] == 'Q' )
		{
			for(int k = i; string[k] != '\0'; k++)
			{
				string[k] = string[k+1];
			}
			i = i -1;
		}
	}
}

void zeichen3 (char* string)
{
	
	int z = 0;
	while(string[z] != '\0')
	{
	z++;
	}
	
	char tmp[z]; 


	for(int j = 0; j < z; j++)
	{
		if(j % 3 == 0)
		{
			tmp[j] = string[j];
		}
		else tmp[j] = 0;
	}
	
	int s =0;
	for(int i = 0; i < z; i++)
	{
		if(tmp[i] != 0)
		{
			string[s] = tmp[i];
			s++;
		}
	}
	string[s] = '\0';
	
}



int main(int argc, char* argv[])
{
	int z = 0;

	

	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			z++;		
		}				
	}
	char string[z+1];
	string[z] = '\0';
	int s = 0;
	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			
			string[s] = argv[k][i];
			s++;
		}

	}
	aussortieren(string);
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"",&string[0]);

	zeichen3(string);
	printf(""Der neue String lautet: %s \n"",&string[0]);
}","#include <stdio.h>

int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}",0.0,1
15,WS2021,9,Antwort 10,C,Jolanda Marietta,Schumann,Daniel,Grönefeld,"#include <stdio.h>

void aussortieren (char* string)
{
	for(int i = 0; string[i] != '\0'; i++)
	{
		if(string[i] == 'x' || string[i] == 'y' || string[i] == 'q' || string[i] == 'X' || string[i] == 'Y' || string[i] == 'Q' )
		{
			for(int k = i; string[k] != '\0'; k++)
			{
				string[k] = string[k+1];
			}
			i = i -1;
		}
	}
}

void zeichen3 (char* string)
{
	
	int z = 0;
	while(string[z] != '\0')
	{
	z++;
	}
	
	char tmp[z]; 


	for(int j = 0; j < z; j++)
	{
		if(j % 3 == 0)
		{
			tmp[j] = string[j];
		}
		else tmp[j] = 0;
	}
	
	int s =0;
	for(int i = 0; i < z; i++)
	{
		if(tmp[i] != 0)
		{
			string[s] = tmp[i];
			s++;
		}
	}
	string[s] = '\0';
	
}



int main(int argc, char* argv[])
{
	int z = 0;

	

	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			z++;		
		}				
	}
	char string[z+1];
	string[z] = '\0';
	int s = 0;
	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			
			string[s] = argv[k][i];
			s++;
		}

	}
	aussortieren(string);
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"",&string[0]);

	zeichen3(string);
	printf(""Der neue String lautet: %s \n"",&string[0]);
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{  
	for(int i = 0; src[i] != '\0' && dest[i] != '\0' && i < zahl; i++){
		dest[i] = src[i];
	}
}

void umdrehen( char* str)
{
	int length_str = 0;
	for( int i = 0; str[i] != '\0'; i++)
		length_str = i;
	char temp_string[length_str];
	for( int i = 0; i <= length_str; i++)
		temp_string[i] = str[length_str-i];
	for( int i = 0; i <= length_str; i++)
		str[i] = temp_string[i];
}

int main( int argc, char* argv[] )
{  
  char test[11] = ""0123456789"";
  printf( ""Das Original ist: %s \n"", test);
  ersetzen(test , atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test);
  umdrehen( test );	
  printf( ""Rückwärts : %s \n"", test );
}",0.0,1
17,WS2021,9,Antwort 10,C,Jolanda Marietta,Schumann,Catalina,Florez Vargas,"#include <stdio.h>

void aussortieren (char* string)
{
	for(int i = 0; string[i] != '\0'; i++)
	{
		if(string[i] == 'x' || string[i] == 'y' || string[i] == 'q' || string[i] == 'X' || string[i] == 'Y' || string[i] == 'Q' )
		{
			for(int k = i; string[k] != '\0'; k++)
			{
				string[k] = string[k+1];
			}
			i = i -1;
		}
	}
}

void zeichen3 (char* string)
{
	
	int z = 0;
	while(string[z] != '\0')
	{
	z++;
	}
	
	char tmp[z]; 


	for(int j = 0; j < z; j++)
	{
		if(j % 3 == 0)
		{
			tmp[j] = string[j];
		}
		else tmp[j] = 0;
	}
	
	int s =0;
	for(int i = 0; i < z; i++)
	{
		if(tmp[i] != 0)
		{
			string[s] = tmp[i];
			s++;
		}
	}
	string[s] = '\0';
	
}



int main(int argc, char* argv[])
{
	int z = 0;

	

	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			z++;		
		}				
	}
	char string[z+1];
	string[z] = '\0';
	int s = 0;
	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			
			string[s] = argv[k][i];
			s++;
		}

	}
	aussortieren(string);
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"",&string[0]);

	zeichen3(string);
	printf(""Der neue String lautet: %s \n"",&string[0]);
}","#include <stdio.h>

int main(int argc, char *argv[])

{
    int u;
    int f = 0;
    char neu[20];
    char nueva[15];
    int x = 0;
    for (int i = 1; i < argc; i++)
    {
        u = 0;
        while ((argv[i][u]) != '\0')
        {
            if (argv[i][u] != 'x' && argv[i][u] != 'y' && argv[i][u] != 'q' && argv[i][u] != 'X' && argv[i][u] != 'Y' && argv[i][u] != 'Q')
            {
                neu[f] = argv[i][u];
                f++;
            }
            u++;
        }
    }

    for (int i = 0; i <= f; i++)
    {
        if (x > (i / 3) || i == 0)
        {
            if (i == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
            if (((i) % 3) == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
        }
    }

    printf(""x,y,q und X,Y,Q aussortiert: "");
    for (int i = 0; i < f; i++)
        if (neu[i] != '\0')
        {
            printf(""%c"", neu[i]);
        }

    printf(""\n"");

     printf(""Der neue String lautet: "");
    for (int i = 1; i < (f / 2)-1; i++)
            printf(""%c"", nueva[i]);
    if (neu[0] == 'z')
        printf(""z"");
}",0.0,1
18,WS2021,9,Antwort 10,C,Jolanda Marietta,Schumann,Sandro,Paluteder,"#include <stdio.h>

void aussortieren (char* string)
{
	for(int i = 0; string[i] != '\0'; i++)
	{
		if(string[i] == 'x' || string[i] == 'y' || string[i] == 'q' || string[i] == 'X' || string[i] == 'Y' || string[i] == 'Q' )
		{
			for(int k = i; string[k] != '\0'; k++)
			{
				string[k] = string[k+1];
			}
			i = i -1;
		}
	}
}

void zeichen3 (char* string)
{
	
	int z = 0;
	while(string[z] != '\0')
	{
	z++;
	}
	
	char tmp[z]; 


	for(int j = 0; j < z; j++)
	{
		if(j % 3 == 0)
		{
			tmp[j] = string[j];
		}
		else tmp[j] = 0;
	}
	
	int s =0;
	for(int i = 0; i < z; i++)
	{
		if(tmp[i] != 0)
		{
			string[s] = tmp[i];
			s++;
		}
	}
	string[s] = '\0';
	
}



int main(int argc, char* argv[])
{
	int z = 0;

	

	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			z++;		
		}				
	}
	char string[z+1];
	string[z] = '\0';
	int s = 0;
	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			
			string[s] = argv[k][i];
			s++;
		}

	}
	aussortieren(string);
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"",&string[0]);

	zeichen3(string);
	printf(""Der neue String lautet: %s \n"",&string[0]);
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[])
{   
     // char *argv[] is a array of strings, each command line arguments
    // int argc is the amount of command line arguments
    
    //loop through all command line arguements. First command line argument is always taken by default so we start at 1.
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
  
        
        //printf(""Current 2 %c \n"",CurrentCommandString[0]);
       
        //int LengthOfString = sizeof(CurrentCommandString) / sizeof(char*);
        
        //printf(""Current Size %i \n"",LengthOfString);
        
        int i = 0;
        while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
            if (CurrentCommandString[i] == 'x' 
             || CurrentCommandString[i] == 'y' 
             || CurrentCommandString[i] == 'q'
             || CurrentCommandString[i] == 'X'
             || CurrentCommandString[i] == 'Y' 
             || CurrentCommandString[i] == 'Q')
             {   
                 int j = i;
                 while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
                    CurrentCommandString[j] = CurrentCommandString[j + 1]; 
                    ++j; 
                 }
             }
            ++i;
         }
        
        
        //printf(""x,y,q und X,Y,Q aussortiert TEST 1: %s \n"", argv[kk]);
    }
    
    char StringXYQRemoved[5000];
    int StringXYQRemovedIndex = 0;
       
    char StringThirdRemoved[5000];
    int StringThirdRemovedIndex = 0;
    
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
        
        
        //String 1 
        
        int length, j;
        
          // store length of s1 in the length variable
          length = 0;
          while (StringXYQRemoved[length] != '\0' && StringXYQRemoved[length] != ' ') {
            ++length;
          }
        
          // concatenate s2 to s1
          for (j = 0; CurrentCommandString[j] != '\0' && CurrentCommandString[length] != ' '; ++j, ++length) {
            StringXYQRemoved[length] = CurrentCommandString[j];
          }
        
          // terminating the s1 string
          StringXYQRemoved[length] = '\0';       
    }
    
    
    
        //String2
        int length, j;
        // store length of s1 in the length variable
        length = 0;
        while (StringThirdRemoved[length] != '\0' && StringThirdRemoved[length] != ' ') {
        ++length;
        }
        
        // concatenate s2 to s1
        for (j = 0; StringXYQRemoved[j] != '\0' && StringXYQRemoved[length] != ' '; ++length) {
         StringThirdRemoved[length] = StringXYQRemoved[j];
         
         //printf(""WTFFFF %c \n"",StringXYQRemoved[j]);
         j+=3;
        }
        
        // terminating the s1 string
        StringThirdRemoved[length] = '\0';       
        
    printf(""x,y,q und X,Y,Q aussortiert: %s \n"", StringXYQRemoved);
    printf(""Der neue String lautet: %s"", StringThirdRemoved);
    
}",0.0,1
19,WS2021,9,Antwort 10,C,Jolanda Marietta,Schumann,Jonas,Bestgen,"#include <stdio.h>

void aussortieren (char* string)
{
	for(int i = 0; string[i] != '\0'; i++)
	{
		if(string[i] == 'x' || string[i] == 'y' || string[i] == 'q' || string[i] == 'X' || string[i] == 'Y' || string[i] == 'Q' )
		{
			for(int k = i; string[k] != '\0'; k++)
			{
				string[k] = string[k+1];
			}
			i = i -1;
		}
	}
}

void zeichen3 (char* string)
{
	
	int z = 0;
	while(string[z] != '\0')
	{
	z++;
	}
	
	char tmp[z]; 


	for(int j = 0; j < z; j++)
	{
		if(j % 3 == 0)
		{
			tmp[j] = string[j];
		}
		else tmp[j] = 0;
	}
	
	int s =0;
	for(int i = 0; i < z; i++)
	{
		if(tmp[i] != 0)
		{
			string[s] = tmp[i];
			s++;
		}
	}
	string[s] = '\0';
	
}



int main(int argc, char* argv[])
{
	int z = 0;

	

	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			z++;		
		}				
	}
	char string[z+1];
	string[z] = '\0';
	int s = 0;
	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			
			string[s] = argv[k][i];
			s++;
		}

	}
	aussortieren(string);
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"",&string[0]);

	zeichen3(string);
	printf(""Der neue String lautet: %s \n"",&string[0]);
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
	for (int i=0;((i<zahl)&&((dest[i])!=('\0')))&&((src[i])!=('\0'));i++)
dest[i]=src[i];

	
}

void umdrehen( char* str )
{	char temp[30]="""";
	int i=0;
	for(;(str[i+1])!=('\0');i++){}
	for(int j=0;(str[j])!=('\0');j++) {temp[j]=str[i-j];}
	for(int j=0;(str[j])!=('\0');j++) {str[j]=temp[(j)];}
	
}

int main( int argc, char* argv[] )
{
	char test[11]= ""0123456789"";
	printf( ""Das Original ist: %s \n"", test );
	ersetzen( test , atoi(argv[1]), argv[2] );
	printf( ""Ersetzt : %s \n"", test );
	umdrehen( test );
	printf( ""Rückwärts : %s \n"", test );
}",0.0,1
20,WS2021,9,Antwort 10,C,Jolanda Marietta,Schumann,Constanze Cosima,Freier,"#include <stdio.h>

void aussortieren (char* string)
{
	for(int i = 0; string[i] != '\0'; i++)
	{
		if(string[i] == 'x' || string[i] == 'y' || string[i] == 'q' || string[i] == 'X' || string[i] == 'Y' || string[i] == 'Q' )
		{
			for(int k = i; string[k] != '\0'; k++)
			{
				string[k] = string[k+1];
			}
			i = i -1;
		}
	}
}

void zeichen3 (char* string)
{
	
	int z = 0;
	while(string[z] != '\0')
	{
	z++;
	}
	
	char tmp[z]; 


	for(int j = 0; j < z; j++)
	{
		if(j % 3 == 0)
		{
			tmp[j] = string[j];
		}
		else tmp[j] = 0;
	}
	
	int s =0;
	for(int i = 0; i < z; i++)
	{
		if(tmp[i] != 0)
		{
			string[s] = tmp[i];
			s++;
		}
	}
	string[s] = '\0';
	
}



int main(int argc, char* argv[])
{
	int z = 0;

	

	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			z++;		
		}				
	}
	char string[z+1];
	string[z] = '\0';
	int s = 0;
	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			
			string[s] = argv[k][i];
			s++;
		}

	}
	aussortieren(string);
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"",&string[0]);

	zeichen3(string);
	printf(""Der neue String lautet: %s \n"",&string[0]);
}","#include <stdlib.h>
#include <stdio.h>
int Laenge(char *str)
{
    int size = 0;
    for (int j = 0; str[j] != '\0'; j++)
    {
        size += 1;
    }
    return size;
}

int Kopieren(char *dest, char *src)
{
    int i = 0;
    int j = 0;
    while (src[i] != '\0')
    {
        if (src[i] != 'q' && src[i] != 'x' && src[i] != 'y' && src[i] != 'Q' && src[i] != 'X' && src[i] != 'Y')
        {
            dest[j++] = src[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int Entfernen(char *Eingabe)
{
    int i = 0;
    int j = 0;
    while (Eingabe[i] != '\0')
    {
        if (i % 3 == 0)
        {
            Eingabe[j++] = Eingabe[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int main(int argc, char *argv[])
{
    int Gesamtlaenge = 0;
    for (int i = 1; i < argc; i++)
    {
        Gesamtlaenge += Laenge(argv[i]);
    }
    char Ausgabe[Gesamtlaenge + 1];
    char *Ziel = Ausgabe;
    for (int i = 1; i < argc; i++)
    {
        Ziel += Kopieren(Ziel, argv[i]);
    }
    *Ziel = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", Ausgabe);
    Ausgabe[Entfernen(Ausgabe)] = '\0';
    printf(""Der neue String lautet: %s\n"", Ausgabe);
}",0.0,1
22,WS2021,9,Antwort 10,C,Jolanda Marietta,Schumann,Caspar Valentin,Zell,"#include <stdio.h>

void aussortieren (char* string)
{
	for(int i = 0; string[i] != '\0'; i++)
	{
		if(string[i] == 'x' || string[i] == 'y' || string[i] == 'q' || string[i] == 'X' || string[i] == 'Y' || string[i] == 'Q' )
		{
			for(int k = i; string[k] != '\0'; k++)
			{
				string[k] = string[k+1];
			}
			i = i -1;
		}
	}
}

void zeichen3 (char* string)
{
	
	int z = 0;
	while(string[z] != '\0')
	{
	z++;
	}
	
	char tmp[z]; 


	for(int j = 0; j < z; j++)
	{
		if(j % 3 == 0)
		{
			tmp[j] = string[j];
		}
		else tmp[j] = 0;
	}
	
	int s =0;
	for(int i = 0; i < z; i++)
	{
		if(tmp[i] != 0)
		{
			string[s] = tmp[i];
			s++;
		}
	}
	string[s] = '\0';
	
}



int main(int argc, char* argv[])
{
	int z = 0;

	

	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			z++;		
		}				
	}
	char string[z+1];
	string[z] = '\0';
	int s = 0;
	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			
			string[s] = argv[k][i];
			s++;
		}

	}
	aussortieren(string);
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"",&string[0]);

	zeichen3(string);
	printf(""Der neue String lautet: %s \n"",&string[0]);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0;(i < zahl) && (i < 10) && (src[i] != '\0'); i++)
    {
        dest[i] = src[i];
    }
}

void umdrehen(char* str )
{
    int size;
    for (int j = 1; str[j] != '\0'; j++)
    {
        size = j + 2;
    }
    char Kopie[size];
    for (int i = 0; i < (size - 1); i++)
    {
        Kopie[size - 2- i] = str[i];
    }
    for (int i = 0; i < size; i++)
    {
        str[i] = Kopie[i];
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen(test, atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.0,1
23,WS2021,9,Antwort 10,C,Jolanda Marietta,Schumann,Jakob,Kühl,"#include <stdio.h>

void aussortieren (char* string)
{
	for(int i = 0; string[i] != '\0'; i++)
	{
		if(string[i] == 'x' || string[i] == 'y' || string[i] == 'q' || string[i] == 'X' || string[i] == 'Y' || string[i] == 'Q' )
		{
			for(int k = i; string[k] != '\0'; k++)
			{
				string[k] = string[k+1];
			}
			i = i -1;
		}
	}
}

void zeichen3 (char* string)
{
	
	int z = 0;
	while(string[z] != '\0')
	{
	z++;
	}
	
	char tmp[z]; 


	for(int j = 0; j < z; j++)
	{
		if(j % 3 == 0)
		{
			tmp[j] = string[j];
		}
		else tmp[j] = 0;
	}
	
	int s =0;
	for(int i = 0; i < z; i++)
	{
		if(tmp[i] != 0)
		{
			string[s] = tmp[i];
			s++;
		}
	}
	string[s] = '\0';
	
}



int main(int argc, char* argv[])
{
	int z = 0;

	

	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			z++;		
		}				
	}
	char string[z+1];
	string[z] = '\0';
	int s = 0;
	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			
			string[s] = argv[k][i];
			s++;
		}

	}
	aussortieren(string);
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"",&string[0]);

	zeichen3(string);
	printf(""Der neue String lautet: %s \n"",&string[0]);
}","#include<stdio.h>

int main(int argc, char* argv[]){
	char a[100]= """";
	char b[100]="""";
	int x=0;
	for(int i=1 ;i<argc ;i++){
		for (int j=0; argv[i][j] != '\0'; j++){
			if(argv[i][j]== 'x' || argv[i][j]== 'y' || argv[i][j]== 'q' || argv[i][j]== 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q') continue;
			else {
				a[x]=argv[i][j];
				x+=1;
			}
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", a);
	int y=0;
	for(int i=0; i<100; i+=3){
		b[y]=a[i];
		y++;
	}
	printf(""Der neue String lautet: %s\n"", b);
}",0.0,1
24,WS2021,9,Antwort 10,C,Jolanda Marietta,Schumann,Niklas,Mohr,"#include <stdio.h>

void aussortieren (char* string)
{
	for(int i = 0; string[i] != '\0'; i++)
	{
		if(string[i] == 'x' || string[i] == 'y' || string[i] == 'q' || string[i] == 'X' || string[i] == 'Y' || string[i] == 'Q' )
		{
			for(int k = i; string[k] != '\0'; k++)
			{
				string[k] = string[k+1];
			}
			i = i -1;
		}
	}
}

void zeichen3 (char* string)
{
	
	int z = 0;
	while(string[z] != '\0')
	{
	z++;
	}
	
	char tmp[z]; 


	for(int j = 0; j < z; j++)
	{
		if(j % 3 == 0)
		{
			tmp[j] = string[j];
		}
		else tmp[j] = 0;
	}
	
	int s =0;
	for(int i = 0; i < z; i++)
	{
		if(tmp[i] != 0)
		{
			string[s] = tmp[i];
			s++;
		}
	}
	string[s] = '\0';
	
}



int main(int argc, char* argv[])
{
	int z = 0;

	

	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			z++;		
		}				
	}
	char string[z+1];
	string[z] = '\0';
	int s = 0;
	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			
			string[s] = argv[k][i];
			s++;
		}

	}
	aussortieren(string);
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"",&string[0]);

	zeichen3(string);
	printf(""Der neue String lautet: %s \n"",&string[0]);
}","#include <stdio.h>
#include <stdlib.h>

void aussortieren(char* str)
{
    int t = 0;
    char temp[50];
    for(int i = 0; str[i] != '\0'; i++)
    {
        int t = 0;
        char temp[50];
        if(str[i] == 'x'|| str[i] == 'y'|| str[i] == 'q');
        else if(str[i] == 'X'|| str[i] == 'Y'|| str[i] == 'Q');
        else 
        {
            temp[t] = str[i];
            t++;
        }
    }
    str = &temp;
}


char* sortieren(int länge, char* str[])
{
    int t = 0;
    char temp[200];
    for(int i = 0; i < länge; i++)
    {
        for(int a = 0; a != '\0'; a++)
        {
            temp[t] = str[i+1][a];
            t++;
        }
    }
}   


int main( int argc, char* argv[] )
{  
    int length = sizeof(argv) - 1;
    for(int i = 1; i <= length; i++)
    {
        aussortieren(argv[i]);
    }
    char zusammen = sortieren(length, argv);
    printf(""x,y,q und X,Y,Q aussortiert: %s"", zusammen); 
}",0.0,1
25,WS2021,9,Antwort 10,C,Jolanda Marietta,Schumann,Tammo Hendrik,Nie,"#include <stdio.h>

void aussortieren (char* string)
{
	for(int i = 0; string[i] != '\0'; i++)
	{
		if(string[i] == 'x' || string[i] == 'y' || string[i] == 'q' || string[i] == 'X' || string[i] == 'Y' || string[i] == 'Q' )
		{
			for(int k = i; string[k] != '\0'; k++)
			{
				string[k] = string[k+1];
			}
			i = i -1;
		}
	}
}

void zeichen3 (char* string)
{
	
	int z = 0;
	while(string[z] != '\0')
	{
	z++;
	}
	
	char tmp[z]; 


	for(int j = 0; j < z; j++)
	{
		if(j % 3 == 0)
		{
			tmp[j] = string[j];
		}
		else tmp[j] = 0;
	}
	
	int s =0;
	for(int i = 0; i < z; i++)
	{
		if(tmp[i] != 0)
		{
			string[s] = tmp[i];
			s++;
		}
	}
	string[s] = '\0';
	
}



int main(int argc, char* argv[])
{
	int z = 0;

	

	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			z++;		
		}				
	}
	char string[z+1];
	string[z] = '\0';
	int s = 0;
	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			
			string[s] = argv[k][i];
			s++;
		}

	}
	aussortieren(string);
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"",&string[0]);

	zeichen3(string);
	printf(""Der neue String lautet: %s \n"",&string[0]);
}","#include <stdio.h>
#include <stdlib.h>
 
int main(int argc, char* argv[52])
{
   //aneinanderhängen

   int zahl = 0;
   int* p_zahl = &zahl;
   int counter = 1;
   int* p_counter = &counter;
   char str[30];
   for(int i = 0; i < argc-1 ; i++)
   {
      for(int j = 0; argv[counter][j] != '\0'; j++)
      {
         str[zahl] = argv[counter][j];
         *p_zahl += 1;
         
      }
      *p_counter += 1;
   }
   str[zahl+1] = '\0';

   int nummer = 0;
   int* p_nummer = &nummer;
   char str2[25];
   for(int i = 0; ; i++)
   {
      if((str[i] != 'x') && (str[i] != 'y') && (str[i] != 'q') && (str[i] != 'X') && (str[i] != 'Y') && (str[i] != 'Q'))
      {
         
         str2[nummer] = str[i];
         if(str[i] == '\0') break;
         *p_nummer += 1;
      }
   }

   //jedes dritte in str3
   char str3[35];
   for(int i = 0; i < 57; i +=3)
   {
      //if((str2[i] == '\0')) break;
      str3[i/3] = str2[i];  
      str3[i/3+1] = '\0'  ;
   }
   //drucken:

   printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str2, str3);
}",0.0,1
26,WS2021,9,Antwort 10,C,Jolanda Marietta,Schumann,Sören Sven,Werner,"#include <stdio.h>

void aussortieren (char* string)
{
	for(int i = 0; string[i] != '\0'; i++)
	{
		if(string[i] == 'x' || string[i] == 'y' || string[i] == 'q' || string[i] == 'X' || string[i] == 'Y' || string[i] == 'Q' )
		{
			for(int k = i; string[k] != '\0'; k++)
			{
				string[k] = string[k+1];
			}
			i = i -1;
		}
	}
}

void zeichen3 (char* string)
{
	
	int z = 0;
	while(string[z] != '\0')
	{
	z++;
	}
	
	char tmp[z]; 


	for(int j = 0; j < z; j++)
	{
		if(j % 3 == 0)
		{
			tmp[j] = string[j];
		}
		else tmp[j] = 0;
	}
	
	int s =0;
	for(int i = 0; i < z; i++)
	{
		if(tmp[i] != 0)
		{
			string[s] = tmp[i];
			s++;
		}
	}
	string[s] = '\0';
	
}



int main(int argc, char* argv[])
{
	int z = 0;

	

	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			z++;		
		}				
	}
	char string[z+1];
	string[z] = '\0';
	int s = 0;
	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			
			string[s] = argv[k][i];
			s++;
		}

	}
	aussortieren(string);
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"",&string[0]);

	zeichen3(string);
	printf(""Der neue String lautet: %s \n"",&string[0]);
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
/*
int zaehlen(char* str){
	int counter = 0;
	while(str[counter] != '\0'){
		counter++;
	}
	return counter;
}*/

int main( int argc, char* argv[]){



	char str[100] = """";

	for(int i = 1; i<argc; i++){
		strcat(str, argv[i]);
	}
	printf(""%s\n"", str);


}",0.0,1
27,WS2021,9,Antwort 10,C,David,Stubler,Daniel Dominik,Eichstädt,"#include <stdio.h>
#include <stdlib.h>

int main( int argc, char** argv)
{
    char text[100] = ""lasse roland max ivo"";
    char temp[100];
    char NeuString[100];
    int J = 0;
    int K = 0;
    int a = 1;
    int i;
    for ( i = 0; *(argv+i) != '\0'; i++)
    {
        if (*(argv+i) == ' ' || *(argv+i) == 'x' || *(argv+i) == 'y' || *(argv+i) == 'q'|| *(argv+i) == 'X'|| *(argv+i) == 'Y'|| *(argv+i) == 'Q')
            a++;
            continue;
        temp[J++] = *(argv+i);
    }
    temp[J] = 0;
    printf( ""x,y,q und X,Y,Q aussortiert: %s \n"", temp );
    for ( i = 0; temp[i] != '\0'; i++)
    {
        if (i == 0 || i % 3 == 0)
        NeuString[K++] = temp[i];
        continue;
    }
    NeuString[K] = 0;
    printf( ""Der neue String lautet: %s \n"", NeuString);
}","#include <stdio.h>

char aussortieren (char buchstabe)
{if (buchstabe=='x'||buchstabe=='y'||buchstabe=='q'||
     buchstabe=='X'||buchstabe=='Y'||buchstabe=='Q')
    return 1;
else return 0;
}

void ersetzen (char*src)
{char tmp[100]="""";
 int fw=0;
 while (src[fw]!='\0')
    {tmp[fw]=src[fw];fw++;}
    tmp[fw]='\0';
    fw=0;
int fw_mod=0;
while (tmp[fw]!='\0')
    {if (fw%3!=0)
        {fw++;}
    else 
        {src[fw_mod]=tmp[fw];
         fw++;
         fw_mod++;}
    }
src[fw_mod]='\0';
}

int main (int argc,char*argv[])
{char str[100]="""";
int c=1;
int lv_c=0;
int lv_argc=0;
while (c!=argc)
    {while (argv[c][lv_argc]!='\0')
        {if (aussortieren(argv[c][lv_argc])) 
         lv_argc++;
         else
         {str[lv_c]=argv[c][lv_argc];
          lv_c++;
          lv_argc++;}}
    c++;lv_argc=0;}
printf (""x,y,q und X,Y,Q aussortiert: %s\n"",str);
ersetzen(str);
printf (""Der neue String lautet: %s\n"",str);
}",0.0,1
28,WS2021,9,Antwort 10,C,David,Stubler,Mohamad Anas,Allaham,"#include <stdio.h>
#include <stdlib.h>

int main( int argc, char** argv)
{
    char text[100] = ""lasse roland max ivo"";
    char temp[100];
    char NeuString[100];
    int J = 0;
    int K = 0;
    int a = 1;
    int i;
    for ( i = 0; *(argv+i) != '\0'; i++)
    {
        if (*(argv+i) == ' ' || *(argv+i) == 'x' || *(argv+i) == 'y' || *(argv+i) == 'q'|| *(argv+i) == 'X'|| *(argv+i) == 'Y'|| *(argv+i) == 'Q')
            a++;
            continue;
        temp[J++] = *(argv+i);
    }
    temp[J] = 0;
    printf( ""x,y,q und X,Y,Q aussortiert: %s \n"", temp );
    for ( i = 0; temp[i] != '\0'; i++)
    {
        if (i == 0 || i % 3 == 0)
        NeuString[K++] = temp[i];
        continue;
    }
    NeuString[K] = 0;
    printf( ""Der neue String lautet: %s \n"", NeuString);
}","#include <stdio.h>
#include <stdlib.h>

int length(char *p)
{
 int i = 0; 
    while (p[i] != '\0')
      i++;
  return i; 
}
 
void ersetzen(char* dest, int zahl, char* src)
{  
  int sizeS = length(src);
  int sizeD = length(dest);
 /*     char temp[sizeS]; 
    for (int i = 0; i <= sizeS-1; i++) 
        temp [i] = src[i];

  for (int i = 0; i <= zahl-1; i++) {
    if (i <= sizeD && i <= sizeS) {
        //dest[i] = temp[i];
        *dest = temp[i]; 

    }
  }*/
  int i = 1;
   while(*src && i <= sizeS && i <= sizeD && i <= zahl) {
    *dest++ = *src++;
    i++;
 }
}

void swap(char* a, char* b){
    char c = *a;
    *a = *b;
    *b = c;
}


void umdrehen( char* str )
{
    if (!*str) 
        return;

    char* i = str;
    char* j = i + length(str) - 1;
    while (i < j) {
        swap(i, j);
        i++;
        j--;
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.0,1
30,WS2021,9,Antwort 10,C,David,Stubler,Gabriel,Ullrich,"#include <stdio.h>
#include <stdlib.h>

int main( int argc, char** argv)
{
    char text[100] = ""lasse roland max ivo"";
    char temp[100];
    char NeuString[100];
    int J = 0;
    int K = 0;
    int a = 1;
    int i;
    for ( i = 0; *(argv+i) != '\0'; i++)
    {
        if (*(argv+i) == ' ' || *(argv+i) == 'x' || *(argv+i) == 'y' || *(argv+i) == 'q'|| *(argv+i) == 'X'|| *(argv+i) == 'Y'|| *(argv+i) == 'Q')
            a++;
            continue;
        temp[J++] = *(argv+i);
    }
    temp[J] = 0;
    printf( ""x,y,q und X,Y,Q aussortiert: %s \n"", temp );
    for ( i = 0; temp[i] != '\0'; i++)
    {
        if (i == 0 || i % 3 == 0)
        NeuString[K++] = temp[i];
        continue;
    }
    NeuString[K] = 0;
    printf( ""Der neue String lautet: %s \n"", NeuString);
}","#include <stdio.h>
void xyqentfernen(char* str1){
	int i;
	int j;
	for ( i = 0,  j = 0;j<100; ++j){
	if ((str1[j] != 'x')&&(str1[j] != 'X')&&(str1[j] != 'y')&&(str1[j] != 'Y')&&(str1[j] != 'q')&&(str1[j] != 'Q'))
	str1[i++] = str1[j];
	
	}
}

void zsmfuegen(char* str1, char* str2){
	int j=0;
	for(;(str2[j])!=('\0');j++){}
	for (int i=0;str1[i]!='\0';i++){
		str2[j+i]=str1[i];
	}	
;}

void neuerstring(char* str1,char* str2){
	for (int i=0;str1[i]!='\0';i++){
		if((i+3)%3==0)str2[((i+3)/3)-1]=str1[i];
	}
}


int main(int argc,char** argv){
	if (argc<2) return 0;
	char zsm[100]="""";
	char neustr[100]="""";
	for(int i=1;i<argc;i++) {
		zsmfuegen(argv[i],zsm);}
		xyqentfernen(zsm);
	neuerstring(zsm,neustr);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",zsm);
	printf(""Der neue String lautet: %s"",neustr);
}",0.0,1
32,WS2021,9,Antwort 10,C,David,Stubler,Florian Philipp,Meyer,"#include <stdio.h>
#include <stdlib.h>

int main( int argc, char** argv)
{
    char text[100] = ""lasse roland max ivo"";
    char temp[100];
    char NeuString[100];
    int J = 0;
    int K = 0;
    int a = 1;
    int i;
    for ( i = 0; *(argv+i) != '\0'; i++)
    {
        if (*(argv+i) == ' ' || *(argv+i) == 'x' || *(argv+i) == 'y' || *(argv+i) == 'q'|| *(argv+i) == 'X'|| *(argv+i) == 'Y'|| *(argv+i) == 'Q')
            a++;
            continue;
        temp[J++] = *(argv+i);
    }
    temp[J] = 0;
    printf( ""x,y,q und X,Y,Q aussortiert: %s \n"", temp );
    for ( i = 0; temp[i] != '\0'; i++)
    {
        if (i == 0 || i % 3 == 0)
        NeuString[K++] = temp[i];
        continue;
    }
    NeuString[K] = 0;
    printf( ""Der neue String lautet: %s \n"", NeuString);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
   for(int i=0; i<zahl && *src!='\0' && *dest!='\0'; i++)
  {
      *dest = *src;
      dest++;
      src++;
  } 
}

void umdrehen( char* str )
{
    char temp[100] = """";
    char* ptemp = temp;
    for(int i=0; str[i]!=0; i++)
        temp[i] = str[i]; 

    while(*ptemp != '\0')
        ptemp++;
    
    ptemp--;
     
    while(*str!='\0')
    {
        *str = *ptemp;       
        ptemp--;
        str++;       
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.0,1
33,WS2021,9,Antwort 10,C,David,Stubler,Leonhard,Dirks,"#include <stdio.h>
#include <stdlib.h>

int main( int argc, char** argv)
{
    char text[100] = ""lasse roland max ivo"";
    char temp[100];
    char NeuString[100];
    int J = 0;
    int K = 0;
    int a = 1;
    int i;
    for ( i = 0; *(argv+i) != '\0'; i++)
    {
        if (*(argv+i) == ' ' || *(argv+i) == 'x' || *(argv+i) == 'y' || *(argv+i) == 'q'|| *(argv+i) == 'X'|| *(argv+i) == 'Y'|| *(argv+i) == 'Q')
            a++;
            continue;
        temp[J++] = *(argv+i);
    }
    temp[J] = 0;
    printf( ""x,y,q und X,Y,Q aussortiert: %s \n"", temp );
    for ( i = 0; temp[i] != '\0'; i++)
    {
        if (i == 0 || i % 3 == 0)
        NeuString[K++] = temp[i];
        continue;
    }
    NeuString[K] = 0;
    printf( ""Der neue String lautet: %s \n"", NeuString);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	int position = 0;
	while(position < zahl && dest[position] != '\0' && src[position] != '\0'){
		dest[position] = src[position];
		position ++;
	}
}

void umdrehen( char* str )
{
	int groesse = 0;
	while(str[groesse] != '\0') groesse++;
	char kopie[groesse];
	for(int i = 0; i < groesse; i++) kopie[i] = str[i];
	for(int i = 0; i < groesse; i++){
		str[i] = kopie[groesse - 1 - i];
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.0,1
34,WS2021,9,Antwort 10,C,David,Stubler,Annegret Claire,Kruschel,"#include <stdio.h>
#include <stdlib.h>

int main( int argc, char** argv)
{
    char text[100] = ""lasse roland max ivo"";
    char temp[100];
    char NeuString[100];
    int J = 0;
    int K = 0;
    int a = 1;
    int i;
    for ( i = 0; *(argv+i) != '\0'; i++)
    {
        if (*(argv+i) == ' ' || *(argv+i) == 'x' || *(argv+i) == 'y' || *(argv+i) == 'q'|| *(argv+i) == 'X'|| *(argv+i) == 'Y'|| *(argv+i) == 'Q')
            a++;
            continue;
        temp[J++] = *(argv+i);
    }
    temp[J] = 0;
    printf( ""x,y,q und X,Y,Q aussortiert: %s \n"", temp );
    for ( i = 0; temp[i] != '\0'; i++)
    {
        if (i == 0 || i % 3 == 0)
        NeuString[K++] = temp[i];
        continue;
    }
    NeuString[K] = 0;
    printf( ""Der neue String lautet: %s \n"", NeuString);
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){

char* compactstring = (char*) malloc(400* sizeof(char));
int x = 0;
for(int i=1; i < argc; i++){
	int j = 0;
while(*(argv[i]+j) != '\0'){
if((*(argv[i]+j) != 'x') && (*(argv[i]+j)!= 'y') && (*(argv[i]+j) != 'q')&& (*(argv[i]+j) != 'X')&& (*(argv[i]+j) != 'Y')&& (*(argv[i]+j) != 'Q')){
			*(compactstring+x) = *(argv[i]+j);
			x++;
	}
	j++;
}
}
compactstring = (char*) realloc(compactstring,x+sizeof(char));
int shortendlength=(x+1)/3;
char* shortend = (char*) malloc(shortendlength * sizeof(char));
int y = 0;
for (int i=0;i<x+1;i++){
if((i%3)==0){
	*(shortend+y) = *(compactstring+i);
	y++;
}
}
printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", compactstring,shortend);
}",0.0,1
37,WS2021,9,Antwort 10,C,David,Stubler,Lucie Chantal,Girod,"#include <stdio.h>
#include <stdlib.h>

int main( int argc, char** argv)
{
    char text[100] = ""lasse roland max ivo"";
    char temp[100];
    char NeuString[100];
    int J = 0;
    int K = 0;
    int a = 1;
    int i;
    for ( i = 0; *(argv+i) != '\0'; i++)
    {
        if (*(argv+i) == ' ' || *(argv+i) == 'x' || *(argv+i) == 'y' || *(argv+i) == 'q'|| *(argv+i) == 'X'|| *(argv+i) == 'Y'|| *(argv+i) == 'Q')
            a++;
            continue;
        temp[J++] = *(argv+i);
    }
    temp[J] = 0;
    printf( ""x,y,q und X,Y,Q aussortiert: %s \n"", temp );
    for ( i = 0; temp[i] != '\0'; i++)
    {
        if (i == 0 || i % 3 == 0)
        NeuString[K++] = temp[i];
        continue;
    }
    NeuString[K] = 0;
    printf( ""Der neue String lautet: %s \n"", NeuString);
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){
	
	char* text_str = malloc(400* sizeof(char));
	int idx = 0;
	for(int i = 1; i < argc; i++){
		int j = 0;
		while(*(argv[i]+j) != '\0'){
			if((*(argv[i]+j) != 'x') && (*(argv[i]+j) != 'y') && (*(argv[i]+j) != 'q') && (*(argv[i]+j) != 'X') && (*(argv[i]+j) != 'Y') && (*(argv[i]+j) != 'Q')){
			*(text_str+idx) = *(argv[i]+j);
			idx++;
			}
			j++;
		}
	}
	
	text_str = realloc(text_str,idx+1 * sizeof(char));
	int solution_length = (idx+1) / 3;
	char* solution = malloc(solution_length * sizeof(char));
	int count = 0;
	for(int i = 0; i < idx+1; i++){
		if((i % 3) == 0){
			*(solution+count) = *(text_str+i);
			count++;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", text_str, solution);
	
}",0.01,1
39,WS2021,9,Antwort 10,C,David,Stubler,Moritz,Batilla,"#include <stdio.h>
#include <stdlib.h>

int main( int argc, char** argv)
{
    char text[100] = ""lasse roland max ivo"";
    char temp[100];
    char NeuString[100];
    int J = 0;
    int K = 0;
    int a = 1;
    int i;
    for ( i = 0; *(argv+i) != '\0'; i++)
    {
        if (*(argv+i) == ' ' || *(argv+i) == 'x' || *(argv+i) == 'y' || *(argv+i) == 'q'|| *(argv+i) == 'X'|| *(argv+i) == 'Y'|| *(argv+i) == 'Q')
            a++;
            continue;
        temp[J++] = *(argv+i);
    }
    temp[J] = 0;
    printf( ""x,y,q und X,Y,Q aussortiert: %s \n"", temp );
    for ( i = 0; temp[i] != '\0'; i++)
    {
        if (i == 0 || i % 3 == 0)
        NeuString[K++] = temp[i];
        continue;
    }
    NeuString[K] = 0;
    printf( ""Der neue String lautet: %s \n"", NeuString);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    int x;
    for(x = 0; x < zahl && *dest != '\0' && *src != '\0'; x++)
    {
       *dest = *src;
       src++;
       dest++;
    }
}

void umdrehen( char* str )
{
    int y = 0;
    int count = 0;
    int tmp = 0;

    for(count=0; str[count] != 0; count++);
    for(y = 0; y <count/2; y++)
    {
        tmp = str[y];
        str[y]=str[count - 1 - y];
        str[count - 1 - y] = tmp;
    }
    for(y = 0; y < count; y++);
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.0,1
40,WS2021,9,Antwort 10,C,David,Stubler,Can Mert,Ergin,"#include <stdio.h>
#include <stdlib.h>

int main( int argc, char** argv)
{
    char text[100] = ""lasse roland max ivo"";
    char temp[100];
    char NeuString[100];
    int J = 0;
    int K = 0;
    int a = 1;
    int i;
    for ( i = 0; *(argv+i) != '\0'; i++)
    {
        if (*(argv+i) == ' ' || *(argv+i) == 'x' || *(argv+i) == 'y' || *(argv+i) == 'q'|| *(argv+i) == 'X'|| *(argv+i) == 'Y'|| *(argv+i) == 'Q')
            a++;
            continue;
        temp[J++] = *(argv+i);
    }
    temp[J] = 0;
    printf( ""x,y,q und X,Y,Q aussortiert: %s \n"", temp );
    for ( i = 0; temp[i] != '\0'; i++)
    {
        if (i == 0 || i % 3 == 0)
        NeuString[K++] = temp[i];
        continue;
    }
    NeuString[K] = 0;
    printf( ""Der neue String lautet: %s \n"", NeuString);
}","#include <stdio.h>

int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}",0.0,1
41,WS2021,9,Antwort 10,C,David,Stubler,Daniel,Grönefeld,"#include <stdio.h>
#include <stdlib.h>

int main( int argc, char** argv)
{
    char text[100] = ""lasse roland max ivo"";
    char temp[100];
    char NeuString[100];
    int J = 0;
    int K = 0;
    int a = 1;
    int i;
    for ( i = 0; *(argv+i) != '\0'; i++)
    {
        if (*(argv+i) == ' ' || *(argv+i) == 'x' || *(argv+i) == 'y' || *(argv+i) == 'q'|| *(argv+i) == 'X'|| *(argv+i) == 'Y'|| *(argv+i) == 'Q')
            a++;
            continue;
        temp[J++] = *(argv+i);
    }
    temp[J] = 0;
    printf( ""x,y,q und X,Y,Q aussortiert: %s \n"", temp );
    for ( i = 0; temp[i] != '\0'; i++)
    {
        if (i == 0 || i % 3 == 0)
        NeuString[K++] = temp[i];
        continue;
    }
    NeuString[K] = 0;
    printf( ""Der neue String lautet: %s \n"", NeuString);
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{  
	for(int i = 0; src[i] != '\0' && dest[i] != '\0' && i < zahl; i++){
		dest[i] = src[i];
	}
}

void umdrehen( char* str)
{
	int length_str = 0;
	for( int i = 0; str[i] != '\0'; i++)
		length_str = i;
	char temp_string[length_str];
	for( int i = 0; i <= length_str; i++)
		temp_string[i] = str[length_str-i];
	for( int i = 0; i <= length_str; i++)
		str[i] = temp_string[i];
}

int main( int argc, char* argv[] )
{  
  char test[11] = ""0123456789"";
  printf( ""Das Original ist: %s \n"", test);
  ersetzen(test , atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test);
  umdrehen( test );	
  printf( ""Rückwärts : %s \n"", test );
}",0.0,1
43,WS2021,9,Antwort 10,C,David,Stubler,Catalina,Florez Vargas,"#include <stdio.h>
#include <stdlib.h>

int main( int argc, char** argv)
{
    char text[100] = ""lasse roland max ivo"";
    char temp[100];
    char NeuString[100];
    int J = 0;
    int K = 0;
    int a = 1;
    int i;
    for ( i = 0; *(argv+i) != '\0'; i++)
    {
        if (*(argv+i) == ' ' || *(argv+i) == 'x' || *(argv+i) == 'y' || *(argv+i) == 'q'|| *(argv+i) == 'X'|| *(argv+i) == 'Y'|| *(argv+i) == 'Q')
            a++;
            continue;
        temp[J++] = *(argv+i);
    }
    temp[J] = 0;
    printf( ""x,y,q und X,Y,Q aussortiert: %s \n"", temp );
    for ( i = 0; temp[i] != '\0'; i++)
    {
        if (i == 0 || i % 3 == 0)
        NeuString[K++] = temp[i];
        continue;
    }
    NeuString[K] = 0;
    printf( ""Der neue String lautet: %s \n"", NeuString);
}","#include <stdio.h>

int main(int argc, char *argv[])

{
    int u;
    int f = 0;
    char neu[20];
    char nueva[15];
    int x = 0;
    for (int i = 1; i < argc; i++)
    {
        u = 0;
        while ((argv[i][u]) != '\0')
        {
            if (argv[i][u] != 'x' && argv[i][u] != 'y' && argv[i][u] != 'q' && argv[i][u] != 'X' && argv[i][u] != 'Y' && argv[i][u] != 'Q')
            {
                neu[f] = argv[i][u];
                f++;
            }
            u++;
        }
    }

    for (int i = 0; i <= f; i++)
    {
        if (x > (i / 3) || i == 0)
        {
            if (i == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
            if (((i) % 3) == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
        }
    }

    printf(""x,y,q und X,Y,Q aussortiert: "");
    for (int i = 0; i < f; i++)
        if (neu[i] != '\0')
        {
            printf(""%c"", neu[i]);
        }

    printf(""\n"");

     printf(""Der neue String lautet: "");
    for (int i = 1; i < (f / 2)-1; i++)
            printf(""%c"", nueva[i]);
    if (neu[0] == 'z')
        printf(""z"");
}",0.0,1
44,WS2021,9,Antwort 10,C,David,Stubler,Sandro,Paluteder,"#include <stdio.h>
#include <stdlib.h>

int main( int argc, char** argv)
{
    char text[100] = ""lasse roland max ivo"";
    char temp[100];
    char NeuString[100];
    int J = 0;
    int K = 0;
    int a = 1;
    int i;
    for ( i = 0; *(argv+i) != '\0'; i++)
    {
        if (*(argv+i) == ' ' || *(argv+i) == 'x' || *(argv+i) == 'y' || *(argv+i) == 'q'|| *(argv+i) == 'X'|| *(argv+i) == 'Y'|| *(argv+i) == 'Q')
            a++;
            continue;
        temp[J++] = *(argv+i);
    }
    temp[J] = 0;
    printf( ""x,y,q und X,Y,Q aussortiert: %s \n"", temp );
    for ( i = 0; temp[i] != '\0'; i++)
    {
        if (i == 0 || i % 3 == 0)
        NeuString[K++] = temp[i];
        continue;
    }
    NeuString[K] = 0;
    printf( ""Der neue String lautet: %s \n"", NeuString);
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[])
{   
     // char *argv[] is a array of strings, each command line arguments
    // int argc is the amount of command line arguments
    
    //loop through all command line arguements. First command line argument is always taken by default so we start at 1.
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
  
        
        //printf(""Current 2 %c \n"",CurrentCommandString[0]);
       
        //int LengthOfString = sizeof(CurrentCommandString) / sizeof(char*);
        
        //printf(""Current Size %i \n"",LengthOfString);
        
        int i = 0;
        while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
            if (CurrentCommandString[i] == 'x' 
             || CurrentCommandString[i] == 'y' 
             || CurrentCommandString[i] == 'q'
             || CurrentCommandString[i] == 'X'
             || CurrentCommandString[i] == 'Y' 
             || CurrentCommandString[i] == 'Q')
             {   
                 int j = i;
                 while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
                    CurrentCommandString[j] = CurrentCommandString[j + 1]; 
                    ++j; 
                 }
             }
            ++i;
         }
        
        
        //printf(""x,y,q und X,Y,Q aussortiert TEST 1: %s \n"", argv[kk]);
    }
    
    char StringXYQRemoved[5000];
    int StringXYQRemovedIndex = 0;
       
    char StringThirdRemoved[5000];
    int StringThirdRemovedIndex = 0;
    
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
        
        
        //String 1 
        
        int length, j;
        
          // store length of s1 in the length variable
          length = 0;
          while (StringXYQRemoved[length] != '\0' && StringXYQRemoved[length] != ' ') {
            ++length;
          }
        
          // concatenate s2 to s1
          for (j = 0; CurrentCommandString[j] != '\0' && CurrentCommandString[length] != ' '; ++j, ++length) {
            StringXYQRemoved[length] = CurrentCommandString[j];
          }
        
          // terminating the s1 string
          StringXYQRemoved[length] = '\0';       
    }
    
    
    
        //String2
        int length, j;
        // store length of s1 in the length variable
        length = 0;
        while (StringThirdRemoved[length] != '\0' && StringThirdRemoved[length] != ' ') {
        ++length;
        }
        
        // concatenate s2 to s1
        for (j = 0; StringXYQRemoved[j] != '\0' && StringXYQRemoved[length] != ' '; ++length) {
         StringThirdRemoved[length] = StringXYQRemoved[j];
         
         //printf(""WTFFFF %c \n"",StringXYQRemoved[j]);
         j+=3;
        }
        
        // terminating the s1 string
        StringThirdRemoved[length] = '\0';       
        
    printf(""x,y,q und X,Y,Q aussortiert: %s \n"", StringXYQRemoved);
    printf(""Der neue String lautet: %s"", StringThirdRemoved);
    
}",0.0,1
45,WS2021,9,Antwort 10,C,David,Stubler,Jonas,Bestgen,"#include <stdio.h>
#include <stdlib.h>

int main( int argc, char** argv)
{
    char text[100] = ""lasse roland max ivo"";
    char temp[100];
    char NeuString[100];
    int J = 0;
    int K = 0;
    int a = 1;
    int i;
    for ( i = 0; *(argv+i) != '\0'; i++)
    {
        if (*(argv+i) == ' ' || *(argv+i) == 'x' || *(argv+i) == 'y' || *(argv+i) == 'q'|| *(argv+i) == 'X'|| *(argv+i) == 'Y'|| *(argv+i) == 'Q')
            a++;
            continue;
        temp[J++] = *(argv+i);
    }
    temp[J] = 0;
    printf( ""x,y,q und X,Y,Q aussortiert: %s \n"", temp );
    for ( i = 0; temp[i] != '\0'; i++)
    {
        if (i == 0 || i % 3 == 0)
        NeuString[K++] = temp[i];
        continue;
    }
    NeuString[K] = 0;
    printf( ""Der neue String lautet: %s \n"", NeuString);
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
	for (int i=0;((i<zahl)&&((dest[i])!=('\0')))&&((src[i])!=('\0'));i++)
dest[i]=src[i];

	
}

void umdrehen( char* str )
{	char temp[30]="""";
	int i=0;
	for(;(str[i+1])!=('\0');i++){}
	for(int j=0;(str[j])!=('\0');j++) {temp[j]=str[i-j];}
	for(int j=0;(str[j])!=('\0');j++) {str[j]=temp[(j)];}
	
}

int main( int argc, char* argv[] )
{
	char test[11]= ""0123456789"";
	printf( ""Das Original ist: %s \n"", test );
	ersetzen( test , atoi(argv[1]), argv[2] );
	printf( ""Ersetzt : %s \n"", test );
	umdrehen( test );
	printf( ""Rückwärts : %s \n"", test );
}",0.0,1
46,WS2021,9,Antwort 10,C,David,Stubler,Constanze Cosima,Freier,"#include <stdio.h>
#include <stdlib.h>

int main( int argc, char** argv)
{
    char text[100] = ""lasse roland max ivo"";
    char temp[100];
    char NeuString[100];
    int J = 0;
    int K = 0;
    int a = 1;
    int i;
    for ( i = 0; *(argv+i) != '\0'; i++)
    {
        if (*(argv+i) == ' ' || *(argv+i) == 'x' || *(argv+i) == 'y' || *(argv+i) == 'q'|| *(argv+i) == 'X'|| *(argv+i) == 'Y'|| *(argv+i) == 'Q')
            a++;
            continue;
        temp[J++] = *(argv+i);
    }
    temp[J] = 0;
    printf( ""x,y,q und X,Y,Q aussortiert: %s \n"", temp );
    for ( i = 0; temp[i] != '\0'; i++)
    {
        if (i == 0 || i % 3 == 0)
        NeuString[K++] = temp[i];
        continue;
    }
    NeuString[K] = 0;
    printf( ""Der neue String lautet: %s \n"", NeuString);
}","#include <stdlib.h>
#include <stdio.h>
int Laenge(char *str)
{
    int size = 0;
    for (int j = 0; str[j] != '\0'; j++)
    {
        size += 1;
    }
    return size;
}

int Kopieren(char *dest, char *src)
{
    int i = 0;
    int j = 0;
    while (src[i] != '\0')
    {
        if (src[i] != 'q' && src[i] != 'x' && src[i] != 'y' && src[i] != 'Q' && src[i] != 'X' && src[i] != 'Y')
        {
            dest[j++] = src[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int Entfernen(char *Eingabe)
{
    int i = 0;
    int j = 0;
    while (Eingabe[i] != '\0')
    {
        if (i % 3 == 0)
        {
            Eingabe[j++] = Eingabe[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int main(int argc, char *argv[])
{
    int Gesamtlaenge = 0;
    for (int i = 1; i < argc; i++)
    {
        Gesamtlaenge += Laenge(argv[i]);
    }
    char Ausgabe[Gesamtlaenge + 1];
    char *Ziel = Ausgabe;
    for (int i = 1; i < argc; i++)
    {
        Ziel += Kopieren(Ziel, argv[i]);
    }
    *Ziel = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", Ausgabe);
    Ausgabe[Entfernen(Ausgabe)] = '\0';
    printf(""Der neue String lautet: %s\n"", Ausgabe);
}",0.0,1
48,WS2021,9,Antwort 10,C,David,Stubler,Caspar Valentin,Zell,"#include <stdio.h>
#include <stdlib.h>

int main( int argc, char** argv)
{
    char text[100] = ""lasse roland max ivo"";
    char temp[100];
    char NeuString[100];
    int J = 0;
    int K = 0;
    int a = 1;
    int i;
    for ( i = 0; *(argv+i) != '\0'; i++)
    {
        if (*(argv+i) == ' ' || *(argv+i) == 'x' || *(argv+i) == 'y' || *(argv+i) == 'q'|| *(argv+i) == 'X'|| *(argv+i) == 'Y'|| *(argv+i) == 'Q')
            a++;
            continue;
        temp[J++] = *(argv+i);
    }
    temp[J] = 0;
    printf( ""x,y,q und X,Y,Q aussortiert: %s \n"", temp );
    for ( i = 0; temp[i] != '\0'; i++)
    {
        if (i == 0 || i % 3 == 0)
        NeuString[K++] = temp[i];
        continue;
    }
    NeuString[K] = 0;
    printf( ""Der neue String lautet: %s \n"", NeuString);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0;(i < zahl) && (i < 10) && (src[i] != '\0'); i++)
    {
        dest[i] = src[i];
    }
}

void umdrehen(char* str )
{
    int size;
    for (int j = 1; str[j] != '\0'; j++)
    {
        size = j + 2;
    }
    char Kopie[size];
    for (int i = 0; i < (size - 1); i++)
    {
        Kopie[size - 2- i] = str[i];
    }
    for (int i = 0; i < size; i++)
    {
        str[i] = Kopie[i];
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen(test, atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.0,1
49,WS2021,9,Antwort 10,C,David,Stubler,Jakob,Kühl,"#include <stdio.h>
#include <stdlib.h>

int main( int argc, char** argv)
{
    char text[100] = ""lasse roland max ivo"";
    char temp[100];
    char NeuString[100];
    int J = 0;
    int K = 0;
    int a = 1;
    int i;
    for ( i = 0; *(argv+i) != '\0'; i++)
    {
        if (*(argv+i) == ' ' || *(argv+i) == 'x' || *(argv+i) == 'y' || *(argv+i) == 'q'|| *(argv+i) == 'X'|| *(argv+i) == 'Y'|| *(argv+i) == 'Q')
            a++;
            continue;
        temp[J++] = *(argv+i);
    }
    temp[J] = 0;
    printf( ""x,y,q und X,Y,Q aussortiert: %s \n"", temp );
    for ( i = 0; temp[i] != '\0'; i++)
    {
        if (i == 0 || i % 3 == 0)
        NeuString[K++] = temp[i];
        continue;
    }
    NeuString[K] = 0;
    printf( ""Der neue String lautet: %s \n"", NeuString);
}","#include<stdio.h>

int main(int argc, char* argv[]){
	char a[100]= """";
	char b[100]="""";
	int x=0;
	for(int i=1 ;i<argc ;i++){
		for (int j=0; argv[i][j] != '\0'; j++){
			if(argv[i][j]== 'x' || argv[i][j]== 'y' || argv[i][j]== 'q' || argv[i][j]== 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q') continue;
			else {
				a[x]=argv[i][j];
				x+=1;
			}
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", a);
	int y=0;
	for(int i=0; i<100; i+=3){
		b[y]=a[i];
		y++;
	}
	printf(""Der neue String lautet: %s\n"", b);
}",0.0,1
50,WS2021,9,Antwort 10,C,David,Stubler,Niklas,Mohr,"#include <stdio.h>
#include <stdlib.h>

int main( int argc, char** argv)
{
    char text[100] = ""lasse roland max ivo"";
    char temp[100];
    char NeuString[100];
    int J = 0;
    int K = 0;
    int a = 1;
    int i;
    for ( i = 0; *(argv+i) != '\0'; i++)
    {
        if (*(argv+i) == ' ' || *(argv+i) == 'x' || *(argv+i) == 'y' || *(argv+i) == 'q'|| *(argv+i) == 'X'|| *(argv+i) == 'Y'|| *(argv+i) == 'Q')
            a++;
            continue;
        temp[J++] = *(argv+i);
    }
    temp[J] = 0;
    printf( ""x,y,q und X,Y,Q aussortiert: %s \n"", temp );
    for ( i = 0; temp[i] != '\0'; i++)
    {
        if (i == 0 || i % 3 == 0)
        NeuString[K++] = temp[i];
        continue;
    }
    NeuString[K] = 0;
    printf( ""Der neue String lautet: %s \n"", NeuString);
}","#include <stdio.h>
#include <stdlib.h>

void aussortieren(char* str)
{
    int t = 0;
    char temp[50];
    for(int i = 0; str[i] != '\0'; i++)
    {
        int t = 0;
        char temp[50];
        if(str[i] == 'x'|| str[i] == 'y'|| str[i] == 'q');
        else if(str[i] == 'X'|| str[i] == 'Y'|| str[i] == 'Q');
        else 
        {
            temp[t] = str[i];
            t++;
        }
    }
    str = &temp;
}


char* sortieren(int länge, char* str[])
{
    int t = 0;
    char temp[200];
    for(int i = 0; i < länge; i++)
    {
        for(int a = 0; a != '\0'; a++)
        {
            temp[t] = str[i+1][a];
            t++;
        }
    }
}   


int main( int argc, char* argv[] )
{  
    int length = sizeof(argv) - 1;
    for(int i = 1; i <= length; i++)
    {
        aussortieren(argv[i]);
    }
    char zusammen = sortieren(length, argv);
    printf(""x,y,q und X,Y,Q aussortiert: %s"", zusammen); 
}",0.0,1
51,WS2021,9,Antwort 10,C,David,Stubler,Tammo Hendrik,Nie,"#include <stdio.h>
#include <stdlib.h>

int main( int argc, char** argv)
{
    char text[100] = ""lasse roland max ivo"";
    char temp[100];
    char NeuString[100];
    int J = 0;
    int K = 0;
    int a = 1;
    int i;
    for ( i = 0; *(argv+i) != '\0'; i++)
    {
        if (*(argv+i) == ' ' || *(argv+i) == 'x' || *(argv+i) == 'y' || *(argv+i) == 'q'|| *(argv+i) == 'X'|| *(argv+i) == 'Y'|| *(argv+i) == 'Q')
            a++;
            continue;
        temp[J++] = *(argv+i);
    }
    temp[J] = 0;
    printf( ""x,y,q und X,Y,Q aussortiert: %s \n"", temp );
    for ( i = 0; temp[i] != '\0'; i++)
    {
        if (i == 0 || i % 3 == 0)
        NeuString[K++] = temp[i];
        continue;
    }
    NeuString[K] = 0;
    printf( ""Der neue String lautet: %s \n"", NeuString);
}","#include <stdio.h>
#include <stdlib.h>
 
int main(int argc, char* argv[52])
{
   //aneinanderhängen

   int zahl = 0;
   int* p_zahl = &zahl;
   int counter = 1;
   int* p_counter = &counter;
   char str[30];
   for(int i = 0; i < argc-1 ; i++)
   {
      for(int j = 0; argv[counter][j] != '\0'; j++)
      {
         str[zahl] = argv[counter][j];
         *p_zahl += 1;
         
      }
      *p_counter += 1;
   }
   str[zahl+1] = '\0';

   int nummer = 0;
   int* p_nummer = &nummer;
   char str2[25];
   for(int i = 0; ; i++)
   {
      if((str[i] != 'x') && (str[i] != 'y') && (str[i] != 'q') && (str[i] != 'X') && (str[i] != 'Y') && (str[i] != 'Q'))
      {
         
         str2[nummer] = str[i];
         if(str[i] == '\0') break;
         *p_nummer += 1;
      }
   }

   //jedes dritte in str3
   char str3[35];
   for(int i = 0; i < 57; i +=3)
   {
      //if((str2[i] == '\0')) break;
      str3[i/3] = str2[i];  
      str3[i/3+1] = '\0'  ;
   }
   //drucken:

   printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str2, str3);
}",0.0,1
52,WS2021,9,Antwort 10,C,David,Stubler,Sören Sven,Werner,"#include <stdio.h>
#include <stdlib.h>

int main( int argc, char** argv)
{
    char text[100] = ""lasse roland max ivo"";
    char temp[100];
    char NeuString[100];
    int J = 0;
    int K = 0;
    int a = 1;
    int i;
    for ( i = 0; *(argv+i) != '\0'; i++)
    {
        if (*(argv+i) == ' ' || *(argv+i) == 'x' || *(argv+i) == 'y' || *(argv+i) == 'q'|| *(argv+i) == 'X'|| *(argv+i) == 'Y'|| *(argv+i) == 'Q')
            a++;
            continue;
        temp[J++] = *(argv+i);
    }
    temp[J] = 0;
    printf( ""x,y,q und X,Y,Q aussortiert: %s \n"", temp );
    for ( i = 0; temp[i] != '\0'; i++)
    {
        if (i == 0 || i % 3 == 0)
        NeuString[K++] = temp[i];
        continue;
    }
    NeuString[K] = 0;
    printf( ""Der neue String lautet: %s \n"", NeuString);
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
/*
int zaehlen(char* str){
	int counter = 0;
	while(str[counter] != '\0'){
		counter++;
	}
	return counter;
}*/

int main( int argc, char* argv[]){



	char str[100] = """";

	for(int i = 1; i<argc; i++){
		strcat(str, argv[i]);
	}
	printf(""%s\n"", str);


}",0.0,1
53,WS2021,9,Antwort 10,C,Daniel Dominik,Eichstädt,Mohamad Anas,Allaham,"#include <stdio.h>

char aussortieren (char buchstabe)
{if (buchstabe=='x'||buchstabe=='y'||buchstabe=='q'||
     buchstabe=='X'||buchstabe=='Y'||buchstabe=='Q')
    return 1;
else return 0;
}

void ersetzen (char*src)
{char tmp[100]="""";
 int fw=0;
 while (src[fw]!='\0')
    {tmp[fw]=src[fw];fw++;}
    tmp[fw]='\0';
    fw=0;
int fw_mod=0;
while (tmp[fw]!='\0')
    {if (fw%3!=0)
        {fw++;}
    else 
        {src[fw_mod]=tmp[fw];
         fw++;
         fw_mod++;}
    }
src[fw_mod]='\0';
}

int main (int argc,char*argv[])
{char str[100]="""";
int c=1;
int lv_c=0;
int lv_argc=0;
while (c!=argc)
    {while (argv[c][lv_argc]!='\0')
        {if (aussortieren(argv[c][lv_argc])) 
         lv_argc++;
         else
         {str[lv_c]=argv[c][lv_argc];
          lv_c++;
          lv_argc++;}}
    c++;lv_argc=0;}
printf (""x,y,q und X,Y,Q aussortiert: %s\n"",str);
ersetzen(str);
printf (""Der neue String lautet: %s\n"",str);
}","#include <stdio.h>
#include <stdlib.h>

int length(char *p)
{
 int i = 0; 
    while (p[i] != '\0')
      i++;
  return i; 
}
 
void ersetzen(char* dest, int zahl, char* src)
{  
  int sizeS = length(src);
  int sizeD = length(dest);
 /*     char temp[sizeS]; 
    for (int i = 0; i <= sizeS-1; i++) 
        temp [i] = src[i];

  for (int i = 0; i <= zahl-1; i++) {
    if (i <= sizeD && i <= sizeS) {
        //dest[i] = temp[i];
        *dest = temp[i]; 

    }
  }*/
  int i = 1;
   while(*src && i <= sizeS && i <= sizeD && i <= zahl) {
    *dest++ = *src++;
    i++;
 }
}

void swap(char* a, char* b){
    char c = *a;
    *a = *b;
    *b = c;
}


void umdrehen( char* str )
{
    if (!*str) 
        return;

    char* i = str;
    char* j = i + length(str) - 1;
    while (i < j) {
        swap(i, j);
        i++;
        j--;
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.0,1
55,WS2021,9,Antwort 10,C,Daniel Dominik,Eichstädt,Gabriel,Ullrich,"#include <stdio.h>

char aussortieren (char buchstabe)
{if (buchstabe=='x'||buchstabe=='y'||buchstabe=='q'||
     buchstabe=='X'||buchstabe=='Y'||buchstabe=='Q')
    return 1;
else return 0;
}

void ersetzen (char*src)
{char tmp[100]="""";
 int fw=0;
 while (src[fw]!='\0')
    {tmp[fw]=src[fw];fw++;}
    tmp[fw]='\0';
    fw=0;
int fw_mod=0;
while (tmp[fw]!='\0')
    {if (fw%3!=0)
        {fw++;}
    else 
        {src[fw_mod]=tmp[fw];
         fw++;
         fw_mod++;}
    }
src[fw_mod]='\0';
}

int main (int argc,char*argv[])
{char str[100]="""";
int c=1;
int lv_c=0;
int lv_argc=0;
while (c!=argc)
    {while (argv[c][lv_argc]!='\0')
        {if (aussortieren(argv[c][lv_argc])) 
         lv_argc++;
         else
         {str[lv_c]=argv[c][lv_argc];
          lv_c++;
          lv_argc++;}}
    c++;lv_argc=0;}
printf (""x,y,q und X,Y,Q aussortiert: %s\n"",str);
ersetzen(str);
printf (""Der neue String lautet: %s\n"",str);
}","#include <stdio.h>
void xyqentfernen(char* str1){
	int i;
	int j;
	for ( i = 0,  j = 0;j<100; ++j){
	if ((str1[j] != 'x')&&(str1[j] != 'X')&&(str1[j] != 'y')&&(str1[j] != 'Y')&&(str1[j] != 'q')&&(str1[j] != 'Q'))
	str1[i++] = str1[j];
	
	}
}

void zsmfuegen(char* str1, char* str2){
	int j=0;
	for(;(str2[j])!=('\0');j++){}
	for (int i=0;str1[i]!='\0';i++){
		str2[j+i]=str1[i];
	}	
;}

void neuerstring(char* str1,char* str2){
	for (int i=0;str1[i]!='\0';i++){
		if((i+3)%3==0)str2[((i+3)/3)-1]=str1[i];
	}
}


int main(int argc,char** argv){
	if (argc<2) return 0;
	char zsm[100]="""";
	char neustr[100]="""";
	for(int i=1;i<argc;i++) {
		zsmfuegen(argv[i],zsm);}
		xyqentfernen(zsm);
	neuerstring(zsm,neustr);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",zsm);
	printf(""Der neue String lautet: %s"",neustr);
}",0.0,1
57,WS2021,9,Antwort 10,C,Daniel Dominik,Eichstädt,Florian Philipp,Meyer,"#include <stdio.h>

char aussortieren (char buchstabe)
{if (buchstabe=='x'||buchstabe=='y'||buchstabe=='q'||
     buchstabe=='X'||buchstabe=='Y'||buchstabe=='Q')
    return 1;
else return 0;
}

void ersetzen (char*src)
{char tmp[100]="""";
 int fw=0;
 while (src[fw]!='\0')
    {tmp[fw]=src[fw];fw++;}
    tmp[fw]='\0';
    fw=0;
int fw_mod=0;
while (tmp[fw]!='\0')
    {if (fw%3!=0)
        {fw++;}
    else 
        {src[fw_mod]=tmp[fw];
         fw++;
         fw_mod++;}
    }
src[fw_mod]='\0';
}

int main (int argc,char*argv[])
{char str[100]="""";
int c=1;
int lv_c=0;
int lv_argc=0;
while (c!=argc)
    {while (argv[c][lv_argc]!='\0')
        {if (aussortieren(argv[c][lv_argc])) 
         lv_argc++;
         else
         {str[lv_c]=argv[c][lv_argc];
          lv_c++;
          lv_argc++;}}
    c++;lv_argc=0;}
printf (""x,y,q und X,Y,Q aussortiert: %s\n"",str);
ersetzen(str);
printf (""Der neue String lautet: %s\n"",str);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
   for(int i=0; i<zahl && *src!='\0' && *dest!='\0'; i++)
  {
      *dest = *src;
      dest++;
      src++;
  } 
}

void umdrehen( char* str )
{
    char temp[100] = """";
    char* ptemp = temp;
    for(int i=0; str[i]!=0; i++)
        temp[i] = str[i]; 

    while(*ptemp != '\0')
        ptemp++;
    
    ptemp--;
     
    while(*str!='\0')
    {
        *str = *ptemp;       
        ptemp--;
        str++;       
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.0,1
58,WS2021,9,Antwort 10,C,Daniel Dominik,Eichstädt,Leonhard,Dirks,"#include <stdio.h>

char aussortieren (char buchstabe)
{if (buchstabe=='x'||buchstabe=='y'||buchstabe=='q'||
     buchstabe=='X'||buchstabe=='Y'||buchstabe=='Q')
    return 1;
else return 0;
}

void ersetzen (char*src)
{char tmp[100]="""";
 int fw=0;
 while (src[fw]!='\0')
    {tmp[fw]=src[fw];fw++;}
    tmp[fw]='\0';
    fw=0;
int fw_mod=0;
while (tmp[fw]!='\0')
    {if (fw%3!=0)
        {fw++;}
    else 
        {src[fw_mod]=tmp[fw];
         fw++;
         fw_mod++;}
    }
src[fw_mod]='\0';
}

int main (int argc,char*argv[])
{char str[100]="""";
int c=1;
int lv_c=0;
int lv_argc=0;
while (c!=argc)
    {while (argv[c][lv_argc]!='\0')
        {if (aussortieren(argv[c][lv_argc])) 
         lv_argc++;
         else
         {str[lv_c]=argv[c][lv_argc];
          lv_c++;
          lv_argc++;}}
    c++;lv_argc=0;}
printf (""x,y,q und X,Y,Q aussortiert: %s\n"",str);
ersetzen(str);
printf (""Der neue String lautet: %s\n"",str);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	int position = 0;
	while(position < zahl && dest[position] != '\0' && src[position] != '\0'){
		dest[position] = src[position];
		position ++;
	}
}

void umdrehen( char* str )
{
	int groesse = 0;
	while(str[groesse] != '\0') groesse++;
	char kopie[groesse];
	for(int i = 0; i < groesse; i++) kopie[i] = str[i];
	for(int i = 0; i < groesse; i++){
		str[i] = kopie[groesse - 1 - i];
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.0,1
59,WS2021,9,Antwort 10,C,Daniel Dominik,Eichstädt,Annegret Claire,Kruschel,"#include <stdio.h>

char aussortieren (char buchstabe)
{if (buchstabe=='x'||buchstabe=='y'||buchstabe=='q'||
     buchstabe=='X'||buchstabe=='Y'||buchstabe=='Q')
    return 1;
else return 0;
}

void ersetzen (char*src)
{char tmp[100]="""";
 int fw=0;
 while (src[fw]!='\0')
    {tmp[fw]=src[fw];fw++;}
    tmp[fw]='\0';
    fw=0;
int fw_mod=0;
while (tmp[fw]!='\0')
    {if (fw%3!=0)
        {fw++;}
    else 
        {src[fw_mod]=tmp[fw];
         fw++;
         fw_mod++;}
    }
src[fw_mod]='\0';
}

int main (int argc,char*argv[])
{char str[100]="""";
int c=1;
int lv_c=0;
int lv_argc=0;
while (c!=argc)
    {while (argv[c][lv_argc]!='\0')
        {if (aussortieren(argv[c][lv_argc])) 
         lv_argc++;
         else
         {str[lv_c]=argv[c][lv_argc];
          lv_c++;
          lv_argc++;}}
    c++;lv_argc=0;}
printf (""x,y,q und X,Y,Q aussortiert: %s\n"",str);
ersetzen(str);
printf (""Der neue String lautet: %s\n"",str);
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){

char* compactstring = (char*) malloc(400* sizeof(char));
int x = 0;
for(int i=1; i < argc; i++){
	int j = 0;
while(*(argv[i]+j) != '\0'){
if((*(argv[i]+j) != 'x') && (*(argv[i]+j)!= 'y') && (*(argv[i]+j) != 'q')&& (*(argv[i]+j) != 'X')&& (*(argv[i]+j) != 'Y')&& (*(argv[i]+j) != 'Q')){
			*(compactstring+x) = *(argv[i]+j);
			x++;
	}
	j++;
}
}
compactstring = (char*) realloc(compactstring,x+sizeof(char));
int shortendlength=(x+1)/3;
char* shortend = (char*) malloc(shortendlength * sizeof(char));
int y = 0;
for (int i=0;i<x+1;i++){
if((i%3)==0){
	*(shortend+y) = *(compactstring+i);
	y++;
}
}
printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", compactstring,shortend);
}",0.0,1
62,WS2021,9,Antwort 10,C,Daniel Dominik,Eichstädt,Lucie Chantal,Girod,"#include <stdio.h>

char aussortieren (char buchstabe)
{if (buchstabe=='x'||buchstabe=='y'||buchstabe=='q'||
     buchstabe=='X'||buchstabe=='Y'||buchstabe=='Q')
    return 1;
else return 0;
}

void ersetzen (char*src)
{char tmp[100]="""";
 int fw=0;
 while (src[fw]!='\0')
    {tmp[fw]=src[fw];fw++;}
    tmp[fw]='\0';
    fw=0;
int fw_mod=0;
while (tmp[fw]!='\0')
    {if (fw%3!=0)
        {fw++;}
    else 
        {src[fw_mod]=tmp[fw];
         fw++;
         fw_mod++;}
    }
src[fw_mod]='\0';
}

int main (int argc,char*argv[])
{char str[100]="""";
int c=1;
int lv_c=0;
int lv_argc=0;
while (c!=argc)
    {while (argv[c][lv_argc]!='\0')
        {if (aussortieren(argv[c][lv_argc])) 
         lv_argc++;
         else
         {str[lv_c]=argv[c][lv_argc];
          lv_c++;
          lv_argc++;}}
    c++;lv_argc=0;}
printf (""x,y,q und X,Y,Q aussortiert: %s\n"",str);
ersetzen(str);
printf (""Der neue String lautet: %s\n"",str);
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){
	
	char* text_str = malloc(400* sizeof(char));
	int idx = 0;
	for(int i = 1; i < argc; i++){
		int j = 0;
		while(*(argv[i]+j) != '\0'){
			if((*(argv[i]+j) != 'x') && (*(argv[i]+j) != 'y') && (*(argv[i]+j) != 'q') && (*(argv[i]+j) != 'X') && (*(argv[i]+j) != 'Y') && (*(argv[i]+j) != 'Q')){
			*(text_str+idx) = *(argv[i]+j);
			idx++;
			}
			j++;
		}
	}
	
	text_str = realloc(text_str,idx+1 * sizeof(char));
	int solution_length = (idx+1) / 3;
	char* solution = malloc(solution_length * sizeof(char));
	int count = 0;
	for(int i = 0; i < idx+1; i++){
		if((i % 3) == 0){
			*(solution+count) = *(text_str+i);
			count++;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", text_str, solution);
	
}",0.0,1
64,WS2021,9,Antwort 10,C,Daniel Dominik,Eichstädt,Moritz,Batilla,"#include <stdio.h>

char aussortieren (char buchstabe)
{if (buchstabe=='x'||buchstabe=='y'||buchstabe=='q'||
     buchstabe=='X'||buchstabe=='Y'||buchstabe=='Q')
    return 1;
else return 0;
}

void ersetzen (char*src)
{char tmp[100]="""";
 int fw=0;
 while (src[fw]!='\0')
    {tmp[fw]=src[fw];fw++;}
    tmp[fw]='\0';
    fw=0;
int fw_mod=0;
while (tmp[fw]!='\0')
    {if (fw%3!=0)
        {fw++;}
    else 
        {src[fw_mod]=tmp[fw];
         fw++;
         fw_mod++;}
    }
src[fw_mod]='\0';
}

int main (int argc,char*argv[])
{char str[100]="""";
int c=1;
int lv_c=0;
int lv_argc=0;
while (c!=argc)
    {while (argv[c][lv_argc]!='\0')
        {if (aussortieren(argv[c][lv_argc])) 
         lv_argc++;
         else
         {str[lv_c]=argv[c][lv_argc];
          lv_c++;
          lv_argc++;}}
    c++;lv_argc=0;}
printf (""x,y,q und X,Y,Q aussortiert: %s\n"",str);
ersetzen(str);
printf (""Der neue String lautet: %s\n"",str);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    int x;
    for(x = 0; x < zahl && *dest != '\0' && *src != '\0'; x++)
    {
       *dest = *src;
       src++;
       dest++;
    }
}

void umdrehen( char* str )
{
    int y = 0;
    int count = 0;
    int tmp = 0;

    for(count=0; str[count] != 0; count++);
    for(y = 0; y <count/2; y++)
    {
        tmp = str[y];
        str[y]=str[count - 1 - y];
        str[count - 1 - y] = tmp;
    }
    for(y = 0; y < count; y++);
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.0,1
65,WS2021,9,Antwort 10,C,Daniel Dominik,Eichstädt,Can Mert,Ergin,"#include <stdio.h>

char aussortieren (char buchstabe)
{if (buchstabe=='x'||buchstabe=='y'||buchstabe=='q'||
     buchstabe=='X'||buchstabe=='Y'||buchstabe=='Q')
    return 1;
else return 0;
}

void ersetzen (char*src)
{char tmp[100]="""";
 int fw=0;
 while (src[fw]!='\0')
    {tmp[fw]=src[fw];fw++;}
    tmp[fw]='\0';
    fw=0;
int fw_mod=0;
while (tmp[fw]!='\0')
    {if (fw%3!=0)
        {fw++;}
    else 
        {src[fw_mod]=tmp[fw];
         fw++;
         fw_mod++;}
    }
src[fw_mod]='\0';
}

int main (int argc,char*argv[])
{char str[100]="""";
int c=1;
int lv_c=0;
int lv_argc=0;
while (c!=argc)
    {while (argv[c][lv_argc]!='\0')
        {if (aussortieren(argv[c][lv_argc])) 
         lv_argc++;
         else
         {str[lv_c]=argv[c][lv_argc];
          lv_c++;
          lv_argc++;}}
    c++;lv_argc=0;}
printf (""x,y,q und X,Y,Q aussortiert: %s\n"",str);
ersetzen(str);
printf (""Der neue String lautet: %s\n"",str);
}","#include <stdio.h>

int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}",0.0,1
66,WS2021,9,Antwort 10,C,Daniel Dominik,Eichstädt,Daniel,Grönefeld,"#include <stdio.h>

char aussortieren (char buchstabe)
{if (buchstabe=='x'||buchstabe=='y'||buchstabe=='q'||
     buchstabe=='X'||buchstabe=='Y'||buchstabe=='Q')
    return 1;
else return 0;
}

void ersetzen (char*src)
{char tmp[100]="""";
 int fw=0;
 while (src[fw]!='\0')
    {tmp[fw]=src[fw];fw++;}
    tmp[fw]='\0';
    fw=0;
int fw_mod=0;
while (tmp[fw]!='\0')
    {if (fw%3!=0)
        {fw++;}
    else 
        {src[fw_mod]=tmp[fw];
         fw++;
         fw_mod++;}
    }
src[fw_mod]='\0';
}

int main (int argc,char*argv[])
{char str[100]="""";
int c=1;
int lv_c=0;
int lv_argc=0;
while (c!=argc)
    {while (argv[c][lv_argc]!='\0')
        {if (aussortieren(argv[c][lv_argc])) 
         lv_argc++;
         else
         {str[lv_c]=argv[c][lv_argc];
          lv_c++;
          lv_argc++;}}
    c++;lv_argc=0;}
printf (""x,y,q und X,Y,Q aussortiert: %s\n"",str);
ersetzen(str);
printf (""Der neue String lautet: %s\n"",str);
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{  
	for(int i = 0; src[i] != '\0' && dest[i] != '\0' && i < zahl; i++){
		dest[i] = src[i];
	}
}

void umdrehen( char* str)
{
	int length_str = 0;
	for( int i = 0; str[i] != '\0'; i++)
		length_str = i;
	char temp_string[length_str];
	for( int i = 0; i <= length_str; i++)
		temp_string[i] = str[length_str-i];
	for( int i = 0; i <= length_str; i++)
		str[i] = temp_string[i];
}

int main( int argc, char* argv[] )
{  
  char test[11] = ""0123456789"";
  printf( ""Das Original ist: %s \n"", test);
  ersetzen(test , atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test);
  umdrehen( test );	
  printf( ""Rückwärts : %s \n"", test );
}",0.0,1
68,WS2021,9,Antwort 10,C,Daniel Dominik,Eichstädt,Catalina,Florez Vargas,"#include <stdio.h>

char aussortieren (char buchstabe)
{if (buchstabe=='x'||buchstabe=='y'||buchstabe=='q'||
     buchstabe=='X'||buchstabe=='Y'||buchstabe=='Q')
    return 1;
else return 0;
}

void ersetzen (char*src)
{char tmp[100]="""";
 int fw=0;
 while (src[fw]!='\0')
    {tmp[fw]=src[fw];fw++;}
    tmp[fw]='\0';
    fw=0;
int fw_mod=0;
while (tmp[fw]!='\0')
    {if (fw%3!=0)
        {fw++;}
    else 
        {src[fw_mod]=tmp[fw];
         fw++;
         fw_mod++;}
    }
src[fw_mod]='\0';
}

int main (int argc,char*argv[])
{char str[100]="""";
int c=1;
int lv_c=0;
int lv_argc=0;
while (c!=argc)
    {while (argv[c][lv_argc]!='\0')
        {if (aussortieren(argv[c][lv_argc])) 
         lv_argc++;
         else
         {str[lv_c]=argv[c][lv_argc];
          lv_c++;
          lv_argc++;}}
    c++;lv_argc=0;}
printf (""x,y,q und X,Y,Q aussortiert: %s\n"",str);
ersetzen(str);
printf (""Der neue String lautet: %s\n"",str);
}","#include <stdio.h>

int main(int argc, char *argv[])

{
    int u;
    int f = 0;
    char neu[20];
    char nueva[15];
    int x = 0;
    for (int i = 1; i < argc; i++)
    {
        u = 0;
        while ((argv[i][u]) != '\0')
        {
            if (argv[i][u] != 'x' && argv[i][u] != 'y' && argv[i][u] != 'q' && argv[i][u] != 'X' && argv[i][u] != 'Y' && argv[i][u] != 'Q')
            {
                neu[f] = argv[i][u];
                f++;
            }
            u++;
        }
    }

    for (int i = 0; i <= f; i++)
    {
        if (x > (i / 3) || i == 0)
        {
            if (i == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
            if (((i) % 3) == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
        }
    }

    printf(""x,y,q und X,Y,Q aussortiert: "");
    for (int i = 0; i < f; i++)
        if (neu[i] != '\0')
        {
            printf(""%c"", neu[i]);
        }

    printf(""\n"");

     printf(""Der neue String lautet: "");
    for (int i = 1; i < (f / 2)-1; i++)
            printf(""%c"", nueva[i]);
    if (neu[0] == 'z')
        printf(""z"");
}",0.0,1
69,WS2021,9,Antwort 10,C,Daniel Dominik,Eichstädt,Sandro,Paluteder,"#include <stdio.h>

char aussortieren (char buchstabe)
{if (buchstabe=='x'||buchstabe=='y'||buchstabe=='q'||
     buchstabe=='X'||buchstabe=='Y'||buchstabe=='Q')
    return 1;
else return 0;
}

void ersetzen (char*src)
{char tmp[100]="""";
 int fw=0;
 while (src[fw]!='\0')
    {tmp[fw]=src[fw];fw++;}
    tmp[fw]='\0';
    fw=0;
int fw_mod=0;
while (tmp[fw]!='\0')
    {if (fw%3!=0)
        {fw++;}
    else 
        {src[fw_mod]=tmp[fw];
         fw++;
         fw_mod++;}
    }
src[fw_mod]='\0';
}

int main (int argc,char*argv[])
{char str[100]="""";
int c=1;
int lv_c=0;
int lv_argc=0;
while (c!=argc)
    {while (argv[c][lv_argc]!='\0')
        {if (aussortieren(argv[c][lv_argc])) 
         lv_argc++;
         else
         {str[lv_c]=argv[c][lv_argc];
          lv_c++;
          lv_argc++;}}
    c++;lv_argc=0;}
printf (""x,y,q und X,Y,Q aussortiert: %s\n"",str);
ersetzen(str);
printf (""Der neue String lautet: %s\n"",str);
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[])
{   
     // char *argv[] is a array of strings, each command line arguments
    // int argc is the amount of command line arguments
    
    //loop through all command line arguements. First command line argument is always taken by default so we start at 1.
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
  
        
        //printf(""Current 2 %c \n"",CurrentCommandString[0]);
       
        //int LengthOfString = sizeof(CurrentCommandString) / sizeof(char*);
        
        //printf(""Current Size %i \n"",LengthOfString);
        
        int i = 0;
        while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
            if (CurrentCommandString[i] == 'x' 
             || CurrentCommandString[i] == 'y' 
             || CurrentCommandString[i] == 'q'
             || CurrentCommandString[i] == 'X'
             || CurrentCommandString[i] == 'Y' 
             || CurrentCommandString[i] == 'Q')
             {   
                 int j = i;
                 while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
                    CurrentCommandString[j] = CurrentCommandString[j + 1]; 
                    ++j; 
                 }
             }
            ++i;
         }
        
        
        //printf(""x,y,q und X,Y,Q aussortiert TEST 1: %s \n"", argv[kk]);
    }
    
    char StringXYQRemoved[5000];
    int StringXYQRemovedIndex = 0;
       
    char StringThirdRemoved[5000];
    int StringThirdRemovedIndex = 0;
    
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
        
        
        //String 1 
        
        int length, j;
        
          // store length of s1 in the length variable
          length = 0;
          while (StringXYQRemoved[length] != '\0' && StringXYQRemoved[length] != ' ') {
            ++length;
          }
        
          // concatenate s2 to s1
          for (j = 0; CurrentCommandString[j] != '\0' && CurrentCommandString[length] != ' '; ++j, ++length) {
            StringXYQRemoved[length] = CurrentCommandString[j];
          }
        
          // terminating the s1 string
          StringXYQRemoved[length] = '\0';       
    }
    
    
    
        //String2
        int length, j;
        // store length of s1 in the length variable
        length = 0;
        while (StringThirdRemoved[length] != '\0' && StringThirdRemoved[length] != ' ') {
        ++length;
        }
        
        // concatenate s2 to s1
        for (j = 0; StringXYQRemoved[j] != '\0' && StringXYQRemoved[length] != ' '; ++length) {
         StringThirdRemoved[length] = StringXYQRemoved[j];
         
         //printf(""WTFFFF %c \n"",StringXYQRemoved[j]);
         j+=3;
        }
        
        // terminating the s1 string
        StringThirdRemoved[length] = '\0';       
        
    printf(""x,y,q und X,Y,Q aussortiert: %s \n"", StringXYQRemoved);
    printf(""Der neue String lautet: %s"", StringThirdRemoved);
    
}",0.0,1
70,WS2021,9,Antwort 10,C,Daniel Dominik,Eichstädt,Jonas,Bestgen,"#include <stdio.h>

char aussortieren (char buchstabe)
{if (buchstabe=='x'||buchstabe=='y'||buchstabe=='q'||
     buchstabe=='X'||buchstabe=='Y'||buchstabe=='Q')
    return 1;
else return 0;
}

void ersetzen (char*src)
{char tmp[100]="""";
 int fw=0;
 while (src[fw]!='\0')
    {tmp[fw]=src[fw];fw++;}
    tmp[fw]='\0';
    fw=0;
int fw_mod=0;
while (tmp[fw]!='\0')
    {if (fw%3!=0)
        {fw++;}
    else 
        {src[fw_mod]=tmp[fw];
         fw++;
         fw_mod++;}
    }
src[fw_mod]='\0';
}

int main (int argc,char*argv[])
{char str[100]="""";
int c=1;
int lv_c=0;
int lv_argc=0;
while (c!=argc)
    {while (argv[c][lv_argc]!='\0')
        {if (aussortieren(argv[c][lv_argc])) 
         lv_argc++;
         else
         {str[lv_c]=argv[c][lv_argc];
          lv_c++;
          lv_argc++;}}
    c++;lv_argc=0;}
printf (""x,y,q und X,Y,Q aussortiert: %s\n"",str);
ersetzen(str);
printf (""Der neue String lautet: %s\n"",str);
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
	for (int i=0;((i<zahl)&&((dest[i])!=('\0')))&&((src[i])!=('\0'));i++)
dest[i]=src[i];

	
}

void umdrehen( char* str )
{	char temp[30]="""";
	int i=0;
	for(;(str[i+1])!=('\0');i++){}
	for(int j=0;(str[j])!=('\0');j++) {temp[j]=str[i-j];}
	for(int j=0;(str[j])!=('\0');j++) {str[j]=temp[(j)];}
	
}

int main( int argc, char* argv[] )
{
	char test[11]= ""0123456789"";
	printf( ""Das Original ist: %s \n"", test );
	ersetzen( test , atoi(argv[1]), argv[2] );
	printf( ""Ersetzt : %s \n"", test );
	umdrehen( test );
	printf( ""Rückwärts : %s \n"", test );
}",0.0,1
71,WS2021,9,Antwort 10,C,Daniel Dominik,Eichstädt,Constanze Cosima,Freier,"#include <stdio.h>

char aussortieren (char buchstabe)
{if (buchstabe=='x'||buchstabe=='y'||buchstabe=='q'||
     buchstabe=='X'||buchstabe=='Y'||buchstabe=='Q')
    return 1;
else return 0;
}

void ersetzen (char*src)
{char tmp[100]="""";
 int fw=0;
 while (src[fw]!='\0')
    {tmp[fw]=src[fw];fw++;}
    tmp[fw]='\0';
    fw=0;
int fw_mod=0;
while (tmp[fw]!='\0')
    {if (fw%3!=0)
        {fw++;}
    else 
        {src[fw_mod]=tmp[fw];
         fw++;
         fw_mod++;}
    }
src[fw_mod]='\0';
}

int main (int argc,char*argv[])
{char str[100]="""";
int c=1;
int lv_c=0;
int lv_argc=0;
while (c!=argc)
    {while (argv[c][lv_argc]!='\0')
        {if (aussortieren(argv[c][lv_argc])) 
         lv_argc++;
         else
         {str[lv_c]=argv[c][lv_argc];
          lv_c++;
          lv_argc++;}}
    c++;lv_argc=0;}
printf (""x,y,q und X,Y,Q aussortiert: %s\n"",str);
ersetzen(str);
printf (""Der neue String lautet: %s\n"",str);
}","#include <stdlib.h>
#include <stdio.h>
int Laenge(char *str)
{
    int size = 0;
    for (int j = 0; str[j] != '\0'; j++)
    {
        size += 1;
    }
    return size;
}

int Kopieren(char *dest, char *src)
{
    int i = 0;
    int j = 0;
    while (src[i] != '\0')
    {
        if (src[i] != 'q' && src[i] != 'x' && src[i] != 'y' && src[i] != 'Q' && src[i] != 'X' && src[i] != 'Y')
        {
            dest[j++] = src[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int Entfernen(char *Eingabe)
{
    int i = 0;
    int j = 0;
    while (Eingabe[i] != '\0')
    {
        if (i % 3 == 0)
        {
            Eingabe[j++] = Eingabe[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int main(int argc, char *argv[])
{
    int Gesamtlaenge = 0;
    for (int i = 1; i < argc; i++)
    {
        Gesamtlaenge += Laenge(argv[i]);
    }
    char Ausgabe[Gesamtlaenge + 1];
    char *Ziel = Ausgabe;
    for (int i = 1; i < argc; i++)
    {
        Ziel += Kopieren(Ziel, argv[i]);
    }
    *Ziel = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", Ausgabe);
    Ausgabe[Entfernen(Ausgabe)] = '\0';
    printf(""Der neue String lautet: %s\n"", Ausgabe);
}",0.0,1
73,WS2021,9,Antwort 10,C,Daniel Dominik,Eichstädt,Caspar Valentin,Zell,"#include <stdio.h>

char aussortieren (char buchstabe)
{if (buchstabe=='x'||buchstabe=='y'||buchstabe=='q'||
     buchstabe=='X'||buchstabe=='Y'||buchstabe=='Q')
    return 1;
else return 0;
}

void ersetzen (char*src)
{char tmp[100]="""";
 int fw=0;
 while (src[fw]!='\0')
    {tmp[fw]=src[fw];fw++;}
    tmp[fw]='\0';
    fw=0;
int fw_mod=0;
while (tmp[fw]!='\0')
    {if (fw%3!=0)
        {fw++;}
    else 
        {src[fw_mod]=tmp[fw];
         fw++;
         fw_mod++;}
    }
src[fw_mod]='\0';
}

int main (int argc,char*argv[])
{char str[100]="""";
int c=1;
int lv_c=0;
int lv_argc=0;
while (c!=argc)
    {while (argv[c][lv_argc]!='\0')
        {if (aussortieren(argv[c][lv_argc])) 
         lv_argc++;
         else
         {str[lv_c]=argv[c][lv_argc];
          lv_c++;
          lv_argc++;}}
    c++;lv_argc=0;}
printf (""x,y,q und X,Y,Q aussortiert: %s\n"",str);
ersetzen(str);
printf (""Der neue String lautet: %s\n"",str);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0;(i < zahl) && (i < 10) && (src[i] != '\0'); i++)
    {
        dest[i] = src[i];
    }
}

void umdrehen(char* str )
{
    int size;
    for (int j = 1; str[j] != '\0'; j++)
    {
        size = j + 2;
    }
    char Kopie[size];
    for (int i = 0; i < (size - 1); i++)
    {
        Kopie[size - 2- i] = str[i];
    }
    for (int i = 0; i < size; i++)
    {
        str[i] = Kopie[i];
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen(test, atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.0,1
74,WS2021,9,Antwort 10,C,Daniel Dominik,Eichstädt,Jakob,Kühl,"#include <stdio.h>

char aussortieren (char buchstabe)
{if (buchstabe=='x'||buchstabe=='y'||buchstabe=='q'||
     buchstabe=='X'||buchstabe=='Y'||buchstabe=='Q')
    return 1;
else return 0;
}

void ersetzen (char*src)
{char tmp[100]="""";
 int fw=0;
 while (src[fw]!='\0')
    {tmp[fw]=src[fw];fw++;}
    tmp[fw]='\0';
    fw=0;
int fw_mod=0;
while (tmp[fw]!='\0')
    {if (fw%3!=0)
        {fw++;}
    else 
        {src[fw_mod]=tmp[fw];
         fw++;
         fw_mod++;}
    }
src[fw_mod]='\0';
}

int main (int argc,char*argv[])
{char str[100]="""";
int c=1;
int lv_c=0;
int lv_argc=0;
while (c!=argc)
    {while (argv[c][lv_argc]!='\0')
        {if (aussortieren(argv[c][lv_argc])) 
         lv_argc++;
         else
         {str[lv_c]=argv[c][lv_argc];
          lv_c++;
          lv_argc++;}}
    c++;lv_argc=0;}
printf (""x,y,q und X,Y,Q aussortiert: %s\n"",str);
ersetzen(str);
printf (""Der neue String lautet: %s\n"",str);
}","#include<stdio.h>

int main(int argc, char* argv[]){
	char a[100]= """";
	char b[100]="""";
	int x=0;
	for(int i=1 ;i<argc ;i++){
		for (int j=0; argv[i][j] != '\0'; j++){
			if(argv[i][j]== 'x' || argv[i][j]== 'y' || argv[i][j]== 'q' || argv[i][j]== 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q') continue;
			else {
				a[x]=argv[i][j];
				x+=1;
			}
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", a);
	int y=0;
	for(int i=0; i<100; i+=3){
		b[y]=a[i];
		y++;
	}
	printf(""Der neue String lautet: %s\n"", b);
}",0.0,1
75,WS2021,9,Antwort 10,C,Daniel Dominik,Eichstädt,Niklas,Mohr,"#include <stdio.h>

char aussortieren (char buchstabe)
{if (buchstabe=='x'||buchstabe=='y'||buchstabe=='q'||
     buchstabe=='X'||buchstabe=='Y'||buchstabe=='Q')
    return 1;
else return 0;
}

void ersetzen (char*src)
{char tmp[100]="""";
 int fw=0;
 while (src[fw]!='\0')
    {tmp[fw]=src[fw];fw++;}
    tmp[fw]='\0';
    fw=0;
int fw_mod=0;
while (tmp[fw]!='\0')
    {if (fw%3!=0)
        {fw++;}
    else 
        {src[fw_mod]=tmp[fw];
         fw++;
         fw_mod++;}
    }
src[fw_mod]='\0';
}

int main (int argc,char*argv[])
{char str[100]="""";
int c=1;
int lv_c=0;
int lv_argc=0;
while (c!=argc)
    {while (argv[c][lv_argc]!='\0')
        {if (aussortieren(argv[c][lv_argc])) 
         lv_argc++;
         else
         {str[lv_c]=argv[c][lv_argc];
          lv_c++;
          lv_argc++;}}
    c++;lv_argc=0;}
printf (""x,y,q und X,Y,Q aussortiert: %s\n"",str);
ersetzen(str);
printf (""Der neue String lautet: %s\n"",str);
}","#include <stdio.h>
#include <stdlib.h>

void aussortieren(char* str)
{
    int t = 0;
    char temp[50];
    for(int i = 0; str[i] != '\0'; i++)
    {
        int t = 0;
        char temp[50];
        if(str[i] == 'x'|| str[i] == 'y'|| str[i] == 'q');
        else if(str[i] == 'X'|| str[i] == 'Y'|| str[i] == 'Q');
        else 
        {
            temp[t] = str[i];
            t++;
        }
    }
    str = &temp;
}


char* sortieren(int länge, char* str[])
{
    int t = 0;
    char temp[200];
    for(int i = 0; i < länge; i++)
    {
        for(int a = 0; a != '\0'; a++)
        {
            temp[t] = str[i+1][a];
            t++;
        }
    }
}   


int main( int argc, char* argv[] )
{  
    int length = sizeof(argv) - 1;
    for(int i = 1; i <= length; i++)
    {
        aussortieren(argv[i]);
    }
    char zusammen = sortieren(length, argv);
    printf(""x,y,q und X,Y,Q aussortiert: %s"", zusammen); 
}",0.1614395887,1
76,WS2021,9,Antwort 10,C,Daniel Dominik,Eichstädt,Tammo Hendrik,Nie,"#include <stdio.h>

char aussortieren (char buchstabe)
{if (buchstabe=='x'||buchstabe=='y'||buchstabe=='q'||
     buchstabe=='X'||buchstabe=='Y'||buchstabe=='Q')
    return 1;
else return 0;
}

void ersetzen (char*src)
{char tmp[100]="""";
 int fw=0;
 while (src[fw]!='\0')
    {tmp[fw]=src[fw];fw++;}
    tmp[fw]='\0';
    fw=0;
int fw_mod=0;
while (tmp[fw]!='\0')
    {if (fw%3!=0)
        {fw++;}
    else 
        {src[fw_mod]=tmp[fw];
         fw++;
         fw_mod++;}
    }
src[fw_mod]='\0';
}

int main (int argc,char*argv[])
{char str[100]="""";
int c=1;
int lv_c=0;
int lv_argc=0;
while (c!=argc)
    {while (argv[c][lv_argc]!='\0')
        {if (aussortieren(argv[c][lv_argc])) 
         lv_argc++;
         else
         {str[lv_c]=argv[c][lv_argc];
          lv_c++;
          lv_argc++;}}
    c++;lv_argc=0;}
printf (""x,y,q und X,Y,Q aussortiert: %s\n"",str);
ersetzen(str);
printf (""Der neue String lautet: %s\n"",str);
}","#include <stdio.h>
#include <stdlib.h>
 
int main(int argc, char* argv[52])
{
   //aneinanderhängen

   int zahl = 0;
   int* p_zahl = &zahl;
   int counter = 1;
   int* p_counter = &counter;
   char str[30];
   for(int i = 0; i < argc-1 ; i++)
   {
      for(int j = 0; argv[counter][j] != '\0'; j++)
      {
         str[zahl] = argv[counter][j];
         *p_zahl += 1;
         
      }
      *p_counter += 1;
   }
   str[zahl+1] = '\0';

   int nummer = 0;
   int* p_nummer = &nummer;
   char str2[25];
   for(int i = 0; ; i++)
   {
      if((str[i] != 'x') && (str[i] != 'y') && (str[i] != 'q') && (str[i] != 'X') && (str[i] != 'Y') && (str[i] != 'Q'))
      {
         
         str2[nummer] = str[i];
         if(str[i] == '\0') break;
         *p_nummer += 1;
      }
   }

   //jedes dritte in str3
   char str3[35];
   for(int i = 0; i < 57; i +=3)
   {
      //if((str2[i] == '\0')) break;
      str3[i/3] = str2[i];  
      str3[i/3+1] = '\0'  ;
   }
   //drucken:

   printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str2, str3);
}",0.0,1
77,WS2021,9,Antwort 10,C,Daniel Dominik,Eichstädt,Sören Sven,Werner,"#include <stdio.h>

char aussortieren (char buchstabe)
{if (buchstabe=='x'||buchstabe=='y'||buchstabe=='q'||
     buchstabe=='X'||buchstabe=='Y'||buchstabe=='Q')
    return 1;
else return 0;
}

void ersetzen (char*src)
{char tmp[100]="""";
 int fw=0;
 while (src[fw]!='\0')
    {tmp[fw]=src[fw];fw++;}
    tmp[fw]='\0';
    fw=0;
int fw_mod=0;
while (tmp[fw]!='\0')
    {if (fw%3!=0)
        {fw++;}
    else 
        {src[fw_mod]=tmp[fw];
         fw++;
         fw_mod++;}
    }
src[fw_mod]='\0';
}

int main (int argc,char*argv[])
{char str[100]="""";
int c=1;
int lv_c=0;
int lv_argc=0;
while (c!=argc)
    {while (argv[c][lv_argc]!='\0')
        {if (aussortieren(argv[c][lv_argc])) 
         lv_argc++;
         else
         {str[lv_c]=argv[c][lv_argc];
          lv_c++;
          lv_argc++;}}
    c++;lv_argc=0;}
printf (""x,y,q und X,Y,Q aussortiert: %s\n"",str);
ersetzen(str);
printf (""Der neue String lautet: %s\n"",str);
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
/*
int zaehlen(char* str){
	int counter = 0;
	while(str[counter] != '\0'){
		counter++;
	}
	return counter;
}*/

int main( int argc, char* argv[]){



	char str[100] = """";

	for(int i = 1; i<argc; i++){
		strcat(str, argv[i]);
	}
	printf(""%s\n"", str);


}",0.0,1
79,WS2021,9,Antwort 10,C,Mohamad Anas,Allaham,Gabriel,Ullrich,"#include <stdio.h>
#include <stdlib.h>

int length(char *p)
{
 int i = 0; 
    while (p[i] != '\0')
      i++;
  return i; 
}
 
void ersetzen(char* dest, int zahl, char* src)
{  
  int sizeS = length(src);
  int sizeD = length(dest);
 /*     char temp[sizeS]; 
    for (int i = 0; i <= sizeS-1; i++) 
        temp [i] = src[i];

  for (int i = 0; i <= zahl-1; i++) {
    if (i <= sizeD && i <= sizeS) {
        //dest[i] = temp[i];
        *dest = temp[i]; 

    }
  }*/
  int i = 1;
   while(*src && i <= sizeS && i <= sizeD && i <= zahl) {
    *dest++ = *src++;
    i++;
 }
}

void swap(char* a, char* b){
    char c = *a;
    *a = *b;
    *b = c;
}


void umdrehen( char* str )
{
    if (!*str) 
        return;

    char* i = str;
    char* j = i + length(str) - 1;
    while (i < j) {
        swap(i, j);
        i++;
        j--;
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
void xyqentfernen(char* str1){
	int i;
	int j;
	for ( i = 0,  j = 0;j<100; ++j){
	if ((str1[j] != 'x')&&(str1[j] != 'X')&&(str1[j] != 'y')&&(str1[j] != 'Y')&&(str1[j] != 'q')&&(str1[j] != 'Q'))
	str1[i++] = str1[j];
	
	}
}

void zsmfuegen(char* str1, char* str2){
	int j=0;
	for(;(str2[j])!=('\0');j++){}
	for (int i=0;str1[i]!='\0';i++){
		str2[j+i]=str1[i];
	}	
;}

void neuerstring(char* str1,char* str2){
	for (int i=0;str1[i]!='\0';i++){
		if((i+3)%3==0)str2[((i+3)/3)-1]=str1[i];
	}
}


int main(int argc,char** argv){
	if (argc<2) return 0;
	char zsm[100]="""";
	char neustr[100]="""";
	for(int i=1;i<argc;i++) {
		zsmfuegen(argv[i],zsm);}
		xyqentfernen(zsm);
	neuerstring(zsm,neustr);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",zsm);
	printf(""Der neue String lautet: %s"",neustr);
}",0.0,1
81,WS2021,9,Antwort 10,C,Mohamad Anas,Allaham,Florian Philipp,Meyer,"#include <stdio.h>
#include <stdlib.h>

int length(char *p)
{
 int i = 0; 
    while (p[i] != '\0')
      i++;
  return i; 
}
 
void ersetzen(char* dest, int zahl, char* src)
{  
  int sizeS = length(src);
  int sizeD = length(dest);
 /*     char temp[sizeS]; 
    for (int i = 0; i <= sizeS-1; i++) 
        temp [i] = src[i];

  for (int i = 0; i <= zahl-1; i++) {
    if (i <= sizeD && i <= sizeS) {
        //dest[i] = temp[i];
        *dest = temp[i]; 

    }
  }*/
  int i = 1;
   while(*src && i <= sizeS && i <= sizeD && i <= zahl) {
    *dest++ = *src++;
    i++;
 }
}

void swap(char* a, char* b){
    char c = *a;
    *a = *b;
    *b = c;
}


void umdrehen( char* str )
{
    if (!*str) 
        return;

    char* i = str;
    char* j = i + length(str) - 1;
    while (i < j) {
        swap(i, j);
        i++;
        j--;
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
   for(int i=0; i<zahl && *src!='\0' && *dest!='\0'; i++)
  {
      *dest = *src;
      dest++;
      src++;
  } 
}

void umdrehen( char* str )
{
    char temp[100] = """";
    char* ptemp = temp;
    for(int i=0; str[i]!=0; i++)
        temp[i] = str[i]; 

    while(*ptemp != '\0')
        ptemp++;
    
    ptemp--;
     
    while(*str!='\0')
    {
        *str = *ptemp;       
        ptemp--;
        str++;       
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.0,1
82,WS2021,9,Antwort 10,C,Mohamad Anas,Allaham,Leonhard,Dirks,"#include <stdio.h>
#include <stdlib.h>

int length(char *p)
{
 int i = 0; 
    while (p[i] != '\0')
      i++;
  return i; 
}
 
void ersetzen(char* dest, int zahl, char* src)
{  
  int sizeS = length(src);
  int sizeD = length(dest);
 /*     char temp[sizeS]; 
    for (int i = 0; i <= sizeS-1; i++) 
        temp [i] = src[i];

  for (int i = 0; i <= zahl-1; i++) {
    if (i <= sizeD && i <= sizeS) {
        //dest[i] = temp[i];
        *dest = temp[i]; 

    }
  }*/
  int i = 1;
   while(*src && i <= sizeS && i <= sizeD && i <= zahl) {
    *dest++ = *src++;
    i++;
 }
}

void swap(char* a, char* b){
    char c = *a;
    *a = *b;
    *b = c;
}


void umdrehen( char* str )
{
    if (!*str) 
        return;

    char* i = str;
    char* j = i + length(str) - 1;
    while (i < j) {
        swap(i, j);
        i++;
        j--;
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	int position = 0;
	while(position < zahl && dest[position] != '\0' && src[position] != '\0'){
		dest[position] = src[position];
		position ++;
	}
}

void umdrehen( char* str )
{
	int groesse = 0;
	while(str[groesse] != '\0') groesse++;
	char kopie[groesse];
	for(int i = 0; i < groesse; i++) kopie[i] = str[i];
	for(int i = 0; i < groesse; i++){
		str[i] = kopie[groesse - 1 - i];
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.0,1
83,WS2021,9,Antwort 10,C,Mohamad Anas,Allaham,Annegret Claire,Kruschel,"#include <stdio.h>
#include <stdlib.h>

int length(char *p)
{
 int i = 0; 
    while (p[i] != '\0')
      i++;
  return i; 
}
 
void ersetzen(char* dest, int zahl, char* src)
{  
  int sizeS = length(src);
  int sizeD = length(dest);
 /*     char temp[sizeS]; 
    for (int i = 0; i <= sizeS-1; i++) 
        temp [i] = src[i];

  for (int i = 0; i <= zahl-1; i++) {
    if (i <= sizeD && i <= sizeS) {
        //dest[i] = temp[i];
        *dest = temp[i]; 

    }
  }*/
  int i = 1;
   while(*src && i <= sizeS && i <= sizeD && i <= zahl) {
    *dest++ = *src++;
    i++;
 }
}

void swap(char* a, char* b){
    char c = *a;
    *a = *b;
    *b = c;
}


void umdrehen( char* str )
{
    if (!*str) 
        return;

    char* i = str;
    char* j = i + length(str) - 1;
    while (i < j) {
        swap(i, j);
        i++;
        j--;
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){

char* compactstring = (char*) malloc(400* sizeof(char));
int x = 0;
for(int i=1; i < argc; i++){
	int j = 0;
while(*(argv[i]+j) != '\0'){
if((*(argv[i]+j) != 'x') && (*(argv[i]+j)!= 'y') && (*(argv[i]+j) != 'q')&& (*(argv[i]+j) != 'X')&& (*(argv[i]+j) != 'Y')&& (*(argv[i]+j) != 'Q')){
			*(compactstring+x) = *(argv[i]+j);
			x++;
	}
	j++;
}
}
compactstring = (char*) realloc(compactstring,x+sizeof(char));
int shortendlength=(x+1)/3;
char* shortend = (char*) malloc(shortendlength * sizeof(char));
int y = 0;
for (int i=0;i<x+1;i++){
if((i%3)==0){
	*(shortend+y) = *(compactstring+i);
	y++;
}
}
printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", compactstring,shortend);
}",0.0,1
86,WS2021,9,Antwort 10,C,Mohamad Anas,Allaham,Lucie Chantal,Girod,"#include <stdio.h>
#include <stdlib.h>

int length(char *p)
{
 int i = 0; 
    while (p[i] != '\0')
      i++;
  return i; 
}
 
void ersetzen(char* dest, int zahl, char* src)
{  
  int sizeS = length(src);
  int sizeD = length(dest);
 /*     char temp[sizeS]; 
    for (int i = 0; i <= sizeS-1; i++) 
        temp [i] = src[i];

  for (int i = 0; i <= zahl-1; i++) {
    if (i <= sizeD && i <= sizeS) {
        //dest[i] = temp[i];
        *dest = temp[i]; 

    }
  }*/
  int i = 1;
   while(*src && i <= sizeS && i <= sizeD && i <= zahl) {
    *dest++ = *src++;
    i++;
 }
}

void swap(char* a, char* b){
    char c = *a;
    *a = *b;
    *b = c;
}


void umdrehen( char* str )
{
    if (!*str) 
        return;

    char* i = str;
    char* j = i + length(str) - 1;
    while (i < j) {
        swap(i, j);
        i++;
        j--;
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){
	
	char* text_str = malloc(400* sizeof(char));
	int idx = 0;
	for(int i = 1; i < argc; i++){
		int j = 0;
		while(*(argv[i]+j) != '\0'){
			if((*(argv[i]+j) != 'x') && (*(argv[i]+j) != 'y') && (*(argv[i]+j) != 'q') && (*(argv[i]+j) != 'X') && (*(argv[i]+j) != 'Y') && (*(argv[i]+j) != 'Q')){
			*(text_str+idx) = *(argv[i]+j);
			idx++;
			}
			j++;
		}
	}
	
	text_str = realloc(text_str,idx+1 * sizeof(char));
	int solution_length = (idx+1) / 3;
	char* solution = malloc(solution_length * sizeof(char));
	int count = 0;
	for(int i = 0; i < idx+1; i++){
		if((i % 3) == 0){
			*(solution+count) = *(text_str+i);
			count++;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", text_str, solution);
	
}",0.0,1
88,WS2021,9,Antwort 10,C,Mohamad Anas,Allaham,Moritz,Batilla,"#include <stdio.h>
#include <stdlib.h>

int length(char *p)
{
 int i = 0; 
    while (p[i] != '\0')
      i++;
  return i; 
}
 
void ersetzen(char* dest, int zahl, char* src)
{  
  int sizeS = length(src);
  int sizeD = length(dest);
 /*     char temp[sizeS]; 
    for (int i = 0; i <= sizeS-1; i++) 
        temp [i] = src[i];

  for (int i = 0; i <= zahl-1; i++) {
    if (i <= sizeD && i <= sizeS) {
        //dest[i] = temp[i];
        *dest = temp[i]; 

    }
  }*/
  int i = 1;
   while(*src && i <= sizeS && i <= sizeD && i <= zahl) {
    *dest++ = *src++;
    i++;
 }
}

void swap(char* a, char* b){
    char c = *a;
    *a = *b;
    *b = c;
}


void umdrehen( char* str )
{
    if (!*str) 
        return;

    char* i = str;
    char* j = i + length(str) - 1;
    while (i < j) {
        swap(i, j);
        i++;
        j--;
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    int x;
    for(x = 0; x < zahl && *dest != '\0' && *src != '\0'; x++)
    {
       *dest = *src;
       src++;
       dest++;
    }
}

void umdrehen( char* str )
{
    int y = 0;
    int count = 0;
    int tmp = 0;

    for(count=0; str[count] != 0; count++);
    for(y = 0; y <count/2; y++)
    {
        tmp = str[y];
        str[y]=str[count - 1 - y];
        str[count - 1 - y] = tmp;
    }
    for(y = 0; y < count; y++);
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.0,1
89,WS2021,9,Antwort 10,C,Mohamad Anas,Allaham,Can Mert,Ergin,"#include <stdio.h>
#include <stdlib.h>

int length(char *p)
{
 int i = 0; 
    while (p[i] != '\0')
      i++;
  return i; 
}
 
void ersetzen(char* dest, int zahl, char* src)
{  
  int sizeS = length(src);
  int sizeD = length(dest);
 /*     char temp[sizeS]; 
    for (int i = 0; i <= sizeS-1; i++) 
        temp [i] = src[i];

  for (int i = 0; i <= zahl-1; i++) {
    if (i <= sizeD && i <= sizeS) {
        //dest[i] = temp[i];
        *dest = temp[i]; 

    }
  }*/
  int i = 1;
   while(*src && i <= sizeS && i <= sizeD && i <= zahl) {
    *dest++ = *src++;
    i++;
 }
}

void swap(char* a, char* b){
    char c = *a;
    *a = *b;
    *b = c;
}


void umdrehen( char* str )
{
    if (!*str) 
        return;

    char* i = str;
    char* j = i + length(str) - 1;
    while (i < j) {
        swap(i, j);
        i++;
        j--;
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>

int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}",0.0,1
90,WS2021,9,Antwort 10,C,Mohamad Anas,Allaham,Daniel,Grönefeld,"#include <stdio.h>
#include <stdlib.h>

int length(char *p)
{
 int i = 0; 
    while (p[i] != '\0')
      i++;
  return i; 
}
 
void ersetzen(char* dest, int zahl, char* src)
{  
  int sizeS = length(src);
  int sizeD = length(dest);
 /*     char temp[sizeS]; 
    for (int i = 0; i <= sizeS-1; i++) 
        temp [i] = src[i];

  for (int i = 0; i <= zahl-1; i++) {
    if (i <= sizeD && i <= sizeS) {
        //dest[i] = temp[i];
        *dest = temp[i]; 

    }
  }*/
  int i = 1;
   while(*src && i <= sizeS && i <= sizeD && i <= zahl) {
    *dest++ = *src++;
    i++;
 }
}

void swap(char* a, char* b){
    char c = *a;
    *a = *b;
    *b = c;
}


void umdrehen( char* str )
{
    if (!*str) 
        return;

    char* i = str;
    char* j = i + length(str) - 1;
    while (i < j) {
        swap(i, j);
        i++;
        j--;
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{  
	for(int i = 0; src[i] != '\0' && dest[i] != '\0' && i < zahl; i++){
		dest[i] = src[i];
	}
}

void umdrehen( char* str)
{
	int length_str = 0;
	for( int i = 0; str[i] != '\0'; i++)
		length_str = i;
	char temp_string[length_str];
	for( int i = 0; i <= length_str; i++)
		temp_string[i] = str[length_str-i];
	for( int i = 0; i <= length_str; i++)
		str[i] = temp_string[i];
}

int main( int argc, char* argv[] )
{  
  char test[11] = ""0123456789"";
  printf( ""Das Original ist: %s \n"", test);
  ersetzen(test , atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test);
  umdrehen( test );	
  printf( ""Rückwärts : %s \n"", test );
}",0.0,1
92,WS2021,9,Antwort 10,C,Mohamad Anas,Allaham,Catalina,Florez Vargas,"#include <stdio.h>
#include <stdlib.h>

int length(char *p)
{
 int i = 0; 
    while (p[i] != '\0')
      i++;
  return i; 
}
 
void ersetzen(char* dest, int zahl, char* src)
{  
  int sizeS = length(src);
  int sizeD = length(dest);
 /*     char temp[sizeS]; 
    for (int i = 0; i <= sizeS-1; i++) 
        temp [i] = src[i];

  for (int i = 0; i <= zahl-1; i++) {
    if (i <= sizeD && i <= sizeS) {
        //dest[i] = temp[i];
        *dest = temp[i]; 

    }
  }*/
  int i = 1;
   while(*src && i <= sizeS && i <= sizeD && i <= zahl) {
    *dest++ = *src++;
    i++;
 }
}

void swap(char* a, char* b){
    char c = *a;
    *a = *b;
    *b = c;
}


void umdrehen( char* str )
{
    if (!*str) 
        return;

    char* i = str;
    char* j = i + length(str) - 1;
    while (i < j) {
        swap(i, j);
        i++;
        j--;
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>

int main(int argc, char *argv[])

{
    int u;
    int f = 0;
    char neu[20];
    char nueva[15];
    int x = 0;
    for (int i = 1; i < argc; i++)
    {
        u = 0;
        while ((argv[i][u]) != '\0')
        {
            if (argv[i][u] != 'x' && argv[i][u] != 'y' && argv[i][u] != 'q' && argv[i][u] != 'X' && argv[i][u] != 'Y' && argv[i][u] != 'Q')
            {
                neu[f] = argv[i][u];
                f++;
            }
            u++;
        }
    }

    for (int i = 0; i <= f; i++)
    {
        if (x > (i / 3) || i == 0)
        {
            if (i == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
            if (((i) % 3) == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
        }
    }

    printf(""x,y,q und X,Y,Q aussortiert: "");
    for (int i = 0; i < f; i++)
        if (neu[i] != '\0')
        {
            printf(""%c"", neu[i]);
        }

    printf(""\n"");

     printf(""Der neue String lautet: "");
    for (int i = 1; i < (f / 2)-1; i++)
            printf(""%c"", nueva[i]);
    if (neu[0] == 'z')
        printf(""z"");
}",0.0,1
93,WS2021,9,Antwort 10,C,Mohamad Anas,Allaham,Sandro,Paluteder,"#include <stdio.h>
#include <stdlib.h>

int length(char *p)
{
 int i = 0; 
    while (p[i] != '\0')
      i++;
  return i; 
}
 
void ersetzen(char* dest, int zahl, char* src)
{  
  int sizeS = length(src);
  int sizeD = length(dest);
 /*     char temp[sizeS]; 
    for (int i = 0; i <= sizeS-1; i++) 
        temp [i] = src[i];

  for (int i = 0; i <= zahl-1; i++) {
    if (i <= sizeD && i <= sizeS) {
        //dest[i] = temp[i];
        *dest = temp[i]; 

    }
  }*/
  int i = 1;
   while(*src && i <= sizeS && i <= sizeD && i <= zahl) {
    *dest++ = *src++;
    i++;
 }
}

void swap(char* a, char* b){
    char c = *a;
    *a = *b;
    *b = c;
}


void umdrehen( char* str )
{
    if (!*str) 
        return;

    char* i = str;
    char* j = i + length(str) - 1;
    while (i < j) {
        swap(i, j);
        i++;
        j--;
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[])
{   
     // char *argv[] is a array of strings, each command line arguments
    // int argc is the amount of command line arguments
    
    //loop through all command line arguements. First command line argument is always taken by default so we start at 1.
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
  
        
        //printf(""Current 2 %c \n"",CurrentCommandString[0]);
       
        //int LengthOfString = sizeof(CurrentCommandString) / sizeof(char*);
        
        //printf(""Current Size %i \n"",LengthOfString);
        
        int i = 0;
        while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
            if (CurrentCommandString[i] == 'x' 
             || CurrentCommandString[i] == 'y' 
             || CurrentCommandString[i] == 'q'
             || CurrentCommandString[i] == 'X'
             || CurrentCommandString[i] == 'Y' 
             || CurrentCommandString[i] == 'Q')
             {   
                 int j = i;
                 while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
                    CurrentCommandString[j] = CurrentCommandString[j + 1]; 
                    ++j; 
                 }
             }
            ++i;
         }
        
        
        //printf(""x,y,q und X,Y,Q aussortiert TEST 1: %s \n"", argv[kk]);
    }
    
    char StringXYQRemoved[5000];
    int StringXYQRemovedIndex = 0;
       
    char StringThirdRemoved[5000];
    int StringThirdRemovedIndex = 0;
    
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
        
        
        //String 1 
        
        int length, j;
        
          // store length of s1 in the length variable
          length = 0;
          while (StringXYQRemoved[length] != '\0' && StringXYQRemoved[length] != ' ') {
            ++length;
          }
        
          // concatenate s2 to s1
          for (j = 0; CurrentCommandString[j] != '\0' && CurrentCommandString[length] != ' '; ++j, ++length) {
            StringXYQRemoved[length] = CurrentCommandString[j];
          }
        
          // terminating the s1 string
          StringXYQRemoved[length] = '\0';       
    }
    
    
    
        //String2
        int length, j;
        // store length of s1 in the length variable
        length = 0;
        while (StringThirdRemoved[length] != '\0' && StringThirdRemoved[length] != ' ') {
        ++length;
        }
        
        // concatenate s2 to s1
        for (j = 0; StringXYQRemoved[j] != '\0' && StringXYQRemoved[length] != ' '; ++length) {
         StringThirdRemoved[length] = StringXYQRemoved[j];
         
         //printf(""WTFFFF %c \n"",StringXYQRemoved[j]);
         j+=3;
        }
        
        // terminating the s1 string
        StringThirdRemoved[length] = '\0';       
        
    printf(""x,y,q und X,Y,Q aussortiert: %s \n"", StringXYQRemoved);
    printf(""Der neue String lautet: %s"", StringThirdRemoved);
    
}",0.0,1
94,WS2021,9,Antwort 10,C,Mohamad Anas,Allaham,Jonas,Bestgen,"#include <stdio.h>
#include <stdlib.h>

int length(char *p)
{
 int i = 0; 
    while (p[i] != '\0')
      i++;
  return i; 
}
 
void ersetzen(char* dest, int zahl, char* src)
{  
  int sizeS = length(src);
  int sizeD = length(dest);
 /*     char temp[sizeS]; 
    for (int i = 0; i <= sizeS-1; i++) 
        temp [i] = src[i];

  for (int i = 0; i <= zahl-1; i++) {
    if (i <= sizeD && i <= sizeS) {
        //dest[i] = temp[i];
        *dest = temp[i]; 

    }
  }*/
  int i = 1;
   while(*src && i <= sizeS && i <= sizeD && i <= zahl) {
    *dest++ = *src++;
    i++;
 }
}

void swap(char* a, char* b){
    char c = *a;
    *a = *b;
    *b = c;
}


void umdrehen( char* str )
{
    if (!*str) 
        return;

    char* i = str;
    char* j = i + length(str) - 1;
    while (i < j) {
        swap(i, j);
        i++;
        j--;
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
	for (int i=0;((i<zahl)&&((dest[i])!=('\0')))&&((src[i])!=('\0'));i++)
dest[i]=src[i];

	
}

void umdrehen( char* str )
{	char temp[30]="""";
	int i=0;
	for(;(str[i+1])!=('\0');i++){}
	for(int j=0;(str[j])!=('\0');j++) {temp[j]=str[i-j];}
	for(int j=0;(str[j])!=('\0');j++) {str[j]=temp[(j)];}
	
}

int main( int argc, char* argv[] )
{
	char test[11]= ""0123456789"";
	printf( ""Das Original ist: %s \n"", test );
	ersetzen( test , atoi(argv[1]), argv[2] );
	printf( ""Ersetzt : %s \n"", test );
	umdrehen( test );
	printf( ""Rückwärts : %s \n"", test );
}",0.0,1
95,WS2021,9,Antwort 10,C,Mohamad Anas,Allaham,Constanze Cosima,Freier,"#include <stdio.h>
#include <stdlib.h>

int length(char *p)
{
 int i = 0; 
    while (p[i] != '\0')
      i++;
  return i; 
}
 
void ersetzen(char* dest, int zahl, char* src)
{  
  int sizeS = length(src);
  int sizeD = length(dest);
 /*     char temp[sizeS]; 
    for (int i = 0; i <= sizeS-1; i++) 
        temp [i] = src[i];

  for (int i = 0; i <= zahl-1; i++) {
    if (i <= sizeD && i <= sizeS) {
        //dest[i] = temp[i];
        *dest = temp[i]; 

    }
  }*/
  int i = 1;
   while(*src && i <= sizeS && i <= sizeD && i <= zahl) {
    *dest++ = *src++;
    i++;
 }
}

void swap(char* a, char* b){
    char c = *a;
    *a = *b;
    *b = c;
}


void umdrehen( char* str )
{
    if (!*str) 
        return;

    char* i = str;
    char* j = i + length(str) - 1;
    while (i < j) {
        swap(i, j);
        i++;
        j--;
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdlib.h>
#include <stdio.h>
int Laenge(char *str)
{
    int size = 0;
    for (int j = 0; str[j] != '\0'; j++)
    {
        size += 1;
    }
    return size;
}

int Kopieren(char *dest, char *src)
{
    int i = 0;
    int j = 0;
    while (src[i] != '\0')
    {
        if (src[i] != 'q' && src[i] != 'x' && src[i] != 'y' && src[i] != 'Q' && src[i] != 'X' && src[i] != 'Y')
        {
            dest[j++] = src[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int Entfernen(char *Eingabe)
{
    int i = 0;
    int j = 0;
    while (Eingabe[i] != '\0')
    {
        if (i % 3 == 0)
        {
            Eingabe[j++] = Eingabe[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int main(int argc, char *argv[])
{
    int Gesamtlaenge = 0;
    for (int i = 1; i < argc; i++)
    {
        Gesamtlaenge += Laenge(argv[i]);
    }
    char Ausgabe[Gesamtlaenge + 1];
    char *Ziel = Ausgabe;
    for (int i = 1; i < argc; i++)
    {
        Ziel += Kopieren(Ziel, argv[i]);
    }
    *Ziel = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", Ausgabe);
    Ausgabe[Entfernen(Ausgabe)] = '\0';
    printf(""Der neue String lautet: %s\n"", Ausgabe);
}",0.0,1
97,WS2021,9,Antwort 10,C,Mohamad Anas,Allaham,Caspar Valentin,Zell,"#include <stdio.h>
#include <stdlib.h>

int length(char *p)
{
 int i = 0; 
    while (p[i] != '\0')
      i++;
  return i; 
}
 
void ersetzen(char* dest, int zahl, char* src)
{  
  int sizeS = length(src);
  int sizeD = length(dest);
 /*     char temp[sizeS]; 
    for (int i = 0; i <= sizeS-1; i++) 
        temp [i] = src[i];

  for (int i = 0; i <= zahl-1; i++) {
    if (i <= sizeD && i <= sizeS) {
        //dest[i] = temp[i];
        *dest = temp[i]; 

    }
  }*/
  int i = 1;
   while(*src && i <= sizeS && i <= sizeD && i <= zahl) {
    *dest++ = *src++;
    i++;
 }
}

void swap(char* a, char* b){
    char c = *a;
    *a = *b;
    *b = c;
}


void umdrehen( char* str )
{
    if (!*str) 
        return;

    char* i = str;
    char* j = i + length(str) - 1;
    while (i < j) {
        swap(i, j);
        i++;
        j--;
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0;(i < zahl) && (i < 10) && (src[i] != '\0'); i++)
    {
        dest[i] = src[i];
    }
}

void umdrehen(char* str )
{
    int size;
    for (int j = 1; str[j] != '\0'; j++)
    {
        size = j + 2;
    }
    char Kopie[size];
    for (int i = 0; i < (size - 1); i++)
    {
        Kopie[size - 2- i] = str[i];
    }
    for (int i = 0; i < size; i++)
    {
        str[i] = Kopie[i];
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen(test, atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.0,1
98,WS2021,9,Antwort 10,C,Mohamad Anas,Allaham,Jakob,Kühl,"#include <stdio.h>
#include <stdlib.h>

int length(char *p)
{
 int i = 0; 
    while (p[i] != '\0')
      i++;
  return i; 
}
 
void ersetzen(char* dest, int zahl, char* src)
{  
  int sizeS = length(src);
  int sizeD = length(dest);
 /*     char temp[sizeS]; 
    for (int i = 0; i <= sizeS-1; i++) 
        temp [i] = src[i];

  for (int i = 0; i <= zahl-1; i++) {
    if (i <= sizeD && i <= sizeS) {
        //dest[i] = temp[i];
        *dest = temp[i]; 

    }
  }*/
  int i = 1;
   while(*src && i <= sizeS && i <= sizeD && i <= zahl) {
    *dest++ = *src++;
    i++;
 }
}

void swap(char* a, char* b){
    char c = *a;
    *a = *b;
    *b = c;
}


void umdrehen( char* str )
{
    if (!*str) 
        return;

    char* i = str;
    char* j = i + length(str) - 1;
    while (i < j) {
        swap(i, j);
        i++;
        j--;
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include<stdio.h>

int main(int argc, char* argv[]){
	char a[100]= """";
	char b[100]="""";
	int x=0;
	for(int i=1 ;i<argc ;i++){
		for (int j=0; argv[i][j] != '\0'; j++){
			if(argv[i][j]== 'x' || argv[i][j]== 'y' || argv[i][j]== 'q' || argv[i][j]== 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q') continue;
			else {
				a[x]=argv[i][j];
				x+=1;
			}
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", a);
	int y=0;
	for(int i=0; i<100; i+=3){
		b[y]=a[i];
		y++;
	}
	printf(""Der neue String lautet: %s\n"", b);
}",0.0,1
99,WS2021,9,Antwort 10,C,Mohamad Anas,Allaham,Niklas,Mohr,"#include <stdio.h>
#include <stdlib.h>

int length(char *p)
{
 int i = 0; 
    while (p[i] != '\0')
      i++;
  return i; 
}
 
void ersetzen(char* dest, int zahl, char* src)
{  
  int sizeS = length(src);
  int sizeD = length(dest);
 /*     char temp[sizeS]; 
    for (int i = 0; i <= sizeS-1; i++) 
        temp [i] = src[i];

  for (int i = 0; i <= zahl-1; i++) {
    if (i <= sizeD && i <= sizeS) {
        //dest[i] = temp[i];
        *dest = temp[i]; 

    }
  }*/
  int i = 1;
   while(*src && i <= sizeS && i <= sizeD && i <= zahl) {
    *dest++ = *src++;
    i++;
 }
}

void swap(char* a, char* b){
    char c = *a;
    *a = *b;
    *b = c;
}


void umdrehen( char* str )
{
    if (!*str) 
        return;

    char* i = str;
    char* j = i + length(str) - 1;
    while (i < j) {
        swap(i, j);
        i++;
        j--;
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

void aussortieren(char* str)
{
    int t = 0;
    char temp[50];
    for(int i = 0; str[i] != '\0'; i++)
    {
        int t = 0;
        char temp[50];
        if(str[i] == 'x'|| str[i] == 'y'|| str[i] == 'q');
        else if(str[i] == 'X'|| str[i] == 'Y'|| str[i] == 'Q');
        else 
        {
            temp[t] = str[i];
            t++;
        }
    }
    str = &temp;
}


char* sortieren(int länge, char* str[])
{
    int t = 0;
    char temp[200];
    for(int i = 0; i < länge; i++)
    {
        for(int a = 0; a != '\0'; a++)
        {
            temp[t] = str[i+1][a];
            t++;
        }
    }
}   


int main( int argc, char* argv[] )
{  
    int length = sizeof(argv) - 1;
    for(int i = 1; i <= length; i++)
    {
        aussortieren(argv[i]);
    }
    char zusammen = sortieren(length, argv);
    printf(""x,y,q und X,Y,Q aussortiert: %s"", zusammen); 
}",0.0,1
100,WS2021,9,Antwort 10,C,Mohamad Anas,Allaham,Tammo Hendrik,Nie,"#include <stdio.h>
#include <stdlib.h>

int length(char *p)
{
 int i = 0; 
    while (p[i] != '\0')
      i++;
  return i; 
}
 
void ersetzen(char* dest, int zahl, char* src)
{  
  int sizeS = length(src);
  int sizeD = length(dest);
 /*     char temp[sizeS]; 
    for (int i = 0; i <= sizeS-1; i++) 
        temp [i] = src[i];

  for (int i = 0; i <= zahl-1; i++) {
    if (i <= sizeD && i <= sizeS) {
        //dest[i] = temp[i];
        *dest = temp[i]; 

    }
  }*/
  int i = 1;
   while(*src && i <= sizeS && i <= sizeD && i <= zahl) {
    *dest++ = *src++;
    i++;
 }
}

void swap(char* a, char* b){
    char c = *a;
    *a = *b;
    *b = c;
}


void umdrehen( char* str )
{
    if (!*str) 
        return;

    char* i = str;
    char* j = i + length(str) - 1;
    while (i < j) {
        swap(i, j);
        i++;
        j--;
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
 
int main(int argc, char* argv[52])
{
   //aneinanderhängen

   int zahl = 0;
   int* p_zahl = &zahl;
   int counter = 1;
   int* p_counter = &counter;
   char str[30];
   for(int i = 0; i < argc-1 ; i++)
   {
      for(int j = 0; argv[counter][j] != '\0'; j++)
      {
         str[zahl] = argv[counter][j];
         *p_zahl += 1;
         
      }
      *p_counter += 1;
   }
   str[zahl+1] = '\0';

   int nummer = 0;
   int* p_nummer = &nummer;
   char str2[25];
   for(int i = 0; ; i++)
   {
      if((str[i] != 'x') && (str[i] != 'y') && (str[i] != 'q') && (str[i] != 'X') && (str[i] != 'Y') && (str[i] != 'Q'))
      {
         
         str2[nummer] = str[i];
         if(str[i] == '\0') break;
         *p_nummer += 1;
      }
   }

   //jedes dritte in str3
   char str3[35];
   for(int i = 0; i < 57; i +=3)
   {
      //if((str2[i] == '\0')) break;
      str3[i/3] = str2[i];  
      str3[i/3+1] = '\0'  ;
   }
   //drucken:

   printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str2, str3);
}",0.0,1
101,WS2021,9,Antwort 10,C,Mohamad Anas,Allaham,Sören Sven,Werner,"#include <stdio.h>
#include <stdlib.h>

int length(char *p)
{
 int i = 0; 
    while (p[i] != '\0')
      i++;
  return i; 
}
 
void ersetzen(char* dest, int zahl, char* src)
{  
  int sizeS = length(src);
  int sizeD = length(dest);
 /*     char temp[sizeS]; 
    for (int i = 0; i <= sizeS-1; i++) 
        temp [i] = src[i];

  for (int i = 0; i <= zahl-1; i++) {
    if (i <= sizeD && i <= sizeS) {
        //dest[i] = temp[i];
        *dest = temp[i]; 

    }
  }*/
  int i = 1;
   while(*src && i <= sizeS && i <= sizeD && i <= zahl) {
    *dest++ = *src++;
    i++;
 }
}

void swap(char* a, char* b){
    char c = *a;
    *a = *b;
    *b = c;
}


void umdrehen( char* str )
{
    if (!*str) 
        return;

    char* i = str;
    char* j = i + length(str) - 1;
    while (i < j) {
        swap(i, j);
        i++;
        j--;
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
/*
int zaehlen(char* str){
	int counter = 0;
	while(str[counter] != '\0'){
		counter++;
	}
	return counter;
}*/

int main( int argc, char* argv[]){



	char str[100] = """";

	for(int i = 1; i<argc; i++){
		strcat(str, argv[i]);
	}
	printf(""%s\n"", str);


}",0.0,1
120,WS2021,9,Antwort 10,C,Gabriel,Ullrich,Florian Philipp,Meyer,"#include <stdio.h>
void xyqentfernen(char* str1){
	int i;
	int j;
	for ( i = 0,  j = 0;j<100; ++j){
	if ((str1[j] != 'x')&&(str1[j] != 'X')&&(str1[j] != 'y')&&(str1[j] != 'Y')&&(str1[j] != 'q')&&(str1[j] != 'Q'))
	str1[i++] = str1[j];
	
	}
}

void zsmfuegen(char* str1, char* str2){
	int j=0;
	for(;(str2[j])!=('\0');j++){}
	for (int i=0;str1[i]!='\0';i++){
		str2[j+i]=str1[i];
	}	
;}

void neuerstring(char* str1,char* str2){
	for (int i=0;str1[i]!='\0';i++){
		if((i+3)%3==0)str2[((i+3)/3)-1]=str1[i];
	}
}


int main(int argc,char** argv){
	if (argc<2) return 0;
	char zsm[100]="""";
	char neustr[100]="""";
	for(int i=1;i<argc;i++) {
		zsmfuegen(argv[i],zsm);}
		xyqentfernen(zsm);
	neuerstring(zsm,neustr);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",zsm);
	printf(""Der neue String lautet: %s"",neustr);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
   for(int i=0; i<zahl && *src!='\0' && *dest!='\0'; i++)
  {
      *dest = *src;
      dest++;
      src++;
  } 
}

void umdrehen( char* str )
{
    char temp[100] = """";
    char* ptemp = temp;
    for(int i=0; str[i]!=0; i++)
        temp[i] = str[i]; 

    while(*ptemp != '\0')
        ptemp++;
    
    ptemp--;
     
    while(*str!='\0')
    {
        *str = *ptemp;       
        ptemp--;
        str++;       
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.0,1
121,WS2021,9,Antwort 10,C,Gabriel,Ullrich,Leonhard,Dirks,"#include <stdio.h>
void xyqentfernen(char* str1){
	int i;
	int j;
	for ( i = 0,  j = 0;j<100; ++j){
	if ((str1[j] != 'x')&&(str1[j] != 'X')&&(str1[j] != 'y')&&(str1[j] != 'Y')&&(str1[j] != 'q')&&(str1[j] != 'Q'))
	str1[i++] = str1[j];
	
	}
}

void zsmfuegen(char* str1, char* str2){
	int j=0;
	for(;(str2[j])!=('\0');j++){}
	for (int i=0;str1[i]!='\0';i++){
		str2[j+i]=str1[i];
	}	
;}

void neuerstring(char* str1,char* str2){
	for (int i=0;str1[i]!='\0';i++){
		if((i+3)%3==0)str2[((i+3)/3)-1]=str1[i];
	}
}


int main(int argc,char** argv){
	if (argc<2) return 0;
	char zsm[100]="""";
	char neustr[100]="""";
	for(int i=1;i<argc;i++) {
		zsmfuegen(argv[i],zsm);}
		xyqentfernen(zsm);
	neuerstring(zsm,neustr);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",zsm);
	printf(""Der neue String lautet: %s"",neustr);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	int position = 0;
	while(position < zahl && dest[position] != '\0' && src[position] != '\0'){
		dest[position] = src[position];
		position ++;
	}
}

void umdrehen( char* str )
{
	int groesse = 0;
	while(str[groesse] != '\0') groesse++;
	char kopie[groesse];
	for(int i = 0; i < groesse; i++) kopie[i] = str[i];
	for(int i = 0; i < groesse; i++){
		str[i] = kopie[groesse - 1 - i];
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.0,1
122,WS2021,9,Antwort 10,C,Gabriel,Ullrich,Annegret Claire,Kruschel,"#include <stdio.h>
void xyqentfernen(char* str1){
	int i;
	int j;
	for ( i = 0,  j = 0;j<100; ++j){
	if ((str1[j] != 'x')&&(str1[j] != 'X')&&(str1[j] != 'y')&&(str1[j] != 'Y')&&(str1[j] != 'q')&&(str1[j] != 'Q'))
	str1[i++] = str1[j];
	
	}
}

void zsmfuegen(char* str1, char* str2){
	int j=0;
	for(;(str2[j])!=('\0');j++){}
	for (int i=0;str1[i]!='\0';i++){
		str2[j+i]=str1[i];
	}	
;}

void neuerstring(char* str1,char* str2){
	for (int i=0;str1[i]!='\0';i++){
		if((i+3)%3==0)str2[((i+3)/3)-1]=str1[i];
	}
}


int main(int argc,char** argv){
	if (argc<2) return 0;
	char zsm[100]="""";
	char neustr[100]="""";
	for(int i=1;i<argc;i++) {
		zsmfuegen(argv[i],zsm);}
		xyqentfernen(zsm);
	neuerstring(zsm,neustr);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",zsm);
	printf(""Der neue String lautet: %s"",neustr);
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){

char* compactstring = (char*) malloc(400* sizeof(char));
int x = 0;
for(int i=1; i < argc; i++){
	int j = 0;
while(*(argv[i]+j) != '\0'){
if((*(argv[i]+j) != 'x') && (*(argv[i]+j)!= 'y') && (*(argv[i]+j) != 'q')&& (*(argv[i]+j) != 'X')&& (*(argv[i]+j) != 'Y')&& (*(argv[i]+j) != 'Q')){
			*(compactstring+x) = *(argv[i]+j);
			x++;
	}
	j++;
}
}
compactstring = (char*) realloc(compactstring,x+sizeof(char));
int shortendlength=(x+1)/3;
char* shortend = (char*) malloc(shortendlength * sizeof(char));
int y = 0;
for (int i=0;i<x+1;i++){
if((i%3)==0){
	*(shortend+y) = *(compactstring+i);
	y++;
}
}
printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", compactstring,shortend);
}",0.0,1
125,WS2021,9,Antwort 10,C,Gabriel,Ullrich,Lucie Chantal,Girod,"#include <stdio.h>
void xyqentfernen(char* str1){
	int i;
	int j;
	for ( i = 0,  j = 0;j<100; ++j){
	if ((str1[j] != 'x')&&(str1[j] != 'X')&&(str1[j] != 'y')&&(str1[j] != 'Y')&&(str1[j] != 'q')&&(str1[j] != 'Q'))
	str1[i++] = str1[j];
	
	}
}

void zsmfuegen(char* str1, char* str2){
	int j=0;
	for(;(str2[j])!=('\0');j++){}
	for (int i=0;str1[i]!='\0';i++){
		str2[j+i]=str1[i];
	}	
;}

void neuerstring(char* str1,char* str2){
	for (int i=0;str1[i]!='\0';i++){
		if((i+3)%3==0)str2[((i+3)/3)-1]=str1[i];
	}
}


int main(int argc,char** argv){
	if (argc<2) return 0;
	char zsm[100]="""";
	char neustr[100]="""";
	for(int i=1;i<argc;i++) {
		zsmfuegen(argv[i],zsm);}
		xyqentfernen(zsm);
	neuerstring(zsm,neustr);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",zsm);
	printf(""Der neue String lautet: %s"",neustr);
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){
	
	char* text_str = malloc(400* sizeof(char));
	int idx = 0;
	for(int i = 1; i < argc; i++){
		int j = 0;
		while(*(argv[i]+j) != '\0'){
			if((*(argv[i]+j) != 'x') && (*(argv[i]+j) != 'y') && (*(argv[i]+j) != 'q') && (*(argv[i]+j) != 'X') && (*(argv[i]+j) != 'Y') && (*(argv[i]+j) != 'Q')){
			*(text_str+idx) = *(argv[i]+j);
			idx++;
			}
			j++;
		}
	}
	
	text_str = realloc(text_str,idx+1 * sizeof(char));
	int solution_length = (idx+1) / 3;
	char* solution = malloc(solution_length * sizeof(char));
	int count = 0;
	for(int i = 0; i < idx+1; i++){
		if((i % 3) == 0){
			*(solution+count) = *(text_str+i);
			count++;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", text_str, solution);
	
}",0.1756272401,0
127,WS2021,9,Antwort 10,C,Gabriel,Ullrich,Moritz,Batilla,"#include <stdio.h>
void xyqentfernen(char* str1){
	int i;
	int j;
	for ( i = 0,  j = 0;j<100; ++j){
	if ((str1[j] != 'x')&&(str1[j] != 'X')&&(str1[j] != 'y')&&(str1[j] != 'Y')&&(str1[j] != 'q')&&(str1[j] != 'Q'))
	str1[i++] = str1[j];
	
	}
}

void zsmfuegen(char* str1, char* str2){
	int j=0;
	for(;(str2[j])!=('\0');j++){}
	for (int i=0;str1[i]!='\0';i++){
		str2[j+i]=str1[i];
	}	
;}

void neuerstring(char* str1,char* str2){
	for (int i=0;str1[i]!='\0';i++){
		if((i+3)%3==0)str2[((i+3)/3)-1]=str1[i];
	}
}


int main(int argc,char** argv){
	if (argc<2) return 0;
	char zsm[100]="""";
	char neustr[100]="""";
	for(int i=1;i<argc;i++) {
		zsmfuegen(argv[i],zsm);}
		xyqentfernen(zsm);
	neuerstring(zsm,neustr);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",zsm);
	printf(""Der neue String lautet: %s"",neustr);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    int x;
    for(x = 0; x < zahl && *dest != '\0' && *src != '\0'; x++)
    {
       *dest = *src;
       src++;
       dest++;
    }
}

void umdrehen( char* str )
{
    int y = 0;
    int count = 0;
    int tmp = 0;

    for(count=0; str[count] != 0; count++);
    for(y = 0; y <count/2; y++)
    {
        tmp = str[y];
        str[y]=str[count - 1 - y];
        str[count - 1 - y] = tmp;
    }
    for(y = 0; y < count; y++);
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.1298857486,0
128,WS2021,9,Antwort 10,C,Gabriel,Ullrich,Can Mert,Ergin,"#include <stdio.h>
void xyqentfernen(char* str1){
	int i;
	int j;
	for ( i = 0,  j = 0;j<100; ++j){
	if ((str1[j] != 'x')&&(str1[j] != 'X')&&(str1[j] != 'y')&&(str1[j] != 'Y')&&(str1[j] != 'q')&&(str1[j] != 'Q'))
	str1[i++] = str1[j];
	
	}
}

void zsmfuegen(char* str1, char* str2){
	int j=0;
	for(;(str2[j])!=('\0');j++){}
	for (int i=0;str1[i]!='\0';i++){
		str2[j+i]=str1[i];
	}	
;}

void neuerstring(char* str1,char* str2){
	for (int i=0;str1[i]!='\0';i++){
		if((i+3)%3==0)str2[((i+3)/3)-1]=str1[i];
	}
}


int main(int argc,char** argv){
	if (argc<2) return 0;
	char zsm[100]="""";
	char neustr[100]="""";
	for(int i=1;i<argc;i++) {
		zsmfuegen(argv[i],zsm);}
		xyqentfernen(zsm);
	neuerstring(zsm,neustr);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",zsm);
	printf(""Der neue String lautet: %s"",neustr);
}","#include <stdio.h>

int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}",0.2073813708,0
129,WS2021,9,Antwort 10,C,Gabriel,Ullrich,Daniel,Grönefeld,"#include <stdio.h>
void xyqentfernen(char* str1){
	int i;
	int j;
	for ( i = 0,  j = 0;j<100; ++j){
	if ((str1[j] != 'x')&&(str1[j] != 'X')&&(str1[j] != 'y')&&(str1[j] != 'Y')&&(str1[j] != 'q')&&(str1[j] != 'Q'))
	str1[i++] = str1[j];
	
	}
}

void zsmfuegen(char* str1, char* str2){
	int j=0;
	for(;(str2[j])!=('\0');j++){}
	for (int i=0;str1[i]!='\0';i++){
		str2[j+i]=str1[i];
	}	
;}

void neuerstring(char* str1,char* str2){
	for (int i=0;str1[i]!='\0';i++){
		if((i+3)%3==0)str2[((i+3)/3)-1]=str1[i];
	}
}


int main(int argc,char** argv){
	if (argc<2) return 0;
	char zsm[100]="""";
	char neustr[100]="""";
	for(int i=1;i<argc;i++) {
		zsmfuegen(argv[i],zsm);}
		xyqentfernen(zsm);
	neuerstring(zsm,neustr);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",zsm);
	printf(""Der neue String lautet: %s"",neustr);
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{  
	for(int i = 0; src[i] != '\0' && dest[i] != '\0' && i < zahl; i++){
		dest[i] = src[i];
	}
}

void umdrehen( char* str)
{
	int length_str = 0;
	for( int i = 0; str[i] != '\0'; i++)
		length_str = i;
	char temp_string[length_str];
	for( int i = 0; i <= length_str; i++)
		temp_string[i] = str[length_str-i];
	for( int i = 0; i <= length_str; i++)
		str[i] = temp_string[i];
}

int main( int argc, char* argv[] )
{  
  char test[11] = ""0123456789"";
  printf( ""Das Original ist: %s \n"", test);
  ersetzen(test , atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test);
  umdrehen( test );	
  printf( ""Rückwärts : %s \n"", test );
}",0.139184953,0
131,WS2021,9,Antwort 10,C,Gabriel,Ullrich,Catalina,Florez Vargas,"#include <stdio.h>
void xyqentfernen(char* str1){
	int i;
	int j;
	for ( i = 0,  j = 0;j<100; ++j){
	if ((str1[j] != 'x')&&(str1[j] != 'X')&&(str1[j] != 'y')&&(str1[j] != 'Y')&&(str1[j] != 'q')&&(str1[j] != 'Q'))
	str1[i++] = str1[j];
	
	}
}

void zsmfuegen(char* str1, char* str2){
	int j=0;
	for(;(str2[j])!=('\0');j++){}
	for (int i=0;str1[i]!='\0';i++){
		str2[j+i]=str1[i];
	}	
;}

void neuerstring(char* str1,char* str2){
	for (int i=0;str1[i]!='\0';i++){
		if((i+3)%3==0)str2[((i+3)/3)-1]=str1[i];
	}
}


int main(int argc,char** argv){
	if (argc<2) return 0;
	char zsm[100]="""";
	char neustr[100]="""";
	for(int i=1;i<argc;i++) {
		zsmfuegen(argv[i],zsm);}
		xyqentfernen(zsm);
	neuerstring(zsm,neustr);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",zsm);
	printf(""Der neue String lautet: %s"",neustr);
}","#include <stdio.h>

int main(int argc, char *argv[])

{
    int u;
    int f = 0;
    char neu[20];
    char nueva[15];
    int x = 0;
    for (int i = 1; i < argc; i++)
    {
        u = 0;
        while ((argv[i][u]) != '\0')
        {
            if (argv[i][u] != 'x' && argv[i][u] != 'y' && argv[i][u] != 'q' && argv[i][u] != 'X' && argv[i][u] != 'Y' && argv[i][u] != 'Q')
            {
                neu[f] = argv[i][u];
                f++;
            }
            u++;
        }
    }

    for (int i = 0; i <= f; i++)
    {
        if (x > (i / 3) || i == 0)
        {
            if (i == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
            if (((i) % 3) == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
        }
    }

    printf(""x,y,q und X,Y,Q aussortiert: "");
    for (int i = 0; i < f; i++)
        if (neu[i] != '\0')
        {
            printf(""%c"", neu[i]);
        }

    printf(""\n"");

     printf(""Der neue String lautet: "");
    for (int i = 1; i < (f / 2)-1; i++)
            printf(""%c"", nueva[i]);
    if (neu[0] == 'z')
        printf(""z"");
}",0.1494420184,0
132,WS2021,9,Antwort 10,C,Gabriel,Ullrich,Sandro,Paluteder,"#include <stdio.h>
void xyqentfernen(char* str1){
	int i;
	int j;
	for ( i = 0,  j = 0;j<100; ++j){
	if ((str1[j] != 'x')&&(str1[j] != 'X')&&(str1[j] != 'y')&&(str1[j] != 'Y')&&(str1[j] != 'q')&&(str1[j] != 'Q'))
	str1[i++] = str1[j];
	
	}
}

void zsmfuegen(char* str1, char* str2){
	int j=0;
	for(;(str2[j])!=('\0');j++){}
	for (int i=0;str1[i]!='\0';i++){
		str2[j+i]=str1[i];
	}	
;}

void neuerstring(char* str1,char* str2){
	for (int i=0;str1[i]!='\0';i++){
		if((i+3)%3==0)str2[((i+3)/3)-1]=str1[i];
	}
}


int main(int argc,char** argv){
	if (argc<2) return 0;
	char zsm[100]="""";
	char neustr[100]="""";
	for(int i=1;i<argc;i++) {
		zsmfuegen(argv[i],zsm);}
		xyqentfernen(zsm);
	neuerstring(zsm,neustr);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",zsm);
	printf(""Der neue String lautet: %s"",neustr);
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[])
{   
     // char *argv[] is a array of strings, each command line arguments
    // int argc is the amount of command line arguments
    
    //loop through all command line arguements. First command line argument is always taken by default so we start at 1.
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
  
        
        //printf(""Current 2 %c \n"",CurrentCommandString[0]);
       
        //int LengthOfString = sizeof(CurrentCommandString) / sizeof(char*);
        
        //printf(""Current Size %i \n"",LengthOfString);
        
        int i = 0;
        while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
            if (CurrentCommandString[i] == 'x' 
             || CurrentCommandString[i] == 'y' 
             || CurrentCommandString[i] == 'q'
             || CurrentCommandString[i] == 'X'
             || CurrentCommandString[i] == 'Y' 
             || CurrentCommandString[i] == 'Q')
             {   
                 int j = i;
                 while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
                    CurrentCommandString[j] = CurrentCommandString[j + 1]; 
                    ++j; 
                 }
             }
            ++i;
         }
        
        
        //printf(""x,y,q und X,Y,Q aussortiert TEST 1: %s \n"", argv[kk]);
    }
    
    char StringXYQRemoved[5000];
    int StringXYQRemovedIndex = 0;
       
    char StringThirdRemoved[5000];
    int StringThirdRemovedIndex = 0;
    
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
        
        
        //String 1 
        
        int length, j;
        
          // store length of s1 in the length variable
          length = 0;
          while (StringXYQRemoved[length] != '\0' && StringXYQRemoved[length] != ' ') {
            ++length;
          }
        
          // concatenate s2 to s1
          for (j = 0; CurrentCommandString[j] != '\0' && CurrentCommandString[length] != ' '; ++j, ++length) {
            StringXYQRemoved[length] = CurrentCommandString[j];
          }
        
          // terminating the s1 string
          StringXYQRemoved[length] = '\0';       
    }
    
    
    
        //String2
        int length, j;
        // store length of s1 in the length variable
        length = 0;
        while (StringThirdRemoved[length] != '\0' && StringThirdRemoved[length] != ' ') {
        ++length;
        }
        
        // concatenate s2 to s1
        for (j = 0; StringXYQRemoved[j] != '\0' && StringXYQRemoved[length] != ' '; ++length) {
         StringThirdRemoved[length] = StringXYQRemoved[j];
         
         //printf(""WTFFFF %c \n"",StringXYQRemoved[j]);
         j+=3;
        }
        
        // terminating the s1 string
        StringThirdRemoved[length] = '\0';       
        
    printf(""x,y,q und X,Y,Q aussortiert: %s \n"", StringXYQRemoved);
    printf(""Der neue String lautet: %s"", StringThirdRemoved);
    
}",0.0754342432,0
133,WS2021,9,Antwort 10,C,Gabriel,Ullrich,Jonas,Bestgen,"#include <stdio.h>
void xyqentfernen(char* str1){
	int i;
	int j;
	for ( i = 0,  j = 0;j<100; ++j){
	if ((str1[j] != 'x')&&(str1[j] != 'X')&&(str1[j] != 'y')&&(str1[j] != 'Y')&&(str1[j] != 'q')&&(str1[j] != 'Q'))
	str1[i++] = str1[j];
	
	}
}

void zsmfuegen(char* str1, char* str2){
	int j=0;
	for(;(str2[j])!=('\0');j++){}
	for (int i=0;str1[i]!='\0';i++){
		str2[j+i]=str1[i];
	}	
;}

void neuerstring(char* str1,char* str2){
	for (int i=0;str1[i]!='\0';i++){
		if((i+3)%3==0)str2[((i+3)/3)-1]=str1[i];
	}
}


int main(int argc,char** argv){
	if (argc<2) return 0;
	char zsm[100]="""";
	char neustr[100]="""";
	for(int i=1;i<argc;i++) {
		zsmfuegen(argv[i],zsm);}
		xyqentfernen(zsm);
	neuerstring(zsm,neustr);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",zsm);
	printf(""Der neue String lautet: %s"",neustr);
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
	for (int i=0;((i<zahl)&&((dest[i])!=('\0')))&&((src[i])!=('\0'));i++)
dest[i]=src[i];

	
}

void umdrehen( char* str )
{	char temp[30]="""";
	int i=0;
	for(;(str[i+1])!=('\0');i++){}
	for(int j=0;(str[j])!=('\0');j++) {temp[j]=str[i-j];}
	for(int j=0;(str[j])!=('\0');j++) {str[j]=temp[(j)];}
	
}

int main( int argc, char* argv[] )
{
	char test[11]= ""0123456789"";
	printf( ""Das Original ist: %s \n"", test );
	ersetzen( test , atoi(argv[1]), argv[2] );
	printf( ""Ersetzt : %s \n"", test );
	umdrehen( test );
	printf( ""Rückwärts : %s \n"", test );
}",0.1089700997,0
134,WS2021,9,Antwort 10,C,Gabriel,Ullrich,Constanze Cosima,Freier,"#include <stdio.h>
void xyqentfernen(char* str1){
	int i;
	int j;
	for ( i = 0,  j = 0;j<100; ++j){
	if ((str1[j] != 'x')&&(str1[j] != 'X')&&(str1[j] != 'y')&&(str1[j] != 'Y')&&(str1[j] != 'q')&&(str1[j] != 'Q'))
	str1[i++] = str1[j];
	
	}
}

void zsmfuegen(char* str1, char* str2){
	int j=0;
	for(;(str2[j])!=('\0');j++){}
	for (int i=0;str1[i]!='\0';i++){
		str2[j+i]=str1[i];
	}	
;}

void neuerstring(char* str1,char* str2){
	for (int i=0;str1[i]!='\0';i++){
		if((i+3)%3==0)str2[((i+3)/3)-1]=str1[i];
	}
}


int main(int argc,char** argv){
	if (argc<2) return 0;
	char zsm[100]="""";
	char neustr[100]="""";
	for(int i=1;i<argc;i++) {
		zsmfuegen(argv[i],zsm);}
		xyqentfernen(zsm);
	neuerstring(zsm,neustr);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",zsm);
	printf(""Der neue String lautet: %s"",neustr);
}","#include <stdlib.h>
#include <stdio.h>
int Laenge(char *str)
{
    int size = 0;
    for (int j = 0; str[j] != '\0'; j++)
    {
        size += 1;
    }
    return size;
}

int Kopieren(char *dest, char *src)
{
    int i = 0;
    int j = 0;
    while (src[i] != '\0')
    {
        if (src[i] != 'q' && src[i] != 'x' && src[i] != 'y' && src[i] != 'Q' && src[i] != 'X' && src[i] != 'Y')
        {
            dest[j++] = src[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int Entfernen(char *Eingabe)
{
    int i = 0;
    int j = 0;
    while (Eingabe[i] != '\0')
    {
        if (i % 3 == 0)
        {
            Eingabe[j++] = Eingabe[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int main(int argc, char *argv[])
{
    int Gesamtlaenge = 0;
    for (int i = 1; i < argc; i++)
    {
        Gesamtlaenge += Laenge(argv[i]);
    }
    char Ausgabe[Gesamtlaenge + 1];
    char *Ziel = Ausgabe;
    for (int i = 1; i < argc; i++)
    {
        Ziel += Kopieren(Ziel, argv[i]);
    }
    *Ziel = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", Ausgabe);
    Ausgabe[Entfernen(Ausgabe)] = '\0';
    printf(""Der neue String lautet: %s\n"", Ausgabe);
}",0.1958041958,0
136,WS2021,9,Antwort 10,C,Gabriel,Ullrich,Caspar Valentin,Zell,"#include <stdio.h>
void xyqentfernen(char* str1){
	int i;
	int j;
	for ( i = 0,  j = 0;j<100; ++j){
	if ((str1[j] != 'x')&&(str1[j] != 'X')&&(str1[j] != 'y')&&(str1[j] != 'Y')&&(str1[j] != 'q')&&(str1[j] != 'Q'))
	str1[i++] = str1[j];
	
	}
}

void zsmfuegen(char* str1, char* str2){
	int j=0;
	for(;(str2[j])!=('\0');j++){}
	for (int i=0;str1[i]!='\0';i++){
		str2[j+i]=str1[i];
	}	
;}

void neuerstring(char* str1,char* str2){
	for (int i=0;str1[i]!='\0';i++){
		if((i+3)%3==0)str2[((i+3)/3)-1]=str1[i];
	}
}


int main(int argc,char** argv){
	if (argc<2) return 0;
	char zsm[100]="""";
	char neustr[100]="""";
	for(int i=1;i<argc;i++) {
		zsmfuegen(argv[i],zsm);}
		xyqentfernen(zsm);
	neuerstring(zsm,neustr);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",zsm);
	printf(""Der neue String lautet: %s"",neustr);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0;(i < zahl) && (i < 10) && (src[i] != '\0'); i++)
    {
        dest[i] = src[i];
    }
}

void umdrehen(char* str )
{
    int size;
    for (int j = 1; str[j] != '\0'; j++)
    {
        size = j + 2;
    }
    char Kopie[size];
    for (int i = 0; i < (size - 1); i++)
    {
        Kopie[size - 2- i] = str[i];
    }
    for (int i = 0; i < size; i++)
    {
        str[i] = Kopie[i];
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen(test, atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.1428571429,0
137,WS2021,9,Antwort 10,C,Gabriel,Ullrich,Jakob,Kühl,"#include <stdio.h>
void xyqentfernen(char* str1){
	int i;
	int j;
	for ( i = 0,  j = 0;j<100; ++j){
	if ((str1[j] != 'x')&&(str1[j] != 'X')&&(str1[j] != 'y')&&(str1[j] != 'Y')&&(str1[j] != 'q')&&(str1[j] != 'Q'))
	str1[i++] = str1[j];
	
	}
}

void zsmfuegen(char* str1, char* str2){
	int j=0;
	for(;(str2[j])!=('\0');j++){}
	for (int i=0;str1[i]!='\0';i++){
		str2[j+i]=str1[i];
	}	
;}

void neuerstring(char* str1,char* str2){
	for (int i=0;str1[i]!='\0';i++){
		if((i+3)%3==0)str2[((i+3)/3)-1]=str1[i];
	}
}


int main(int argc,char** argv){
	if (argc<2) return 0;
	char zsm[100]="""";
	char neustr[100]="""";
	for(int i=1;i<argc;i++) {
		zsmfuegen(argv[i],zsm);}
		xyqentfernen(zsm);
	neuerstring(zsm,neustr);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",zsm);
	printf(""Der neue String lautet: %s"",neustr);
}","#include<stdio.h>

int main(int argc, char* argv[]){
	char a[100]= """";
	char b[100]="""";
	int x=0;
	for(int i=1 ;i<argc ;i++){
		for (int j=0; argv[i][j] != '\0'; j++){
			if(argv[i][j]== 'x' || argv[i][j]== 'y' || argv[i][j]== 'q' || argv[i][j]== 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q') continue;
			else {
				a[x]=argv[i][j];
				x+=1;
			}
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", a);
	int y=0;
	for(int i=0; i<100; i+=3){
		b[y]=a[i];
		y++;
	}
	printf(""Der neue String lautet: %s\n"", b);
}",0.2212518195,0
138,WS2021,9,Antwort 10,C,Gabriel,Ullrich,Niklas,Mohr,"#include <stdio.h>
void xyqentfernen(char* str1){
	int i;
	int j;
	for ( i = 0,  j = 0;j<100; ++j){
	if ((str1[j] != 'x')&&(str1[j] != 'X')&&(str1[j] != 'y')&&(str1[j] != 'Y')&&(str1[j] != 'q')&&(str1[j] != 'Q'))
	str1[i++] = str1[j];
	
	}
}

void zsmfuegen(char* str1, char* str2){
	int j=0;
	for(;(str2[j])!=('\0');j++){}
	for (int i=0;str1[i]!='\0';i++){
		str2[j+i]=str1[i];
	}	
;}

void neuerstring(char* str1,char* str2){
	for (int i=0;str1[i]!='\0';i++){
		if((i+3)%3==0)str2[((i+3)/3)-1]=str1[i];
	}
}


int main(int argc,char** argv){
	if (argc<2) return 0;
	char zsm[100]="""";
	char neustr[100]="""";
	for(int i=1;i<argc;i++) {
		zsmfuegen(argv[i],zsm);}
		xyqentfernen(zsm);
	neuerstring(zsm,neustr);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",zsm);
	printf(""Der neue String lautet: %s"",neustr);
}","#include <stdio.h>
#include <stdlib.h>

void aussortieren(char* str)
{
    int t = 0;
    char temp[50];
    for(int i = 0; str[i] != '\0'; i++)
    {
        int t = 0;
        char temp[50];
        if(str[i] == 'x'|| str[i] == 'y'|| str[i] == 'q');
        else if(str[i] == 'X'|| str[i] == 'Y'|| str[i] == 'Q');
        else 
        {
            temp[t] = str[i];
            t++;
        }
    }
    str = &temp;
}


char* sortieren(int länge, char* str[])
{
    int t = 0;
    char temp[200];
    for(int i = 0; i < länge; i++)
    {
        for(int a = 0; a != '\0'; a++)
        {
            temp[t] = str[i+1][a];
            t++;
        }
    }
}   


int main( int argc, char* argv[] )
{  
    int length = sizeof(argv) - 1;
    for(int i = 1; i <= length; i++)
    {
        aussortieren(argv[i]);
    }
    char zusammen = sortieren(length, argv);
    printf(""x,y,q und X,Y,Q aussortiert: %s"", zusammen); 
}",0.1180364038,0
139,WS2021,9,Antwort 10,C,Gabriel,Ullrich,Tammo Hendrik,Nie,"#include <stdio.h>
void xyqentfernen(char* str1){
	int i;
	int j;
	for ( i = 0,  j = 0;j<100; ++j){
	if ((str1[j] != 'x')&&(str1[j] != 'X')&&(str1[j] != 'y')&&(str1[j] != 'Y')&&(str1[j] != 'q')&&(str1[j] != 'Q'))
	str1[i++] = str1[j];
	
	}
}

void zsmfuegen(char* str1, char* str2){
	int j=0;
	for(;(str2[j])!=('\0');j++){}
	for (int i=0;str1[i]!='\0';i++){
		str2[j+i]=str1[i];
	}	
;}

void neuerstring(char* str1,char* str2){
	for (int i=0;str1[i]!='\0';i++){
		if((i+3)%3==0)str2[((i+3)/3)-1]=str1[i];
	}
}


int main(int argc,char** argv){
	if (argc<2) return 0;
	char zsm[100]="""";
	char neustr[100]="""";
	for(int i=1;i<argc;i++) {
		zsmfuegen(argv[i],zsm);}
		xyqentfernen(zsm);
	neuerstring(zsm,neustr);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",zsm);
	printf(""Der neue String lautet: %s"",neustr);
}","#include <stdio.h>
#include <stdlib.h>
 
int main(int argc, char* argv[52])
{
   //aneinanderhängen

   int zahl = 0;
   int* p_zahl = &zahl;
   int counter = 1;
   int* p_counter = &counter;
   char str[30];
   for(int i = 0; i < argc-1 ; i++)
   {
      for(int j = 0; argv[counter][j] != '\0'; j++)
      {
         str[zahl] = argv[counter][j];
         *p_zahl += 1;
         
      }
      *p_counter += 1;
   }
   str[zahl+1] = '\0';

   int nummer = 0;
   int* p_nummer = &nummer;
   char str2[25];
   for(int i = 0; ; i++)
   {
      if((str[i] != 'x') && (str[i] != 'y') && (str[i] != 'q') && (str[i] != 'X') && (str[i] != 'Y') && (str[i] != 'Q'))
      {
         
         str2[nummer] = str[i];
         if(str[i] == '\0') break;
         *p_nummer += 1;
      }
   }

   //jedes dritte in str3
   char str3[35];
   for(int i = 0; i < 57; i +=3)
   {
      //if((str2[i] == '\0')) break;
      str3[i/3] = str2[i];  
      str3[i/3+1] = '\0'  ;
   }
   //drucken:

   printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str2, str3);
}",0.1421267894,0
140,WS2021,9,Antwort 10,C,Gabriel,Ullrich,Sören Sven,Werner,"#include <stdio.h>
void xyqentfernen(char* str1){
	int i;
	int j;
	for ( i = 0,  j = 0;j<100; ++j){
	if ((str1[j] != 'x')&&(str1[j] != 'X')&&(str1[j] != 'y')&&(str1[j] != 'Y')&&(str1[j] != 'q')&&(str1[j] != 'Q'))
	str1[i++] = str1[j];
	
	}
}

void zsmfuegen(char* str1, char* str2){
	int j=0;
	for(;(str2[j])!=('\0');j++){}
	for (int i=0;str1[i]!='\0';i++){
		str2[j+i]=str1[i];
	}	
;}

void neuerstring(char* str1,char* str2){
	for (int i=0;str1[i]!='\0';i++){
		if((i+3)%3==0)str2[((i+3)/3)-1]=str1[i];
	}
}


int main(int argc,char** argv){
	if (argc<2) return 0;
	char zsm[100]="""";
	char neustr[100]="""";
	for(int i=1;i<argc;i++) {
		zsmfuegen(argv[i],zsm);}
		xyqentfernen(zsm);
	neuerstring(zsm,neustr);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",zsm);
	printf(""Der neue String lautet: %s"",neustr);
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
/*
int zaehlen(char* str){
	int counter = 0;
	while(str[counter] != '\0'){
		counter++;
	}
	return counter;
}*/

int main( int argc, char* argv[]){



	char str[100] = """";

	for(int i = 1; i<argc; i++){
		strcat(str, argv[i]);
	}
	printf(""%s\n"", str);


}",0.1728813559,0
156,WS2021,9,Antwort 10,C,Florian Philipp,Meyer,Leonhard,Dirks,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
   for(int i=0; i<zahl && *src!='\0' && *dest!='\0'; i++)
  {
      *dest = *src;
      dest++;
      src++;
  } 
}

void umdrehen( char* str )
{
    char temp[100] = """";
    char* ptemp = temp;
    for(int i=0; str[i]!=0; i++)
        temp[i] = str[i]; 

    while(*ptemp != '\0')
        ptemp++;
    
    ptemp--;
     
    while(*str!='\0')
    {
        *str = *ptemp;       
        ptemp--;
        str++;       
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	int position = 0;
	while(position < zahl && dest[position] != '\0' && src[position] != '\0'){
		dest[position] = src[position];
		position ++;
	}
}

void umdrehen( char* str )
{
	int groesse = 0;
	while(str[groesse] != '\0') groesse++;
	char kopie[groesse];
	for(int i = 0; i < groesse; i++) kopie[i] = str[i];
	for(int i = 0; i < groesse; i++){
		str[i] = kopie[groesse - 1 - i];
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.5822306238,0
157,WS2021,9,Antwort 10,C,Florian Philipp,Meyer,Annegret Claire,Kruschel,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
   for(int i=0; i<zahl && *src!='\0' && *dest!='\0'; i++)
  {
      *dest = *src;
      dest++;
      src++;
  } 
}

void umdrehen( char* str )
{
    char temp[100] = """";
    char* ptemp = temp;
    for(int i=0; str[i]!=0; i++)
        temp[i] = str[i]; 

    while(*ptemp != '\0')
        ptemp++;
    
    ptemp--;
     
    while(*str!='\0')
    {
        *str = *ptemp;       
        ptemp--;
        str++;       
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){

char* compactstring = (char*) malloc(400* sizeof(char));
int x = 0;
for(int i=1; i < argc; i++){
	int j = 0;
while(*(argv[i]+j) != '\0'){
if((*(argv[i]+j) != 'x') && (*(argv[i]+j)!= 'y') && (*(argv[i]+j) != 'q')&& (*(argv[i]+j) != 'X')&& (*(argv[i]+j) != 'Y')&& (*(argv[i]+j) != 'Q')){
			*(compactstring+x) = *(argv[i]+j);
			x++;
	}
	j++;
}
}
compactstring = (char*) realloc(compactstring,x+sizeof(char));
int shortendlength=(x+1)/3;
char* shortend = (char*) malloc(shortendlength * sizeof(char));
int y = 0;
for (int i=0;i<x+1;i++){
if((i%3)==0){
	*(shortend+y) = *(compactstring+i);
	y++;
}
}
printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", compactstring,shortend);
}",0.097711812,0
160,WS2021,9,Antwort 10,C,Florian Philipp,Meyer,Lucie Chantal,Girod,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
   for(int i=0; i<zahl && *src!='\0' && *dest!='\0'; i++)
  {
      *dest = *src;
      dest++;
      src++;
  } 
}

void umdrehen( char* str )
{
    char temp[100] = """";
    char* ptemp = temp;
    for(int i=0; str[i]!=0; i++)
        temp[i] = str[i]; 

    while(*ptemp != '\0')
        ptemp++;
    
    ptemp--;
     
    while(*str!='\0')
    {
        *str = *ptemp;       
        ptemp--;
        str++;       
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){
	
	char* text_str = malloc(400* sizeof(char));
	int idx = 0;
	for(int i = 1; i < argc; i++){
		int j = 0;
		while(*(argv[i]+j) != '\0'){
			if((*(argv[i]+j) != 'x') && (*(argv[i]+j) != 'y') && (*(argv[i]+j) != 'q') && (*(argv[i]+j) != 'X') && (*(argv[i]+j) != 'Y') && (*(argv[i]+j) != 'Q')){
			*(text_str+idx) = *(argv[i]+j);
			idx++;
			}
			j++;
		}
	}
	
	text_str = realloc(text_str,idx+1 * sizeof(char));
	int solution_length = (idx+1) / 3;
	char* solution = malloc(solution_length * sizeof(char));
	int count = 0;
	for(int i = 0; i < idx+1; i++){
		if((i % 3) == 0){
			*(solution+count) = *(text_str+i);
			count++;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", text_str, solution);
	
}",0.1053906723,0
162,WS2021,9,Antwort 10,C,Florian Philipp,Meyer,Moritz,Batilla,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
   for(int i=0; i<zahl && *src!='\0' && *dest!='\0'; i++)
  {
      *dest = *src;
      dest++;
      src++;
  } 
}

void umdrehen( char* str )
{
    char temp[100] = """";
    char* ptemp = temp;
    for(int i=0; str[i]!=0; i++)
        temp[i] = str[i]; 

    while(*ptemp != '\0')
        ptemp++;
    
    ptemp--;
     
    while(*str!='\0')
    {
        *str = *ptemp;       
        ptemp--;
        str++;       
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    int x;
    for(x = 0; x < zahl && *dest != '\0' && *src != '\0'; x++)
    {
       *dest = *src;
       src++;
       dest++;
    }
}

void umdrehen( char* str )
{
    int y = 0;
    int count = 0;
    int tmp = 0;

    for(count=0; str[count] != 0; count++);
    for(y = 0; y <count/2; y++)
    {
        tmp = str[y];
        str[y]=str[count - 1 - y];
        str[count - 1 - y] = tmp;
    }
    for(y = 0; y < count; y++);
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.6207317073,0
163,WS2021,9,Antwort 10,C,Florian Philipp,Meyer,Can Mert,Ergin,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
   for(int i=0; i<zahl && *src!='\0' && *dest!='\0'; i++)
  {
      *dest = *src;
      dest++;
      src++;
  } 
}

void umdrehen( char* str )
{
    char temp[100] = """";
    char* ptemp = temp;
    for(int i=0; str[i]!=0; i++)
        temp[i] = str[i]; 

    while(*ptemp != '\0')
        ptemp++;
    
    ptemp--;
     
    while(*str!='\0')
    {
        *str = *ptemp;       
        ptemp--;
        str++;       
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>

int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}",0.109263658,0
164,WS2021,9,Antwort 10,C,Florian Philipp,Meyer,Daniel,Grönefeld,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
   for(int i=0; i<zahl && *src!='\0' && *dest!='\0'; i++)
  {
      *dest = *src;
      dest++;
      src++;
  } 
}

void umdrehen( char* str )
{
    char temp[100] = """";
    char* ptemp = temp;
    for(int i=0; str[i]!=0; i++)
        temp[i] = str[i]; 

    while(*ptemp != '\0')
        ptemp++;
    
    ptemp--;
     
    while(*str!='\0')
    {
        *str = *ptemp;       
        ptemp--;
        str++;       
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{  
	for(int i = 0; src[i] != '\0' && dest[i] != '\0' && i < zahl; i++){
		dest[i] = src[i];
	}
}

void umdrehen( char* str)
{
	int length_str = 0;
	for( int i = 0; str[i] != '\0'; i++)
		length_str = i;
	char temp_string[length_str];
	for( int i = 0; i <= length_str; i++)
		temp_string[i] = str[length_str-i];
	for( int i = 0; i <= length_str; i++)
		str[i] = temp_string[i];
}

int main( int argc, char* argv[] )
{  
  char test[11] = ""0123456789"";
  printf( ""Das Original ist: %s \n"", test);
  ersetzen(test , atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test);
  umdrehen( test );	
  printf( ""Rückwärts : %s \n"", test );
}",0.5776081425,0
166,WS2021,9,Antwort 10,C,Florian Philipp,Meyer,Catalina,Florez Vargas,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
   for(int i=0; i<zahl && *src!='\0' && *dest!='\0'; i++)
  {
      *dest = *src;
      dest++;
      src++;
  } 
}

void umdrehen( char* str )
{
    char temp[100] = """";
    char* ptemp = temp;
    for(int i=0; str[i]!=0; i++)
        temp[i] = str[i]; 

    while(*ptemp != '\0')
        ptemp++;
    
    ptemp--;
     
    while(*str!='\0')
    {
        *str = *ptemp;       
        ptemp--;
        str++;       
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>

int main(int argc, char *argv[])

{
    int u;
    int f = 0;
    char neu[20];
    char nueva[15];
    int x = 0;
    for (int i = 1; i < argc; i++)
    {
        u = 0;
        while ((argv[i][u]) != '\0')
        {
            if (argv[i][u] != 'x' && argv[i][u] != 'y' && argv[i][u] != 'q' && argv[i][u] != 'X' && argv[i][u] != 'Y' && argv[i][u] != 'Q')
            {
                neu[f] = argv[i][u];
                f++;
            }
            u++;
        }
    }

    for (int i = 0; i <= f; i++)
    {
        if (x > (i / 3) || i == 0)
        {
            if (i == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
            if (((i) % 3) == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
        }
    }

    printf(""x,y,q und X,Y,Q aussortiert: "");
    for (int i = 0; i < f; i++)
        if (neu[i] != '\0')
        {
            printf(""%c"", neu[i]);
        }

    printf(""\n"");

     printf(""Der neue String lautet: "");
    for (int i = 1; i < (f / 2)-1; i++)
            printf(""%c"", nueva[i]);
    if (neu[0] == 'z')
        printf(""z"");
}",0.0932286555,0
167,WS2021,9,Antwort 10,C,Florian Philipp,Meyer,Sandro,Paluteder,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
   for(int i=0; i<zahl && *src!='\0' && *dest!='\0'; i++)
  {
      *dest = *src;
      dest++;
      src++;
  } 
}

void umdrehen( char* str )
{
    char temp[100] = """";
    char* ptemp = temp;
    for(int i=0; str[i]!=0; i++)
        temp[i] = str[i]; 

    while(*ptemp != '\0')
        ptemp++;
    
    ptemp--;
     
    while(*str!='\0')
    {
        *str = *ptemp;       
        ptemp--;
        str++;       
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[])
{   
     // char *argv[] is a array of strings, each command line arguments
    // int argc is the amount of command line arguments
    
    //loop through all command line arguements. First command line argument is always taken by default so we start at 1.
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
  
        
        //printf(""Current 2 %c \n"",CurrentCommandString[0]);
       
        //int LengthOfString = sizeof(CurrentCommandString) / sizeof(char*);
        
        //printf(""Current Size %i \n"",LengthOfString);
        
        int i = 0;
        while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
            if (CurrentCommandString[i] == 'x' 
             || CurrentCommandString[i] == 'y' 
             || CurrentCommandString[i] == 'q'
             || CurrentCommandString[i] == 'X'
             || CurrentCommandString[i] == 'Y' 
             || CurrentCommandString[i] == 'Q')
             {   
                 int j = i;
                 while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
                    CurrentCommandString[j] = CurrentCommandString[j + 1]; 
                    ++j; 
                 }
             }
            ++i;
         }
        
        
        //printf(""x,y,q und X,Y,Q aussortiert TEST 1: %s \n"", argv[kk]);
    }
    
    char StringXYQRemoved[5000];
    int StringXYQRemovedIndex = 0;
       
    char StringThirdRemoved[5000];
    int StringThirdRemovedIndex = 0;
    
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
        
        
        //String 1 
        
        int length, j;
        
          // store length of s1 in the length variable
          length = 0;
          while (StringXYQRemoved[length] != '\0' && StringXYQRemoved[length] != ' ') {
            ++length;
          }
        
          // concatenate s2 to s1
          for (j = 0; CurrentCommandString[j] != '\0' && CurrentCommandString[length] != ' '; ++j, ++length) {
            StringXYQRemoved[length] = CurrentCommandString[j];
          }
        
          // terminating the s1 string
          StringXYQRemoved[length] = '\0';       
    }
    
    
    
        //String2
        int length, j;
        // store length of s1 in the length variable
        length = 0;
        while (StringThirdRemoved[length] != '\0' && StringThirdRemoved[length] != ' ') {
        ++length;
        }
        
        // concatenate s2 to s1
        for (j = 0; StringXYQRemoved[j] != '\0' && StringXYQRemoved[length] != ' '; ++length) {
         StringThirdRemoved[length] = StringXYQRemoved[j];
         
         //printf(""WTFFFF %c \n"",StringXYQRemoved[j]);
         j+=3;
        }
        
        // terminating the s1 string
        StringThirdRemoved[length] = '\0';       
        
    printf(""x,y,q und X,Y,Q aussortiert: %s \n"", StringXYQRemoved);
    printf(""Der neue String lautet: %s"", StringThirdRemoved);
    
}",0.0848515099,0
168,WS2021,9,Antwort 10,C,Florian Philipp,Meyer,Jonas,Bestgen,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
   for(int i=0; i<zahl && *src!='\0' && *dest!='\0'; i++)
  {
      *dest = *src;
      dest++;
      src++;
  } 
}

void umdrehen( char* str )
{
    char temp[100] = """";
    char* ptemp = temp;
    for(int i=0; str[i]!=0; i++)
        temp[i] = str[i]; 

    while(*ptemp != '\0')
        ptemp++;
    
    ptemp--;
     
    while(*str!='\0')
    {
        *str = *ptemp;       
        ptemp--;
        str++;       
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
	for (int i=0;((i<zahl)&&((dest[i])!=('\0')))&&((src[i])!=('\0'));i++)
dest[i]=src[i];

	
}

void umdrehen( char* str )
{	char temp[30]="""";
	int i=0;
	for(;(str[i+1])!=('\0');i++){}
	for(int j=0;(str[j])!=('\0');j++) {temp[j]=str[i-j];}
	for(int j=0;(str[j])!=('\0');j++) {str[j]=temp[(j)];}
	
}

int main( int argc, char* argv[] )
{
	char test[11]= ""0123456789"";
	printf( ""Das Original ist: %s \n"", test );
	ersetzen( test , atoi(argv[1]), argv[2] );
	printf( ""Ersetzt : %s \n"", test );
	umdrehen( test );
	printf( ""Rückwärts : %s \n"", test );
}",0.6059379217,0
169,WS2021,9,Antwort 10,C,Florian Philipp,Meyer,Constanze Cosima,Freier,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
   for(int i=0; i<zahl && *src!='\0' && *dest!='\0'; i++)
  {
      *dest = *src;
      dest++;
      src++;
  } 
}

void umdrehen( char* str )
{
    char temp[100] = """";
    char* ptemp = temp;
    for(int i=0; str[i]!=0; i++)
        temp[i] = str[i]; 

    while(*ptemp != '\0')
        ptemp++;
    
    ptemp--;
     
    while(*str!='\0')
    {
        *str = *ptemp;       
        ptemp--;
        str++;       
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdlib.h>
#include <stdio.h>
int Laenge(char *str)
{
    int size = 0;
    for (int j = 0; str[j] != '\0'; j++)
    {
        size += 1;
    }
    return size;
}

int Kopieren(char *dest, char *src)
{
    int i = 0;
    int j = 0;
    while (src[i] != '\0')
    {
        if (src[i] != 'q' && src[i] != 'x' && src[i] != 'y' && src[i] != 'Q' && src[i] != 'X' && src[i] != 'Y')
        {
            dest[j++] = src[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int Entfernen(char *Eingabe)
{
    int i = 0;
    int j = 0;
    while (Eingabe[i] != '\0')
    {
        if (i % 3 == 0)
        {
            Eingabe[j++] = Eingabe[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int main(int argc, char *argv[])
{
    int Gesamtlaenge = 0;
    for (int i = 1; i < argc; i++)
    {
        Gesamtlaenge += Laenge(argv[i]);
    }
    char Ausgabe[Gesamtlaenge + 1];
    char *Ziel = Ausgabe;
    for (int i = 1; i < argc; i++)
    {
        Ziel += Kopieren(Ziel, argv[i]);
    }
    *Ziel = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", Ausgabe);
    Ausgabe[Entfernen(Ausgabe)] = '\0';
    printf(""Der neue String lautet: %s\n"", Ausgabe);
}",0.1244109331,0
171,WS2021,9,Antwort 10,C,Florian Philipp,Meyer,Caspar Valentin,Zell,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
   for(int i=0; i<zahl && *src!='\0' && *dest!='\0'; i++)
  {
      *dest = *src;
      dest++;
      src++;
  } 
}

void umdrehen( char* str )
{
    char temp[100] = """";
    char* ptemp = temp;
    for(int i=0; str[i]!=0; i++)
        temp[i] = str[i]; 

    while(*ptemp != '\0')
        ptemp++;
    
    ptemp--;
     
    while(*str!='\0')
    {
        *str = *ptemp;       
        ptemp--;
        str++;       
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0;(i < zahl) && (i < 10) && (src[i] != '\0'); i++)
    {
        dest[i] = src[i];
    }
}

void umdrehen(char* str )
{
    int size;
    for (int j = 1; str[j] != '\0'; j++)
    {
        size = j + 2;
    }
    char Kopie[size];
    for (int i = 0; i < (size - 1); i++)
    {
        Kopie[size - 2- i] = str[i];
    }
    for (int i = 0; i < size; i++)
    {
        str[i] = Kopie[i];
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen(test, atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.6068111455,0
172,WS2021,9,Antwort 10,C,Florian Philipp,Meyer,Jakob,Kühl,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
   for(int i=0; i<zahl && *src!='\0' && *dest!='\0'; i++)
  {
      *dest = *src;
      dest++;
      src++;
  } 
}

void umdrehen( char* str )
{
    char temp[100] = """";
    char* ptemp = temp;
    for(int i=0; str[i]!=0; i++)
        temp[i] = str[i]; 

    while(*ptemp != '\0')
        ptemp++;
    
    ptemp--;
     
    while(*str!='\0')
    {
        *str = *ptemp;       
        ptemp--;
        str++;       
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include<stdio.h>

int main(int argc, char* argv[]){
	char a[100]= """";
	char b[100]="""";
	int x=0;
	for(int i=1 ;i<argc ;i++){
		for (int j=0; argv[i][j] != '\0'; j++){
			if(argv[i][j]== 'x' || argv[i][j]== 'y' || argv[i][j]== 'q' || argv[i][j]== 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q') continue;
			else {
				a[x]=argv[i][j];
				x+=1;
			}
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", a);
	int y=0;
	for(int i=0; i<100; i+=3){
		b[y]=a[i];
		y++;
	}
	printf(""Der neue String lautet: %s\n"", b);
}",0.1110288675,0
173,WS2021,9,Antwort 10,C,Florian Philipp,Meyer,Niklas,Mohr,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
   for(int i=0; i<zahl && *src!='\0' && *dest!='\0'; i++)
  {
      *dest = *src;
      dest++;
      src++;
  } 
}

void umdrehen( char* str )
{
    char temp[100] = """";
    char* ptemp = temp;
    for(int i=0; str[i]!=0; i++)
        temp[i] = str[i]; 

    while(*ptemp != '\0')
        ptemp++;
    
    ptemp--;
     
    while(*str!='\0')
    {
        *str = *ptemp;       
        ptemp--;
        str++;       
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

void aussortieren(char* str)
{
    int t = 0;
    char temp[50];
    for(int i = 0; str[i] != '\0'; i++)
    {
        int t = 0;
        char temp[50];
        if(str[i] == 'x'|| str[i] == 'y'|| str[i] == 'q');
        else if(str[i] == 'X'|| str[i] == 'Y'|| str[i] == 'Q');
        else 
        {
            temp[t] = str[i];
            t++;
        }
    }
    str = &temp;
}


char* sortieren(int länge, char* str[])
{
    int t = 0;
    char temp[200];
    for(int i = 0; i < länge; i++)
    {
        for(int a = 0; a != '\0'; a++)
        {
            temp[t] = str[i+1][a];
            t++;
        }
    }
}   


int main( int argc, char* argv[] )
{  
    int length = sizeof(argv) - 1;
    for(int i = 1; i <= length; i++)
    {
        aussortieren(argv[i]);
    }
    char zusammen = sortieren(length, argv);
    printf(""x,y,q und X,Y,Q aussortiert: %s"", zusammen); 
}",0.2502793296,0
174,WS2021,9,Antwort 10,C,Florian Philipp,Meyer,Tammo Hendrik,Nie,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
   for(int i=0; i<zahl && *src!='\0' && *dest!='\0'; i++)
  {
      *dest = *src;
      dest++;
      src++;
  } 
}

void umdrehen( char* str )
{
    char temp[100] = """";
    char* ptemp = temp;
    for(int i=0; str[i]!=0; i++)
        temp[i] = str[i]; 

    while(*ptemp != '\0')
        ptemp++;
    
    ptemp--;
     
    while(*str!='\0')
    {
        *str = *ptemp;       
        ptemp--;
        str++;       
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
 
int main(int argc, char* argv[52])
{
   //aneinanderhängen

   int zahl = 0;
   int* p_zahl = &zahl;
   int counter = 1;
   int* p_counter = &counter;
   char str[30];
   for(int i = 0; i < argc-1 ; i++)
   {
      for(int j = 0; argv[counter][j] != '\0'; j++)
      {
         str[zahl] = argv[counter][j];
         *p_zahl += 1;
         
      }
      *p_counter += 1;
   }
   str[zahl+1] = '\0';

   int nummer = 0;
   int* p_nummer = &nummer;
   char str2[25];
   for(int i = 0; ; i++)
   {
      if((str[i] != 'x') && (str[i] != 'y') && (str[i] != 'q') && (str[i] != 'X') && (str[i] != 'Y') && (str[i] != 'Q'))
      {
         
         str2[nummer] = str[i];
         if(str[i] == '\0') break;
         *p_nummer += 1;
      }
   }

   //jedes dritte in str3
   char str3[35];
   for(int i = 0; i < 57; i +=3)
   {
      //if((str2[i] == '\0')) break;
      str3[i/3] = str2[i];  
      str3[i/3+1] = '\0'  ;
   }
   //drucken:

   printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str2, str3);
}",0.1551991723,0
175,WS2021,9,Antwort 10,C,Florian Philipp,Meyer,Sören Sven,Werner,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
   for(int i=0; i<zahl && *src!='\0' && *dest!='\0'; i++)
  {
      *dest = *src;
      dest++;
      src++;
  } 
}

void umdrehen( char* str )
{
    char temp[100] = """";
    char* ptemp = temp;
    for(int i=0; str[i]!=0; i++)
        temp[i] = str[i]; 

    while(*ptemp != '\0')
        ptemp++;
    
    ptemp--;
     
    while(*str!='\0')
    {
        *str = *ptemp;       
        ptemp--;
        str++;       
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
/*
int zaehlen(char* str){
	int counter = 0;
	while(str[counter] != '\0'){
		counter++;
	}
	return counter;
}*/

int main( int argc, char* argv[]){



	char str[100] = """";

	for(int i = 1; i<argc; i++){
		strcat(str, argv[i]);
	}
	printf(""%s\n"", str);


}",0.1936041487,0
176,WS2021,9,Antwort 10,C,Leonhard,Dirks,Annegret Claire,Kruschel,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	int position = 0;
	while(position < zahl && dest[position] != '\0' && src[position] != '\0'){
		dest[position] = src[position];
		position ++;
	}
}

void umdrehen( char* str )
{
	int groesse = 0;
	while(str[groesse] != '\0') groesse++;
	char kopie[groesse];
	for(int i = 0; i < groesse; i++) kopie[i] = str[i];
	for(int i = 0; i < groesse; i++){
		str[i] = kopie[groesse - 1 - i];
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){

char* compactstring = (char*) malloc(400* sizeof(char));
int x = 0;
for(int i=1; i < argc; i++){
	int j = 0;
while(*(argv[i]+j) != '\0'){
if((*(argv[i]+j) != 'x') && (*(argv[i]+j)!= 'y') && (*(argv[i]+j) != 'q')&& (*(argv[i]+j) != 'X')&& (*(argv[i]+j) != 'Y')&& (*(argv[i]+j) != 'Q')){
			*(compactstring+x) = *(argv[i]+j);
			x++;
	}
	j++;
}
}
compactstring = (char*) realloc(compactstring,x+sizeof(char));
int shortendlength=(x+1)/3;
char* shortend = (char*) malloc(shortendlength * sizeof(char));
int y = 0;
for (int i=0;i<x+1;i++){
if((i%3)==0){
	*(shortend+y) = *(compactstring+i);
	y++;
}
}
printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", compactstring,shortend);
}",0.1724137931,0
179,WS2021,9,Antwort 10,C,Leonhard,Dirks,Lucie Chantal,Girod,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	int position = 0;
	while(position < zahl && dest[position] != '\0' && src[position] != '\0'){
		dest[position] = src[position];
		position ++;
	}
}

void umdrehen( char* str )
{
	int groesse = 0;
	while(str[groesse] != '\0') groesse++;
	char kopie[groesse];
	for(int i = 0; i < groesse; i++) kopie[i] = str[i];
	for(int i = 0; i < groesse; i++){
		str[i] = kopie[groesse - 1 - i];
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){
	
	char* text_str = malloc(400* sizeof(char));
	int idx = 0;
	for(int i = 1; i < argc; i++){
		int j = 0;
		while(*(argv[i]+j) != '\0'){
			if((*(argv[i]+j) != 'x') && (*(argv[i]+j) != 'y') && (*(argv[i]+j) != 'q') && (*(argv[i]+j) != 'X') && (*(argv[i]+j) != 'Y') && (*(argv[i]+j) != 'Q')){
			*(text_str+idx) = *(argv[i]+j);
			idx++;
			}
			j++;
		}
	}
	
	text_str = realloc(text_str,idx+1 * sizeof(char));
	int solution_length = (idx+1) / 3;
	char* solution = malloc(solution_length * sizeof(char));
	int count = 0;
	for(int i = 0; i < idx+1; i++){
		if((i % 3) == 0){
			*(solution+count) = *(text_str+i);
			count++;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", text_str, solution);
	
}",0.18375,0
181,WS2021,9,Antwort 10,C,Leonhard,Dirks,Moritz,Batilla,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	int position = 0;
	while(position < zahl && dest[position] != '\0' && src[position] != '\0'){
		dest[position] = src[position];
		position ++;
	}
}

void umdrehen( char* str )
{
	int groesse = 0;
	while(str[groesse] != '\0') groesse++;
	char kopie[groesse];
	for(int i = 0; i < groesse; i++) kopie[i] = str[i];
	for(int i = 0; i < groesse; i++){
		str[i] = kopie[groesse - 1 - i];
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    int x;
    for(x = 0; x < zahl && *dest != '\0' && *src != '\0'; x++)
    {
       *dest = *src;
       src++;
       dest++;
    }
}

void umdrehen( char* str )
{
    int y = 0;
    int count = 0;
    int tmp = 0;

    for(count=0; str[count] != 0; count++);
    for(y = 0; y <count/2; y++)
    {
        tmp = str[y];
        str[y]=str[count - 1 - y];
        str[count - 1 - y] = tmp;
    }
    for(y = 0; y < count; y++);
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.5487728131,0
182,WS2021,9,Antwort 10,C,Leonhard,Dirks,Can Mert,Ergin,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	int position = 0;
	while(position < zahl && dest[position] != '\0' && src[position] != '\0'){
		dest[position] = src[position];
		position ++;
	}
}

void umdrehen( char* str )
{
	int groesse = 0;
	while(str[groesse] != '\0') groesse++;
	char kopie[groesse];
	for(int i = 0; i < groesse; i++) kopie[i] = str[i];
	for(int i = 0; i < groesse; i++){
		str[i] = kopie[groesse - 1 - i];
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>

int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}",0.1371708512,0
183,WS2021,9,Antwort 10,C,Leonhard,Dirks,Daniel,Grönefeld,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	int position = 0;
	while(position < zahl && dest[position] != '\0' && src[position] != '\0'){
		dest[position] = src[position];
		position ++;
	}
}

void umdrehen( char* str )
{
	int groesse = 0;
	while(str[groesse] != '\0') groesse++;
	char kopie[groesse];
	for(int i = 0; i < groesse; i++) kopie[i] = str[i];
	for(int i = 0; i < groesse; i++){
		str[i] = kopie[groesse - 1 - i];
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{  
	for(int i = 0; src[i] != '\0' && dest[i] != '\0' && i < zahl; i++){
		dest[i] = src[i];
	}
}

void umdrehen( char* str)
{
	int length_str = 0;
	for( int i = 0; str[i] != '\0'; i++)
		length_str = i;
	char temp_string[length_str];
	for( int i = 0; i <= length_str; i++)
		temp_string[i] = str[length_str-i];
	for( int i = 0; i <= length_str; i++)
		str[i] = temp_string[i];
}

int main( int argc, char* argv[] )
{  
  char test[11] = ""0123456789"";
  printf( ""Das Original ist: %s \n"", test);
  ersetzen(test , atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test);
  umdrehen( test );	
  printf( ""Rückwärts : %s \n"", test );
}",0.674556213,0
185,WS2021,9,Antwort 10,C,Leonhard,Dirks,Catalina,Florez Vargas,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	int position = 0;
	while(position < zahl && dest[position] != '\0' && src[position] != '\0'){
		dest[position] = src[position];
		position ++;
	}
}

void umdrehen( char* str )
{
	int groesse = 0;
	while(str[groesse] != '\0') groesse++;
	char kopie[groesse];
	for(int i = 0; i < groesse; i++) kopie[i] = str[i];
	for(int i = 0; i < groesse; i++){
		str[i] = kopie[groesse - 1 - i];
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>

int main(int argc, char *argv[])

{
    int u;
    int f = 0;
    char neu[20];
    char nueva[15];
    int x = 0;
    for (int i = 1; i < argc; i++)
    {
        u = 0;
        while ((argv[i][u]) != '\0')
        {
            if (argv[i][u] != 'x' && argv[i][u] != 'y' && argv[i][u] != 'q' && argv[i][u] != 'X' && argv[i][u] != 'Y' && argv[i][u] != 'Q')
            {
                neu[f] = argv[i][u];
                f++;
            }
            u++;
        }
    }

    for (int i = 0; i <= f; i++)
    {
        if (x > (i / 3) || i == 0)
        {
            if (i == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
            if (((i) % 3) == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
        }
    }

    printf(""x,y,q und X,Y,Q aussortiert: "");
    for (int i = 0; i < f; i++)
        if (neu[i] != '\0')
        {
            printf(""%c"", neu[i]);
        }

    printf(""\n"");

     printf(""Der neue String lautet: "");
    for (int i = 1; i < (f / 2)-1; i++)
            printf(""%c"", nueva[i]);
    if (neu[0] == 'z')
        printf(""z"");
}",0.09562154,0
186,WS2021,9,Antwort 10,C,Leonhard,Dirks,Sandro,Paluteder,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	int position = 0;
	while(position < zahl && dest[position] != '\0' && src[position] != '\0'){
		dest[position] = src[position];
		position ++;
	}
}

void umdrehen( char* str )
{
	int groesse = 0;
	while(str[groesse] != '\0') groesse++;
	char kopie[groesse];
	for(int i = 0; i < groesse; i++) kopie[i] = str[i];
	for(int i = 0; i < groesse; i++){
		str[i] = kopie[groesse - 1 - i];
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[])
{   
     // char *argv[] is a array of strings, each command line arguments
    // int argc is the amount of command line arguments
    
    //loop through all command line arguements. First command line argument is always taken by default so we start at 1.
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
  
        
        //printf(""Current 2 %c \n"",CurrentCommandString[0]);
       
        //int LengthOfString = sizeof(CurrentCommandString) / sizeof(char*);
        
        //printf(""Current Size %i \n"",LengthOfString);
        
        int i = 0;
        while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
            if (CurrentCommandString[i] == 'x' 
             || CurrentCommandString[i] == 'y' 
             || CurrentCommandString[i] == 'q'
             || CurrentCommandString[i] == 'X'
             || CurrentCommandString[i] == 'Y' 
             || CurrentCommandString[i] == 'Q')
             {   
                 int j = i;
                 while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
                    CurrentCommandString[j] = CurrentCommandString[j + 1]; 
                    ++j; 
                 }
             }
            ++i;
         }
        
        
        //printf(""x,y,q und X,Y,Q aussortiert TEST 1: %s \n"", argv[kk]);
    }
    
    char StringXYQRemoved[5000];
    int StringXYQRemovedIndex = 0;
       
    char StringThirdRemoved[5000];
    int StringThirdRemovedIndex = 0;
    
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
        
        
        //String 1 
        
        int length, j;
        
          // store length of s1 in the length variable
          length = 0;
          while (StringXYQRemoved[length] != '\0' && StringXYQRemoved[length] != ' ') {
            ++length;
          }
        
          // concatenate s2 to s1
          for (j = 0; CurrentCommandString[j] != '\0' && CurrentCommandString[length] != ' '; ++j, ++length) {
            StringXYQRemoved[length] = CurrentCommandString[j];
          }
        
          // terminating the s1 string
          StringXYQRemoved[length] = '\0';       
    }
    
    
    
        //String2
        int length, j;
        // store length of s1 in the length variable
        length = 0;
        while (StringThirdRemoved[length] != '\0' && StringThirdRemoved[length] != ' ') {
        ++length;
        }
        
        // concatenate s2 to s1
        for (j = 0; StringXYQRemoved[j] != '\0' && StringXYQRemoved[length] != ' '; ++length) {
         StringThirdRemoved[length] = StringXYQRemoved[j];
         
         //printf(""WTFFFF %c \n"",StringXYQRemoved[j]);
         j+=3;
        }
        
        // terminating the s1 string
        StringThirdRemoved[length] = '\0';       
        
    printf(""x,y,q und X,Y,Q aussortiert: %s \n"", StringXYQRemoved);
    printf(""Der neue String lautet: %s"", StringThirdRemoved);
    
}",0.0798786653,0
187,WS2021,9,Antwort 10,C,Leonhard,Dirks,Jonas,Bestgen,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	int position = 0;
	while(position < zahl && dest[position] != '\0' && src[position] != '\0'){
		dest[position] = src[position];
		position ++;
	}
}

void umdrehen( char* str )
{
	int groesse = 0;
	while(str[groesse] != '\0') groesse++;
	char kopie[groesse];
	for(int i = 0; i < groesse; i++) kopie[i] = str[i];
	for(int i = 0; i < groesse; i++){
		str[i] = kopie[groesse - 1 - i];
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
	for (int i=0;((i<zahl)&&((dest[i])!=('\0')))&&((src[i])!=('\0'));i++)
dest[i]=src[i];

	
}

void umdrehen( char* str )
{	char temp[30]="""";
	int i=0;
	for(;(str[i+1])!=('\0');i++){}
	for(int j=0;(str[j])!=('\0');j++) {temp[j]=str[i-j];}
	for(int j=0;(str[j])!=('\0');j++) {str[j]=temp[(j)];}
	
}

int main( int argc, char* argv[] )
{
	char test[11]= ""0123456789"";
	printf( ""Das Original ist: %s \n"", test );
	ersetzen( test , atoi(argv[1]), argv[2] );
	printf( ""Ersetzt : %s \n"", test );
	umdrehen( test );
	printf( ""Rückwärts : %s \n"", test );
}",0.6191474493,0
188,WS2021,9,Antwort 10,C,Leonhard,Dirks,Constanze Cosima,Freier,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	int position = 0;
	while(position < zahl && dest[position] != '\0' && src[position] != '\0'){
		dest[position] = src[position];
		position ++;
	}
}

void umdrehen( char* str )
{
	int groesse = 0;
	while(str[groesse] != '\0') groesse++;
	char kopie[groesse];
	for(int i = 0; i < groesse; i++) kopie[i] = str[i];
	for(int i = 0; i < groesse; i++){
		str[i] = kopie[groesse - 1 - i];
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdlib.h>
#include <stdio.h>
int Laenge(char *str)
{
    int size = 0;
    for (int j = 0; str[j] != '\0'; j++)
    {
        size += 1;
    }
    return size;
}

int Kopieren(char *dest, char *src)
{
    int i = 0;
    int j = 0;
    while (src[i] != '\0')
    {
        if (src[i] != 'q' && src[i] != 'x' && src[i] != 'y' && src[i] != 'Q' && src[i] != 'X' && src[i] != 'Y')
        {
            dest[j++] = src[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int Entfernen(char *Eingabe)
{
    int i = 0;
    int j = 0;
    while (Eingabe[i] != '\0')
    {
        if (i % 3 == 0)
        {
            Eingabe[j++] = Eingabe[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int main(int argc, char *argv[])
{
    int Gesamtlaenge = 0;
    for (int i = 1; i < argc; i++)
    {
        Gesamtlaenge += Laenge(argv[i]);
    }
    char Ausgabe[Gesamtlaenge + 1];
    char *Ziel = Ausgabe;
    for (int i = 1; i < argc; i++)
    {
        Ziel += Kopieren(Ziel, argv[i]);
    }
    *Ziel = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", Ausgabe);
    Ausgabe[Entfernen(Ausgabe)] = '\0';
    printf(""Der neue String lautet: %s\n"", Ausgabe);
}",0.1361661033,0
190,WS2021,9,Antwort 10,C,Leonhard,Dirks,Caspar Valentin,Zell,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	int position = 0;
	while(position < zahl && dest[position] != '\0' && src[position] != '\0'){
		dest[position] = src[position];
		position ++;
	}
}

void umdrehen( char* str )
{
	int groesse = 0;
	while(str[groesse] != '\0') groesse++;
	char kopie[groesse];
	for(int i = 0; i < groesse; i++) kopie[i] = str[i];
	for(int i = 0; i < groesse; i++){
		str[i] = kopie[groesse - 1 - i];
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0;(i < zahl) && (i < 10) && (src[i] != '\0'); i++)
    {
        dest[i] = src[i];
    }
}

void umdrehen(char* str )
{
    int size;
    for (int j = 1; str[j] != '\0'; j++)
    {
        size = j + 2;
    }
    char Kopie[size];
    for (int i = 0; i < (size - 1); i++)
    {
        Kopie[size - 2- i] = str[i];
    }
    for (int i = 0; i < size; i++)
    {
        str[i] = Kopie[i];
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen(test, atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.5549872123,0
191,WS2021,9,Antwort 10,C,Leonhard,Dirks,Jakob,Kühl,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	int position = 0;
	while(position < zahl && dest[position] != '\0' && src[position] != '\0'){
		dest[position] = src[position];
		position ++;
	}
}

void umdrehen( char* str )
{
	int groesse = 0;
	while(str[groesse] != '\0') groesse++;
	char kopie[groesse];
	for(int i = 0; i < groesse; i++) kopie[i] = str[i];
	for(int i = 0; i < groesse; i++){
		str[i] = kopie[groesse - 1 - i];
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include<stdio.h>

int main(int argc, char* argv[]){
	char a[100]= """";
	char b[100]="""";
	int x=0;
	for(int i=1 ;i<argc ;i++){
		for (int j=0; argv[i][j] != '\0'; j++){
			if(argv[i][j]== 'x' || argv[i][j]== 'y' || argv[i][j]== 'q' || argv[i][j]== 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q') continue;
			else {
				a[x]=argv[i][j];
				x+=1;
			}
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", a);
	int y=0;
	for(int i=0; i<100; i+=3){
		b[y]=a[i];
		y++;
	}
	printf(""Der neue String lautet: %s\n"", b);
}",0.12,0
192,WS2021,9,Antwort 10,C,Leonhard,Dirks,Niklas,Mohr,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	int position = 0;
	while(position < zahl && dest[position] != '\0' && src[position] != '\0'){
		dest[position] = src[position];
		position ++;
	}
}

void umdrehen( char* str )
{
	int groesse = 0;
	while(str[groesse] != '\0') groesse++;
	char kopie[groesse];
	for(int i = 0; i < groesse; i++) kopie[i] = str[i];
	for(int i = 0; i < groesse; i++){
		str[i] = kopie[groesse - 1 - i];
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

void aussortieren(char* str)
{
    int t = 0;
    char temp[50];
    for(int i = 0; str[i] != '\0'; i++)
    {
        int t = 0;
        char temp[50];
        if(str[i] == 'x'|| str[i] == 'y'|| str[i] == 'q');
        else if(str[i] == 'X'|| str[i] == 'Y'|| str[i] == 'Q');
        else 
        {
            temp[t] = str[i];
            t++;
        }
    }
    str = &temp;
}


char* sortieren(int länge, char* str[])
{
    int t = 0;
    char temp[200];
    for(int i = 0; i < länge; i++)
    {
        for(int a = 0; a != '\0'; a++)
        {
            temp[t] = str[i+1][a];
            t++;
        }
    }
}   


int main( int argc, char* argv[] )
{  
    int length = sizeof(argv) - 1;
    for(int i = 1; i <= length; i++)
    {
        aussortieren(argv[i]);
    }
    char zusammen = sortieren(length, argv);
    printf(""x,y,q und X,Y,Q aussortiert: %s"", zusammen); 
}",0.1518113859,0
193,WS2021,9,Antwort 10,C,Leonhard,Dirks,Tammo Hendrik,Nie,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	int position = 0;
	while(position < zahl && dest[position] != '\0' && src[position] != '\0'){
		dest[position] = src[position];
		position ++;
	}
}

void umdrehen( char* str )
{
	int groesse = 0;
	while(str[groesse] != '\0') groesse++;
	char kopie[groesse];
	for(int i = 0; i < groesse; i++) kopie[i] = str[i];
	for(int i = 0; i < groesse; i++){
		str[i] = kopie[groesse - 1 - i];
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
 
int main(int argc, char* argv[52])
{
   //aneinanderhängen

   int zahl = 0;
   int* p_zahl = &zahl;
   int counter = 1;
   int* p_counter = &counter;
   char str[30];
   for(int i = 0; i < argc-1 ; i++)
   {
      for(int j = 0; argv[counter][j] != '\0'; j++)
      {
         str[zahl] = argv[counter][j];
         *p_zahl += 1;
         
      }
      *p_counter += 1;
   }
   str[zahl+1] = '\0';

   int nummer = 0;
   int* p_nummer = &nummer;
   char str2[25];
   for(int i = 0; ; i++)
   {
      if((str[i] != 'x') && (str[i] != 'y') && (str[i] != 'q') && (str[i] != 'X') && (str[i] != 'Y') && (str[i] != 'Q'))
      {
         
         str2[nummer] = str[i];
         if(str[i] == '\0') break;
         *p_nummer += 1;
      }
   }

   //jedes dritte in str3
   char str3[35];
   for(int i = 0; i < 57; i +=3)
   {
      //if((str2[i] == '\0')) break;
      str3[i/3] = str2[i];  
      str3[i/3+1] = '\0'  ;
   }
   //drucken:

   printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str2, str3);
}",0.1264612115,0
194,WS2021,9,Antwort 10,C,Leonhard,Dirks,Sören Sven,Werner,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	int position = 0;
	while(position < zahl && dest[position] != '\0' && src[position] != '\0'){
		dest[position] = src[position];
		position ++;
	}
}

void umdrehen( char* str )
{
	int groesse = 0;
	while(str[groesse] != '\0') groesse++;
	char kopie[groesse];
	for(int i = 0; i < groesse; i++) kopie[i] = str[i];
	for(int i = 0; i < groesse; i++){
		str[i] = kopie[groesse - 1 - i];
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
/*
int zaehlen(char* str){
	int counter = 0;
	while(str[counter] != '\0'){
		counter++;
	}
	return counter;
}*/

int main( int argc, char* argv[]){



	char str[100] = """";

	for(int i = 1; i<argc; i++){
		strcat(str, argv[i]);
	}
	printf(""%s\n"", str);


}",0.2622061483,0
197,WS2021,9,Antwort 10,C,Annegret Claire,Kruschel,Lucie Chantal,Girod,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){

char* compactstring = (char*) malloc(400* sizeof(char));
int x = 0;
for(int i=1; i < argc; i++){
	int j = 0;
while(*(argv[i]+j) != '\0'){
if((*(argv[i]+j) != 'x') && (*(argv[i]+j)!= 'y') && (*(argv[i]+j) != 'q')&& (*(argv[i]+j) != 'X')&& (*(argv[i]+j) != 'Y')&& (*(argv[i]+j) != 'Q')){
			*(compactstring+x) = *(argv[i]+j);
			x++;
	}
	j++;
}
}
compactstring = (char*) realloc(compactstring,x+sizeof(char));
int shortendlength=(x+1)/3;
char* shortend = (char*) malloc(shortendlength * sizeof(char));
int y = 0;
for (int i=0;i<x+1;i++){
if((i%3)==0){
	*(shortend+y) = *(compactstring+i);
	y++;
}
}
printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", compactstring,shortend);
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){
	
	char* text_str = malloc(400* sizeof(char));
	int idx = 0;
	for(int i = 1; i < argc; i++){
		int j = 0;
		while(*(argv[i]+j) != '\0'){
			if((*(argv[i]+j) != 'x') && (*(argv[i]+j) != 'y') && (*(argv[i]+j) != 'q') && (*(argv[i]+j) != 'X') && (*(argv[i]+j) != 'Y') && (*(argv[i]+j) != 'Q')){
			*(text_str+idx) = *(argv[i]+j);
			idx++;
			}
			j++;
		}
	}
	
	text_str = realloc(text_str,idx+1 * sizeof(char));
	int solution_length = (idx+1) / 3;
	char* solution = malloc(solution_length * sizeof(char));
	int count = 0;
	for(int i = 0; i < idx+1; i++){
		if((i % 3) == 0){
			*(solution+count) = *(text_str+i);
			count++;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", text_str, solution);
	
}",0.5950920245,0
199,WS2021,9,Antwort 10,C,Annegret Claire,Kruschel,Moritz,Batilla,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){

char* compactstring = (char*) malloc(400* sizeof(char));
int x = 0;
for(int i=1; i < argc; i++){
	int j = 0;
while(*(argv[i]+j) != '\0'){
if((*(argv[i]+j) != 'x') && (*(argv[i]+j)!= 'y') && (*(argv[i]+j) != 'q')&& (*(argv[i]+j) != 'X')&& (*(argv[i]+j) != 'Y')&& (*(argv[i]+j) != 'Q')){
			*(compactstring+x) = *(argv[i]+j);
			x++;
	}
	j++;
}
}
compactstring = (char*) realloc(compactstring,x+sizeof(char));
int shortendlength=(x+1)/3;
char* shortend = (char*) malloc(shortendlength * sizeof(char));
int y = 0;
for (int i=0;i<x+1;i++){
if((i%3)==0){
	*(shortend+y) = *(compactstring+i);
	y++;
}
}
printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", compactstring,shortend);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    int x;
    for(x = 0; x < zahl && *dest != '\0' && *src != '\0'; x++)
    {
       *dest = *src;
       src++;
       dest++;
    }
}

void umdrehen( char* str )
{
    int y = 0;
    int count = 0;
    int tmp = 0;

    for(count=0; str[count] != 0; count++);
    for(y = 0; y <count/2; y++)
    {
        tmp = str[y];
        str[y]=str[count - 1 - y];
        str[count - 1 - y] = tmp;
    }
    for(y = 0; y < count; y++);
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.1235330451,0
200,WS2021,9,Antwort 10,C,Annegret Claire,Kruschel,Can Mert,Ergin,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){

char* compactstring = (char*) malloc(400* sizeof(char));
int x = 0;
for(int i=1; i < argc; i++){
	int j = 0;
while(*(argv[i]+j) != '\0'){
if((*(argv[i]+j) != 'x') && (*(argv[i]+j)!= 'y') && (*(argv[i]+j) != 'q')&& (*(argv[i]+j) != 'X')&& (*(argv[i]+j) != 'Y')&& (*(argv[i]+j) != 'Q')){
			*(compactstring+x) = *(argv[i]+j);
			x++;
	}
	j++;
}
}
compactstring = (char*) realloc(compactstring,x+sizeof(char));
int shortendlength=(x+1)/3;
char* shortend = (char*) malloc(shortendlength * sizeof(char));
int y = 0;
for (int i=0;i<x+1;i++){
if((i%3)==0){
	*(shortend+y) = *(compactstring+i);
	y++;
}
}
printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", compactstring,shortend);
}","#include <stdio.h>

int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}",0.1707757066,0
201,WS2021,9,Antwort 10,C,Annegret Claire,Kruschel,Daniel,Grönefeld,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){

char* compactstring = (char*) malloc(400* sizeof(char));
int x = 0;
for(int i=1; i < argc; i++){
	int j = 0;
while(*(argv[i]+j) != '\0'){
if((*(argv[i]+j) != 'x') && (*(argv[i]+j)!= 'y') && (*(argv[i]+j) != 'q')&& (*(argv[i]+j) != 'X')&& (*(argv[i]+j) != 'Y')&& (*(argv[i]+j) != 'Q')){
			*(compactstring+x) = *(argv[i]+j);
			x++;
	}
	j++;
}
}
compactstring = (char*) realloc(compactstring,x+sizeof(char));
int shortendlength=(x+1)/3;
char* shortend = (char*) malloc(shortendlength * sizeof(char));
int y = 0;
for (int i=0;i<x+1;i++){
if((i%3)==0){
	*(shortend+y) = *(compactstring+i);
	y++;
}
}
printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", compactstring,shortend);
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{  
	for(int i = 0; src[i] != '\0' && dest[i] != '\0' && i < zahl; i++){
		dest[i] = src[i];
	}
}

void umdrehen( char* str)
{
	int length_str = 0;
	for( int i = 0; str[i] != '\0'; i++)
		length_str = i;
	char temp_string[length_str];
	for( int i = 0; i <= length_str; i++)
		temp_string[i] = str[length_str-i];
	for( int i = 0; i <= length_str; i++)
		str[i] = temp_string[i];
}

int main( int argc, char* argv[] )
{  
  char test[11] = ""0123456789"";
  printf( ""Das Original ist: %s \n"", test);
  ersetzen(test , atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test);
  umdrehen( test );	
  printf( ""Rückwärts : %s \n"", test );
}",0.1302385558,0
203,WS2021,9,Antwort 10,C,Annegret Claire,Kruschel,Catalina,Florez Vargas,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){

char* compactstring = (char*) malloc(400* sizeof(char));
int x = 0;
for(int i=1; i < argc; i++){
	int j = 0;
while(*(argv[i]+j) != '\0'){
if((*(argv[i]+j) != 'x') && (*(argv[i]+j)!= 'y') && (*(argv[i]+j) != 'q')&& (*(argv[i]+j) != 'X')&& (*(argv[i]+j) != 'Y')&& (*(argv[i]+j) != 'Q')){
			*(compactstring+x) = *(argv[i]+j);
			x++;
	}
	j++;
}
}
compactstring = (char*) realloc(compactstring,x+sizeof(char));
int shortendlength=(x+1)/3;
char* shortend = (char*) malloc(shortendlength * sizeof(char));
int y = 0;
for (int i=0;i<x+1;i++){
if((i%3)==0){
	*(shortend+y) = *(compactstring+i);
	y++;
}
}
printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", compactstring,shortend);
}","#include <stdio.h>

int main(int argc, char *argv[])

{
    int u;
    int f = 0;
    char neu[20];
    char nueva[15];
    int x = 0;
    for (int i = 1; i < argc; i++)
    {
        u = 0;
        while ((argv[i][u]) != '\0')
        {
            if (argv[i][u] != 'x' && argv[i][u] != 'y' && argv[i][u] != 'q' && argv[i][u] != 'X' && argv[i][u] != 'Y' && argv[i][u] != 'Q')
            {
                neu[f] = argv[i][u];
                f++;
            }
            u++;
        }
    }

    for (int i = 0; i <= f; i++)
    {
        if (x > (i / 3) || i == 0)
        {
            if (i == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
            if (((i) % 3) == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
        }
    }

    printf(""x,y,q und X,Y,Q aussortiert: "");
    for (int i = 0; i < f; i++)
        if (neu[i] != '\0')
        {
            printf(""%c"", neu[i]);
        }

    printf(""\n"");

     printf(""Der neue String lautet: "");
    for (int i = 1; i < (f / 2)-1; i++)
            printf(""%c"", nueva[i]);
    if (neu[0] == 'z')
        printf(""z"");
}",0.2885473475,0
204,WS2021,9,Antwort 10,C,Annegret Claire,Kruschel,Sandro,Paluteder,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){

char* compactstring = (char*) malloc(400* sizeof(char));
int x = 0;
for(int i=1; i < argc; i++){
	int j = 0;
while(*(argv[i]+j) != '\0'){
if((*(argv[i]+j) != 'x') && (*(argv[i]+j)!= 'y') && (*(argv[i]+j) != 'q')&& (*(argv[i]+j) != 'X')&& (*(argv[i]+j) != 'Y')&& (*(argv[i]+j) != 'Q')){
			*(compactstring+x) = *(argv[i]+j);
			x++;
	}
	j++;
}
}
compactstring = (char*) realloc(compactstring,x+sizeof(char));
int shortendlength=(x+1)/3;
char* shortend = (char*) malloc(shortendlength * sizeof(char));
int y = 0;
for (int i=0;i<x+1;i++){
if((i%3)==0){
	*(shortend+y) = *(compactstring+i);
	y++;
}
}
printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", compactstring,shortend);
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[])
{   
     // char *argv[] is a array of strings, each command line arguments
    // int argc is the amount of command line arguments
    
    //loop through all command line arguements. First command line argument is always taken by default so we start at 1.
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
  
        
        //printf(""Current 2 %c \n"",CurrentCommandString[0]);
       
        //int LengthOfString = sizeof(CurrentCommandString) / sizeof(char*);
        
        //printf(""Current Size %i \n"",LengthOfString);
        
        int i = 0;
        while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
            if (CurrentCommandString[i] == 'x' 
             || CurrentCommandString[i] == 'y' 
             || CurrentCommandString[i] == 'q'
             || CurrentCommandString[i] == 'X'
             || CurrentCommandString[i] == 'Y' 
             || CurrentCommandString[i] == 'Q')
             {   
                 int j = i;
                 while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
                    CurrentCommandString[j] = CurrentCommandString[j + 1]; 
                    ++j; 
                 }
             }
            ++i;
         }
        
        
        //printf(""x,y,q und X,Y,Q aussortiert TEST 1: %s \n"", argv[kk]);
    }
    
    char StringXYQRemoved[5000];
    int StringXYQRemovedIndex = 0;
       
    char StringThirdRemoved[5000];
    int StringThirdRemovedIndex = 0;
    
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
        
        
        //String 1 
        
        int length, j;
        
          // store length of s1 in the length variable
          length = 0;
          while (StringXYQRemoved[length] != '\0' && StringXYQRemoved[length] != ' ') {
            ++length;
          }
        
          // concatenate s2 to s1
          for (j = 0; CurrentCommandString[j] != '\0' && CurrentCommandString[length] != ' '; ++j, ++length) {
            StringXYQRemoved[length] = CurrentCommandString[j];
          }
        
          // terminating the s1 string
          StringXYQRemoved[length] = '\0';       
    }
    
    
    
        //String2
        int length, j;
        // store length of s1 in the length variable
        length = 0;
        while (StringThirdRemoved[length] != '\0' && StringThirdRemoved[length] != ' ') {
        ++length;
        }
        
        // concatenate s2 to s1
        for (j = 0; StringXYQRemoved[j] != '\0' && StringXYQRemoved[length] != ' '; ++length) {
         StringThirdRemoved[length] = StringXYQRemoved[j];
         
         //printf(""WTFFFF %c \n"",StringXYQRemoved[j]);
         j+=3;
        }
        
        // terminating the s1 string
        StringThirdRemoved[length] = '\0';       
        
    printf(""x,y,q und X,Y,Q aussortiert: %s \n"", StringXYQRemoved);
    printf(""Der neue String lautet: %s"", StringThirdRemoved);
    
}",0.092323131,0
205,WS2021,9,Antwort 10,C,Annegret Claire,Kruschel,Jonas,Bestgen,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){

char* compactstring = (char*) malloc(400* sizeof(char));
int x = 0;
for(int i=1; i < argc; i++){
	int j = 0;
while(*(argv[i]+j) != '\0'){
if((*(argv[i]+j) != 'x') && (*(argv[i]+j)!= 'y') && (*(argv[i]+j) != 'q')&& (*(argv[i]+j) != 'X')&& (*(argv[i]+j) != 'Y')&& (*(argv[i]+j) != 'Q')){
			*(compactstring+x) = *(argv[i]+j);
			x++;
	}
	j++;
}
}
compactstring = (char*) realloc(compactstring,x+sizeof(char));
int shortendlength=(x+1)/3;
char* shortend = (char*) malloc(shortendlength * sizeof(char));
int y = 0;
for (int i=0;i<x+1;i++){
if((i%3)==0){
	*(shortend+y) = *(compactstring+i);
	y++;
}
}
printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", compactstring,shortend);
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
	for (int i=0;((i<zahl)&&((dest[i])!=('\0')))&&((src[i])!=('\0'));i++)
dest[i]=src[i];

	
}

void umdrehen( char* str )
{	char temp[30]="""";
	int i=0;
	for(;(str[i+1])!=('\0');i++){}
	for(int j=0;(str[j])!=('\0');j++) {temp[j]=str[i-j];}
	for(int j=0;(str[j])!=('\0');j++) {str[j]=temp[(j)];}
	
}

int main( int argc, char* argv[] )
{
	char test[11]= ""0123456789"";
	printf( ""Das Original ist: %s \n"", test );
	ersetzen( test , atoi(argv[1]), argv[2] );
	printf( ""Ersetzt : %s \n"", test );
	umdrehen( test );
	printf( ""Rückwärts : %s \n"", test );
}",0.12183436,0
206,WS2021,9,Antwort 10,C,Annegret Claire,Kruschel,Constanze Cosima,Freier,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){

char* compactstring = (char*) malloc(400* sizeof(char));
int x = 0;
for(int i=1; i < argc; i++){
	int j = 0;
while(*(argv[i]+j) != '\0'){
if((*(argv[i]+j) != 'x') && (*(argv[i]+j)!= 'y') && (*(argv[i]+j) != 'q')&& (*(argv[i]+j) != 'X')&& (*(argv[i]+j) != 'Y')&& (*(argv[i]+j) != 'Q')){
			*(compactstring+x) = *(argv[i]+j);
			x++;
	}
	j++;
}
}
compactstring = (char*) realloc(compactstring,x+sizeof(char));
int shortendlength=(x+1)/3;
char* shortend = (char*) malloc(shortendlength * sizeof(char));
int y = 0;
for (int i=0;i<x+1;i++){
if((i%3)==0){
	*(shortend+y) = *(compactstring+i);
	y++;
}
}
printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", compactstring,shortend);
}","#include <stdlib.h>
#include <stdio.h>
int Laenge(char *str)
{
    int size = 0;
    for (int j = 0; str[j] != '\0'; j++)
    {
        size += 1;
    }
    return size;
}

int Kopieren(char *dest, char *src)
{
    int i = 0;
    int j = 0;
    while (src[i] != '\0')
    {
        if (src[i] != 'q' && src[i] != 'x' && src[i] != 'y' && src[i] != 'Q' && src[i] != 'X' && src[i] != 'Y')
        {
            dest[j++] = src[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int Entfernen(char *Eingabe)
{
    int i = 0;
    int j = 0;
    while (Eingabe[i] != '\0')
    {
        if (i % 3 == 0)
        {
            Eingabe[j++] = Eingabe[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int main(int argc, char *argv[])
{
    int Gesamtlaenge = 0;
    for (int i = 1; i < argc; i++)
    {
        Gesamtlaenge += Laenge(argv[i]);
    }
    char Ausgabe[Gesamtlaenge + 1];
    char *Ziel = Ausgabe;
    for (int i = 1; i < argc; i++)
    {
        Ziel += Kopieren(Ziel, argv[i]);
    }
    *Ziel = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", Ausgabe);
    Ausgabe[Entfernen(Ausgabe)] = '\0';
    printf(""Der neue String lautet: %s\n"", Ausgabe);
}",0.1761066159,0
208,WS2021,9,Antwort 10,C,Annegret Claire,Kruschel,Caspar Valentin,Zell,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){

char* compactstring = (char*) malloc(400* sizeof(char));
int x = 0;
for(int i=1; i < argc; i++){
	int j = 0;
while(*(argv[i]+j) != '\0'){
if((*(argv[i]+j) != 'x') && (*(argv[i]+j)!= 'y') && (*(argv[i]+j) != 'q')&& (*(argv[i]+j) != 'X')&& (*(argv[i]+j) != 'Y')&& (*(argv[i]+j) != 'Q')){
			*(compactstring+x) = *(argv[i]+j);
			x++;
	}
	j++;
}
}
compactstring = (char*) realloc(compactstring,x+sizeof(char));
int shortendlength=(x+1)/3;
char* shortend = (char*) malloc(shortendlength * sizeof(char));
int y = 0;
for (int i=0;i<x+1;i++){
if((i%3)==0){
	*(shortend+y) = *(compactstring+i);
	y++;
}
}
printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", compactstring,shortend);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0;(i < zahl) && (i < 10) && (src[i] != '\0'); i++)
    {
        dest[i] = src[i];
    }
}

void umdrehen(char* str )
{
    int size;
    for (int j = 1; str[j] != '\0'; j++)
    {
        size = j + 2;
    }
    char Kopie[size];
    for (int i = 0; i < (size - 1); i++)
    {
        Kopie[size - 2- i] = str[i];
    }
    for (int i = 0; i < size; i++)
    {
        str[i] = Kopie[i];
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen(test, atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.1267252196,0
209,WS2021,9,Antwort 10,C,Annegret Claire,Kruschel,Jakob,Kühl,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){

char* compactstring = (char*) malloc(400* sizeof(char));
int x = 0;
for(int i=1; i < argc; i++){
	int j = 0;
while(*(argv[i]+j) != '\0'){
if((*(argv[i]+j) != 'x') && (*(argv[i]+j)!= 'y') && (*(argv[i]+j) != 'q')&& (*(argv[i]+j) != 'X')&& (*(argv[i]+j) != 'Y')&& (*(argv[i]+j) != 'Q')){
			*(compactstring+x) = *(argv[i]+j);
			x++;
	}
	j++;
}
}
compactstring = (char*) realloc(compactstring,x+sizeof(char));
int shortendlength=(x+1)/3;
char* shortend = (char*) malloc(shortendlength * sizeof(char));
int y = 0;
for (int i=0;i<x+1;i++){
if((i%3)==0){
	*(shortend+y) = *(compactstring+i);
	y++;
}
}
printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", compactstring,shortend);
}","#include<stdio.h>

int main(int argc, char* argv[]){
	char a[100]= """";
	char b[100]="""";
	int x=0;
	for(int i=1 ;i<argc ;i++){
		for (int j=0; argv[i][j] != '\0'; j++){
			if(argv[i][j]== 'x' || argv[i][j]== 'y' || argv[i][j]== 'q' || argv[i][j]== 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q') continue;
			else {
				a[x]=argv[i][j];
				x+=1;
			}
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", a);
	int y=0;
	for(int i=0; i<100; i+=3){
		b[y]=a[i];
		y++;
	}
	printf(""Der neue String lautet: %s\n"", b);
}",0.2556390977,0
210,WS2021,9,Antwort 10,C,Annegret Claire,Kruschel,Niklas,Mohr,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){

char* compactstring = (char*) malloc(400* sizeof(char));
int x = 0;
for(int i=1; i < argc; i++){
	int j = 0;
while(*(argv[i]+j) != '\0'){
if((*(argv[i]+j) != 'x') && (*(argv[i]+j)!= 'y') && (*(argv[i]+j) != 'q')&& (*(argv[i]+j) != 'X')&& (*(argv[i]+j) != 'Y')&& (*(argv[i]+j) != 'Q')){
			*(compactstring+x) = *(argv[i]+j);
			x++;
	}
	j++;
}
}
compactstring = (char*) realloc(compactstring,x+sizeof(char));
int shortendlength=(x+1)/3;
char* shortend = (char*) malloc(shortendlength * sizeof(char));
int y = 0;
for (int i=0;i<x+1;i++){
if((i%3)==0){
	*(shortend+y) = *(compactstring+i);
	y++;
}
}
printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", compactstring,shortend);
}","#include <stdio.h>
#include <stdlib.h>

void aussortieren(char* str)
{
    int t = 0;
    char temp[50];
    for(int i = 0; str[i] != '\0'; i++)
    {
        int t = 0;
        char temp[50];
        if(str[i] == 'x'|| str[i] == 'y'|| str[i] == 'q');
        else if(str[i] == 'X'|| str[i] == 'Y'|| str[i] == 'Q');
        else 
        {
            temp[t] = str[i];
            t++;
        }
    }
    str = &temp;
}


char* sortieren(int länge, char* str[])
{
    int t = 0;
    char temp[200];
    for(int i = 0; i < länge; i++)
    {
        for(int a = 0; a != '\0'; a++)
        {
            temp[t] = str[i+1][a];
            t++;
        }
    }
}   


int main( int argc, char* argv[] )
{  
    int length = sizeof(argv) - 1;
    for(int i = 1; i <= length; i++)
    {
        aussortieren(argv[i]);
    }
    char zusammen = sortieren(length, argv);
    printf(""x,y,q und X,Y,Q aussortiert: %s"", zusammen); 
}",0.158281515,0
211,WS2021,9,Antwort 10,C,Annegret Claire,Kruschel,Tammo Hendrik,Nie,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){

char* compactstring = (char*) malloc(400* sizeof(char));
int x = 0;
for(int i=1; i < argc; i++){
	int j = 0;
while(*(argv[i]+j) != '\0'){
if((*(argv[i]+j) != 'x') && (*(argv[i]+j)!= 'y') && (*(argv[i]+j) != 'q')&& (*(argv[i]+j) != 'X')&& (*(argv[i]+j) != 'Y')&& (*(argv[i]+j) != 'Q')){
			*(compactstring+x) = *(argv[i]+j);
			x++;
	}
	j++;
}
}
compactstring = (char*) realloc(compactstring,x+sizeof(char));
int shortendlength=(x+1)/3;
char* shortend = (char*) malloc(shortendlength * sizeof(char));
int y = 0;
for (int i=0;i<x+1;i++){
if((i%3)==0){
	*(shortend+y) = *(compactstring+i);
	y++;
}
}
printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", compactstring,shortend);
}","#include <stdio.h>
#include <stdlib.h>
 
int main(int argc, char* argv[52])
{
   //aneinanderhängen

   int zahl = 0;
   int* p_zahl = &zahl;
   int counter = 1;
   int* p_counter = &counter;
   char str[30];
   for(int i = 0; i < argc-1 ; i++)
   {
      for(int j = 0; argv[counter][j] != '\0'; j++)
      {
         str[zahl] = argv[counter][j];
         *p_zahl += 1;
         
      }
      *p_counter += 1;
   }
   str[zahl+1] = '\0';

   int nummer = 0;
   int* p_nummer = &nummer;
   char str2[25];
   for(int i = 0; ; i++)
   {
      if((str[i] != 'x') && (str[i] != 'y') && (str[i] != 'q') && (str[i] != 'X') && (str[i] != 'Y') && (str[i] != 'Q'))
      {
         
         str2[nummer] = str[i];
         if(str[i] == '\0') break;
         *p_nummer += 1;
      }
   }

   //jedes dritte in str3
   char str3[35];
   for(int i = 0; i < 57; i +=3)
   {
      //if((str2[i] == '\0')) break;
      str3[i/3] = str2[i];  
      str3[i/3+1] = '\0'  ;
   }
   //drucken:

   printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str2, str3);
}",0.230125523,0
212,WS2021,9,Antwort 10,C,Annegret Claire,Kruschel,Sören Sven,Werner,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){

char* compactstring = (char*) malloc(400* sizeof(char));
int x = 0;
for(int i=1; i < argc; i++){
	int j = 0;
while(*(argv[i]+j) != '\0'){
if((*(argv[i]+j) != 'x') && (*(argv[i]+j)!= 'y') && (*(argv[i]+j) != 'q')&& (*(argv[i]+j) != 'X')&& (*(argv[i]+j) != 'Y')&& (*(argv[i]+j) != 'Q')){
			*(compactstring+x) = *(argv[i]+j);
			x++;
	}
	j++;
}
}
compactstring = (char*) realloc(compactstring,x+sizeof(char));
int shortendlength=(x+1)/3;
char* shortend = (char*) malloc(shortendlength * sizeof(char));
int y = 0;
for (int i=0;i<x+1;i++){
if((i%3)==0){
	*(shortend+y) = *(compactstring+i);
	y++;
}
}
printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", compactstring,shortend);
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
/*
int zaehlen(char* str){
	int counter = 0;
	while(str[counter] != '\0'){
		counter++;
	}
	return counter;
}*/

int main( int argc, char* argv[]){



	char str[100] = """";

	for(int i = 1; i<argc; i++){
		strcat(str, argv[i]);
	}
	printf(""%s\n"", str);


}",0.1602112676,0
235,WS2021,9,Antwort 10,C,Lucie Chantal,Girod,Moritz,Batilla,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){
	
	char* text_str = malloc(400* sizeof(char));
	int idx = 0;
	for(int i = 1; i < argc; i++){
		int j = 0;
		while(*(argv[i]+j) != '\0'){
			if((*(argv[i]+j) != 'x') && (*(argv[i]+j) != 'y') && (*(argv[i]+j) != 'q') && (*(argv[i]+j) != 'X') && (*(argv[i]+j) != 'Y') && (*(argv[i]+j) != 'Q')){
			*(text_str+idx) = *(argv[i]+j);
			idx++;
			}
			j++;
		}
	}
	
	text_str = realloc(text_str,idx+1 * sizeof(char));
	int solution_length = (idx+1) / 3;
	char* solution = malloc(solution_length * sizeof(char));
	int count = 0;
	for(int i = 0; i < idx+1; i++){
		if((i % 3) == 0){
			*(solution+count) = *(text_str+i);
			count++;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", text_str, solution);
	
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    int x;
    for(x = 0; x < zahl && *dest != '\0' && *src != '\0'; x++)
    {
       *dest = *src;
       src++;
       dest++;
    }
}

void umdrehen( char* str )
{
    int y = 0;
    int count = 0;
    int tmp = 0;

    for(count=0; str[count] != 0; count++);
    for(y = 0; y <count/2; y++)
    {
        tmp = str[y];
        str[y]=str[count - 1 - y];
        str[count - 1 - y] = tmp;
    }
    for(y = 0; y < count; y++);
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.1173623714,0
236,WS2021,9,Antwort 10,C,Lucie Chantal,Girod,Can Mert,Ergin,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){
	
	char* text_str = malloc(400* sizeof(char));
	int idx = 0;
	for(int i = 1; i < argc; i++){
		int j = 0;
		while(*(argv[i]+j) != '\0'){
			if((*(argv[i]+j) != 'x') && (*(argv[i]+j) != 'y') && (*(argv[i]+j) != 'q') && (*(argv[i]+j) != 'X') && (*(argv[i]+j) != 'Y') && (*(argv[i]+j) != 'Q')){
			*(text_str+idx) = *(argv[i]+j);
			idx++;
			}
			j++;
		}
	}
	
	text_str = realloc(text_str,idx+1 * sizeof(char));
	int solution_length = (idx+1) / 3;
	char* solution = malloc(solution_length * sizeof(char));
	int count = 0;
	for(int i = 0; i < idx+1; i++){
		if((i % 3) == 0){
			*(solution+count) = *(text_str+i);
			count++;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", text_str, solution);
	
}","#include <stdio.h>

int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}",0.2203889216,0
237,WS2021,9,Antwort 10,C,Lucie Chantal,Girod,Daniel,Grönefeld,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){
	
	char* text_str = malloc(400* sizeof(char));
	int idx = 0;
	for(int i = 1; i < argc; i++){
		int j = 0;
		while(*(argv[i]+j) != '\0'){
			if((*(argv[i]+j) != 'x') && (*(argv[i]+j) != 'y') && (*(argv[i]+j) != 'q') && (*(argv[i]+j) != 'X') && (*(argv[i]+j) != 'Y') && (*(argv[i]+j) != 'Q')){
			*(text_str+idx) = *(argv[i]+j);
			idx++;
			}
			j++;
		}
	}
	
	text_str = realloc(text_str,idx+1 * sizeof(char));
	int solution_length = (idx+1) / 3;
	char* solution = malloc(solution_length * sizeof(char));
	int count = 0;
	for(int i = 0; i < idx+1; i++){
		if((i % 3) == 0){
			*(solution+count) = *(text_str+i);
			count++;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", text_str, solution);
	
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{  
	for(int i = 0; src[i] != '\0' && dest[i] != '\0' && i < zahl; i++){
		dest[i] = src[i];
	}
}

void umdrehen( char* str)
{
	int length_str = 0;
	for( int i = 0; str[i] != '\0'; i++)
		length_str = i;
	char temp_string[length_str];
	for( int i = 0; i <= length_str; i++)
		temp_string[i] = str[length_str-i];
	for( int i = 0; i <= length_str; i++)
		str[i] = temp_string[i];
}

int main( int argc, char* argv[] )
{  
  char test[11] = ""0123456789"";
  printf( ""Das Original ist: %s \n"", test);
  ersetzen(test , atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test);
  umdrehen( test );	
  printf( ""Rückwärts : %s \n"", test );
}",0.18170347,0
239,WS2021,9,Antwort 10,C,Lucie Chantal,Girod,Catalina,Florez Vargas,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){
	
	char* text_str = malloc(400* sizeof(char));
	int idx = 0;
	for(int i = 1; i < argc; i++){
		int j = 0;
		while(*(argv[i]+j) != '\0'){
			if((*(argv[i]+j) != 'x') && (*(argv[i]+j) != 'y') && (*(argv[i]+j) != 'q') && (*(argv[i]+j) != 'X') && (*(argv[i]+j) != 'Y') && (*(argv[i]+j) != 'Q')){
			*(text_str+idx) = *(argv[i]+j);
			idx++;
			}
			j++;
		}
	}
	
	text_str = realloc(text_str,idx+1 * sizeof(char));
	int solution_length = (idx+1) / 3;
	char* solution = malloc(solution_length * sizeof(char));
	int count = 0;
	for(int i = 0; i < idx+1; i++){
		if((i % 3) == 0){
			*(solution+count) = *(text_str+i);
			count++;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", text_str, solution);
	
}","#include <stdio.h>

int main(int argc, char *argv[])

{
    int u;
    int f = 0;
    char neu[20];
    char nueva[15];
    int x = 0;
    for (int i = 1; i < argc; i++)
    {
        u = 0;
        while ((argv[i][u]) != '\0')
        {
            if (argv[i][u] != 'x' && argv[i][u] != 'y' && argv[i][u] != 'q' && argv[i][u] != 'X' && argv[i][u] != 'Y' && argv[i][u] != 'Q')
            {
                neu[f] = argv[i][u];
                f++;
            }
            u++;
        }
    }

    for (int i = 0; i <= f; i++)
    {
        if (x > (i / 3) || i == 0)
        {
            if (i == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
            if (((i) % 3) == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
        }
    }

    printf(""x,y,q und X,Y,Q aussortiert: "");
    for (int i = 0; i < f; i++)
        if (neu[i] != '\0')
        {
            printf(""%c"", neu[i]);
        }

    printf(""\n"");

     printf(""Der neue String lautet: "");
    for (int i = 1; i < (f / 2)-1; i++)
            printf(""%c"", nueva[i]);
    if (neu[0] == 'z')
        printf(""z"");
}",0.3052169673,0
240,WS2021,9,Antwort 10,C,Lucie Chantal,Girod,Sandro,Paluteder,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){
	
	char* text_str = malloc(400* sizeof(char));
	int idx = 0;
	for(int i = 1; i < argc; i++){
		int j = 0;
		while(*(argv[i]+j) != '\0'){
			if((*(argv[i]+j) != 'x') && (*(argv[i]+j) != 'y') && (*(argv[i]+j) != 'q') && (*(argv[i]+j) != 'X') && (*(argv[i]+j) != 'Y') && (*(argv[i]+j) != 'Q')){
			*(text_str+idx) = *(argv[i]+j);
			idx++;
			}
			j++;
		}
	}
	
	text_str = realloc(text_str,idx+1 * sizeof(char));
	int solution_length = (idx+1) / 3;
	char* solution = malloc(solution_length * sizeof(char));
	int count = 0;
	for(int i = 0; i < idx+1; i++){
		if((i % 3) == 0){
			*(solution+count) = *(text_str+i);
			count++;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", text_str, solution);
	
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[])
{   
     // char *argv[] is a array of strings, each command line arguments
    // int argc is the amount of command line arguments
    
    //loop through all command line arguements. First command line argument is always taken by default so we start at 1.
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
  
        
        //printf(""Current 2 %c \n"",CurrentCommandString[0]);
       
        //int LengthOfString = sizeof(CurrentCommandString) / sizeof(char*);
        
        //printf(""Current Size %i \n"",LengthOfString);
        
        int i = 0;
        while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
            if (CurrentCommandString[i] == 'x' 
             || CurrentCommandString[i] == 'y' 
             || CurrentCommandString[i] == 'q'
             || CurrentCommandString[i] == 'X'
             || CurrentCommandString[i] == 'Y' 
             || CurrentCommandString[i] == 'Q')
             {   
                 int j = i;
                 while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
                    CurrentCommandString[j] = CurrentCommandString[j + 1]; 
                    ++j; 
                 }
             }
            ++i;
         }
        
        
        //printf(""x,y,q und X,Y,Q aussortiert TEST 1: %s \n"", argv[kk]);
    }
    
    char StringXYQRemoved[5000];
    int StringXYQRemovedIndex = 0;
       
    char StringThirdRemoved[5000];
    int StringThirdRemovedIndex = 0;
    
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
        
        
        //String 1 
        
        int length, j;
        
          // store length of s1 in the length variable
          length = 0;
          while (StringXYQRemoved[length] != '\0' && StringXYQRemoved[length] != ' ') {
            ++length;
          }
        
          // concatenate s2 to s1
          for (j = 0; CurrentCommandString[j] != '\0' && CurrentCommandString[length] != ' '; ++j, ++length) {
            StringXYQRemoved[length] = CurrentCommandString[j];
          }
        
          // terminating the s1 string
          StringXYQRemoved[length] = '\0';       
    }
    
    
    
        //String2
        int length, j;
        // store length of s1 in the length variable
        length = 0;
        while (StringThirdRemoved[length] != '\0' && StringThirdRemoved[length] != ' ') {
        ++length;
        }
        
        // concatenate s2 to s1
        for (j = 0; StringXYQRemoved[j] != '\0' && StringXYQRemoved[length] != ' '; ++length) {
         StringThirdRemoved[length] = StringXYQRemoved[j];
         
         //printf(""WTFFFF %c \n"",StringXYQRemoved[j]);
         j+=3;
        }
        
        // terminating the s1 string
        StringThirdRemoved[length] = '\0';       
        
    printf(""x,y,q und X,Y,Q aussortiert: %s \n"", StringXYQRemoved);
    printf(""Der neue String lautet: %s"", StringThirdRemoved);
    
}",0.0880597015,0
241,WS2021,9,Antwort 10,C,Lucie Chantal,Girod,Jonas,Bestgen,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){
	
	char* text_str = malloc(400* sizeof(char));
	int idx = 0;
	for(int i = 1; i < argc; i++){
		int j = 0;
		while(*(argv[i]+j) != '\0'){
			if((*(argv[i]+j) != 'x') && (*(argv[i]+j) != 'y') && (*(argv[i]+j) != 'q') && (*(argv[i]+j) != 'X') && (*(argv[i]+j) != 'Y') && (*(argv[i]+j) != 'Q')){
			*(text_str+idx) = *(argv[i]+j);
			idx++;
			}
			j++;
		}
	}
	
	text_str = realloc(text_str,idx+1 * sizeof(char));
	int solution_length = (idx+1) / 3;
	char* solution = malloc(solution_length * sizeof(char));
	int count = 0;
	for(int i = 0; i < idx+1; i++){
		if((i % 3) == 0){
			*(solution+count) = *(text_str+i);
			count++;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", text_str, solution);
	
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
	for (int i=0;((i<zahl)&&((dest[i])!=('\0')))&&((src[i])!=('\0'));i++)
dest[i]=src[i];

	
}

void umdrehen( char* str )
{	char temp[30]="""";
	int i=0;
	for(;(str[i+1])!=('\0');i++){}
	for(int j=0;(str[j])!=('\0');j++) {temp[j]=str[i-j];}
	for(int j=0;(str[j])!=('\0');j++) {str[j]=temp[(j)];}
	
}

int main( int argc, char* argv[] )
{
	char test[11]= ""0123456789"";
	printf( ""Das Original ist: %s \n"", test );
	ersetzen( test , atoi(argv[1]), argv[2] );
	printf( ""Ersetzt : %s \n"", test );
	umdrehen( test );
	printf( ""Rückwärts : %s \n"", test );
}",0.1230769231,0
242,WS2021,9,Antwort 10,C,Lucie Chantal,Girod,Constanze Cosima,Freier,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){
	
	char* text_str = malloc(400* sizeof(char));
	int idx = 0;
	for(int i = 1; i < argc; i++){
		int j = 0;
		while(*(argv[i]+j) != '\0'){
			if((*(argv[i]+j) != 'x') && (*(argv[i]+j) != 'y') && (*(argv[i]+j) != 'q') && (*(argv[i]+j) != 'X') && (*(argv[i]+j) != 'Y') && (*(argv[i]+j) != 'Q')){
			*(text_str+idx) = *(argv[i]+j);
			idx++;
			}
			j++;
		}
	}
	
	text_str = realloc(text_str,idx+1 * sizeof(char));
	int solution_length = (idx+1) / 3;
	char* solution = malloc(solution_length * sizeof(char));
	int count = 0;
	for(int i = 0; i < idx+1; i++){
		if((i % 3) == 0){
			*(solution+count) = *(text_str+i);
			count++;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", text_str, solution);
	
}","#include <stdlib.h>
#include <stdio.h>
int Laenge(char *str)
{
    int size = 0;
    for (int j = 0; str[j] != '\0'; j++)
    {
        size += 1;
    }
    return size;
}

int Kopieren(char *dest, char *src)
{
    int i = 0;
    int j = 0;
    while (src[i] != '\0')
    {
        if (src[i] != 'q' && src[i] != 'x' && src[i] != 'y' && src[i] != 'Q' && src[i] != 'X' && src[i] != 'Y')
        {
            dest[j++] = src[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int Entfernen(char *Eingabe)
{
    int i = 0;
    int j = 0;
    while (Eingabe[i] != '\0')
    {
        if (i % 3 == 0)
        {
            Eingabe[j++] = Eingabe[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int main(int argc, char *argv[])
{
    int Gesamtlaenge = 0;
    for (int i = 1; i < argc; i++)
    {
        Gesamtlaenge += Laenge(argv[i]);
    }
    char Ausgabe[Gesamtlaenge + 1];
    char *Ziel = Ausgabe;
    for (int i = 1; i < argc; i++)
    {
        Ziel += Kopieren(Ziel, argv[i]);
    }
    *Ziel = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", Ausgabe);
    Ausgabe[Entfernen(Ausgabe)] = '\0';
    printf(""Der neue String lautet: %s\n"", Ausgabe);
}",0.1704918033,0
244,WS2021,9,Antwort 10,C,Lucie Chantal,Girod,Caspar Valentin,Zell,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){
	
	char* text_str = malloc(400* sizeof(char));
	int idx = 0;
	for(int i = 1; i < argc; i++){
		int j = 0;
		while(*(argv[i]+j) != '\0'){
			if((*(argv[i]+j) != 'x') && (*(argv[i]+j) != 'y') && (*(argv[i]+j) != 'q') && (*(argv[i]+j) != 'X') && (*(argv[i]+j) != 'Y') && (*(argv[i]+j) != 'Q')){
			*(text_str+idx) = *(argv[i]+j);
			idx++;
			}
			j++;
		}
	}
	
	text_str = realloc(text_str,idx+1 * sizeof(char));
	int solution_length = (idx+1) / 3;
	char* solution = malloc(solution_length * sizeof(char));
	int count = 0;
	for(int i = 0; i < idx+1; i++){
		if((i % 3) == 0){
			*(solution+count) = *(text_str+i);
			count++;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", text_str, solution);
	
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0;(i < zahl) && (i < 10) && (src[i] != '\0'); i++)
    {
        dest[i] = src[i];
    }
}

void umdrehen(char* str )
{
    int size;
    for (int j = 1; str[j] != '\0'; j++)
    {
        size = j + 2;
    }
    char Kopie[size];
    for (int i = 0; i < (size - 1); i++)
    {
        Kopie[size - 2- i] = str[i];
    }
    for (int i = 0; i < size; i++)
    {
        str[i] = Kopie[i];
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen(test, atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.1228501229,0
245,WS2021,9,Antwort 10,C,Lucie Chantal,Girod,Jakob,Kühl,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){
	
	char* text_str = malloc(400* sizeof(char));
	int idx = 0;
	for(int i = 1; i < argc; i++){
		int j = 0;
		while(*(argv[i]+j) != '\0'){
			if((*(argv[i]+j) != 'x') && (*(argv[i]+j) != 'y') && (*(argv[i]+j) != 'q') && (*(argv[i]+j) != 'X') && (*(argv[i]+j) != 'Y') && (*(argv[i]+j) != 'Q')){
			*(text_str+idx) = *(argv[i]+j);
			idx++;
			}
			j++;
		}
	}
	
	text_str = realloc(text_str,idx+1 * sizeof(char));
	int solution_length = (idx+1) / 3;
	char* solution = malloc(solution_length * sizeof(char));
	int count = 0;
	for(int i = 0; i < idx+1; i++){
		if((i % 3) == 0){
			*(solution+count) = *(text_str+i);
			count++;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", text_str, solution);
	
}","#include<stdio.h>

int main(int argc, char* argv[]){
	char a[100]= """";
	char b[100]="""";
	int x=0;
	for(int i=1 ;i<argc ;i++){
		for (int j=0; argv[i][j] != '\0'; j++){
			if(argv[i][j]== 'x' || argv[i][j]== 'y' || argv[i][j]== 'q' || argv[i][j]== 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q') continue;
			else {
				a[x]=argv[i][j];
				x+=1;
			}
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", a);
	int y=0;
	for(int i=0; i<100; i+=3){
		b[y]=a[i];
		y++;
	}
	printf(""Der neue String lautet: %s\n"", b);
}",0.3299120235,0
246,WS2021,9,Antwort 10,C,Lucie Chantal,Girod,Niklas,Mohr,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){
	
	char* text_str = malloc(400* sizeof(char));
	int idx = 0;
	for(int i = 1; i < argc; i++){
		int j = 0;
		while(*(argv[i]+j) != '\0'){
			if((*(argv[i]+j) != 'x') && (*(argv[i]+j) != 'y') && (*(argv[i]+j) != 'q') && (*(argv[i]+j) != 'X') && (*(argv[i]+j) != 'Y') && (*(argv[i]+j) != 'Q')){
			*(text_str+idx) = *(argv[i]+j);
			idx++;
			}
			j++;
		}
	}
	
	text_str = realloc(text_str,idx+1 * sizeof(char));
	int solution_length = (idx+1) / 3;
	char* solution = malloc(solution_length * sizeof(char));
	int count = 0;
	for(int i = 0; i < idx+1; i++){
		if((i % 3) == 0){
			*(solution+count) = *(text_str+i);
			count++;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", text_str, solution);
	
}","#include <stdio.h>
#include <stdlib.h>

void aussortieren(char* str)
{
    int t = 0;
    char temp[50];
    for(int i = 0; str[i] != '\0'; i++)
    {
        int t = 0;
        char temp[50];
        if(str[i] == 'x'|| str[i] == 'y'|| str[i] == 'q');
        else if(str[i] == 'X'|| str[i] == 'Y'|| str[i] == 'Q');
        else 
        {
            temp[t] = str[i];
            t++;
        }
    }
    str = &temp;
}


char* sortieren(int länge, char* str[])
{
    int t = 0;
    char temp[200];
    for(int i = 0; i < länge; i++)
    {
        for(int a = 0; a != '\0'; a++)
        {
            temp[t] = str[i+1][a];
            t++;
        }
    }
}   


int main( int argc, char* argv[] )
{  
    int length = sizeof(argv) - 1;
    for(int i = 1; i <= length; i++)
    {
        aussortieren(argv[i]);
    }
    char zusammen = sortieren(length, argv);
    printf(""x,y,q und X,Y,Q aussortiert: %s"", zusammen); 
}",0.1586245147,0
247,WS2021,9,Antwort 10,C,Lucie Chantal,Girod,Tammo Hendrik,Nie,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){
	
	char* text_str = malloc(400* sizeof(char));
	int idx = 0;
	for(int i = 1; i < argc; i++){
		int j = 0;
		while(*(argv[i]+j) != '\0'){
			if((*(argv[i]+j) != 'x') && (*(argv[i]+j) != 'y') && (*(argv[i]+j) != 'q') && (*(argv[i]+j) != 'X') && (*(argv[i]+j) != 'Y') && (*(argv[i]+j) != 'Q')){
			*(text_str+idx) = *(argv[i]+j);
			idx++;
			}
			j++;
		}
	}
	
	text_str = realloc(text_str,idx+1 * sizeof(char));
	int solution_length = (idx+1) / 3;
	char* solution = malloc(solution_length * sizeof(char));
	int count = 0;
	for(int i = 0; i < idx+1; i++){
		if((i % 3) == 0){
			*(solution+count) = *(text_str+i);
			count++;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", text_str, solution);
	
}","#include <stdio.h>
#include <stdlib.h>
 
int main(int argc, char* argv[52])
{
   //aneinanderhängen

   int zahl = 0;
   int* p_zahl = &zahl;
   int counter = 1;
   int* p_counter = &counter;
   char str[30];
   for(int i = 0; i < argc-1 ; i++)
   {
      for(int j = 0; argv[counter][j] != '\0'; j++)
      {
         str[zahl] = argv[counter][j];
         *p_zahl += 1;
         
      }
      *p_counter += 1;
   }
   str[zahl+1] = '\0';

   int nummer = 0;
   int* p_nummer = &nummer;
   char str2[25];
   for(int i = 0; ; i++)
   {
      if((str[i] != 'x') && (str[i] != 'y') && (str[i] != 'q') && (str[i] != 'X') && (str[i] != 'Y') && (str[i] != 'Q'))
      {
         
         str2[nummer] = str[i];
         if(str[i] == '\0') break;
         *p_nummer += 1;
      }
   }

   //jedes dritte in str3
   char str3[35];
   for(int i = 0; i < 57; i +=3)
   {
      //if((str2[i] == '\0')) break;
      str3[i/3] = str2[i];  
      str3[i/3+1] = '\0'  ;
   }
   //drucken:

   printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str2, str3);
}",0.2343268243,0
248,WS2021,9,Antwort 10,C,Lucie Chantal,Girod,Sören Sven,Werner,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){
	
	char* text_str = malloc(400* sizeof(char));
	int idx = 0;
	for(int i = 1; i < argc; i++){
		int j = 0;
		while(*(argv[i]+j) != '\0'){
			if((*(argv[i]+j) != 'x') && (*(argv[i]+j) != 'y') && (*(argv[i]+j) != 'q') && (*(argv[i]+j) != 'X') && (*(argv[i]+j) != 'Y') && (*(argv[i]+j) != 'Q')){
			*(text_str+idx) = *(argv[i]+j);
			idx++;
			}
			j++;
		}
	}
	
	text_str = realloc(text_str,idx+1 * sizeof(char));
	int solution_length = (idx+1) / 3;
	char* solution = malloc(solution_length * sizeof(char));
	int count = 0;
	for(int i = 0; i < idx+1; i++){
		if((i % 3) == 0){
			*(solution+count) = *(text_str+i);
			count++;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", text_str, solution);
	
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
/*
int zaehlen(char* str){
	int counter = 0;
	while(str[counter] != '\0'){
		counter++;
	}
	return counter;
}*/

int main( int argc, char* argv[]){



	char str[100] = """";

	for(int i = 1; i<argc; i++){
		strcat(str, argv[i]);
	}
	printf(""%s\n"", str);


}",0.2427350427,0
257,WS2021,9,Antwort 10,C,Moritz,Batilla,Can Mert,Ergin,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    int x;
    for(x = 0; x < zahl && *dest != '\0' && *src != '\0'; x++)
    {
       *dest = *src;
       src++;
       dest++;
    }
}

void umdrehen( char* str )
{
    int y = 0;
    int count = 0;
    int tmp = 0;

    for(count=0; str[count] != 0; count++);
    for(y = 0; y <count/2; y++)
    {
        tmp = str[y];
        str[y]=str[count - 1 - y];
        str[count - 1 - y] = tmp;
    }
    for(y = 0; y < count; y++);
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>

int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}",0.1079478055,0
258,WS2021,9,Antwort 10,C,Moritz,Batilla,Daniel,Grönefeld,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    int x;
    for(x = 0; x < zahl && *dest != '\0' && *src != '\0'; x++)
    {
       *dest = *src;
       src++;
       dest++;
    }
}

void umdrehen( char* str )
{
    int y = 0;
    int count = 0;
    int tmp = 0;

    for(count=0; str[count] != 0; count++);
    for(y = 0; y <count/2; y++)
    {
        tmp = str[y];
        str[y]=str[count - 1 - y];
        str[count - 1 - y] = tmp;
    }
    for(y = 0; y < count; y++);
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{  
	for(int i = 0; src[i] != '\0' && dest[i] != '\0' && i < zahl; i++){
		dest[i] = src[i];
	}
}

void umdrehen( char* str)
{
	int length_str = 0;
	for( int i = 0; str[i] != '\0'; i++)
		length_str = i;
	char temp_string[length_str];
	for( int i = 0; i <= length_str; i++)
		temp_string[i] = str[length_str-i];
	for( int i = 0; i <= length_str; i++)
		str[i] = temp_string[i];
}

int main( int argc, char* argv[] )
{  
  char test[11] = ""0123456789"";
  printf( ""Das Original ist: %s \n"", test);
  ersetzen(test , atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test);
  umdrehen( test );	
  printf( ""Rückwärts : %s \n"", test );
}",0.5908513342,0
260,WS2021,9,Antwort 10,C,Moritz,Batilla,Catalina,Florez Vargas,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    int x;
    for(x = 0; x < zahl && *dest != '\0' && *src != '\0'; x++)
    {
       *dest = *src;
       src++;
       dest++;
    }
}

void umdrehen( char* str )
{
    int y = 0;
    int count = 0;
    int tmp = 0;

    for(count=0; str[count] != 0; count++);
    for(y = 0; y <count/2; y++)
    {
        tmp = str[y];
        str[y]=str[count - 1 - y];
        str[count - 1 - y] = tmp;
    }
    for(y = 0; y < count; y++);
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>

int main(int argc, char *argv[])

{
    int u;
    int f = 0;
    char neu[20];
    char nueva[15];
    int x = 0;
    for (int i = 1; i < argc; i++)
    {
        u = 0;
        while ((argv[i][u]) != '\0')
        {
            if (argv[i][u] != 'x' && argv[i][u] != 'y' && argv[i][u] != 'q' && argv[i][u] != 'X' && argv[i][u] != 'Y' && argv[i][u] != 'Q')
            {
                neu[f] = argv[i][u];
                f++;
            }
            u++;
        }
    }

    for (int i = 0; i <= f; i++)
    {
        if (x > (i / 3) || i == 0)
        {
            if (i == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
            if (((i) % 3) == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
        }
    }

    printf(""x,y,q und X,Y,Q aussortiert: "");
    for (int i = 0; i < f; i++)
        if (neu[i] != '\0')
        {
            printf(""%c"", neu[i]);
        }

    printf(""\n"");

     printf(""Der neue String lautet: "");
    for (int i = 1; i < (f / 2)-1; i++)
            printf(""%c"", nueva[i]);
    if (neu[0] == 'z')
        printf(""z"");
}",0.0931372549,0
261,WS2021,9,Antwort 10,C,Moritz,Batilla,Sandro,Paluteder,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    int x;
    for(x = 0; x < zahl && *dest != '\0' && *src != '\0'; x++)
    {
       *dest = *src;
       src++;
       dest++;
    }
}

void umdrehen( char* str )
{
    int y = 0;
    int count = 0;
    int tmp = 0;

    for(count=0; str[count] != 0; count++);
    for(y = 0; y <count/2; y++)
    {
        tmp = str[y];
        str[y]=str[count - 1 - y];
        str[count - 1 - y] = tmp;
    }
    for(y = 0; y < count; y++);
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[])
{   
     // char *argv[] is a array of strings, each command line arguments
    // int argc is the amount of command line arguments
    
    //loop through all command line arguements. First command line argument is always taken by default so we start at 1.
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
  
        
        //printf(""Current 2 %c \n"",CurrentCommandString[0]);
       
        //int LengthOfString = sizeof(CurrentCommandString) / sizeof(char*);
        
        //printf(""Current Size %i \n"",LengthOfString);
        
        int i = 0;
        while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
            if (CurrentCommandString[i] == 'x' 
             || CurrentCommandString[i] == 'y' 
             || CurrentCommandString[i] == 'q'
             || CurrentCommandString[i] == 'X'
             || CurrentCommandString[i] == 'Y' 
             || CurrentCommandString[i] == 'Q')
             {   
                 int j = i;
                 while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
                    CurrentCommandString[j] = CurrentCommandString[j + 1]; 
                    ++j; 
                 }
             }
            ++i;
         }
        
        
        //printf(""x,y,q und X,Y,Q aussortiert TEST 1: %s \n"", argv[kk]);
    }
    
    char StringXYQRemoved[5000];
    int StringXYQRemovedIndex = 0;
       
    char StringThirdRemoved[5000];
    int StringThirdRemovedIndex = 0;
    
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
        
        
        //String 1 
        
        int length, j;
        
          // store length of s1 in the length variable
          length = 0;
          while (StringXYQRemoved[length] != '\0' && StringXYQRemoved[length] != ' ') {
            ++length;
          }
        
          // concatenate s2 to s1
          for (j = 0; CurrentCommandString[j] != '\0' && CurrentCommandString[length] != ' '; ++j, ++length) {
            StringXYQRemoved[length] = CurrentCommandString[j];
          }
        
          // terminating the s1 string
          StringXYQRemoved[length] = '\0';       
    }
    
    
    
        //String2
        int length, j;
        // store length of s1 in the length variable
        length = 0;
        while (StringThirdRemoved[length] != '\0' && StringThirdRemoved[length] != ' ') {
        ++length;
        }
        
        // concatenate s2 to s1
        for (j = 0; StringXYQRemoved[j] != '\0' && StringXYQRemoved[length] != ' '; ++length) {
         StringThirdRemoved[length] = StringXYQRemoved[j];
         
         //printf(""WTFFFF %c \n"",StringXYQRemoved[j]);
         j+=3;
        }
        
        // terminating the s1 string
        StringThirdRemoved[length] = '\0';       
        
    printf(""x,y,q und X,Y,Q aussortiert: %s \n"", StringXYQRemoved);
    printf(""Der neue String lautet: %s"", StringThirdRemoved);
    
}",0.0693439761,0
262,WS2021,9,Antwort 10,C,Moritz,Batilla,Jonas,Bestgen,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    int x;
    for(x = 0; x < zahl && *dest != '\0' && *src != '\0'; x++)
    {
       *dest = *src;
       src++;
       dest++;
    }
}

void umdrehen( char* str )
{
    int y = 0;
    int count = 0;
    int tmp = 0;

    for(count=0; str[count] != 0; count++);
    for(y = 0; y <count/2; y++)
    {
        tmp = str[y];
        str[y]=str[count - 1 - y];
        str[count - 1 - y] = tmp;
    }
    for(y = 0; y < count; y++);
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
	for (int i=0;((i<zahl)&&((dest[i])!=('\0')))&&((src[i])!=('\0'));i++)
dest[i]=src[i];

	
}

void umdrehen( char* str )
{	char temp[30]="""";
	int i=0;
	for(;(str[i+1])!=('\0');i++){}
	for(int j=0;(str[j])!=('\0');j++) {temp[j]=str[i-j];}
	for(int j=0;(str[j])!=('\0');j++) {str[j]=temp[(j)];}
	
}

int main( int argc, char* argv[] )
{
	char test[11]= ""0123456789"";
	printf( ""Das Original ist: %s \n"", test );
	ersetzen( test , atoi(argv[1]), argv[2] );
	printf( ""Ersetzt : %s \n"", test );
	umdrehen( test );
	printf( ""Rückwärts : %s \n"", test );
}",0.5876010782000001,0
263,WS2021,9,Antwort 10,C,Moritz,Batilla,Constanze Cosima,Freier,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    int x;
    for(x = 0; x < zahl && *dest != '\0' && *src != '\0'; x++)
    {
       *dest = *src;
       src++;
       dest++;
    }
}

void umdrehen( char* str )
{
    int y = 0;
    int count = 0;
    int tmp = 0;

    for(count=0; str[count] != 0; count++);
    for(y = 0; y <count/2; y++)
    {
        tmp = str[y];
        str[y]=str[count - 1 - y];
        str[count - 1 - y] = tmp;
    }
    for(y = 0; y < count; y++);
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdlib.h>
#include <stdio.h>
int Laenge(char *str)
{
    int size = 0;
    for (int j = 0; str[j] != '\0'; j++)
    {
        size += 1;
    }
    return size;
}

int Kopieren(char *dest, char *src)
{
    int i = 0;
    int j = 0;
    while (src[i] != '\0')
    {
        if (src[i] != 'q' && src[i] != 'x' && src[i] != 'y' && src[i] != 'Q' && src[i] != 'X' && src[i] != 'Y')
        {
            dest[j++] = src[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int Entfernen(char *Eingabe)
{
    int i = 0;
    int j = 0;
    while (Eingabe[i] != '\0')
    {
        if (i % 3 == 0)
        {
            Eingabe[j++] = Eingabe[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int main(int argc, char *argv[])
{
    int Gesamtlaenge = 0;
    for (int i = 1; i < argc; i++)
    {
        Gesamtlaenge += Laenge(argv[i]);
    }
    char Ausgabe[Gesamtlaenge + 1];
    char *Ziel = Ausgabe;
    for (int i = 1; i < argc; i++)
    {
        Ziel += Kopieren(Ziel, argv[i]);
    }
    *Ziel = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", Ausgabe);
    Ausgabe[Entfernen(Ausgabe)] = '\0';
    printf(""Der neue String lautet: %s\n"", Ausgabe);
}",0.1468926554,0
265,WS2021,9,Antwort 10,C,Moritz,Batilla,Caspar Valentin,Zell,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    int x;
    for(x = 0; x < zahl && *dest != '\0' && *src != '\0'; x++)
    {
       *dest = *src;
       src++;
       dest++;
    }
}

void umdrehen( char* str )
{
    int y = 0;
    int count = 0;
    int tmp = 0;

    for(count=0; str[count] != 0; count++);
    for(y = 0; y <count/2; y++)
    {
        tmp = str[y];
        str[y]=str[count - 1 - y];
        str[count - 1 - y] = tmp;
    }
    for(y = 0; y < count; y++);
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0;(i < zahl) && (i < 10) && (src[i] != '\0'); i++)
    {
        dest[i] = src[i];
    }
}

void umdrehen(char* str )
{
    int size;
    for (int j = 1; str[j] != '\0'; j++)
    {
        size = j + 2;
    }
    char Kopie[size];
    for (int i = 0; i < (size - 1); i++)
    {
        Kopie[size - 2- i] = str[i];
    }
    for (int i = 0; i < size; i++)
    {
        str[i] = Kopie[i];
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen(test, atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.5565862709,0
266,WS2021,9,Antwort 10,C,Moritz,Batilla,Jakob,Kühl,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    int x;
    for(x = 0; x < zahl && *dest != '\0' && *src != '\0'; x++)
    {
       *dest = *src;
       src++;
       dest++;
    }
}

void umdrehen( char* str )
{
    int y = 0;
    int count = 0;
    int tmp = 0;

    for(count=0; str[count] != 0; count++);
    for(y = 0; y <count/2; y++)
    {
        tmp = str[y];
        str[y]=str[count - 1 - y];
        str[count - 1 - y] = tmp;
    }
    for(y = 0; y < count; y++);
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include<stdio.h>

int main(int argc, char* argv[]){
	char a[100]= """";
	char b[100]="""";
	int x=0;
	for(int i=1 ;i<argc ;i++){
		for (int j=0; argv[i][j] != '\0'; j++){
			if(argv[i][j]== 'x' || argv[i][j]== 'y' || argv[i][j]== 'q' || argv[i][j]== 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q') continue;
			else {
				a[x]=argv[i][j];
				x+=1;
			}
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", a);
	int y=0;
	for(int i=0; i<100; i+=3){
		b[y]=a[i];
		y++;
	}
	printf(""Der neue String lautet: %s\n"", b);
}",0.14781966,0
267,WS2021,9,Antwort 10,C,Moritz,Batilla,Niklas,Mohr,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    int x;
    for(x = 0; x < zahl && *dest != '\0' && *src != '\0'; x++)
    {
       *dest = *src;
       src++;
       dest++;
    }
}

void umdrehen( char* str )
{
    int y = 0;
    int count = 0;
    int tmp = 0;

    for(count=0; str[count] != 0; count++);
    for(y = 0; y <count/2; y++)
    {
        tmp = str[y];
        str[y]=str[count - 1 - y];
        str[count - 1 - y] = tmp;
    }
    for(y = 0; y < count; y++);
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

void aussortieren(char* str)
{
    int t = 0;
    char temp[50];
    for(int i = 0; str[i] != '\0'; i++)
    {
        int t = 0;
        char temp[50];
        if(str[i] == 'x'|| str[i] == 'y'|| str[i] == 'q');
        else if(str[i] == 'X'|| str[i] == 'Y'|| str[i] == 'Q');
        else 
        {
            temp[t] = str[i];
            t++;
        }
    }
    str = &temp;
}


char* sortieren(int länge, char* str[])
{
    int t = 0;
    char temp[200];
    for(int i = 0; i < länge; i++)
    {
        for(int a = 0; a != '\0'; a++)
        {
            temp[t] = str[i+1][a];
            t++;
        }
    }
}   


int main( int argc, char* argv[] )
{  
    int length = sizeof(argv) - 1;
    for(int i = 1; i <= length; i++)
    {
        aussortieren(argv[i]);
    }
    char zusammen = sortieren(length, argv);
    printf(""x,y,q und X,Y,Q aussortiert: %s"", zusammen); 
}",0.2544642857,0
268,WS2021,9,Antwort 10,C,Moritz,Batilla,Tammo Hendrik,Nie,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    int x;
    for(x = 0; x < zahl && *dest != '\0' && *src != '\0'; x++)
    {
       *dest = *src;
       src++;
       dest++;
    }
}

void umdrehen( char* str )
{
    int y = 0;
    int count = 0;
    int tmp = 0;

    for(count=0; str[count] != 0; count++);
    for(y = 0; y <count/2; y++)
    {
        tmp = str[y];
        str[y]=str[count - 1 - y];
        str[count - 1 - y] = tmp;
    }
    for(y = 0; y < count; y++);
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
 
int main(int argc, char* argv[52])
{
   //aneinanderhängen

   int zahl = 0;
   int* p_zahl = &zahl;
   int counter = 1;
   int* p_counter = &counter;
   char str[30];
   for(int i = 0; i < argc-1 ; i++)
   {
      for(int j = 0; argv[counter][j] != '\0'; j++)
      {
         str[zahl] = argv[counter][j];
         *p_zahl += 1;
         
      }
      *p_counter += 1;
   }
   str[zahl+1] = '\0';

   int nummer = 0;
   int* p_nummer = &nummer;
   char str2[25];
   for(int i = 0; ; i++)
   {
      if((str[i] != 'x') && (str[i] != 'y') && (str[i] != 'q') && (str[i] != 'X') && (str[i] != 'Y') && (str[i] != 'Q'))
      {
         
         str2[nummer] = str[i];
         if(str[i] == '\0') break;
         *p_nummer += 1;
      }
   }

   //jedes dritte in str3
   char str3[35];
   for(int i = 0; i < 57; i +=3)
   {
      //if((str2[i] == '\0')) break;
      str3[i/3] = str2[i];  
      str3[i/3+1] = '\0'  ;
   }
   //drucken:

   printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str2, str3);
}",0.1343669251,0
269,WS2021,9,Antwort 10,C,Moritz,Batilla,Sören Sven,Werner,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    int x;
    for(x = 0; x < zahl && *dest != '\0' && *src != '\0'; x++)
    {
       *dest = *src;
       src++;
       dest++;
    }
}

void umdrehen( char* str )
{
    int y = 0;
    int count = 0;
    int tmp = 0;

    for(count=0; str[count] != 0; count++);
    for(y = 0; y <count/2; y++)
    {
        tmp = str[y];
        str[y]=str[count - 1 - y];
        str[count - 1 - y] = tmp;
    }
    for(y = 0; y < count; y++);
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
/*
int zaehlen(char* str){
	int counter = 0;
	while(str[counter] != '\0'){
		counter++;
	}
	return counter;
}*/

int main( int argc, char* argv[]){



	char str[100] = """";

	for(int i = 1; i<argc; i++){
		strcat(str, argv[i]);
	}
	printf(""%s\n"", str);


}",0.2381363244,0
270,WS2021,9,Antwort 10,C,Can Mert,Ergin,Daniel,Grönefeld,"#include <stdio.h>

int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{  
	for(int i = 0; src[i] != '\0' && dest[i] != '\0' && i < zahl; i++){
		dest[i] = src[i];
	}
}

void umdrehen( char* str)
{
	int length_str = 0;
	for( int i = 0; str[i] != '\0'; i++)
		length_str = i;
	char temp_string[length_str];
	for( int i = 0; i <= length_str; i++)
		temp_string[i] = str[length_str-i];
	for( int i = 0; i <= length_str; i++)
		str[i] = temp_string[i];
}

int main( int argc, char* argv[] )
{  
  char test[11] = ""0123456789"";
  printf( ""Das Original ist: %s \n"", test);
  ersetzen(test , atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test);
  umdrehen( test );	
  printf( ""Rückwärts : %s \n"", test );
}",0.1619283066,0
272,WS2021,9,Antwort 10,C,Can Mert,Ergin,Catalina,Florez Vargas,"#include <stdio.h>

int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}","#include <stdio.h>

int main(int argc, char *argv[])

{
    int u;
    int f = 0;
    char neu[20];
    char nueva[15];
    int x = 0;
    for (int i = 1; i < argc; i++)
    {
        u = 0;
        while ((argv[i][u]) != '\0')
        {
            if (argv[i][u] != 'x' && argv[i][u] != 'y' && argv[i][u] != 'q' && argv[i][u] != 'X' && argv[i][u] != 'Y' && argv[i][u] != 'Q')
            {
                neu[f] = argv[i][u];
                f++;
            }
            u++;
        }
    }

    for (int i = 0; i <= f; i++)
    {
        if (x > (i / 3) || i == 0)
        {
            if (i == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
            if (((i) % 3) == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
        }
    }

    printf(""x,y,q und X,Y,Q aussortiert: "");
    for (int i = 0; i < f; i++)
        if (neu[i] != '\0')
        {
            printf(""%c"", neu[i]);
        }

    printf(""\n"");

     printf(""Der neue String lautet: "");
    for (int i = 1; i < (f / 2)-1; i++)
            printf(""%c"", nueva[i]);
    if (neu[0] == 'z')
        printf(""z"");
}",0.2312859885,0
273,WS2021,9,Antwort 10,C,Can Mert,Ergin,Sandro,Paluteder,"#include <stdio.h>

int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[])
{   
     // char *argv[] is a array of strings, each command line arguments
    // int argc is the amount of command line arguments
    
    //loop through all command line arguements. First command line argument is always taken by default so we start at 1.
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
  
        
        //printf(""Current 2 %c \n"",CurrentCommandString[0]);
       
        //int LengthOfString = sizeof(CurrentCommandString) / sizeof(char*);
        
        //printf(""Current Size %i \n"",LengthOfString);
        
        int i = 0;
        while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
            if (CurrentCommandString[i] == 'x' 
             || CurrentCommandString[i] == 'y' 
             || CurrentCommandString[i] == 'q'
             || CurrentCommandString[i] == 'X'
             || CurrentCommandString[i] == 'Y' 
             || CurrentCommandString[i] == 'Q')
             {   
                 int j = i;
                 while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
                    CurrentCommandString[j] = CurrentCommandString[j + 1]; 
                    ++j; 
                 }
             }
            ++i;
         }
        
        
        //printf(""x,y,q und X,Y,Q aussortiert TEST 1: %s \n"", argv[kk]);
    }
    
    char StringXYQRemoved[5000];
    int StringXYQRemovedIndex = 0;
       
    char StringThirdRemoved[5000];
    int StringThirdRemovedIndex = 0;
    
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
        
        
        //String 1 
        
        int length, j;
        
          // store length of s1 in the length variable
          length = 0;
          while (StringXYQRemoved[length] != '\0' && StringXYQRemoved[length] != ' ') {
            ++length;
          }
        
          // concatenate s2 to s1
          for (j = 0; CurrentCommandString[j] != '\0' && CurrentCommandString[length] != ' '; ++j, ++length) {
            StringXYQRemoved[length] = CurrentCommandString[j];
          }
        
          // terminating the s1 string
          StringXYQRemoved[length] = '\0';       
    }
    
    
    
        //String2
        int length, j;
        // store length of s1 in the length variable
        length = 0;
        while (StringThirdRemoved[length] != '\0' && StringThirdRemoved[length] != ' ') {
        ++length;
        }
        
        // concatenate s2 to s1
        for (j = 0; StringXYQRemoved[j] != '\0' && StringXYQRemoved[length] != ' '; ++length) {
         StringThirdRemoved[length] = StringXYQRemoved[j];
         
         //printf(""WTFFFF %c \n"",StringXYQRemoved[j]);
         j+=3;
        }
        
        // terminating the s1 string
        StringThirdRemoved[length] = '\0';       
        
    printf(""x,y,q und X,Y,Q aussortiert: %s \n"", StringXYQRemoved);
    printf(""Der neue String lautet: %s"", StringThirdRemoved);
    
}",0.0996792499,0
274,WS2021,9,Antwort 10,C,Can Mert,Ergin,Jonas,Bestgen,"#include <stdio.h>

int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
	for (int i=0;((i<zahl)&&((dest[i])!=('\0')))&&((src[i])!=('\0'));i++)
dest[i]=src[i];

	
}

void umdrehen( char* str )
{	char temp[30]="""";
	int i=0;
	for(;(str[i+1])!=('\0');i++){}
	for(int j=0;(str[j])!=('\0');j++) {temp[j]=str[i-j];}
	for(int j=0;(str[j])!=('\0');j++) {str[j]=temp[(j)];}
	
}

int main( int argc, char* argv[] )
{
	char test[11]= ""0123456789"";
	printf( ""Das Original ist: %s \n"", test );
	ersetzen( test , atoi(argv[1]), argv[2] );
	printf( ""Ersetzt : %s \n"", test );
	umdrehen( test );
	printf( ""Rückwärts : %s \n"", test );
}",0.140052356,0
275,WS2021,9,Antwort 10,C,Can Mert,Ergin,Constanze Cosima,Freier,"#include <stdio.h>

int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}","#include <stdlib.h>
#include <stdio.h>
int Laenge(char *str)
{
    int size = 0;
    for (int j = 0; str[j] != '\0'; j++)
    {
        size += 1;
    }
    return size;
}

int Kopieren(char *dest, char *src)
{
    int i = 0;
    int j = 0;
    while (src[i] != '\0')
    {
        if (src[i] != 'q' && src[i] != 'x' && src[i] != 'y' && src[i] != 'Q' && src[i] != 'X' && src[i] != 'Y')
        {
            dest[j++] = src[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int Entfernen(char *Eingabe)
{
    int i = 0;
    int j = 0;
    while (Eingabe[i] != '\0')
    {
        if (i % 3 == 0)
        {
            Eingabe[j++] = Eingabe[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int main(int argc, char *argv[])
{
    int Gesamtlaenge = 0;
    for (int i = 1; i < argc; i++)
    {
        Gesamtlaenge += Laenge(argv[i]);
    }
    char Ausgabe[Gesamtlaenge + 1];
    char *Ziel = Ausgabe;
    for (int i = 1; i < argc; i++)
    {
        Ziel += Kopieren(Ziel, argv[i]);
    }
    *Ziel = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", Ausgabe);
    Ausgabe[Entfernen(Ausgabe)] = '\0';
    printf(""Der neue String lautet: %s\n"", Ausgabe);
}",0.1586715867,0
277,WS2021,9,Antwort 10,C,Can Mert,Ergin,Caspar Valentin,Zell,"#include <stdio.h>

int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0;(i < zahl) && (i < 10) && (src[i] != '\0'); i++)
    {
        dest[i] = src[i];
    }
}

void umdrehen(char* str )
{
    int size;
    for (int j = 1; str[j] != '\0'; j++)
    {
        size = j + 2;
    }
    char Kopie[size];
    for (int i = 0; i < (size - 1); i++)
    {
        Kopie[size - 2- i] = str[i];
    }
    for (int i = 0; i < size; i++)
    {
        str[i] = Kopie[i];
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen(test, atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.1673690548,0
278,WS2021,9,Antwort 10,C,Can Mert,Ergin,Jakob,Kühl,"#include <stdio.h>

int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}","#include<stdio.h>

int main(int argc, char* argv[]){
	char a[100]= """";
	char b[100]="""";
	int x=0;
	for(int i=1 ;i<argc ;i++){
		for (int j=0; argv[i][j] != '\0'; j++){
			if(argv[i][j]== 'x' || argv[i][j]== 'y' || argv[i][j]== 'q' || argv[i][j]== 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q') continue;
			else {
				a[x]=argv[i][j];
				x+=1;
			}
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", a);
	int y=0;
	for(int i=0; i<100; i+=3){
		b[y]=a[i];
		y++;
	}
	printf(""Der neue String lautet: %s\n"", b);
}",0.3464566929,0
279,WS2021,9,Antwort 10,C,Can Mert,Ergin,Niklas,Mohr,"#include <stdio.h>

int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}","#include <stdio.h>
#include <stdlib.h>

void aussortieren(char* str)
{
    int t = 0;
    char temp[50];
    for(int i = 0; str[i] != '\0'; i++)
    {
        int t = 0;
        char temp[50];
        if(str[i] == 'x'|| str[i] == 'y'|| str[i] == 'q');
        else if(str[i] == 'X'|| str[i] == 'Y'|| str[i] == 'Q');
        else 
        {
            temp[t] = str[i];
            t++;
        }
    }
    str = &temp;
}


char* sortieren(int länge, char* str[])
{
    int t = 0;
    char temp[200];
    for(int i = 0; i < länge; i++)
    {
        for(int a = 0; a != '\0'; a++)
        {
            temp[t] = str[i+1][a];
            t++;
        }
    }
}   


int main( int argc, char* argv[] )
{  
    int length = sizeof(argv) - 1;
    for(int i = 1; i <= length; i++)
    {
        aussortieren(argv[i]);
    }
    char zusammen = sortieren(length, argv);
    printf(""x,y,q und X,Y,Q aussortiert: %s"", zusammen); 
}",0.1263616558,0
280,WS2021,9,Antwort 10,C,Can Mert,Ergin,Tammo Hendrik,Nie,"#include <stdio.h>

int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}","#include <stdio.h>
#include <stdlib.h>
 
int main(int argc, char* argv[52])
{
   //aneinanderhängen

   int zahl = 0;
   int* p_zahl = &zahl;
   int counter = 1;
   int* p_counter = &counter;
   char str[30];
   for(int i = 0; i < argc-1 ; i++)
   {
      for(int j = 0; argv[counter][j] != '\0'; j++)
      {
         str[zahl] = argv[counter][j];
         *p_zahl += 1;
         
      }
      *p_counter += 1;
   }
   str[zahl+1] = '\0';

   int nummer = 0;
   int* p_nummer = &nummer;
   char str2[25];
   for(int i = 0; ; i++)
   {
      if((str[i] != 'x') && (str[i] != 'y') && (str[i] != 'q') && (str[i] != 'X') && (str[i] != 'Y') && (str[i] != 'Q'))
      {
         
         str2[nummer] = str[i];
         if(str[i] == '\0') break;
         *p_nummer += 1;
      }
   }

   //jedes dritte in str3
   char str3[35];
   for(int i = 0; i < 57; i +=3)
   {
      //if((str2[i] == '\0')) break;
      str3[i/3] = str2[i];  
      str3[i/3+1] = '\0'  ;
   }
   //drucken:

   printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str2, str3);
}",0.2516422436,0
281,WS2021,9,Antwort 10,C,Can Mert,Ergin,Sören Sven,Werner,"#include <stdio.h>

int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
/*
int zaehlen(char* str){
	int counter = 0;
	while(str[counter] != '\0'){
		counter++;
	}
	return counter;
}*/

int main( int argc, char* argv[]){



	char str[100] = """";

	for(int i = 1; i<argc; i++){
		strcat(str, argv[i]);
	}
	printf(""%s\n"", str);


}",0.1546134663,0
283,WS2021,9,Antwort 10,C,Daniel,Grönefeld,Catalina,Florez Vargas,"#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{  
	for(int i = 0; src[i] != '\0' && dest[i] != '\0' && i < zahl; i++){
		dest[i] = src[i];
	}
}

void umdrehen( char* str)
{
	int length_str = 0;
	for( int i = 0; str[i] != '\0'; i++)
		length_str = i;
	char temp_string[length_str];
	for( int i = 0; i <= length_str; i++)
		temp_string[i] = str[length_str-i];
	for( int i = 0; i <= length_str; i++)
		str[i] = temp_string[i];
}

int main( int argc, char* argv[] )
{  
  char test[11] = ""0123456789"";
  printf( ""Das Original ist: %s \n"", test);
  ersetzen(test , atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test);
  umdrehen( test );	
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>

int main(int argc, char *argv[])

{
    int u;
    int f = 0;
    char neu[20];
    char nueva[15];
    int x = 0;
    for (int i = 1; i < argc; i++)
    {
        u = 0;
        while ((argv[i][u]) != '\0')
        {
            if (argv[i][u] != 'x' && argv[i][u] != 'y' && argv[i][u] != 'q' && argv[i][u] != 'X' && argv[i][u] != 'Y' && argv[i][u] != 'Q')
            {
                neu[f] = argv[i][u];
                f++;
            }
            u++;
        }
    }

    for (int i = 0; i <= f; i++)
    {
        if (x > (i / 3) || i == 0)
        {
            if (i == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
            if (((i) % 3) == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
        }
    }

    printf(""x,y,q und X,Y,Q aussortiert: "");
    for (int i = 0; i < f; i++)
        if (neu[i] != '\0')
        {
            printf(""%c"", neu[i]);
        }

    printf(""\n"");

     printf(""Der neue String lautet: "");
    for (int i = 1; i < (f / 2)-1; i++)
            printf(""%c"", nueva[i]);
    if (neu[0] == 'z')
        printf(""z"");
}",0.1176470588,0
284,WS2021,9,Antwort 10,C,Daniel,Grönefeld,Sandro,Paluteder,"#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{  
	for(int i = 0; src[i] != '\0' && dest[i] != '\0' && i < zahl; i++){
		dest[i] = src[i];
	}
}

void umdrehen( char* str)
{
	int length_str = 0;
	for( int i = 0; str[i] != '\0'; i++)
		length_str = i;
	char temp_string[length_str];
	for( int i = 0; i <= length_str; i++)
		temp_string[i] = str[length_str-i];
	for( int i = 0; i <= length_str; i++)
		str[i] = temp_string[i];
}

int main( int argc, char* argv[] )
{  
  char test[11] = ""0123456789"";
  printf( ""Das Original ist: %s \n"", test);
  ersetzen(test , atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test);
  umdrehen( test );	
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[])
{   
     // char *argv[] is a array of strings, each command line arguments
    // int argc is the amount of command line arguments
    
    //loop through all command line arguements. First command line argument is always taken by default so we start at 1.
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
  
        
        //printf(""Current 2 %c \n"",CurrentCommandString[0]);
       
        //int LengthOfString = sizeof(CurrentCommandString) / sizeof(char*);
        
        //printf(""Current Size %i \n"",LengthOfString);
        
        int i = 0;
        while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
            if (CurrentCommandString[i] == 'x' 
             || CurrentCommandString[i] == 'y' 
             || CurrentCommandString[i] == 'q'
             || CurrentCommandString[i] == 'X'
             || CurrentCommandString[i] == 'Y' 
             || CurrentCommandString[i] == 'Q')
             {   
                 int j = i;
                 while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
                    CurrentCommandString[j] = CurrentCommandString[j + 1]; 
                    ++j; 
                 }
             }
            ++i;
         }
        
        
        //printf(""x,y,q und X,Y,Q aussortiert TEST 1: %s \n"", argv[kk]);
    }
    
    char StringXYQRemoved[5000];
    int StringXYQRemovedIndex = 0;
       
    char StringThirdRemoved[5000];
    int StringThirdRemovedIndex = 0;
    
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
        
        
        //String 1 
        
        int length, j;
        
          // store length of s1 in the length variable
          length = 0;
          while (StringXYQRemoved[length] != '\0' && StringXYQRemoved[length] != ' ') {
            ++length;
          }
        
          // concatenate s2 to s1
          for (j = 0; CurrentCommandString[j] != '\0' && CurrentCommandString[length] != ' '; ++j, ++length) {
            StringXYQRemoved[length] = CurrentCommandString[j];
          }
        
          // terminating the s1 string
          StringXYQRemoved[length] = '\0';       
    }
    
    
    
        //String2
        int length, j;
        // store length of s1 in the length variable
        length = 0;
        while (StringThirdRemoved[length] != '\0' && StringThirdRemoved[length] != ' ') {
        ++length;
        }
        
        // concatenate s2 to s1
        for (j = 0; StringXYQRemoved[j] != '\0' && StringXYQRemoved[length] != ' '; ++length) {
         StringThirdRemoved[length] = StringXYQRemoved[j];
         
         //printf(""WTFFFF %c \n"",StringXYQRemoved[j]);
         j+=3;
        }
        
        // terminating the s1 string
        StringThirdRemoved[length] = '\0';       
        
    printf(""x,y,q und X,Y,Q aussortiert: %s \n"", StringXYQRemoved);
    printf(""Der neue String lautet: %s"", StringThirdRemoved);
    
}",0.0715554428,0
285,WS2021,9,Antwort 10,C,Daniel,Grönefeld,Jonas,Bestgen,"#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{  
	for(int i = 0; src[i] != '\0' && dest[i] != '\0' && i < zahl; i++){
		dest[i] = src[i];
	}
}

void umdrehen( char* str)
{
	int length_str = 0;
	for( int i = 0; str[i] != '\0'; i++)
		length_str = i;
	char temp_string[length_str];
	for( int i = 0; i <= length_str; i++)
		temp_string[i] = str[length_str-i];
	for( int i = 0; i <= length_str; i++)
		str[i] = temp_string[i];
}

int main( int argc, char* argv[] )
{  
  char test[11] = ""0123456789"";
  printf( ""Das Original ist: %s \n"", test);
  ersetzen(test , atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test);
  umdrehen( test );	
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
	for (int i=0;((i<zahl)&&((dest[i])!=('\0')))&&((src[i])!=('\0'));i++)
dest[i]=src[i];

	
}

void umdrehen( char* str )
{	char temp[30]="""";
	int i=0;
	for(;(str[i+1])!=('\0');i++){}
	for(int j=0;(str[j])!=('\0');j++) {temp[j]=str[i-j];}
	for(int j=0;(str[j])!=('\0');j++) {str[j]=temp[(j)];}
	
}

int main( int argc, char* argv[] )
{
	char test[11]= ""0123456789"";
	printf( ""Das Original ist: %s \n"", test );
	ersetzen( test , atoi(argv[1]), argv[2] );
	printf( ""Ersetzt : %s \n"", test );
	umdrehen( test );
	printf( ""Rückwärts : %s \n"", test );
}",0.5805084746,0
286,WS2021,9,Antwort 10,C,Daniel,Grönefeld,Constanze Cosima,Freier,"#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{  
	for(int i = 0; src[i] != '\0' && dest[i] != '\0' && i < zahl; i++){
		dest[i] = src[i];
	}
}

void umdrehen( char* str)
{
	int length_str = 0;
	for( int i = 0; str[i] != '\0'; i++)
		length_str = i;
	char temp_string[length_str];
	for( int i = 0; i <= length_str; i++)
		temp_string[i] = str[length_str-i];
	for( int i = 0; i <= length_str; i++)
		str[i] = temp_string[i];
}

int main( int argc, char* argv[] )
{  
  char test[11] = ""0123456789"";
  printf( ""Das Original ist: %s \n"", test);
  ersetzen(test , atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test);
  umdrehen( test );	
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdlib.h>
#include <stdio.h>
int Laenge(char *str)
{
    int size = 0;
    for (int j = 0; str[j] != '\0'; j++)
    {
        size += 1;
    }
    return size;
}

int Kopieren(char *dest, char *src)
{
    int i = 0;
    int j = 0;
    while (src[i] != '\0')
    {
        if (src[i] != 'q' && src[i] != 'x' && src[i] != 'y' && src[i] != 'Q' && src[i] != 'X' && src[i] != 'Y')
        {
            dest[j++] = src[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int Entfernen(char *Eingabe)
{
    int i = 0;
    int j = 0;
    while (Eingabe[i] != '\0')
    {
        if (i % 3 == 0)
        {
            Eingabe[j++] = Eingabe[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int main(int argc, char *argv[])
{
    int Gesamtlaenge = 0;
    for (int i = 1; i < argc; i++)
    {
        Gesamtlaenge += Laenge(argv[i]);
    }
    char Ausgabe[Gesamtlaenge + 1];
    char *Ziel = Ausgabe;
    for (int i = 1; i < argc; i++)
    {
        Ziel += Kopieren(Ziel, argv[i]);
    }
    *Ziel = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", Ausgabe);
    Ausgabe[Entfernen(Ausgabe)] = '\0';
    printf(""Der neue String lautet: %s\n"", Ausgabe);
}",0.1040856031,0
288,WS2021,9,Antwort 10,C,Daniel,Grönefeld,Caspar Valentin,Zell,"#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{  
	for(int i = 0; src[i] != '\0' && dest[i] != '\0' && i < zahl; i++){
		dest[i] = src[i];
	}
}

void umdrehen( char* str)
{
	int length_str = 0;
	for( int i = 0; str[i] != '\0'; i++)
		length_str = i;
	char temp_string[length_str];
	for( int i = 0; i <= length_str; i++)
		temp_string[i] = str[length_str-i];
	for( int i = 0; i <= length_str; i++)
		str[i] = temp_string[i];
}

int main( int argc, char* argv[] )
{  
  char test[11] = ""0123456789"";
  printf( ""Das Original ist: %s \n"", test);
  ersetzen(test , atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test);
  umdrehen( test );	
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0;(i < zahl) && (i < 10) && (src[i] != '\0'); i++)
    {
        dest[i] = src[i];
    }
}

void umdrehen(char* str )
{
    int size;
    for (int j = 1; str[j] != '\0'; j++)
    {
        size = j + 2;
    }
    char Kopie[size];
    for (int i = 0; i < (size - 1); i++)
    {
        Kopie[size - 2- i] = str[i];
    }
    for (int i = 0; i < size; i++)
    {
        str[i] = Kopie[i];
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen(test, atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.5487411233,0
289,WS2021,9,Antwort 10,C,Daniel,Grönefeld,Jakob,Kühl,"#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{  
	for(int i = 0; src[i] != '\0' && dest[i] != '\0' && i < zahl; i++){
		dest[i] = src[i];
	}
}

void umdrehen( char* str)
{
	int length_str = 0;
	for( int i = 0; str[i] != '\0'; i++)
		length_str = i;
	char temp_string[length_str];
	for( int i = 0; i <= length_str; i++)
		temp_string[i] = str[length_str-i];
	for( int i = 0; i <= length_str; i++)
		str[i] = temp_string[i];
}

int main( int argc, char* argv[] )
{  
  char test[11] = ""0123456789"";
  printf( ""Das Original ist: %s \n"", test);
  ersetzen(test , atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test);
  umdrehen( test );	
  printf( ""Rückwärts : %s \n"", test );
}","#include<stdio.h>

int main(int argc, char* argv[]){
	char a[100]= """";
	char b[100]="""";
	int x=0;
	for(int i=1 ;i<argc ;i++){
		for (int j=0; argv[i][j] != '\0'; j++){
			if(argv[i][j]== 'x' || argv[i][j]== 'y' || argv[i][j]== 'q' || argv[i][j]== 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q') continue;
			else {
				a[x]=argv[i][j];
				x+=1;
			}
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", a);
	int y=0;
	for(int i=0; i<100; i+=3){
		b[y]=a[i];
		y++;
	}
	printf(""Der neue String lautet: %s\n"", b);
}",0.1509727626,0
290,WS2021,9,Antwort 10,C,Daniel,Grönefeld,Niklas,Mohr,"#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{  
	for(int i = 0; src[i] != '\0' && dest[i] != '\0' && i < zahl; i++){
		dest[i] = src[i];
	}
}

void umdrehen( char* str)
{
	int length_str = 0;
	for( int i = 0; str[i] != '\0'; i++)
		length_str = i;
	char temp_string[length_str];
	for( int i = 0; i <= length_str; i++)
		temp_string[i] = str[length_str-i];
	for( int i = 0; i <= length_str; i++)
		str[i] = temp_string[i];
}

int main( int argc, char* argv[] )
{  
  char test[11] = ""0123456789"";
  printf( ""Das Original ist: %s \n"", test);
  ersetzen(test , atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test);
  umdrehen( test );	
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

void aussortieren(char* str)
{
    int t = 0;
    char temp[50];
    for(int i = 0; str[i] != '\0'; i++)
    {
        int t = 0;
        char temp[50];
        if(str[i] == 'x'|| str[i] == 'y'|| str[i] == 'q');
        else if(str[i] == 'X'|| str[i] == 'Y'|| str[i] == 'Q');
        else 
        {
            temp[t] = str[i];
            t++;
        }
    }
    str = &temp;
}


char* sortieren(int länge, char* str[])
{
    int t = 0;
    char temp[200];
    for(int i = 0; i < länge; i++)
    {
        for(int a = 0; a != '\0'; a++)
        {
            temp[t] = str[i+1][a];
            t++;
        }
    }
}   


int main( int argc, char* argv[] )
{  
    int length = sizeof(argv) - 1;
    for(int i = 1; i <= length; i++)
    {
        aussortieren(argv[i]);
    }
    char zusammen = sortieren(length, argv);
    printf(""x,y,q und X,Y,Q aussortiert: %s"", zusammen); 
}",0.1740139211,0
291,WS2021,9,Antwort 10,C,Daniel,Grönefeld,Tammo Hendrik,Nie,"#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{  
	for(int i = 0; src[i] != '\0' && dest[i] != '\0' && i < zahl; i++){
		dest[i] = src[i];
	}
}

void umdrehen( char* str)
{
	int length_str = 0;
	for( int i = 0; str[i] != '\0'; i++)
		length_str = i;
	char temp_string[length_str];
	for( int i = 0; i <= length_str; i++)
		temp_string[i] = str[length_str-i];
	for( int i = 0; i <= length_str; i++)
		str[i] = temp_string[i];
}

int main( int argc, char* argv[] )
{  
  char test[11] = ""0123456789"";
  printf( ""Das Original ist: %s \n"", test);
  ersetzen(test , atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test);
  umdrehen( test );	
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
 
int main(int argc, char* argv[52])
{
   //aneinanderhängen

   int zahl = 0;
   int* p_zahl = &zahl;
   int counter = 1;
   int* p_counter = &counter;
   char str[30];
   for(int i = 0; i < argc-1 ; i++)
   {
      for(int j = 0; argv[counter][j] != '\0'; j++)
      {
         str[zahl] = argv[counter][j];
         *p_zahl += 1;
         
      }
      *p_counter += 1;
   }
   str[zahl+1] = '\0';

   int nummer = 0;
   int* p_nummer = &nummer;
   char str2[25];
   for(int i = 0; ; i++)
   {
      if((str[i] != 'x') && (str[i] != 'y') && (str[i] != 'q') && (str[i] != 'X') && (str[i] != 'Y') && (str[i] != 'Q'))
      {
         
         str2[nummer] = str[i];
         if(str[i] == '\0') break;
         *p_nummer += 1;
      }
   }

   //jedes dritte in str3
   char str3[35];
   for(int i = 0; i < 57; i +=3)
   {
      //if((str2[i] == '\0')) break;
      str3[i/3] = str2[i];  
      str3[i/3+1] = '\0'  ;
   }
   //drucken:

   printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str2, str3);
}",0.1349758972,0
292,WS2021,9,Antwort 10,C,Daniel,Grönefeld,Sören Sven,Werner,"#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{  
	for(int i = 0; src[i] != '\0' && dest[i] != '\0' && i < zahl; i++){
		dest[i] = src[i];
	}
}

void umdrehen( char* str)
{
	int length_str = 0;
	for( int i = 0; str[i] != '\0'; i++)
		length_str = i;
	char temp_string[length_str];
	for( int i = 0; i <= length_str; i++)
		temp_string[i] = str[length_str-i];
	for( int i = 0; i <= length_str; i++)
		str[i] = temp_string[i];
}

int main( int argc, char* argv[] )
{  
  char test[11] = ""0123456789"";
  printf( ""Das Original ist: %s \n"", test);
  ersetzen(test , atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test);
  umdrehen( test );	
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
/*
int zaehlen(char* str){
	int counter = 0;
	while(str[counter] != '\0'){
		counter++;
	}
	return counter;
}*/

int main( int argc, char* argv[]){



	char str[100] = """";

	for(int i = 1; i<argc; i++){
		strcat(str, argv[i]);
	}
	printf(""%s\n"", str);


}",0.2383134739,0
297,WS2021,9,Antwort 10,C,Catalina,Florez Vargas,Sandro,Paluteder,"#include <stdio.h>

int main(int argc, char *argv[])

{
    int u;
    int f = 0;
    char neu[20];
    char nueva[15];
    int x = 0;
    for (int i = 1; i < argc; i++)
    {
        u = 0;
        while ((argv[i][u]) != '\0')
        {
            if (argv[i][u] != 'x' && argv[i][u] != 'y' && argv[i][u] != 'q' && argv[i][u] != 'X' && argv[i][u] != 'Y' && argv[i][u] != 'Q')
            {
                neu[f] = argv[i][u];
                f++;
            }
            u++;
        }
    }

    for (int i = 0; i <= f; i++)
    {
        if (x > (i / 3) || i == 0)
        {
            if (i == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
            if (((i) % 3) == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
        }
    }

    printf(""x,y,q und X,Y,Q aussortiert: "");
    for (int i = 0; i < f; i++)
        if (neu[i] != '\0')
        {
            printf(""%c"", neu[i]);
        }

    printf(""\n"");

     printf(""Der neue String lautet: "");
    for (int i = 1; i < (f / 2)-1; i++)
            printf(""%c"", nueva[i]);
    if (neu[0] == 'z')
        printf(""z"");
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[])
{   
     // char *argv[] is a array of strings, each command line arguments
    // int argc is the amount of command line arguments
    
    //loop through all command line arguements. First command line argument is always taken by default so we start at 1.
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
  
        
        //printf(""Current 2 %c \n"",CurrentCommandString[0]);
       
        //int LengthOfString = sizeof(CurrentCommandString) / sizeof(char*);
        
        //printf(""Current Size %i \n"",LengthOfString);
        
        int i = 0;
        while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
            if (CurrentCommandString[i] == 'x' 
             || CurrentCommandString[i] == 'y' 
             || CurrentCommandString[i] == 'q'
             || CurrentCommandString[i] == 'X'
             || CurrentCommandString[i] == 'Y' 
             || CurrentCommandString[i] == 'Q')
             {   
                 int j = i;
                 while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
                    CurrentCommandString[j] = CurrentCommandString[j + 1]; 
                    ++j; 
                 }
             }
            ++i;
         }
        
        
        //printf(""x,y,q und X,Y,Q aussortiert TEST 1: %s \n"", argv[kk]);
    }
    
    char StringXYQRemoved[5000];
    int StringXYQRemovedIndex = 0;
       
    char StringThirdRemoved[5000];
    int StringThirdRemovedIndex = 0;
    
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
        
        
        //String 1 
        
        int length, j;
        
          // store length of s1 in the length variable
          length = 0;
          while (StringXYQRemoved[length] != '\0' && StringXYQRemoved[length] != ' ') {
            ++length;
          }
        
          // concatenate s2 to s1
          for (j = 0; CurrentCommandString[j] != '\0' && CurrentCommandString[length] != ' '; ++j, ++length) {
            StringXYQRemoved[length] = CurrentCommandString[j];
          }
        
          // terminating the s1 string
          StringXYQRemoved[length] = '\0';       
    }
    
    
    
        //String2
        int length, j;
        // store length of s1 in the length variable
        length = 0;
        while (StringThirdRemoved[length] != '\0' && StringThirdRemoved[length] != ' ') {
        ++length;
        }
        
        // concatenate s2 to s1
        for (j = 0; StringXYQRemoved[j] != '\0' && StringXYQRemoved[length] != ' '; ++length) {
         StringThirdRemoved[length] = StringXYQRemoved[j];
         
         //printf(""WTFFFF %c \n"",StringXYQRemoved[j]);
         j+=3;
        }
        
        // terminating the s1 string
        StringThirdRemoved[length] = '\0';       
        
    printf(""x,y,q und X,Y,Q aussortiert: %s \n"", StringXYQRemoved);
    printf(""Der neue String lautet: %s"", StringThirdRemoved);
    
}",0.1887905605,0
298,WS2021,9,Antwort 10,C,Catalina,Florez Vargas,Jonas,Bestgen,"#include <stdio.h>

int main(int argc, char *argv[])

{
    int u;
    int f = 0;
    char neu[20];
    char nueva[15];
    int x = 0;
    for (int i = 1; i < argc; i++)
    {
        u = 0;
        while ((argv[i][u]) != '\0')
        {
            if (argv[i][u] != 'x' && argv[i][u] != 'y' && argv[i][u] != 'q' && argv[i][u] != 'X' && argv[i][u] != 'Y' && argv[i][u] != 'Q')
            {
                neu[f] = argv[i][u];
                f++;
            }
            u++;
        }
    }

    for (int i = 0; i <= f; i++)
    {
        if (x > (i / 3) || i == 0)
        {
            if (i == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
            if (((i) % 3) == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
        }
    }

    printf(""x,y,q und X,Y,Q aussortiert: "");
    for (int i = 0; i < f; i++)
        if (neu[i] != '\0')
        {
            printf(""%c"", neu[i]);
        }

    printf(""\n"");

     printf(""Der neue String lautet: "");
    for (int i = 1; i < (f / 2)-1; i++)
            printf(""%c"", nueva[i]);
    if (neu[0] == 'z')
        printf(""z"");
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
	for (int i=0;((i<zahl)&&((dest[i])!=('\0')))&&((src[i])!=('\0'));i++)
dest[i]=src[i];

	
}

void umdrehen( char* str )
{	char temp[30]="""";
	int i=0;
	for(;(str[i+1])!=('\0');i++){}
	for(int j=0;(str[j])!=('\0');j++) {temp[j]=str[i-j];}
	for(int j=0;(str[j])!=('\0');j++) {str[j]=temp[(j)];}
	
}

int main( int argc, char* argv[] )
{
	char test[11]= ""0123456789"";
	printf( ""Das Original ist: %s \n"", test );
	ersetzen( test , atoi(argv[1]), argv[2] );
	printf( ""Ersetzt : %s \n"", test );
	umdrehen( test );
	printf( ""Rückwärts : %s \n"", test );
}",0.0967056323,0
299,WS2021,9,Antwort 10,C,Catalina,Florez Vargas,Constanze Cosima,Freier,"#include <stdio.h>

int main(int argc, char *argv[])

{
    int u;
    int f = 0;
    char neu[20];
    char nueva[15];
    int x = 0;
    for (int i = 1; i < argc; i++)
    {
        u = 0;
        while ((argv[i][u]) != '\0')
        {
            if (argv[i][u] != 'x' && argv[i][u] != 'y' && argv[i][u] != 'q' && argv[i][u] != 'X' && argv[i][u] != 'Y' && argv[i][u] != 'Q')
            {
                neu[f] = argv[i][u];
                f++;
            }
            u++;
        }
    }

    for (int i = 0; i <= f; i++)
    {
        if (x > (i / 3) || i == 0)
        {
            if (i == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
            if (((i) % 3) == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
        }
    }

    printf(""x,y,q und X,Y,Q aussortiert: "");
    for (int i = 0; i < f; i++)
        if (neu[i] != '\0')
        {
            printf(""%c"", neu[i]);
        }

    printf(""\n"");

     printf(""Der neue String lautet: "");
    for (int i = 1; i < (f / 2)-1; i++)
            printf(""%c"", nueva[i]);
    if (neu[0] == 'z')
        printf(""z"");
}","#include <stdlib.h>
#include <stdio.h>
int Laenge(char *str)
{
    int size = 0;
    for (int j = 0; str[j] != '\0'; j++)
    {
        size += 1;
    }
    return size;
}

int Kopieren(char *dest, char *src)
{
    int i = 0;
    int j = 0;
    while (src[i] != '\0')
    {
        if (src[i] != 'q' && src[i] != 'x' && src[i] != 'y' && src[i] != 'Q' && src[i] != 'X' && src[i] != 'Y')
        {
            dest[j++] = src[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int Entfernen(char *Eingabe)
{
    int i = 0;
    int j = 0;
    while (Eingabe[i] != '\0')
    {
        if (i % 3 == 0)
        {
            Eingabe[j++] = Eingabe[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int main(int argc, char *argv[])
{
    int Gesamtlaenge = 0;
    for (int i = 1; i < argc; i++)
    {
        Gesamtlaenge += Laenge(argv[i]);
    }
    char Ausgabe[Gesamtlaenge + 1];
    char *Ziel = Ausgabe;
    for (int i = 1; i < argc; i++)
    {
        Ziel += Kopieren(Ziel, argv[i]);
    }
    *Ziel = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", Ausgabe);
    Ausgabe[Entfernen(Ausgabe)] = '\0';
    printf(""Der neue String lautet: %s\n"", Ausgabe);
}",0.219666931,0
301,WS2021,9,Antwort 10,C,Catalina,Florez Vargas,Caspar Valentin,Zell,"#include <stdio.h>

int main(int argc, char *argv[])

{
    int u;
    int f = 0;
    char neu[20];
    char nueva[15];
    int x = 0;
    for (int i = 1; i < argc; i++)
    {
        u = 0;
        while ((argv[i][u]) != '\0')
        {
            if (argv[i][u] != 'x' && argv[i][u] != 'y' && argv[i][u] != 'q' && argv[i][u] != 'X' && argv[i][u] != 'Y' && argv[i][u] != 'Q')
            {
                neu[f] = argv[i][u];
                f++;
            }
            u++;
        }
    }

    for (int i = 0; i <= f; i++)
    {
        if (x > (i / 3) || i == 0)
        {
            if (i == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
            if (((i) % 3) == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
        }
    }

    printf(""x,y,q und X,Y,Q aussortiert: "");
    for (int i = 0; i < f; i++)
        if (neu[i] != '\0')
        {
            printf(""%c"", neu[i]);
        }

    printf(""\n"");

     printf(""Der neue String lautet: "");
    for (int i = 1; i < (f / 2)-1; i++)
            printf(""%c"", nueva[i]);
    if (neu[0] == 'z')
        printf(""z"");
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0;(i < zahl) && (i < 10) && (src[i] != '\0'); i++)
    {
        dest[i] = src[i];
    }
}

void umdrehen(char* str )
{
    int size;
    for (int j = 1; str[j] != '\0'; j++)
    {
        size = j + 2;
    }
    char Kopie[size];
    for (int i = 0; i < (size - 1); i++)
    {
        Kopie[size - 2- i] = str[i];
    }
    for (int i = 0; i < size; i++)
    {
        str[i] = Kopie[i];
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen(test, atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.1181141439,0
302,WS2021,9,Antwort 10,C,Catalina,Florez Vargas,Jakob,Kühl,"#include <stdio.h>

int main(int argc, char *argv[])

{
    int u;
    int f = 0;
    char neu[20];
    char nueva[15];
    int x = 0;
    for (int i = 1; i < argc; i++)
    {
        u = 0;
        while ((argv[i][u]) != '\0')
        {
            if (argv[i][u] != 'x' && argv[i][u] != 'y' && argv[i][u] != 'q' && argv[i][u] != 'X' && argv[i][u] != 'Y' && argv[i][u] != 'Q')
            {
                neu[f] = argv[i][u];
                f++;
            }
            u++;
        }
    }

    for (int i = 0; i <= f; i++)
    {
        if (x > (i / 3) || i == 0)
        {
            if (i == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
            if (((i) % 3) == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
        }
    }

    printf(""x,y,q und X,Y,Q aussortiert: "");
    for (int i = 0; i < f; i++)
        if (neu[i] != '\0')
        {
            printf(""%c"", neu[i]);
        }

    printf(""\n"");

     printf(""Der neue String lautet: "");
    for (int i = 1; i < (f / 2)-1; i++)
            printf(""%c"", nueva[i]);
    if (neu[0] == 'z')
        printf(""z"");
}","#include<stdio.h>

int main(int argc, char* argv[]){
	char a[100]= """";
	char b[100]="""";
	int x=0;
	for(int i=1 ;i<argc ;i++){
		for (int j=0; argv[i][j] != '\0'; j++){
			if(argv[i][j]== 'x' || argv[i][j]== 'y' || argv[i][j]== 'q' || argv[i][j]== 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q') continue;
			else {
				a[x]=argv[i][j];
				x+=1;
			}
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", a);
	int y=0;
	for(int i=0; i<100; i+=3){
		b[y]=a[i];
		y++;
	}
	printf(""Der neue String lautet: %s\n"", b);
}",0.2535693889,0
303,WS2021,9,Antwort 10,C,Catalina,Florez Vargas,Niklas,Mohr,"#include <stdio.h>

int main(int argc, char *argv[])

{
    int u;
    int f = 0;
    char neu[20];
    char nueva[15];
    int x = 0;
    for (int i = 1; i < argc; i++)
    {
        u = 0;
        while ((argv[i][u]) != '\0')
        {
            if (argv[i][u] != 'x' && argv[i][u] != 'y' && argv[i][u] != 'q' && argv[i][u] != 'X' && argv[i][u] != 'Y' && argv[i][u] != 'Q')
            {
                neu[f] = argv[i][u];
                f++;
            }
            u++;
        }
    }

    for (int i = 0; i <= f; i++)
    {
        if (x > (i / 3) || i == 0)
        {
            if (i == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
            if (((i) % 3) == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
        }
    }

    printf(""x,y,q und X,Y,Q aussortiert: "");
    for (int i = 0; i < f; i++)
        if (neu[i] != '\0')
        {
            printf(""%c"", neu[i]);
        }

    printf(""\n"");

     printf(""Der neue String lautet: "");
    for (int i = 1; i < (f / 2)-1; i++)
            printf(""%c"", nueva[i]);
    if (neu[0] == 'z')
        printf(""z"");
}","#include <stdio.h>
#include <stdlib.h>

void aussortieren(char* str)
{
    int t = 0;
    char temp[50];
    for(int i = 0; str[i] != '\0'; i++)
    {
        int t = 0;
        char temp[50];
        if(str[i] == 'x'|| str[i] == 'y'|| str[i] == 'q');
        else if(str[i] == 'X'|| str[i] == 'Y'|| str[i] == 'Q');
        else 
        {
            temp[t] = str[i];
            t++;
        }
    }
    str = &temp;
}


char* sortieren(int länge, char* str[])
{
    int t = 0;
    char temp[200];
    for(int i = 0; i < länge; i++)
    {
        for(int a = 0; a != '\0'; a++)
        {
            temp[t] = str[i+1][a];
            t++;
        }
    }
}   


int main( int argc, char* argv[] )
{  
    int length = sizeof(argv) - 1;
    for(int i = 1; i <= length; i++)
    {
        aussortieren(argv[i]);
    }
    char zusammen = sortieren(length, argv);
    printf(""x,y,q und X,Y,Q aussortiert: %s"", zusammen); 
}",0.1196347032,0
304,WS2021,9,Antwort 10,C,Catalina,Florez Vargas,Tammo Hendrik,Nie,"#include <stdio.h>

int main(int argc, char *argv[])

{
    int u;
    int f = 0;
    char neu[20];
    char nueva[15];
    int x = 0;
    for (int i = 1; i < argc; i++)
    {
        u = 0;
        while ((argv[i][u]) != '\0')
        {
            if (argv[i][u] != 'x' && argv[i][u] != 'y' && argv[i][u] != 'q' && argv[i][u] != 'X' && argv[i][u] != 'Y' && argv[i][u] != 'Q')
            {
                neu[f] = argv[i][u];
                f++;
            }
            u++;
        }
    }

    for (int i = 0; i <= f; i++)
    {
        if (x > (i / 3) || i == 0)
        {
            if (i == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
            if (((i) % 3) == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
        }
    }

    printf(""x,y,q und X,Y,Q aussortiert: "");
    for (int i = 0; i < f; i++)
        if (neu[i] != '\0')
        {
            printf(""%c"", neu[i]);
        }

    printf(""\n"");

     printf(""Der neue String lautet: "");
    for (int i = 1; i < (f / 2)-1; i++)
            printf(""%c"", nueva[i]);
    if (neu[0] == 'z')
        printf(""z"");
}","#include <stdio.h>
#include <stdlib.h>
 
int main(int argc, char* argv[52])
{
   //aneinanderhängen

   int zahl = 0;
   int* p_zahl = &zahl;
   int counter = 1;
   int* p_counter = &counter;
   char str[30];
   for(int i = 0; i < argc-1 ; i++)
   {
      for(int j = 0; argv[counter][j] != '\0'; j++)
      {
         str[zahl] = argv[counter][j];
         *p_zahl += 1;
         
      }
      *p_counter += 1;
   }
   str[zahl+1] = '\0';

   int nummer = 0;
   int* p_nummer = &nummer;
   char str2[25];
   for(int i = 0; ; i++)
   {
      if((str[i] != 'x') && (str[i] != 'y') && (str[i] != 'q') && (str[i] != 'X') && (str[i] != 'Y') && (str[i] != 'Q'))
      {
         
         str2[nummer] = str[i];
         if(str[i] == '\0') break;
         *p_nummer += 1;
      }
   }

   //jedes dritte in str3
   char str3[35];
   for(int i = 0; i < 57; i +=3)
   {
      //if((str2[i] == '\0')) break;
      str3[i/3] = str2[i];  
      str3[i/3+1] = '\0'  ;
   }
   //drucken:

   printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str2, str3);
}",0.2683240463,0
305,WS2021,9,Antwort 10,C,Catalina,Florez Vargas,Sören Sven,Werner,"#include <stdio.h>

int main(int argc, char *argv[])

{
    int u;
    int f = 0;
    char neu[20];
    char nueva[15];
    int x = 0;
    for (int i = 1; i < argc; i++)
    {
        u = 0;
        while ((argv[i][u]) != '\0')
        {
            if (argv[i][u] != 'x' && argv[i][u] != 'y' && argv[i][u] != 'q' && argv[i][u] != 'X' && argv[i][u] != 'Y' && argv[i][u] != 'Q')
            {
                neu[f] = argv[i][u];
                f++;
            }
            u++;
        }
    }

    for (int i = 0; i <= f; i++)
    {
        if (x > (i / 3) || i == 0)
        {
            if (i == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
            if (((i) % 3) == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
        }
    }

    printf(""x,y,q und X,Y,Q aussortiert: "");
    for (int i = 0; i < f; i++)
        if (neu[i] != '\0')
        {
            printf(""%c"", neu[i]);
        }

    printf(""\n"");

     printf(""Der neue String lautet: "");
    for (int i = 1; i < (f / 2)-1; i++)
            printf(""%c"", nueva[i]);
    if (neu[0] == 'z')
        printf(""z"");
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
/*
int zaehlen(char* str){
	int counter = 0;
	while(str[counter] != '\0'){
		counter++;
	}
	return counter;
}*/

int main( int argc, char* argv[]){



	char str[100] = """";

	for(int i = 1; i<argc; i++){
		strcat(str, argv[i]);
	}
	printf(""%s\n"", str);


}",0.1502890173,0
306,WS2021,9,Antwort 10,C,Sandro,Paluteder,Jonas,Bestgen,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[])
{   
     // char *argv[] is a array of strings, each command line arguments
    // int argc is the amount of command line arguments
    
    //loop through all command line arguements. First command line argument is always taken by default so we start at 1.
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
  
        
        //printf(""Current 2 %c \n"",CurrentCommandString[0]);
       
        //int LengthOfString = sizeof(CurrentCommandString) / sizeof(char*);
        
        //printf(""Current Size %i \n"",LengthOfString);
        
        int i = 0;
        while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
            if (CurrentCommandString[i] == 'x' 
             || CurrentCommandString[i] == 'y' 
             || CurrentCommandString[i] == 'q'
             || CurrentCommandString[i] == 'X'
             || CurrentCommandString[i] == 'Y' 
             || CurrentCommandString[i] == 'Q')
             {   
                 int j = i;
                 while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
                    CurrentCommandString[j] = CurrentCommandString[j + 1]; 
                    ++j; 
                 }
             }
            ++i;
         }
        
        
        //printf(""x,y,q und X,Y,Q aussortiert TEST 1: %s \n"", argv[kk]);
    }
    
    char StringXYQRemoved[5000];
    int StringXYQRemovedIndex = 0;
       
    char StringThirdRemoved[5000];
    int StringThirdRemovedIndex = 0;
    
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
        
        
        //String 1 
        
        int length, j;
        
          // store length of s1 in the length variable
          length = 0;
          while (StringXYQRemoved[length] != '\0' && StringXYQRemoved[length] != ' ') {
            ++length;
          }
        
          // concatenate s2 to s1
          for (j = 0; CurrentCommandString[j] != '\0' && CurrentCommandString[length] != ' '; ++j, ++length) {
            StringXYQRemoved[length] = CurrentCommandString[j];
          }
        
          // terminating the s1 string
          StringXYQRemoved[length] = '\0';       
    }
    
    
    
        //String2
        int length, j;
        // store length of s1 in the length variable
        length = 0;
        while (StringThirdRemoved[length] != '\0' && StringThirdRemoved[length] != ' ') {
        ++length;
        }
        
        // concatenate s2 to s1
        for (j = 0; StringXYQRemoved[j] != '\0' && StringXYQRemoved[length] != ' '; ++length) {
         StringThirdRemoved[length] = StringXYQRemoved[j];
         
         //printf(""WTFFFF %c \n"",StringXYQRemoved[j]);
         j+=3;
        }
        
        // terminating the s1 string
        StringThirdRemoved[length] = '\0';       
        
    printf(""x,y,q und X,Y,Q aussortiert: %s \n"", StringXYQRemoved);
    printf(""Der neue String lautet: %s"", StringThirdRemoved);
    
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
	for (int i=0;((i<zahl)&&((dest[i])!=('\0')))&&((src[i])!=('\0'));i++)
dest[i]=src[i];

	
}

void umdrehen( char* str )
{	char temp[30]="""";
	int i=0;
	for(;(str[i+1])!=('\0');i++){}
	for(int j=0;(str[j])!=('\0');j++) {temp[j]=str[i-j];}
	for(int j=0;(str[j])!=('\0');j++) {str[j]=temp[(j)];}
	
}

int main( int argc, char* argv[] )
{
	char test[11]= ""0123456789"";
	printf( ""Das Original ist: %s \n"", test );
	ersetzen( test , atoi(argv[1]), argv[2] );
	printf( ""Ersetzt : %s \n"", test );
	umdrehen( test );
	printf( ""Rückwärts : %s \n"", test );
}",0.0560893274,0
307,WS2021,9,Antwort 10,C,Sandro,Paluteder,Constanze Cosima,Freier,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[])
{   
     // char *argv[] is a array of strings, each command line arguments
    // int argc is the amount of command line arguments
    
    //loop through all command line arguements. First command line argument is always taken by default so we start at 1.
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
  
        
        //printf(""Current 2 %c \n"",CurrentCommandString[0]);
       
        //int LengthOfString = sizeof(CurrentCommandString) / sizeof(char*);
        
        //printf(""Current Size %i \n"",LengthOfString);
        
        int i = 0;
        while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
            if (CurrentCommandString[i] == 'x' 
             || CurrentCommandString[i] == 'y' 
             || CurrentCommandString[i] == 'q'
             || CurrentCommandString[i] == 'X'
             || CurrentCommandString[i] == 'Y' 
             || CurrentCommandString[i] == 'Q')
             {   
                 int j = i;
                 while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
                    CurrentCommandString[j] = CurrentCommandString[j + 1]; 
                    ++j; 
                 }
             }
            ++i;
         }
        
        
        //printf(""x,y,q und X,Y,Q aussortiert TEST 1: %s \n"", argv[kk]);
    }
    
    char StringXYQRemoved[5000];
    int StringXYQRemovedIndex = 0;
       
    char StringThirdRemoved[5000];
    int StringThirdRemovedIndex = 0;
    
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
        
        
        //String 1 
        
        int length, j;
        
          // store length of s1 in the length variable
          length = 0;
          while (StringXYQRemoved[length] != '\0' && StringXYQRemoved[length] != ' ') {
            ++length;
          }
        
          // concatenate s2 to s1
          for (j = 0; CurrentCommandString[j] != '\0' && CurrentCommandString[length] != ' '; ++j, ++length) {
            StringXYQRemoved[length] = CurrentCommandString[j];
          }
        
          // terminating the s1 string
          StringXYQRemoved[length] = '\0';       
    }
    
    
    
        //String2
        int length, j;
        // store length of s1 in the length variable
        length = 0;
        while (StringThirdRemoved[length] != '\0' && StringThirdRemoved[length] != ' ') {
        ++length;
        }
        
        // concatenate s2 to s1
        for (j = 0; StringXYQRemoved[j] != '\0' && StringXYQRemoved[length] != ' '; ++length) {
         StringThirdRemoved[length] = StringXYQRemoved[j];
         
         //printf(""WTFFFF %c \n"",StringXYQRemoved[j]);
         j+=3;
        }
        
        // terminating the s1 string
        StringThirdRemoved[length] = '\0';       
        
    printf(""x,y,q und X,Y,Q aussortiert: %s \n"", StringXYQRemoved);
    printf(""Der neue String lautet: %s"", StringThirdRemoved);
    
}","#include <stdlib.h>
#include <stdio.h>
int Laenge(char *str)
{
    int size = 0;
    for (int j = 0; str[j] != '\0'; j++)
    {
        size += 1;
    }
    return size;
}

int Kopieren(char *dest, char *src)
{
    int i = 0;
    int j = 0;
    while (src[i] != '\0')
    {
        if (src[i] != 'q' && src[i] != 'x' && src[i] != 'y' && src[i] != 'Q' && src[i] != 'X' && src[i] != 'Y')
        {
            dest[j++] = src[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int Entfernen(char *Eingabe)
{
    int i = 0;
    int j = 0;
    while (Eingabe[i] != '\0')
    {
        if (i % 3 == 0)
        {
            Eingabe[j++] = Eingabe[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int main(int argc, char *argv[])
{
    int Gesamtlaenge = 0;
    for (int i = 1; i < argc; i++)
    {
        Gesamtlaenge += Laenge(argv[i]);
    }
    char Ausgabe[Gesamtlaenge + 1];
    char *Ziel = Ausgabe;
    for (int i = 1; i < argc; i++)
    {
        Ziel += Kopieren(Ziel, argv[i]);
    }
    *Ziel = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", Ausgabe);
    Ausgabe[Entfernen(Ausgabe)] = '\0';
    printf(""Der neue String lautet: %s\n"", Ausgabe);
}",0.1197951458,0
309,WS2021,9,Antwort 10,C,Sandro,Paluteder,Caspar Valentin,Zell,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[])
{   
     // char *argv[] is a array of strings, each command line arguments
    // int argc is the amount of command line arguments
    
    //loop through all command line arguements. First command line argument is always taken by default so we start at 1.
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
  
        
        //printf(""Current 2 %c \n"",CurrentCommandString[0]);
       
        //int LengthOfString = sizeof(CurrentCommandString) / sizeof(char*);
        
        //printf(""Current Size %i \n"",LengthOfString);
        
        int i = 0;
        while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
            if (CurrentCommandString[i] == 'x' 
             || CurrentCommandString[i] == 'y' 
             || CurrentCommandString[i] == 'q'
             || CurrentCommandString[i] == 'X'
             || CurrentCommandString[i] == 'Y' 
             || CurrentCommandString[i] == 'Q')
             {   
                 int j = i;
                 while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
                    CurrentCommandString[j] = CurrentCommandString[j + 1]; 
                    ++j; 
                 }
             }
            ++i;
         }
        
        
        //printf(""x,y,q und X,Y,Q aussortiert TEST 1: %s \n"", argv[kk]);
    }
    
    char StringXYQRemoved[5000];
    int StringXYQRemovedIndex = 0;
       
    char StringThirdRemoved[5000];
    int StringThirdRemovedIndex = 0;
    
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
        
        
        //String 1 
        
        int length, j;
        
          // store length of s1 in the length variable
          length = 0;
          while (StringXYQRemoved[length] != '\0' && StringXYQRemoved[length] != ' ') {
            ++length;
          }
        
          // concatenate s2 to s1
          for (j = 0; CurrentCommandString[j] != '\0' && CurrentCommandString[length] != ' '; ++j, ++length) {
            StringXYQRemoved[length] = CurrentCommandString[j];
          }
        
          // terminating the s1 string
          StringXYQRemoved[length] = '\0';       
    }
    
    
    
        //String2
        int length, j;
        // store length of s1 in the length variable
        length = 0;
        while (StringThirdRemoved[length] != '\0' && StringThirdRemoved[length] != ' ') {
        ++length;
        }
        
        // concatenate s2 to s1
        for (j = 0; StringXYQRemoved[j] != '\0' && StringXYQRemoved[length] != ' '; ++length) {
         StringThirdRemoved[length] = StringXYQRemoved[j];
         
         //printf(""WTFFFF %c \n"",StringXYQRemoved[j]);
         j+=3;
        }
        
        // terminating the s1 string
        StringThirdRemoved[length] = '\0';       
        
    printf(""x,y,q und X,Y,Q aussortiert: %s \n"", StringXYQRemoved);
    printf(""Der neue String lautet: %s"", StringThirdRemoved);
    
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0;(i < zahl) && (i < 10) && (src[i] != '\0'); i++)
    {
        dest[i] = src[i];
    }
}

void umdrehen(char* str )
{
    int size;
    for (int j = 1; str[j] != '\0'; j++)
    {
        size = j + 2;
    }
    char Kopie[size];
    for (int i = 0; i < (size - 1); i++)
    {
        Kopie[size - 2- i] = str[i];
    }
    for (int i = 0; i < size; i++)
    {
        str[i] = Kopie[i];
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen(test, atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.0903614458,0
310,WS2021,9,Antwort 10,C,Sandro,Paluteder,Jakob,Kühl,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[])
{   
     // char *argv[] is a array of strings, each command line arguments
    // int argc is the amount of command line arguments
    
    //loop through all command line arguements. First command line argument is always taken by default so we start at 1.
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
  
        
        //printf(""Current 2 %c \n"",CurrentCommandString[0]);
       
        //int LengthOfString = sizeof(CurrentCommandString) / sizeof(char*);
        
        //printf(""Current Size %i \n"",LengthOfString);
        
        int i = 0;
        while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
            if (CurrentCommandString[i] == 'x' 
             || CurrentCommandString[i] == 'y' 
             || CurrentCommandString[i] == 'q'
             || CurrentCommandString[i] == 'X'
             || CurrentCommandString[i] == 'Y' 
             || CurrentCommandString[i] == 'Q')
             {   
                 int j = i;
                 while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
                    CurrentCommandString[j] = CurrentCommandString[j + 1]; 
                    ++j; 
                 }
             }
            ++i;
         }
        
        
        //printf(""x,y,q und X,Y,Q aussortiert TEST 1: %s \n"", argv[kk]);
    }
    
    char StringXYQRemoved[5000];
    int StringXYQRemovedIndex = 0;
       
    char StringThirdRemoved[5000];
    int StringThirdRemovedIndex = 0;
    
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
        
        
        //String 1 
        
        int length, j;
        
          // store length of s1 in the length variable
          length = 0;
          while (StringXYQRemoved[length] != '\0' && StringXYQRemoved[length] != ' ') {
            ++length;
          }
        
          // concatenate s2 to s1
          for (j = 0; CurrentCommandString[j] != '\0' && CurrentCommandString[length] != ' '; ++j, ++length) {
            StringXYQRemoved[length] = CurrentCommandString[j];
          }
        
          // terminating the s1 string
          StringXYQRemoved[length] = '\0';       
    }
    
    
    
        //String2
        int length, j;
        // store length of s1 in the length variable
        length = 0;
        while (StringThirdRemoved[length] != '\0' && StringThirdRemoved[length] != ' ') {
        ++length;
        }
        
        // concatenate s2 to s1
        for (j = 0; StringXYQRemoved[j] != '\0' && StringXYQRemoved[length] != ' '; ++length) {
         StringThirdRemoved[length] = StringXYQRemoved[j];
         
         //printf(""WTFFFF %c \n"",StringXYQRemoved[j]);
         j+=3;
        }
        
        // terminating the s1 string
        StringThirdRemoved[length] = '\0';       
        
    printf(""x,y,q und X,Y,Q aussortiert: %s \n"", StringXYQRemoved);
    printf(""Der neue String lautet: %s"", StringThirdRemoved);
    
}","#include<stdio.h>

int main(int argc, char* argv[]){
	char a[100]= """";
	char b[100]="""";
	int x=0;
	for(int i=1 ;i<argc ;i++){
		for (int j=0; argv[i][j] != '\0'; j++){
			if(argv[i][j]== 'x' || argv[i][j]== 'y' || argv[i][j]== 'q' || argv[i][j]== 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q') continue;
			else {
				a[x]=argv[i][j];
				x+=1;
			}
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", a);
	int y=0;
	for(int i=0; i<100; i+=3){
		b[y]=a[i];
		y++;
	}
	printf(""Der neue String lautet: %s\n"", b);
}",0.102688172,0
311,WS2021,9,Antwort 10,C,Sandro,Paluteder,Niklas,Mohr,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[])
{   
     // char *argv[] is a array of strings, each command line arguments
    // int argc is the amount of command line arguments
    
    //loop through all command line arguements. First command line argument is always taken by default so we start at 1.
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
  
        
        //printf(""Current 2 %c \n"",CurrentCommandString[0]);
       
        //int LengthOfString = sizeof(CurrentCommandString) / sizeof(char*);
        
        //printf(""Current Size %i \n"",LengthOfString);
        
        int i = 0;
        while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
            if (CurrentCommandString[i] == 'x' 
             || CurrentCommandString[i] == 'y' 
             || CurrentCommandString[i] == 'q'
             || CurrentCommandString[i] == 'X'
             || CurrentCommandString[i] == 'Y' 
             || CurrentCommandString[i] == 'Q')
             {   
                 int j = i;
                 while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
                    CurrentCommandString[j] = CurrentCommandString[j + 1]; 
                    ++j; 
                 }
             }
            ++i;
         }
        
        
        //printf(""x,y,q und X,Y,Q aussortiert TEST 1: %s \n"", argv[kk]);
    }
    
    char StringXYQRemoved[5000];
    int StringXYQRemovedIndex = 0;
       
    char StringThirdRemoved[5000];
    int StringThirdRemovedIndex = 0;
    
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
        
        
        //String 1 
        
        int length, j;
        
          // store length of s1 in the length variable
          length = 0;
          while (StringXYQRemoved[length] != '\0' && StringXYQRemoved[length] != ' ') {
            ++length;
          }
        
          // concatenate s2 to s1
          for (j = 0; CurrentCommandString[j] != '\0' && CurrentCommandString[length] != ' '; ++j, ++length) {
            StringXYQRemoved[length] = CurrentCommandString[j];
          }
        
          // terminating the s1 string
          StringXYQRemoved[length] = '\0';       
    }
    
    
    
        //String2
        int length, j;
        // store length of s1 in the length variable
        length = 0;
        while (StringThirdRemoved[length] != '\0' && StringThirdRemoved[length] != ' ') {
        ++length;
        }
        
        // concatenate s2 to s1
        for (j = 0; StringXYQRemoved[j] != '\0' && StringXYQRemoved[length] != ' '; ++length) {
         StringThirdRemoved[length] = StringXYQRemoved[j];
         
         //printf(""WTFFFF %c \n"",StringXYQRemoved[j]);
         j+=3;
        }
        
        // terminating the s1 string
        StringThirdRemoved[length] = '\0';       
        
    printf(""x,y,q und X,Y,Q aussortiert: %s \n"", StringXYQRemoved);
    printf(""Der neue String lautet: %s"", StringThirdRemoved);
    
}","#include <stdio.h>
#include <stdlib.h>

void aussortieren(char* str)
{
    int t = 0;
    char temp[50];
    for(int i = 0; str[i] != '\0'; i++)
    {
        int t = 0;
        char temp[50];
        if(str[i] == 'x'|| str[i] == 'y'|| str[i] == 'q');
        else if(str[i] == 'X'|| str[i] == 'Y'|| str[i] == 'Q');
        else 
        {
            temp[t] = str[i];
            t++;
        }
    }
    str = &temp;
}


char* sortieren(int länge, char* str[])
{
    int t = 0;
    char temp[200];
    for(int i = 0; i < länge; i++)
    {
        for(int a = 0; a != '\0'; a++)
        {
            temp[t] = str[i+1][a];
            t++;
        }
    }
}   


int main( int argc, char* argv[] )
{  
    int length = sizeof(argv) - 1;
    for(int i = 1; i <= length; i++)
    {
        aussortieren(argv[i]);
    }
    char zusammen = sortieren(length, argv);
    printf(""x,y,q und X,Y,Q aussortiert: %s"", zusammen); 
}",0.1086799711,0
312,WS2021,9,Antwort 10,C,Sandro,Paluteder,Tammo Hendrik,Nie,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[])
{   
     // char *argv[] is a array of strings, each command line arguments
    // int argc is the amount of command line arguments
    
    //loop through all command line arguements. First command line argument is always taken by default so we start at 1.
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
  
        
        //printf(""Current 2 %c \n"",CurrentCommandString[0]);
       
        //int LengthOfString = sizeof(CurrentCommandString) / sizeof(char*);
        
        //printf(""Current Size %i \n"",LengthOfString);
        
        int i = 0;
        while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
            if (CurrentCommandString[i] == 'x' 
             || CurrentCommandString[i] == 'y' 
             || CurrentCommandString[i] == 'q'
             || CurrentCommandString[i] == 'X'
             || CurrentCommandString[i] == 'Y' 
             || CurrentCommandString[i] == 'Q')
             {   
                 int j = i;
                 while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
                    CurrentCommandString[j] = CurrentCommandString[j + 1]; 
                    ++j; 
                 }
             }
            ++i;
         }
        
        
        //printf(""x,y,q und X,Y,Q aussortiert TEST 1: %s \n"", argv[kk]);
    }
    
    char StringXYQRemoved[5000];
    int StringXYQRemovedIndex = 0;
       
    char StringThirdRemoved[5000];
    int StringThirdRemovedIndex = 0;
    
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
        
        
        //String 1 
        
        int length, j;
        
          // store length of s1 in the length variable
          length = 0;
          while (StringXYQRemoved[length] != '\0' && StringXYQRemoved[length] != ' ') {
            ++length;
          }
        
          // concatenate s2 to s1
          for (j = 0; CurrentCommandString[j] != '\0' && CurrentCommandString[length] != ' '; ++j, ++length) {
            StringXYQRemoved[length] = CurrentCommandString[j];
          }
        
          // terminating the s1 string
          StringXYQRemoved[length] = '\0';       
    }
    
    
    
        //String2
        int length, j;
        // store length of s1 in the length variable
        length = 0;
        while (StringThirdRemoved[length] != '\0' && StringThirdRemoved[length] != ' ') {
        ++length;
        }
        
        // concatenate s2 to s1
        for (j = 0; StringXYQRemoved[j] != '\0' && StringXYQRemoved[length] != ' '; ++length) {
         StringThirdRemoved[length] = StringXYQRemoved[j];
         
         //printf(""WTFFFF %c \n"",StringXYQRemoved[j]);
         j+=3;
        }
        
        // terminating the s1 string
        StringThirdRemoved[length] = '\0';       
        
    printf(""x,y,q und X,Y,Q aussortiert: %s \n"", StringXYQRemoved);
    printf(""Der neue String lautet: %s"", StringThirdRemoved);
    
}","#include <stdio.h>
#include <stdlib.h>
 
int main(int argc, char* argv[52])
{
   //aneinanderhängen

   int zahl = 0;
   int* p_zahl = &zahl;
   int counter = 1;
   int* p_counter = &counter;
   char str[30];
   for(int i = 0; i < argc-1 ; i++)
   {
      for(int j = 0; argv[counter][j] != '\0'; j++)
      {
         str[zahl] = argv[counter][j];
         *p_zahl += 1;
         
      }
      *p_counter += 1;
   }
   str[zahl+1] = '\0';

   int nummer = 0;
   int* p_nummer = &nummer;
   char str2[25];
   for(int i = 0; ; i++)
   {
      if((str[i] != 'x') && (str[i] != 'y') && (str[i] != 'q') && (str[i] != 'X') && (str[i] != 'Y') && (str[i] != 'Q'))
      {
         
         str2[nummer] = str[i];
         if(str[i] == '\0') break;
         *p_nummer += 1;
      }
   }

   //jedes dritte in str3
   char str3[35];
   for(int i = 0; i < 57; i +=3)
   {
      //if((str2[i] == '\0')) break;
      str3[i/3] = str2[i];  
      str3[i/3+1] = '\0'  ;
   }
   //drucken:

   printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str2, str3);
}",0.0957694096,0
313,WS2021,9,Antwort 10,C,Sandro,Paluteder,Sören Sven,Werner,"#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[])
{   
     // char *argv[] is a array of strings, each command line arguments
    // int argc is the amount of command line arguments
    
    //loop through all command line arguements. First command line argument is always taken by default so we start at 1.
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
  
        
        //printf(""Current 2 %c \n"",CurrentCommandString[0]);
       
        //int LengthOfString = sizeof(CurrentCommandString) / sizeof(char*);
        
        //printf(""Current Size %i \n"",LengthOfString);
        
        int i = 0;
        while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
            if (CurrentCommandString[i] == 'x' 
             || CurrentCommandString[i] == 'y' 
             || CurrentCommandString[i] == 'q'
             || CurrentCommandString[i] == 'X'
             || CurrentCommandString[i] == 'Y' 
             || CurrentCommandString[i] == 'Q')
             {   
                 int j = i;
                 while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
                    CurrentCommandString[j] = CurrentCommandString[j + 1]; 
                    ++j; 
                 }
             }
            ++i;
         }
        
        
        //printf(""x,y,q und X,Y,Q aussortiert TEST 1: %s \n"", argv[kk]);
    }
    
    char StringXYQRemoved[5000];
    int StringXYQRemovedIndex = 0;
       
    char StringThirdRemoved[5000];
    int StringThirdRemovedIndex = 0;
    
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
        
        
        //String 1 
        
        int length, j;
        
          // store length of s1 in the length variable
          length = 0;
          while (StringXYQRemoved[length] != '\0' && StringXYQRemoved[length] != ' ') {
            ++length;
          }
        
          // concatenate s2 to s1
          for (j = 0; CurrentCommandString[j] != '\0' && CurrentCommandString[length] != ' '; ++j, ++length) {
            StringXYQRemoved[length] = CurrentCommandString[j];
          }
        
          // terminating the s1 string
          StringXYQRemoved[length] = '\0';       
    }
    
    
    
        //String2
        int length, j;
        // store length of s1 in the length variable
        length = 0;
        while (StringThirdRemoved[length] != '\0' && StringThirdRemoved[length] != ' ') {
        ++length;
        }
        
        // concatenate s2 to s1
        for (j = 0; StringXYQRemoved[j] != '\0' && StringXYQRemoved[length] != ' '; ++length) {
         StringThirdRemoved[length] = StringXYQRemoved[j];
         
         //printf(""WTFFFF %c \n"",StringXYQRemoved[j]);
         j+=3;
        }
        
        // terminating the s1 string
        StringThirdRemoved[length] = '\0';       
        
    printf(""x,y,q und X,Y,Q aussortiert: %s \n"", StringXYQRemoved);
    printf(""Der neue String lautet: %s"", StringThirdRemoved);
    
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
/*
int zaehlen(char* str){
	int counter = 0;
	while(str[counter] != '\0'){
		counter++;
	}
	return counter;
}*/

int main( int argc, char* argv[]){



	char str[100] = """";

	for(int i = 1; i<argc; i++){
		strcat(str, argv[i]);
	}
	printf(""%s\n"", str);


}",0.0703346568,0
314,WS2021,9,Antwort 10,C,Jonas,Bestgen,Constanze Cosima,Freier,"#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
	for (int i=0;((i<zahl)&&((dest[i])!=('\0')))&&((src[i])!=('\0'));i++)
dest[i]=src[i];

	
}

void umdrehen( char* str )
{	char temp[30]="""";
	int i=0;
	for(;(str[i+1])!=('\0');i++){}
	for(int j=0;(str[j])!=('\0');j++) {temp[j]=str[i-j];}
	for(int j=0;(str[j])!=('\0');j++) {str[j]=temp[(j)];}
	
}

int main( int argc, char* argv[] )
{
	char test[11]= ""0123456789"";
	printf( ""Das Original ist: %s \n"", test );
	ersetzen( test , atoi(argv[1]), argv[2] );
	printf( ""Ersetzt : %s \n"", test );
	umdrehen( test );
	printf( ""Rückwärts : %s \n"", test );
}","#include <stdlib.h>
#include <stdio.h>
int Laenge(char *str)
{
    int size = 0;
    for (int j = 0; str[j] != '\0'; j++)
    {
        size += 1;
    }
    return size;
}

int Kopieren(char *dest, char *src)
{
    int i = 0;
    int j = 0;
    while (src[i] != '\0')
    {
        if (src[i] != 'q' && src[i] != 'x' && src[i] != 'y' && src[i] != 'Q' && src[i] != 'X' && src[i] != 'Y')
        {
            dest[j++] = src[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int Entfernen(char *Eingabe)
{
    int i = 0;
    int j = 0;
    while (Eingabe[i] != '\0')
    {
        if (i % 3 == 0)
        {
            Eingabe[j++] = Eingabe[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int main(int argc, char *argv[])
{
    int Gesamtlaenge = 0;
    for (int i = 1; i < argc; i++)
    {
        Gesamtlaenge += Laenge(argv[i]);
    }
    char Ausgabe[Gesamtlaenge + 1];
    char *Ziel = Ausgabe;
    for (int i = 1; i < argc; i++)
    {
        Ziel += Kopieren(Ziel, argv[i]);
    }
    *Ziel = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", Ausgabe);
    Ausgabe[Entfernen(Ausgabe)] = '\0';
    printf(""Der neue String lautet: %s\n"", Ausgabe);
}",0.0813835198,0
316,WS2021,9,Antwort 10,C,Jonas,Bestgen,Caspar Valentin,Zell,"#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
	for (int i=0;((i<zahl)&&((dest[i])!=('\0')))&&((src[i])!=('\0'));i++)
dest[i]=src[i];

	
}

void umdrehen( char* str )
{	char temp[30]="""";
	int i=0;
	for(;(str[i+1])!=('\0');i++){}
	for(int j=0;(str[j])!=('\0');j++) {temp[j]=str[i-j];}
	for(int j=0;(str[j])!=('\0');j++) {str[j]=temp[(j)];}
	
}

int main( int argc, char* argv[] )
{
	char test[11]= ""0123456789"";
	printf( ""Das Original ist: %s \n"", test );
	ersetzen( test , atoi(argv[1]), argv[2] );
	printf( ""Ersetzt : %s \n"", test );
	umdrehen( test );
	printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0;(i < zahl) && (i < 10) && (src[i] != '\0'); i++)
    {
        dest[i] = src[i];
    }
}

void umdrehen(char* str )
{
    int size;
    for (int j = 1; str[j] != '\0'; j++)
    {
        size = j + 2;
    }
    char Kopie[size];
    for (int i = 0; i < (size - 1); i++)
    {
        Kopie[size - 2- i] = str[i];
    }
    for (int i = 0; i < size; i++)
    {
        str[i] = Kopie[i];
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen(test, atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.5702535984,0
317,WS2021,9,Antwort 10,C,Jonas,Bestgen,Jakob,Kühl,"#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
	for (int i=0;((i<zahl)&&((dest[i])!=('\0')))&&((src[i])!=('\0'));i++)
dest[i]=src[i];

	
}

void umdrehen( char* str )
{	char temp[30]="""";
	int i=0;
	for(;(str[i+1])!=('\0');i++){}
	for(int j=0;(str[j])!=('\0');j++) {temp[j]=str[i-j];}
	for(int j=0;(str[j])!=('\0');j++) {str[j]=temp[(j)];}
	
}

int main( int argc, char* argv[] )
{
	char test[11]= ""0123456789"";
	printf( ""Das Original ist: %s \n"", test );
	ersetzen( test , atoi(argv[1]), argv[2] );
	printf( ""Ersetzt : %s \n"", test );
	umdrehen( test );
	printf( ""Rückwärts : %s \n"", test );
}","#include<stdio.h>

int main(int argc, char* argv[]){
	char a[100]= """";
	char b[100]="""";
	int x=0;
	for(int i=1 ;i<argc ;i++){
		for (int j=0; argv[i][j] != '\0'; j++){
			if(argv[i][j]== 'x' || argv[i][j]== 'y' || argv[i][j]== 'q' || argv[i][j]== 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q') continue;
			else {
				a[x]=argv[i][j];
				x+=1;
			}
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", a);
	int y=0;
	for(int i=0; i<100; i+=3){
		b[y]=a[i];
		y++;
	}
	printf(""Der neue String lautet: %s\n"", b);
}",0.1138075314,0
318,WS2021,9,Antwort 10,C,Jonas,Bestgen,Niklas,Mohr,"#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
	for (int i=0;((i<zahl)&&((dest[i])!=('\0')))&&((src[i])!=('\0'));i++)
dest[i]=src[i];

	
}

void umdrehen( char* str )
{	char temp[30]="""";
	int i=0;
	for(;(str[i+1])!=('\0');i++){}
	for(int j=0;(str[j])!=('\0');j++) {temp[j]=str[i-j];}
	for(int j=0;(str[j])!=('\0');j++) {str[j]=temp[(j)];}
	
}

int main( int argc, char* argv[] )
{
	char test[11]= ""0123456789"";
	printf( ""Das Original ist: %s \n"", test );
	ersetzen( test , atoi(argv[1]), argv[2] );
	printf( ""Ersetzt : %s \n"", test );
	umdrehen( test );
	printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

void aussortieren(char* str)
{
    int t = 0;
    char temp[50];
    for(int i = 0; str[i] != '\0'; i++)
    {
        int t = 0;
        char temp[50];
        if(str[i] == 'x'|| str[i] == 'y'|| str[i] == 'q');
        else if(str[i] == 'X'|| str[i] == 'Y'|| str[i] == 'Q');
        else 
        {
            temp[t] = str[i];
            t++;
        }
    }
    str = &temp;
}


char* sortieren(int länge, char* str[])
{
    int t = 0;
    char temp[200];
    for(int i = 0; i < länge; i++)
    {
        for(int a = 0; a != '\0'; a++)
        {
            temp[t] = str[i+1][a];
            t++;
        }
    }
}   


int main( int argc, char* argv[] )
{  
    int length = sizeof(argv) - 1;
    for(int i = 1; i <= length; i++)
    {
        aussortieren(argv[i]);
    }
    char zusammen = sortieren(length, argv);
    printf(""x,y,q und X,Y,Q aussortiert: %s"", zusammen); 
}",0.1860465116,0
319,WS2021,9,Antwort 10,C,Jonas,Bestgen,Tammo Hendrik,Nie,"#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
	for (int i=0;((i<zahl)&&((dest[i])!=('\0')))&&((src[i])!=('\0'));i++)
dest[i]=src[i];

	
}

void umdrehen( char* str )
{	char temp[30]="""";
	int i=0;
	for(;(str[i+1])!=('\0');i++){}
	for(int j=0;(str[j])!=('\0');j++) {temp[j]=str[i-j];}
	for(int j=0;(str[j])!=('\0');j++) {str[j]=temp[(j)];}
	
}

int main( int argc, char* argv[] )
{
	char test[11]= ""0123456789"";
	printf( ""Das Original ist: %s \n"", test );
	ersetzen( test , atoi(argv[1]), argv[2] );
	printf( ""Ersetzt : %s \n"", test );
	umdrehen( test );
	printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
 
int main(int argc, char* argv[52])
{
   //aneinanderhängen

   int zahl = 0;
   int* p_zahl = &zahl;
   int counter = 1;
   int* p_counter = &counter;
   char str[30];
   for(int i = 0; i < argc-1 ; i++)
   {
      for(int j = 0; argv[counter][j] != '\0'; j++)
      {
         str[zahl] = argv[counter][j];
         *p_zahl += 1;
         
      }
      *p_counter += 1;
   }
   str[zahl+1] = '\0';

   int nummer = 0;
   int* p_nummer = &nummer;
   char str2[25];
   for(int i = 0; ; i++)
   {
      if((str[i] != 'x') && (str[i] != 'y') && (str[i] != 'q') && (str[i] != 'X') && (str[i] != 'Y') && (str[i] != 'Q'))
      {
         
         str2[nummer] = str[i];
         if(str[i] == '\0') break;
         *p_nummer += 1;
      }
   }

   //jedes dritte in str3
   char str3[35];
   for(int i = 0; i < 57; i +=3)
   {
      //if((str2[i] == '\0')) break;
      str3[i/3] = str2[i];  
      str3[i/3+1] = '\0'  ;
   }
   //drucken:

   printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str2, str3);
}",0.1159257175,0
320,WS2021,9,Antwort 10,C,Jonas,Bestgen,Sören Sven,Werner,"#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
	for (int i=0;((i<zahl)&&((dest[i])!=('\0')))&&((src[i])!=('\0'));i++)
dest[i]=src[i];

	
}

void umdrehen( char* str )
{	char temp[30]="""";
	int i=0;
	for(;(str[i+1])!=('\0');i++){}
	for(int j=0;(str[j])!=('\0');j++) {temp[j]=str[i-j];}
	for(int j=0;(str[j])!=('\0');j++) {str[j]=temp[(j)];}
	
}

int main( int argc, char* argv[] )
{
	char test[11]= ""0123456789"";
	printf( ""Das Original ist: %s \n"", test );
	ersetzen( test , atoi(argv[1]), argv[2] );
	printf( ""Ersetzt : %s \n"", test );
	umdrehen( test );
	printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
/*
int zaehlen(char* str){
	int counter = 0;
	while(str[counter] != '\0'){
		counter++;
	}
	return counter;
}*/

int main( int argc, char* argv[]){



	char str[100] = """";

	for(int i = 1; i<argc; i++){
		strcat(str, argv[i]);
	}
	printf(""%s\n"", str);


}",0.2537462537,0
322,WS2021,9,Antwort 10,C,Constanze Cosima,Freier,Caspar Valentin,Zell,"#include <stdlib.h>
#include <stdio.h>
int Laenge(char *str)
{
    int size = 0;
    for (int j = 0; str[j] != '\0'; j++)
    {
        size += 1;
    }
    return size;
}

int Kopieren(char *dest, char *src)
{
    int i = 0;
    int j = 0;
    while (src[i] != '\0')
    {
        if (src[i] != 'q' && src[i] != 'x' && src[i] != 'y' && src[i] != 'Q' && src[i] != 'X' && src[i] != 'Y')
        {
            dest[j++] = src[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int Entfernen(char *Eingabe)
{
    int i = 0;
    int j = 0;
    while (Eingabe[i] != '\0')
    {
        if (i % 3 == 0)
        {
            Eingabe[j++] = Eingabe[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int main(int argc, char *argv[])
{
    int Gesamtlaenge = 0;
    for (int i = 1; i < argc; i++)
    {
        Gesamtlaenge += Laenge(argv[i]);
    }
    char Ausgabe[Gesamtlaenge + 1];
    char *Ziel = Ausgabe;
    for (int i = 1; i < argc; i++)
    {
        Ziel += Kopieren(Ziel, argv[i]);
    }
    *Ziel = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", Ausgabe);
    Ausgabe[Entfernen(Ausgabe)] = '\0';
    printf(""Der neue String lautet: %s\n"", Ausgabe);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0;(i < zahl) && (i < 10) && (src[i] != '\0'); i++)
    {
        dest[i] = src[i];
    }
}

void umdrehen(char* str )
{
    int size;
    for (int j = 1; str[j] != '\0'; j++)
    {
        size = j + 2;
    }
    char Kopie[size];
    for (int i = 0; i < (size - 1); i++)
    {
        Kopie[size - 2- i] = str[i];
    }
    for (int i = 0; i < size; i++)
    {
        str[i] = Kopie[i];
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen(test, atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",0.1819914245,0
323,WS2021,9,Antwort 10,C,Constanze Cosima,Freier,Jakob,Kühl,"#include <stdlib.h>
#include <stdio.h>
int Laenge(char *str)
{
    int size = 0;
    for (int j = 0; str[j] != '\0'; j++)
    {
        size += 1;
    }
    return size;
}

int Kopieren(char *dest, char *src)
{
    int i = 0;
    int j = 0;
    while (src[i] != '\0')
    {
        if (src[i] != 'q' && src[i] != 'x' && src[i] != 'y' && src[i] != 'Q' && src[i] != 'X' && src[i] != 'Y')
        {
            dest[j++] = src[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int Entfernen(char *Eingabe)
{
    int i = 0;
    int j = 0;
    while (Eingabe[i] != '\0')
    {
        if (i % 3 == 0)
        {
            Eingabe[j++] = Eingabe[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int main(int argc, char *argv[])
{
    int Gesamtlaenge = 0;
    for (int i = 1; i < argc; i++)
    {
        Gesamtlaenge += Laenge(argv[i]);
    }
    char Ausgabe[Gesamtlaenge + 1];
    char *Ziel = Ausgabe;
    for (int i = 1; i < argc; i++)
    {
        Ziel += Kopieren(Ziel, argv[i]);
    }
    *Ziel = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", Ausgabe);
    Ausgabe[Entfernen(Ausgabe)] = '\0';
    printf(""Der neue String lautet: %s\n"", Ausgabe);
}","#include<stdio.h>

int main(int argc, char* argv[]){
	char a[100]= """";
	char b[100]="""";
	int x=0;
	for(int i=1 ;i<argc ;i++){
		for (int j=0; argv[i][j] != '\0'; j++){
			if(argv[i][j]== 'x' || argv[i][j]== 'y' || argv[i][j]== 'q' || argv[i][j]== 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q') continue;
			else {
				a[x]=argv[i][j];
				x+=1;
			}
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", a);
	int y=0;
	for(int i=0; i<100; i+=3){
		b[y]=a[i];
		y++;
	}
	printf(""Der neue String lautet: %s\n"", b);
}",0.1722070845,0
324,WS2021,9,Antwort 10,C,Constanze Cosima,Freier,Niklas,Mohr,"#include <stdlib.h>
#include <stdio.h>
int Laenge(char *str)
{
    int size = 0;
    for (int j = 0; str[j] != '\0'; j++)
    {
        size += 1;
    }
    return size;
}

int Kopieren(char *dest, char *src)
{
    int i = 0;
    int j = 0;
    while (src[i] != '\0')
    {
        if (src[i] != 'q' && src[i] != 'x' && src[i] != 'y' && src[i] != 'Q' && src[i] != 'X' && src[i] != 'Y')
        {
            dest[j++] = src[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int Entfernen(char *Eingabe)
{
    int i = 0;
    int j = 0;
    while (Eingabe[i] != '\0')
    {
        if (i % 3 == 0)
        {
            Eingabe[j++] = Eingabe[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int main(int argc, char *argv[])
{
    int Gesamtlaenge = 0;
    for (int i = 1; i < argc; i++)
    {
        Gesamtlaenge += Laenge(argv[i]);
    }
    char Ausgabe[Gesamtlaenge + 1];
    char *Ziel = Ausgabe;
    for (int i = 1; i < argc; i++)
    {
        Ziel += Kopieren(Ziel, argv[i]);
    }
    *Ziel = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", Ausgabe);
    Ausgabe[Entfernen(Ausgabe)] = '\0';
    printf(""Der neue String lautet: %s\n"", Ausgabe);
}","#include <stdio.h>
#include <stdlib.h>

void aussortieren(char* str)
{
    int t = 0;
    char temp[50];
    for(int i = 0; str[i] != '\0'; i++)
    {
        int t = 0;
        char temp[50];
        if(str[i] == 'x'|| str[i] == 'y'|| str[i] == 'q');
        else if(str[i] == 'X'|| str[i] == 'Y'|| str[i] == 'Q');
        else 
        {
            temp[t] = str[i];
            t++;
        }
    }
    str = &temp;
}


char* sortieren(int länge, char* str[])
{
    int t = 0;
    char temp[200];
    for(int i = 0; i < länge; i++)
    {
        for(int a = 0; a != '\0'; a++)
        {
            temp[t] = str[i+1][a];
            t++;
        }
    }
}   


int main( int argc, char* argv[] )
{  
    int length = sizeof(argv) - 1;
    for(int i = 1; i <= length; i++)
    {
        aussortieren(argv[i]);
    }
    char zusammen = sortieren(length, argv);
    printf(""x,y,q und X,Y,Q aussortiert: %s"", zusammen); 
}",0.182937555,0
325,WS2021,9,Antwort 10,C,Constanze Cosima,Freier,Tammo Hendrik,Nie,"#include <stdlib.h>
#include <stdio.h>
int Laenge(char *str)
{
    int size = 0;
    for (int j = 0; str[j] != '\0'; j++)
    {
        size += 1;
    }
    return size;
}

int Kopieren(char *dest, char *src)
{
    int i = 0;
    int j = 0;
    while (src[i] != '\0')
    {
        if (src[i] != 'q' && src[i] != 'x' && src[i] != 'y' && src[i] != 'Q' && src[i] != 'X' && src[i] != 'Y')
        {
            dest[j++] = src[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int Entfernen(char *Eingabe)
{
    int i = 0;
    int j = 0;
    while (Eingabe[i] != '\0')
    {
        if (i % 3 == 0)
        {
            Eingabe[j++] = Eingabe[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int main(int argc, char *argv[])
{
    int Gesamtlaenge = 0;
    for (int i = 1; i < argc; i++)
    {
        Gesamtlaenge += Laenge(argv[i]);
    }
    char Ausgabe[Gesamtlaenge + 1];
    char *Ziel = Ausgabe;
    for (int i = 1; i < argc; i++)
    {
        Ziel += Kopieren(Ziel, argv[i]);
    }
    *Ziel = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", Ausgabe);
    Ausgabe[Entfernen(Ausgabe)] = '\0';
    printf(""Der neue String lautet: %s\n"", Ausgabe);
}","#include <stdio.h>
#include <stdlib.h>
 
int main(int argc, char* argv[52])
{
   //aneinanderhängen

   int zahl = 0;
   int* p_zahl = &zahl;
   int counter = 1;
   int* p_counter = &counter;
   char str[30];
   for(int i = 0; i < argc-1 ; i++)
   {
      for(int j = 0; argv[counter][j] != '\0'; j++)
      {
         str[zahl] = argv[counter][j];
         *p_zahl += 1;
         
      }
      *p_counter += 1;
   }
   str[zahl+1] = '\0';

   int nummer = 0;
   int* p_nummer = &nummer;
   char str2[25];
   for(int i = 0; ; i++)
   {
      if((str[i] != 'x') && (str[i] != 'y') && (str[i] != 'q') && (str[i] != 'X') && (str[i] != 'Y') && (str[i] != 'Q'))
      {
         
         str2[nummer] = str[i];
         if(str[i] == '\0') break;
         *p_nummer += 1;
      }
   }

   //jedes dritte in str3
   char str3[35];
   for(int i = 0; i < 57; i +=3)
   {
      //if((str2[i] == '\0')) break;
      str3[i/3] = str2[i];  
      str3[i/3+1] = '\0'  ;
   }
   //drucken:

   printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str2, str3);
}",0.1836988002,0
326,WS2021,9,Antwort 10,C,Constanze Cosima,Freier,Sören Sven,Werner,"#include <stdlib.h>
#include <stdio.h>
int Laenge(char *str)
{
    int size = 0;
    for (int j = 0; str[j] != '\0'; j++)
    {
        size += 1;
    }
    return size;
}

int Kopieren(char *dest, char *src)
{
    int i = 0;
    int j = 0;
    while (src[i] != '\0')
    {
        if (src[i] != 'q' && src[i] != 'x' && src[i] != 'y' && src[i] != 'Q' && src[i] != 'X' && src[i] != 'Y')
        {
            dest[j++] = src[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int Entfernen(char *Eingabe)
{
    int i = 0;
    int j = 0;
    while (Eingabe[i] != '\0')
    {
        if (i % 3 == 0)
        {
            Eingabe[j++] = Eingabe[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int main(int argc, char *argv[])
{
    int Gesamtlaenge = 0;
    for (int i = 1; i < argc; i++)
    {
        Gesamtlaenge += Laenge(argv[i]);
    }
    char Ausgabe[Gesamtlaenge + 1];
    char *Ziel = Ausgabe;
    for (int i = 1; i < argc; i++)
    {
        Ziel += Kopieren(Ziel, argv[i]);
    }
    *Ziel = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", Ausgabe);
    Ausgabe[Entfernen(Ausgabe)] = '\0';
    printf(""Der neue String lautet: %s\n"", Ausgabe);
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
/*
int zaehlen(char* str){
	int counter = 0;
	while(str[counter] != '\0'){
		counter++;
	}
	return counter;
}*/

int main( int argc, char* argv[]){



	char str[100] = """";

	for(int i = 1; i<argc; i++){
		strcat(str, argv[i]);
	}
	printf(""%s\n"", str);


}",0.1828153565,0
327,WS2021,9,Antwort 10,C,Caspar Valentin,Zell,Jakob,Kühl,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0;(i < zahl) && (i < 10) && (src[i] != '\0'); i++)
    {
        dest[i] = src[i];
    }
}

void umdrehen(char* str )
{
    int size;
    for (int j = 1; str[j] != '\0'; j++)
    {
        size = j + 2;
    }
    char Kopie[size];
    for (int i = 0; i < (size - 1); i++)
    {
        Kopie[size - 2- i] = str[i];
    }
    for (int i = 0; i < size; i++)
    {
        str[i] = Kopie[i];
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen(test, atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include<stdio.h>

int main(int argc, char* argv[]){
	char a[100]= """";
	char b[100]="""";
	int x=0;
	for(int i=1 ;i<argc ;i++){
		for (int j=0; argv[i][j] != '\0'; j++){
			if(argv[i][j]== 'x' || argv[i][j]== 'y' || argv[i][j]== 'q' || argv[i][j]== 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q') continue;
			else {
				a[x]=argv[i][j];
				x+=1;
			}
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", a);
	int y=0;
	for(int i=0; i<100; i+=3){
		b[y]=a[i];
		y++;
	}
	printf(""Der neue String lautet: %s\n"", b);
}",0.1445783133,0
328,WS2021,9,Antwort 10,C,Caspar Valentin,Zell,Niklas,Mohr,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0;(i < zahl) && (i < 10) && (src[i] != '\0'); i++)
    {
        dest[i] = src[i];
    }
}

void umdrehen(char* str )
{
    int size;
    for (int j = 1; str[j] != '\0'; j++)
    {
        size = j + 2;
    }
    char Kopie[size];
    for (int i = 0; i < (size - 1); i++)
    {
        Kopie[size - 2- i] = str[i];
    }
    for (int i = 0; i < size; i++)
    {
        str[i] = Kopie[i];
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen(test, atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

void aussortieren(char* str)
{
    int t = 0;
    char temp[50];
    for(int i = 0; str[i] != '\0'; i++)
    {
        int t = 0;
        char temp[50];
        if(str[i] == 'x'|| str[i] == 'y'|| str[i] == 'q');
        else if(str[i] == 'X'|| str[i] == 'Y'|| str[i] == 'Q');
        else 
        {
            temp[t] = str[i];
            t++;
        }
    }
    str = &temp;
}


char* sortieren(int länge, char* str[])
{
    int t = 0;
    char temp[200];
    for(int i = 0; i < länge; i++)
    {
        for(int a = 0; a != '\0'; a++)
        {
            temp[t] = str[i+1][a];
            t++;
        }
    }
}   


int main( int argc, char* argv[] )
{  
    int length = sizeof(argv) - 1;
    for(int i = 1; i <= length; i++)
    {
        aussortieren(argv[i]);
    }
    char zusammen = sortieren(length, argv);
    printf(""x,y,q und X,Y,Q aussortiert: %s"", zusammen); 
}",0.2625919638,0
329,WS2021,9,Antwort 10,C,Caspar Valentin,Zell,Tammo Hendrik,Nie,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0;(i < zahl) && (i < 10) && (src[i] != '\0'); i++)
    {
        dest[i] = src[i];
    }
}

void umdrehen(char* str )
{
    int size;
    for (int j = 1; str[j] != '\0'; j++)
    {
        size = j + 2;
    }
    char Kopie[size];
    for (int i = 0; i < (size - 1); i++)
    {
        Kopie[size - 2- i] = str[i];
    }
    for (int i = 0; i < size; i++)
    {
        str[i] = Kopie[i];
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen(test, atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
 
int main(int argc, char* argv[52])
{
   //aneinanderhängen

   int zahl = 0;
   int* p_zahl = &zahl;
   int counter = 1;
   int* p_counter = &counter;
   char str[30];
   for(int i = 0; i < argc-1 ; i++)
   {
      for(int j = 0; argv[counter][j] != '\0'; j++)
      {
         str[zahl] = argv[counter][j];
         *p_zahl += 1;
         
      }
      *p_counter += 1;
   }
   str[zahl+1] = '\0';

   int nummer = 0;
   int* p_nummer = &nummer;
   char str2[25];
   for(int i = 0; ; i++)
   {
      if((str[i] != 'x') && (str[i] != 'y') && (str[i] != 'q') && (str[i] != 'X') && (str[i] != 'Y') && (str[i] != 'Q'))
      {
         
         str2[nummer] = str[i];
         if(str[i] == '\0') break;
         *p_nummer += 1;
      }
   }

   //jedes dritte in str3
   char str3[35];
   for(int i = 0; i < 57; i +=3)
   {
      //if((str2[i] == '\0')) break;
      str3[i/3] = str2[i];  
      str3[i/3+1] = '\0'  ;
   }
   //drucken:

   printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str2, str3);
}",0.2408376963,0
330,WS2021,9,Antwort 10,C,Caspar Valentin,Zell,Sören Sven,Werner,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0;(i < zahl) && (i < 10) && (src[i] != '\0'); i++)
    {
        dest[i] = src[i];
    }
}

void umdrehen(char* str )
{
    int size;
    for (int j = 1; str[j] != '\0'; j++)
    {
        size = j + 2;
    }
    char Kopie[size];
    for (int i = 0; i < (size - 1); i++)
    {
        Kopie[size - 2- i] = str[i];
    }
    for (int i = 0; i < size; i++)
    {
        str[i] = Kopie[i];
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen(test, atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
/*
int zaehlen(char* str){
	int counter = 0;
	while(str[counter] != '\0'){
		counter++;
	}
	return counter;
}*/

int main( int argc, char* argv[]){



	char str[100] = """";

	for(int i = 1; i<argc; i++){
		strcat(str, argv[i]);
	}
	printf(""%s\n"", str);


}",0.2345679012,0
331,WS2021,9,Antwort 10,C,Jakob,Kühl,Niklas,Mohr,"#include<stdio.h>

int main(int argc, char* argv[]){
	char a[100]= """";
	char b[100]="""";
	int x=0;
	for(int i=1 ;i<argc ;i++){
		for (int j=0; argv[i][j] != '\0'; j++){
			if(argv[i][j]== 'x' || argv[i][j]== 'y' || argv[i][j]== 'q' || argv[i][j]== 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q') continue;
			else {
				a[x]=argv[i][j];
				x+=1;
			}
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", a);
	int y=0;
	for(int i=0; i<100; i+=3){
		b[y]=a[i];
		y++;
	}
	printf(""Der neue String lautet: %s\n"", b);
}","#include <stdio.h>
#include <stdlib.h>

void aussortieren(char* str)
{
    int t = 0;
    char temp[50];
    for(int i = 0; str[i] != '\0'; i++)
    {
        int t = 0;
        char temp[50];
        if(str[i] == 'x'|| str[i] == 'y'|| str[i] == 'q');
        else if(str[i] == 'X'|| str[i] == 'Y'|| str[i] == 'Q');
        else 
        {
            temp[t] = str[i];
            t++;
        }
    }
    str = &temp;
}


char* sortieren(int länge, char* str[])
{
    int t = 0;
    char temp[200];
    for(int i = 0; i < länge; i++)
    {
        for(int a = 0; a != '\0'; a++)
        {
            temp[t] = str[i+1][a];
            t++;
        }
    }
}   


int main( int argc, char* argv[] )
{  
    int length = sizeof(argv) - 1;
    for(int i = 1; i <= length; i++)
    {
        aussortieren(argv[i]);
    }
    char zusammen = sortieren(length, argv);
    printf(""x,y,q und X,Y,Q aussortiert: %s"", zusammen); 
}",0.1410512309,0
332,WS2021,9,Antwort 10,C,Jakob,Kühl,Tammo Hendrik,Nie,"#include<stdio.h>

int main(int argc, char* argv[]){
	char a[100]= """";
	char b[100]="""";
	int x=0;
	for(int i=1 ;i<argc ;i++){
		for (int j=0; argv[i][j] != '\0'; j++){
			if(argv[i][j]== 'x' || argv[i][j]== 'y' || argv[i][j]== 'q' || argv[i][j]== 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q') continue;
			else {
				a[x]=argv[i][j];
				x+=1;
			}
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", a);
	int y=0;
	for(int i=0; i<100; i+=3){
		b[y]=a[i];
		y++;
	}
	printf(""Der neue String lautet: %s\n"", b);
}","#include <stdio.h>
#include <stdlib.h>
 
int main(int argc, char* argv[52])
{
   //aneinanderhängen

   int zahl = 0;
   int* p_zahl = &zahl;
   int counter = 1;
   int* p_counter = &counter;
   char str[30];
   for(int i = 0; i < argc-1 ; i++)
   {
      for(int j = 0; argv[counter][j] != '\0'; j++)
      {
         str[zahl] = argv[counter][j];
         *p_zahl += 1;
         
      }
      *p_counter += 1;
   }
   str[zahl+1] = '\0';

   int nummer = 0;
   int* p_nummer = &nummer;
   char str2[25];
   for(int i = 0; ; i++)
   {
      if((str[i] != 'x') && (str[i] != 'y') && (str[i] != 'q') && (str[i] != 'X') && (str[i] != 'Y') && (str[i] != 'Q'))
      {
         
         str2[nummer] = str[i];
         if(str[i] == '\0') break;
         *p_nummer += 1;
      }
   }

   //jedes dritte in str3
   char str3[35];
   for(int i = 0; i < 57; i +=3)
   {
      //if((str2[i] == '\0')) break;
      str3[i/3] = str2[i];  
      str3[i/3+1] = '\0'  ;
   }
   //drucken:

   printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str2, str3);
}",0.2247873633,0
333,WS2021,9,Antwort 10,C,Jakob,Kühl,Sören Sven,Werner,"#include<stdio.h>

int main(int argc, char* argv[]){
	char a[100]= """";
	char b[100]="""";
	int x=0;
	for(int i=1 ;i<argc ;i++){
		for (int j=0; argv[i][j] != '\0'; j++){
			if(argv[i][j]== 'x' || argv[i][j]== 'y' || argv[i][j]== 'q' || argv[i][j]== 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q') continue;
			else {
				a[x]=argv[i][j];
				x+=1;
			}
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", a);
	int y=0;
	for(int i=0; i<100; i+=3){
		b[y]=a[i];
		y++;
	}
	printf(""Der neue String lautet: %s\n"", b);
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
/*
int zaehlen(char* str){
	int counter = 0;
	while(str[counter] != '\0'){
		counter++;
	}
	return counter;
}*/

int main( int argc, char* argv[]){



	char str[100] = """";

	for(int i = 1; i<argc; i++){
		strcat(str, argv[i]);
	}
	printf(""%s\n"", str);


}",0.2367816092,0
334,WS2021,9,Antwort 10,C,Niklas,Mohr,Tammo Hendrik,Nie,"#include <stdio.h>
#include <stdlib.h>

void aussortieren(char* str)
{
    int t = 0;
    char temp[50];
    for(int i = 0; str[i] != '\0'; i++)
    {
        int t = 0;
        char temp[50];
        if(str[i] == 'x'|| str[i] == 'y'|| str[i] == 'q');
        else if(str[i] == 'X'|| str[i] == 'Y'|| str[i] == 'Q');
        else 
        {
            temp[t] = str[i];
            t++;
        }
    }
    str = &temp;
}


char* sortieren(int länge, char* str[])
{
    int t = 0;
    char temp[200];
    for(int i = 0; i < länge; i++)
    {
        for(int a = 0; a != '\0'; a++)
        {
            temp[t] = str[i+1][a];
            t++;
        }
    }
}   


int main( int argc, char* argv[] )
{  
    int length = sizeof(argv) - 1;
    for(int i = 1; i <= length; i++)
    {
        aussortieren(argv[i]);
    }
    char zusammen = sortieren(length, argv);
    printf(""x,y,q und X,Y,Q aussortiert: %s"", zusammen); 
}","#include <stdio.h>
#include <stdlib.h>
 
int main(int argc, char* argv[52])
{
   //aneinanderhängen

   int zahl = 0;
   int* p_zahl = &zahl;
   int counter = 1;
   int* p_counter = &counter;
   char str[30];
   for(int i = 0; i < argc-1 ; i++)
   {
      for(int j = 0; argv[counter][j] != '\0'; j++)
      {
         str[zahl] = argv[counter][j];
         *p_zahl += 1;
         
      }
      *p_counter += 1;
   }
   str[zahl+1] = '\0';

   int nummer = 0;
   int* p_nummer = &nummer;
   char str2[25];
   for(int i = 0; ; i++)
   {
      if((str[i] != 'x') && (str[i] != 'y') && (str[i] != 'q') && (str[i] != 'X') && (str[i] != 'Y') && (str[i] != 'Q'))
      {
         
         str2[nummer] = str[i];
         if(str[i] == '\0') break;
         *p_nummer += 1;
      }
   }

   //jedes dritte in str3
   char str3[35];
   for(int i = 0; i < 57; i +=3)
   {
      //if((str2[i] == '\0')) break;
      str3[i/3] = str2[i];  
      str3[i/3+1] = '\0'  ;
   }
   //drucken:

   printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str2, str3);
}",0.2091127098,0
335,WS2021,9,Antwort 10,C,Niklas,Mohr,Sören Sven,Werner,"#include <stdio.h>
#include <stdlib.h>

void aussortieren(char* str)
{
    int t = 0;
    char temp[50];
    for(int i = 0; str[i] != '\0'; i++)
    {
        int t = 0;
        char temp[50];
        if(str[i] == 'x'|| str[i] == 'y'|| str[i] == 'q');
        else if(str[i] == 'X'|| str[i] == 'Y'|| str[i] == 'Q');
        else 
        {
            temp[t] = str[i];
            t++;
        }
    }
    str = &temp;
}


char* sortieren(int länge, char* str[])
{
    int t = 0;
    char temp[200];
    for(int i = 0; i < länge; i++)
    {
        for(int a = 0; a != '\0'; a++)
        {
            temp[t] = str[i+1][a];
            t++;
        }
    }
}   


int main( int argc, char* argv[] )
{  
    int length = sizeof(argv) - 1;
    for(int i = 1; i <= length; i++)
    {
        aussortieren(argv[i]);
    }
    char zusammen = sortieren(length, argv);
    printf(""x,y,q und X,Y,Q aussortiert: %s"", zusammen); 
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
/*
int zaehlen(char* str){
	int counter = 0;
	while(str[counter] != '\0'){
		counter++;
	}
	return counter;
}*/

int main( int argc, char* argv[]){



	char str[100] = """";

	for(int i = 1; i<argc; i++){
		strcat(str, argv[i]);
	}
	printf(""%s\n"", str);


}",0.1909854851,0
336,WS2021,9,Antwort 10,C,Tammo Hendrik,Nie,Sören Sven,Werner,"#include <stdio.h>
#include <stdlib.h>
 
int main(int argc, char* argv[52])
{
   //aneinanderhängen

   int zahl = 0;
   int* p_zahl = &zahl;
   int counter = 1;
   int* p_counter = &counter;
   char str[30];
   for(int i = 0; i < argc-1 ; i++)
   {
      for(int j = 0; argv[counter][j] != '\0'; j++)
      {
         str[zahl] = argv[counter][j];
         *p_zahl += 1;
         
      }
      *p_counter += 1;
   }
   str[zahl+1] = '\0';

   int nummer = 0;
   int* p_nummer = &nummer;
   char str2[25];
   for(int i = 0; ; i++)
   {
      if((str[i] != 'x') && (str[i] != 'y') && (str[i] != 'q') && (str[i] != 'X') && (str[i] != 'Y') && (str[i] != 'Q'))
      {
         
         str2[nummer] = str[i];
         if(str[i] == '\0') break;
         *p_nummer += 1;
      }
   }

   //jedes dritte in str3
   char str3[35];
   for(int i = 0; i < 57; i +=3)
   {
      //if((str2[i] == '\0')) break;
      str3[i/3] = str2[i];  
      str3[i/3+1] = '\0'  ;
   }
   //drucken:

   printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str2, str3);
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
/*
int zaehlen(char* str){
	int counter = 0;
	while(str[counter] != '\0'){
		counter++;
	}
	return counter;
}*/

int main( int argc, char* argv[]){



	char str[100] = """";

	for(int i = 1; i<argc; i++){
		strcat(str, argv[i]);
	}
	printf(""%s\n"", str);


}",0.1597796143,0
