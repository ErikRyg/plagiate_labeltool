Nachname,Vorname,Antwort 8,Antwort 9,Antwort 10
Name_480,VName_480,"#include <stdio.h>

void factorize(long produkt, long *faktor1, long *faktor2)
{
	if (produkt == 0 || produkt == 1){
		*faktor1 = 1;
		*faktor2 = produkt;
	}
	else{
		*faktor1 = produkt / 2;
		while(produkt % *faktor1 != 0){
			*faktor1= *faktor1 - 1;
		}
		*faktor2=produkt / *faktor1;
	}
}

int main(){
	unsigned long ganzeZahl;
	long faktor1, faktor2;
	printf(""Please enter an Integer: "");
	scanf(""%li"", &ganzeZahl);
	factorize(ganzeZahl, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", ganzeZahl, faktor1, faktor2);
	return 0;
}","#include <stdio.h>

int student_main(int anzahlWoerter, char* string[]){
	char neuer_String[99];
	int n = 0;
	for (int i = 1; i < anzahlWoerter; i++){
		for(int j = 0; string[i][j] != '\0'; j++){
			switch(string[i][j])
    		{
       			case 'x' : break;
        		case 'y' : break;
        		case 'q' : break;
        		case 'X' : break;
        		case 'Y' : break;
        		case 'Q' : break;
        		default : neuer_String[n] = string[i][j]; n++; break;
    		}
		}
	}
	neuer_String[n] = '\0';
	neuer_String[n+1] = '\0';
	neuer_String[n+2] = '\0';
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", neuer_String);
	int o = 0;
	char kurzer_String[99];
	for(int k = 0; neuer_String[k] != '\0'; k+=3){
		kurzer_String[o] = neuer_String[k];
		o++;}
	kurzer_String[o] = '\0';
	printf(""Der neue String lautet: %s"", kurzer_String);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  for (int i = 0; dest[i]!='\0' && i < zahl && src[i]!='\0'; i++){
    dest[i]=src[i];
  }
}

void umdrehen( char* str )
{
  int a = 0;
  for (int i = 0; str[i] != '\0'; i++)
    a++;
  char rueckwaerts[a];
  for (int i = 0; i<a; i++){
    rueckwaerts[i] = str[i];
  }
  int j = 0;
  for (int i = a-1; i>=0; i--){
    str[j] = rueckwaerts[i];
    j += 1;
  }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_482,VName_482,"#include <stdio.h>

void groesste_gemeinsame_teiler(long resultat, long* nummer1, long* nummer2){
   
    while( *nummer1 != *nummer2 ){
        if ( *nummer1 < *nummer2 )
        resultat = *nummer2 / *nummer1;
        else
        resultat = *nummer1 / *nummer2;
    }
}

int main()
{
    long nummer1 = 0;
    long nummer2 = 0; 
    long* p1 = &nummer1;
    long* p2 = &nummer2;
    long int resultat = 0;
   
    printf(""Please enter an Integer: "");
    scanf(""%li"", &resultat);
    groesste_gemeinsame_teiler(resultat, p1, p2);
    printf (""Possible Factors of %li are %li and %li.\n"",resultat, *p1, *p2);
    return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_481,VName_481,"#include <stdio.h>

void factorize(long ergebnis, long *zahl1, long *zahl2)
{
	if (ergebnis == 0 || ergebnis == 1){
		*zahl1 = 1;
		*zahl2 = ergebnis;
		return;
	}

	for (int i = ergebnis/2; ; i--){
		if(ergebnis %i == 0){
			*zahl1 = i;
			*zahl2 = ergebnis/i;
			return;
		}
	}
}
	

int main(){
	long number = 0;
	long zahl1 = 0;
	long zahl2 = 0;

	printf(""Please enter an Integer: "");
	scanf(""%ld"", &number);
	factorize(number, &zahl1, &zahl2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", number, zahl1, zahl2);
	return 0;
}","#include <stdio.h>

int str_len(char input[]){

    int i = 0;
    while(1 == 1){
        if(input[i] == '\0'){
            return i;
        }
        i++;
    }


}



int main(int argc, char** argv[] ){
    if(argc == 1){ 
		printf(""False usage:. './[program name][name to test]'\n""); 
		return 0;
	}
    printf(""x,y,q und X,Y,Q aussortiert: "");


    char output[255];
    //Anzahl der WÖRTER (Argumente)
    for(int i = 0; i < argc; i++){
        printf(""hallo: %s\n"", argv[i]);

        //BUCHSTABEN (chars)
        char *arg = argv[i];
        for(int j = 0; j < str_len(arg); arg++){
            printf(""%s\n"", arg);

        }
    }   
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    for(int i = 0; src[i]; ++i){
    dest[i] = src[i];
    dest[i] = '\0';

    return dest;
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_441,VName_441,"#include <stdio.h>

long factorize(long produkt, long *faktor1, long *faktor2)
{
	for (long i = 1; i<produkt; ++i){
	if(produkt % i == 0){
	
     *faktor1 = i;
	*faktor2 = (produkt / i);
}
}

}

int main(){
	printf(""Please enter an Integer: "");
	long  num;
	long faktor1 = 1; 
	
	long faktor2 = 0;

	scanf(""%ld"", &num);
	 factorize(num, &faktor1, &faktor2);
	printf(""Possible Factors of %li are %li and %li.\n"",num , faktor1, faktor2);
	return 0;
}","#include<stdio.h>

int main(int i, char str[])
{
   str[100];
   i=0;
    int j = 0, chk;
    scanf(""%s"",str);
    while(str[i]!='\0')
    {
        chk=0;
        if(str[i]=='x'||str[i]=='y'||str[i]=='q'||str[i]=='X'||str[i]=='Y'||str[i]=='Q')
        {
            j=i;
            while(str[j-1]!='\0')
            {
                str[j] = str[j+1];
                j++;
            }
            chk = 1;
        }
        if(chk==0)
            i++;
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s"", str);
   
    printf(""\nDer neue String lautet: lsonao"");
   
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{ 
dest = src;

}

void umdrehen( char* str )
{

  for(int length=0; str[length] != '\0';length++){
      
  for (int i = 0; i < length/2; i++){
  	char temp = str[i];
  	str[i] = str[length-i];
	  str[length-i] = temp;
	  temp--;
  }
}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_76,VName_76,"#include <stdio.h>

void factorize(long resultat, long *nummer1, long *nummer2)
{
	// Your factorization
}

int main(){
	printf(""Please enter an Integer: "");
	printf(""Possible Factors of %ld are %ld and %ld.\n"");
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_486,VName_486,"#include <stdio.h>

void factorize(long produkt, long *faktor1, long *faktor2)
{
	if(produkt == 0 ||  produkt == 1)
	{
		*faktor1 = (long int)1;
		*faktor2 = (long int)produkt;
	}
	else
	{
		long hp = produkt/2;
		int found = 0;
		while(found == 0 && hp > 0)
		{
			if(produkt % hp == 0)
			{
				*faktor1 = hp;
				*faktor2 = produkt/hp;
				found = 1;
			}
			else
			{
				hp--;
			}
		}
	}
}

int main(){
	long produkt, faktor1, faktor2;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &produkt);
	factorize(produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktor1, faktor2);
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>

int get_str_length(char strch[])
{
	int length;;
	for(length=0; strch[length]!='\0' && strch[length] != NULL; length++);
	return length;
}
 
void ersetzen(char* dest, int zahl, char* src)
{

/*
Schreiben Sie eine Funktion void ersetzen(char* dest, int zahl, char* src)die den String src in den String dest kopiert (und dabei überschreibt), allerdings 

    nur maximal zahl Zeichen
    nur maximal bis zum Ende von dest
    nur maximal den gesamten String src
*/
	int src_len = get_str_length(src); //max elements from src
	int dest_len = get_str_length(dest); //max elements from dest
	// + maximal zahl zeichen
	
	int c = 0;
	int location = 0;
	
	int maxvalues [3] = {src_len, dest_len, zahl};
	
	for(int c = 0; c < 3; c++)
	{
		if(maxvalues[c] < maxvalues[location])
		{
			location = c;
		}
	}
	
	//this is the smallest int
	int maxvalue = maxvalues[location];
	
	for(int i = 0; i < maxvalue; i++)
	{
		dest[i] = src[i];
	}
}

void umdrehen( char* str )
{

/*
Schreiben Sie eine Funktion void umdrehen( char* str ), die die übergebene Zeichenkette umdreht. Die Größe eines Strings ist variable, also müsst ihr diese zuerst ermitteln
*/

	int l, i;
    	char *src_str, *dst_str, ch;
    	
    	l = get_str_length(str);
    	
    	src_str = str;
    	dst_str = str;
    	
    	for (i = 0; i < l - 1; i++)
    	{
    		dst_str++;
    	}
    	    
    	for (i = 0; i < l / 2; i++) {
        	ch = *dst_str;
        	*dst_str = *src_str;
        	*src_str = ch;
        
        	src_str++;
        	dst_str--;
    }
}

int main( int argc, char* argv[] )
{

/*
Legen Sie in main eine Testzeichenkette mit dem Inhalt ""0123456789"" an. Geben Sie diese auf der Konsole aus. Das Programm soll mit zwei Kommandozeilenparametern aufgerufen werden: die maximale Anzahl zu ersetzender Zeichen des Teststrings sowie der String, mit dem der Teststring überschrieben werden soll. Führt dementsprechend die Funktion ersetzen aus, gebt das Ergebnis aus, danach dann umdrehen, und gebt das Ergebnis erneut aus.
*/

  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  
  ersetzen( &test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( &test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_439,VName_439,"#include <stdio.h>

void factorize(long ergebnis, long *zahl1, long *zahl2)
{
    long f1,f2;
	//printf(""%ld\n"", ergebnis);
	if((ergebnis == 0)||(ergebnis == 1))
	{
	    f1 = 1;
	    f2 = ergebnis;
	}
    else
	{
	    f1 = ergebnis/2;
        while(ergebnis%f1 != 0 )
        {
            //printf(""f1 passt noch nicht : %i\n"",f1);
            f1 = f1- 1;
        }
        f2 = ergebnis/f1;
	}
	//printf(""faktoren: %ld, %ld \n"",f1,f2);
	*zahl1 = f1;
	*zahl2 = f2;
}

int main(){
    long eingabe;
	printf(""Please enter an Integer: "");
	scanf(""%ld"",&eingabe);
	
	long z1,z2;
	factorize(eingabe,&z1,&z2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",eingabe,z1,z2);
	return 0;
}","#include <stdio.h>

int main() {
 int argc = 5; // Anzahl der Argumente, das erste ist der Programmname
    char argv[5][10] = {""programm"",""lasse"", ""roland"", ""max"", ""ivo"" };
    char r1[100];
    int ir1 = 0;
    for (int j = 1; j < argc; j++){
        //printf(""%i "",j);
        //printf(argv[j]);
        //printf(""\n"");
        int s = 0;
        while( argv[j][s] != '\0'){
            char c = argv[j][s];
            //printf(""%c"",argv[j][s]);
            if (c != 'x'&& c !='y' && c !='q' && c != 'X' && c != 'Y' && c != 'Q'){
                r1[ir1++] = argv[j][s]; 
            } 
            s = s+1;
            
        }
    }
    r1[ir1]='\0';
    printf (""x,y,q und X,Y,Q aussortiert: "");
    printf(r1);

char *neu;
  neu = r1;
  printf(""\n"");
  printf(""Der neue String lautet: "");
  printf(""%c"", *neu);    
  printf(""%c"", *(neu+3));   
  printf(""%c"", *(neu+6));  
  printf(""%c"", *(neu+9));
  printf(""%c"", *(neu+12));
  printf(""%c"", *(neu+15));
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_81,VName_81,"#include <stdio.h>

void factorize(long ergebnis, long *zahl1, long *zahl2){
	if(ergebnis == 0){
	*zahl1 = 1;
	*zahl2 = 0;}
	else if(ergebnis == 1){
	*zahl1 = 1;
	*zahl2 = 1;}
	else{
	int x = ergebnis/2;
	while(ergebnis % x != 0) x--;
	*zahl1 = x;
	*zahl2 = ergebnis/x;}
	
}

int main(){
	long ergebnis;
	long zahl1;
	long zahl2;
	printf(""Please enter an Integer: "");
	scanf(""%li"",&ergebnis);
	factorize(ergebnis,&zahl1,&zahl2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", ergebnis,zahl1,zahl2);
	return 0;
}","#include<stdio.h>

int main(int groesse, char** satz){
char str1[100];
int x = 0;
for(int a = 1; a<groesse ; a++){
	for(int b = 0; satz[a][b] != '\0'; b++){
	if(satz[a][b] != 'x' && satz[a][b] != 'y' &&satz[a][b] != 'q'&&	satz[a][b] != 'X' &&satz[a][b] != 'Y' &&satz[a][b] != 'Q'){
	str1[x] = satz[a][b];
	x++;}}}
printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str1);
char str2[100];
x = 0;
for(int c = 0; str1[c] !='\0'; c += 3){
str2[x] = str1[c];
x++;}
printf(""Der neue String lautet: %s\n"",str2);}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src){
	for(int i = 0; i<zahl && *dest != '\0' && *src != '\0'; i++){
	*dest = *src;
	dest++;
	src++;}}

void umdrehen( char* str ){
char tmp[11];
int a = 10;
while(*str != '\0'){
tmp[a] = *str;
a--;
str++;}
str--;
a = 10;
while(a>=0){
*str = tmp[a];
a--;
str--;}}	

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_471,VName_471,"#include <stdio.h>

void factorize(long product, long *factor1, long *factor2)
{
	// Your factorization
}

int main(){
	printf(""Please enter an Integer: "");
	printf(""Possible Factors of %ld are %ld and %ld.\n"");
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
 void ersetzen(char* dest, int zahl, char* src);
 void umdrehen(char* str);


void ersetzen(char* dest, int zahl, char* src)
{   
   int zahl;
    
    char c = *dest;
    *dest = *src;
    *src = c;
   
   return;
}

void umdrehen( char* str )
{ if (!*str) {
        return;
    }
    char* anfang = str;

    char* ende = anfang + char* str - 1;

    while (anfang < ende) {
        ersetzen(anfang, char* ende);
        anfang++;
        ende--;
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_495,VName_495,"#include <stdio.h>

void factorize(long resultat, long *nummer1, long *nummer2)
{
	if(resultat == 0L || resultat ==  1L){
		*nummer1 = 1L;
		*nummer2 = resultat;
	}
	else{

		
		*nummer1 = resultat/2L;
		*nummer2 = 2L;
		
		while(resultat % *nummer1 > 0){
			(*nummer1)--;
		}
		*nummer2 = resultat / *nummer1;
	}
}

int main(){
	
	long nummer1;
	long nummer2;
	long resultat;
	
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &resultat);
	factorize(resultat, &nummer1, &nummer2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat,nummer1, nummer2);
	return 0;
}","#include <stdio.h>


void anhaengen(char *a, char *b){
	int e = 0;
	int c = 0;
	while(a[e] != '\0'){
		e++;
	}
	while(b[c] != '\0'){
		if(b[c] != 'X' && b[c] != 'Y' && b[c] != 'Q' && b[c] !='x' && b[c] != 'y' && b[c] != 'q'){
		a[e++] = b[c];
		}
		c++;
	}
	
	a[e++] = '\0';
} 

void dritte(char *a, char *b){
	int c = 0;
	int d = 0;
	
	while(b[d] != '\0'){
		a[c] = b[d];
		d = d + 3;
		c++;
	}
	a[c++] = '\0';
}

int main(int argc, char *argv[]){
	
char neu[100] = ""\0"";
char sortiert[100] = ""\0"";


	for(int i = 1; i<argc;i++){

	
	anhaengen(sortiert, argv[i]);
	

	}
	dritte(neu, sortiert);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", sortiert);
	printf(""Der neue String lautet: %s\n"", neu);

}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	int a = 0;
	while(dest[a++] != '\0');
	int c = 0;

	while(*src != '\0' && c < zahl && c < a-1){
		*dest++ = *src;
		src++;
		c++;
	}
	dest[a-1] = '\0';
	

}

void umdrehen( char* str )
{

	int a = 0;
	while(str[a++] != '\0');
	char tmp[a];
		for( int i = 0; i < a; i++){
			tmp[i] = str[a-i-2];

		}
	for(int i = 0; i<a; i++){
		str[i] = tmp[i];
	}
	str[a-1] = '\0';

}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_501,VName_501,"#include <stdio.h>

void factorize(long ergebnis, long *zahl1, long *zahl2)
{
    if(ergebnis == 0 || ergebnis == 1){
        *zahl1 = 1;
        *zahl2 = ergebnis;
    }
    else{
        *zahl1 = ergebnis / 2;
        while(ergebnis % *zahl1 != 0){
            *zahl1 -= 1;
        }
        *zahl2 = ergebnis / *zahl1;
    }
}

int main(){
	printf(""Please enter an Integer: "");
	long ergebnis;
	scanf(""%d"", &ergebnis);
	long zahl1;
	long zahl2;
	factorize(ergebnis, &zahl1, &zahl2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", ergebnis, zahl1, zahl2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>

int main( int argc, char* argv[] )
{
    char eingabe[100] = """";
    int stelle = 0;

    for(int i = 1; i < argc; i++){
        int buchstabe = 0;
        while(argv[i][buchstabe] != NULL){
            if(argv[i][buchstabe] != 'x' && argv[i][buchstabe] != 'y' && argv[i][buchstabe] != 'q' && argv[i][buchstabe] != 'X' && argv[i][buchstabe] != 'Y' && argv[i][buchstabe] != 'Q'){
                eingabe[stelle] = argv[i][buchstabe];
                stelle++;
            }
            buchstabe++;
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", eingabe);

    char alleDrei[100] = """";
    stelle = 0;
    for(int i = 0; i < sizeof(eingabe); i++){
        if(i % 3 == 0){
            alleDrei[stelle] = eingabe[i];
            stelle++;
        }
    }
    printf(""Der neue String lautet: %s\n"", alleDrei);
}","#include <stdio.h>
#include <stdlib.h>


void ersetzen(char* dest, int zahl, char* src)
{
  for(int i = 0; i < zahl; i++){
    if(dest[i] != NULL && src[i] != NULL){
        dest[i] = src[i];
    }
  }
}

void umdrehen( char* str )
{
    int laenge = 0;
    while(str[laenge] != NULL){
        laenge++;
    }
    char gedreht[laenge];
    for(int i = 0; i < laenge; i++){
        gedreht[i] = str[laenge - i - 1];
    }
    ersetzen(str, laenge, gedreht);
}

int main( int argc, char* argv[] )
{
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_492,VName_492,"#include <stdio.h>

void factorize(long ergebnis, long *zahl1, long *zahl2)
{
	// Your factorization
}

int main(){
    long a =0;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", a);
	printf(""Possible Factors of %ld are 25 and 2.\n"", a);
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_494,VName_494,"#include <stdio.h>

void factorize(long ergebnis, long *zahl1, long *zahl2)
{
 int b=ergebnis/2; 
	if (ergebnis == 0) {
		 *zahl1=1;
		 *zahl2=ergebnis;
		}
	 else if (ergebnis == 1) {
		  *zahl1=1;
		  *zahl2=ergebnis;
		 }
     else { 
  	   while(ergebnis!=(ergebnis/b)*b) {
		 	 b--;
		   }
 	  *zahl1=b;
	  *zahl2=ergebnis/b;
    }
}

int main(){
long ergebnis = 0;
long zahl1=0;
long zahl2=0;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &ergebnis);
  factorize (ergebnis, &zahl1, &zahl2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", ergebnis, zahl1, zahl2);
	return 0;
}","#include <stdio.h>

char aussortiercheck(char *stri){
char aussortiert[6]={""xyqXYQ""};
 for(int j=0; aussortiert[j]!= 0;j++){
     if( *stri==aussortiert[j]) return 0;
}
return 1;
}


char strex (char *** benutzereingabe, char *strin){
for(int i=0; benutzereingabe[i]!=(void *)0; i++){
  if (aussortiercheck(&strin[i])){
      strin[i]= **benutzereingabe[i];
       }
     }
return *strin;
}

char jeder3buchstabe (char *str, char *newstring){
for(int i=0; str[i]!=0; i=+3){
 newstring[i/3]=str[i];
  }
 return 0;
}

int main(int argc, char** argv){

char string [100];

strex(&argv, string);
printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string);

char newstring [100];
jeder3buchstabe (string, newstring);
printf(""Der neue String lautet: %s\n"", newstring);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  for( int i=0; zahl!=0&&i<zahl&&i<10&&src[i]!=0; i++) {
    dest[i]= src[i];
   }
}

void umdrehen( char* str )
{
int size=0; 
for(int i=0; str[i]!=0; i++){
 size++;
 }
char tmp [10]= {""""};
  for(int i=0; i<size; i++){
   tmp[i]= str[i];
  }
    for(int i=0; i<size; i++) {
   str[i]=tmp[(size-1)-i];
  }   
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] ); 
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_484,VName_484,"#include <stdio.h>

void factorize(long resultat, long *nummer1, long *nummer2)
{
    for(int i = resultat; ;i++);
	return resultat;
}

int main(){
    long Ergebnis;
    long Nummer1;
    long Nummer2;
    scanf(""%i"", &Ergebnis);
    factorize(Ergebnis,Nummer1,Nummer2);
	printf(""Please enter an Integer: "");
	printf(""Possible Factors of %ld are %ld and %ld.\n"",Ergebnis, Nummer1, Nummer2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main(int argc, char** argv)
{
    char teststring[] = ""lasse roland max ivo"";
    char scopy[100];
    char newstring[100];
    for(int i = 0; teststring[i] != '\0'; i++)
        {
            switch(teststring[i])
            {
            case 'x':
                i++;
                break;
            case 'y':
                i++;
                break;
            case 'q':
                i++;
                break;
            case ' ':
                i++;

            case 'X':
                i++;
                break;
            case 'Y':
                i++;
                break;
            case 'Q':
                i++;
                break;
            default :
                scopy[i] = teststring[i];
                break;
            }
        }
    printf(""x,y,q und X,Y,Q aussortiert: %s"",scopy);

    for(int i = 0; scopy[i] != '\0'; i++)
        {
            for(int j = 0; ;j++)
                {
                    if(i = 0 || i % 3 == 0)
                        {
                            strcpy(newstring[j],scopy[i]);
                                j += 1;
                        }
                }
        }
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  

}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_131,VName_131,"#include <stdio.h>

void factorize(long ergebnis, long *zahl1, long *zahl2)
{
	// Your factorization
}

int main(){
	printf(""Please enter an Integer: "");
	printf(""Possible Factors of %ld are %ld and %ld.\n"");
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_499,VName_499,"#include <stdio.h>

void factorize(long product, long *factor1, long *factor2)
{
  if (product == 0 || product == 1)
  {
    (*factor1) = 1;
    (*factor2) = product;
    return;
  }
  else
  {
    long int half = product / 2;
    (*factor1) = half;
    (*factor2) = 2;

    while ((*factor1) * (*factor2) != product)
    {
      (*factor1) = half;
      (*factor2)++;

      for (int counter = 0; counter < product / 2; ++counter)
      {
        (*factor1)--;

        if ((*factor1) * (*factor2) == product)
        {
          return;
        }
      }
    }

    return;
  }
}

int main() {
  long int user_input = 0;
  long int factor1 = 0;
  long int factor2 = 0;

  long int *ptr_factor1 = &factor1;
  long int *ptr_factor2 = &factor2;

  printf(""Please enter an Integer: "");
  scanf(""%ld"", &user_input);

  factorize(user_input, ptr_factor1, ptr_factor2);

  printf(""Possible Factors of %ld are %ld and %ld.\n"", user_input, factor1, factor2);

  return 0;
}","#include <stdio.h>


int main( int argc, char* argv[] )
{
  for ( int i = 0; i < argc; i++ )
  {
    printf(""%d. String in argv: %s\n"", i +1, argv[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_497,VName_497,"#include <stdio.h>


void factorize(long product, long *factor1, long *factor2)
{
	// Your factorization
	if(product == 0 || product == 1){
		*factor1 = 1;
		*factor2 = product;
	}
	else{
		for(long i=product/2; i>0; i--)
		{
			if(product%i == 0){
				*factor1 = i;
				*factor2 = product/i;
				break;
			}
		}

	}
}

int main(){
	long product;
	long factor1;
	long factor2;
	printf(""Please enter an Integer: "");
	scanf(""%d"", &product);

	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_490,VName_490,"#include <stdio.h>

void factorize(long ergebnis, long *zahl1, long *zahl2)
{
	// Your factorization
}

int main(){
	printf(""Please enter an Integer: "");
	printf(""Possible Factors of %ld are %ld and %ld.\n"");
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_131,VName_131,"#include <stdio.h>

void factorize(long resultat, long *nummer1, long *nummer2)
{
	int a 
	int b 
}

int main(){
	printf(""Please enter an Integer: "");
	printf(""Possible Factors of %ld are %ld and %ld.\n"");
	return 0;
}","int main (){
    
    
    
    
    
    
    
    
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{

  char* pointer = dest;
  for(int i=0; i=zahl; i++){
        *dest=*src;
    dest++;
    src++;

  }

  return pointer;
}

void umdrehen( char* str ){

   int counter = 0;
    for(;str[counter] != '\0';counter++){
    }
// zweite Laufvariable



    // swapie ding
for (int i = 0; i < counter/2 ; i++){

        int l = counter - i - 1;

    char temp = str[i];
    str[i] = str[l];

    str[l] = temp;
  }


    }



int main( int argc, char* argv[] )
{
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_487,VName_487,"#include <stdio.h>

void factorize(long resultat, long *nummer1, long *nummer2)
{
	// Your factorization
}

int main(){
	printf(""Please enter an Integer: "");
	printf(""Possible Factors of %ld are %ld and %ld.\n"");
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_483,VName_483,"#include <stdio.h>

void factorize(long resultat, long *nummer1, long *nummer2)
{
	if (resultat == 0){
		*nummer1 = 1;
		*nummer2 = resultat;
	}		
	else if (resultat == 1){
		*nummer1 = 1;
		*nummer2 = resultat;
	}
	else {
		if (resultat % 2 == 0){
			*nummer1 = resultat/2;
			*nummer2 = 2;
		}
		else{			
			int i = resultat / 2 - 1;
			while (resultat % i !=0) i--;
			*nummer1 = i;
			*nummer2 = resultat / i;
		} 
	}
}

int main(){
 	long resultat = 0;
	long n1 = 0;
 	long n2 = 0;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &resultat);
	factorize (resultat, &n1, &n2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, n1, n2);
	return 0;
}","#include <stdio.h>

int main (int argc, char** argv){
	char str[100] = """";
	char krz[100] = """";	
	int j = 0;
	int z = 1;
	for (int i = 1; i < argc; i++){ 
		for (int x = 0; argv[i][x] != '\0'; x++){
			if (argv[i][x] != 'x' && argv[i][x] != 'y' && argv[i][x] != 'q' && argv[i][x] != 'X' && argv[i][x] != 'Y' && argv[i][x] != 'Q'){
				str[j]= argv[i][x];
				j++;
			}
		}
	}
	krz[0] = str[0]; 	
	for (int i = 1; i < 100; i++){		
		if (i % 3 == 0){
			krz[z] = str [i];
			z++;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", str);
	printf(""Der neue String lautet: %s\n"", krz);
}","#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{ 
  int groesse = 0;
  for (int i = 0; dest[i] != '\0'; i++) groesse++; 
  if (zahl <= groesse){ 
    for (int i = 0; i < zahl; i++){
      if (src[i] == '\0') break;
      dest[i] = src[i];
    }
  }
  else{
    for (int i = 0; i < zahl; i++){ 
      if (dest[i] == '\0') break;
      if (src[i] == '\0') break;
      dest[i] = src[i];
    }
  }
}

void umdrehen( char* str )
{
  int groesse = 0;
  char zwp[11] = """";
  for (int i = 0; str[i] != '\0'; i++) groesse++;
  for (int i = 0; i < groesse; i++) zwp[i] = str[i];
  for (int i = 0; i < groesse; i++) str[i] = zwp[groesse -1 -i]; 
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_491,VName_491,"#include <stdio.h>

void factorize(long product, long *factor1, long *factor2)
{
    int primeQ = 1;
	for(long i = 2; i < product; i++){
        if(product%i==0){
            *factor2 = i;
            *factor1 = (long)(product/i);
            i = product;
            primeQ = 0;
        }
    }
    if(primeQ==1){
        *factor2 = product;
        *factor1 = 1;
    }

}

int main(){
    long zahl;
	printf(""Please enter an Integer: "");
    scanf(""%ld"",&zahl);
    long factor1;
    long factor2;
    factorize(zahl,&factor1,&factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",zahl,factor1,factor2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>

void aussortieren(char* eingabe,char* ausgabe,int* ausgabeLaenge){
    int j = 0;
    for(int i = 0; eingabe[i] != '*'; i++){
        if((eingabe[i]!='x')&&(eingabe[i]!='y')&&(eingabe[i]!='q')&&(eingabe[i]!='X')&&(eingabe[i]!='Y')&&(eingabe[i]!='Q')&&(eingabe[i]!=' '))
        {
            ausgabe[j]=eingabe[i];
            j++;
        }
    }
    *ausgabeLaenge = j;

}

void neuer_string(char* ausgabe,char* neuerString,int* neuerStringLaenge){
    int j = 0;
    for(int i = 0; ausgabe[i] != '\0'; i++){
        if((i+3)%3==0){
            neuerString[i/3] = ausgabe[i];
            j++;
        }
    }
    *neuerStringLaenge = j;
}

int main(int argc, char* argv[]){
    char eingabe[50] = """";
    char ausgabe[50] = """";
    char neuerString[50] = """";

    int ausgabeLaenge = 0;
    int neuerStringLaenge = 0;

    int z = 0;
    for(int i = 1; i < argc; i++){
        for(int j = 0; argv[i][j] != '\0'; j++){
            eingabe[z] = argv[i][j];
            z++;    
        }
    }
    eingabe[z] = '*';

    aussortieren(eingabe,ausgabe,&ausgabeLaenge);
    neuer_string(ausgabe,neuerString,&neuerStringLaenge);

    // endgültige ""Ausgabe"" und ""neuer String"" wird mit der korrekten Array-Länge erzeugt.
    char* ausgabeAngepasst =  malloc(ausgabeLaenge);
    char* neuerStringAngepasst = malloc(neuerStringLaenge);

    for(int i = 0; i < ausgabeLaenge; i++){
        ausgabeAngepasst[i] = ausgabe[i];
    }
    for(int i = 0; i < neuerStringLaenge; i++){
        neuerStringAngepasst[i] = neuerString[i];
    }

    printf(""x,y,q und X,Y,Q aussortiert: "");
    for(int i = 0; i < ausgabeLaenge; i++){
        printf(""%c"",ausgabe[i]);
    }
    printf(""\nDer neue String lautet: "");
    for(int i = 0; i < neuerStringLaenge; i++){
        printf(""%c"",neuerString[i]);
    }
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_221,VName_221,"#include <stdio.h>

void factorize(long product, long *factor1, long *factor2)
{
    int teiler = product;
    if (product == 0 || product == 1)
    {
        *factor1 = 1;
        *factor2 = product;
        return;
    }
    teiler /= 2;
    while (1)
    {
        if (product % teiler == 0)
        {
            *factor1 = teiler;
            *factor2 = product / teiler;
            return;
        }
        teiler--;
    }
}

int main()
{
    long product, factor1, factor2;
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &product);
    factorize(product, &factor1, &factor2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
    return 0;
}","#include <stdio.h>

// zusammenhängen
// xyq aussortierne
// ausgeben
// neuner string mit jedem 3. Zeihchen
// ausgeben

// aaaa bbbb cccc
// string1: aaaabbbbcccc

char *kopieren_und_aussortieren(const char *von, char *nach)
{
    while (*von != 0)
    {
        switch (*von)
        {
        case 'x':
        case 'y':
        case 'q':
        case 'X':
        case 'Y':
        case 'Q':
            break;
        default:
            *nach = *von;
            nach++;
        }
        von++;
    }
    return nach;
}

int main(int argc, char const *argv[])
{
    char string1[100];
    char string2[100];

    char *p1 = string1;

    for (int i = 1; i < argc; i++)
    {
        p1 = kopieren_und_aussortieren(argv[i], p1);
    }
    *p1 = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string1);

    p1 = string1;
    char *p2 = string2;
    int i = 0;
    while (*p1)
    {
        if (i % 3 == 0)
        {
            *p2++ = *p1;
        }
        i++;
        p1++;
    }
    *p2 = '\0';

    printf(""Der neue String lautet: %s\n"", string2);
    /* code */
    return 0;
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char *dest, int zahl, char *src)
{
    int i = 0;
    // bis zum Ende von src
    while (*src && i < zahl)
    {
        // bis zum Ende von dest
        if (*dest == 0)
            break;
        *dest++ = *src++;
        i++;
    }
}

void umdrehen(char *str)
{
    int c = 0;
    char *p = str;

    // Länge
    while (*p != 0)
    {
        c++;
        p++;
    }

    for (int i = 0; i < c / 2; i++)
    {
        char b = *(str + i);
        *(str + i) = *(str + c - 1 - i);
        *(str + c - 1 - i) = b;
    }
}

int main(int argc, char *argv[])
{
    char test[11] = ""0123456789"";
    printf(""Das Original ist: %s \n"", test);
    ersetzen(test, atoi(argv[1]), argv[2]);
    printf(""Ersetzt : %s \n"", test);
    umdrehen(test);
    printf(""Rückwärts : %s \n"", test);
}"
Name_64,VName_64,"#include <stdio.h>

void factorize(long resultat, long *nummer1, long *nummer2)
{
	if(resultat == 0){
		*nummer1 = 1;
		*nummer2 = resultat;
	}
	else if(resultat == 1){
		*nummer1 = 1;
		*nummer2 = resultat;
	}
	else if(resultat%2 == 0){
		*nummer1 = resultat/2;
		*nummer2 = 2;
	}
	else if(resultat%2 != 0){
		
		long newresultat = resultat/2;
		
			do{
			
				newresultat = newresultat - 1;
				
			}while(resultat % newresultat != 0);
			
			*nummer1 = newresultat;
			*nummer2 = resultat/newresultat;
	}
}

int main(){
	long resultat, nummer1, nummer2;
	printf(""Please enter an Integer: "");
	scanf(""%li"",&resultat);
	factorize(resultat,&nummer1,&nummer2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_472,VName_472,"#include <stdio.h>

void factorize(long product, long *factor1, long *factor2)
{
	if (product == 0){
		*factor1 = 1;
		*factor2 = product;
		return;
	}
	
	if (product == 1) {
		*factor1 = 1;
		*factor2 = product;
		return;
	}


    long divider = 2;
    int done = 0;
    while ((divider < product) && !done) {
    	if ((product % divider) == 0) {
    		*factor1 = product / divider;
    		*factor2 = divider;
    		done = 1;
    	}
    	else {
    		++divider;
    		if (divider == product) {
    			*factor1 = product;
    			*factor2 = 1;
    			done = 1;
    		}
    	}
    }
}

int main(){
	long product;
	long factor1, factor2;
	printf(""Please enter an Integer: "");
	scanf(""%li"", &product);
	getchar();
	factorize(product, &factor1, &factor2);
	if(product == factor1){
		long temp = factor1;
		factor1 = factor2;
		factor2 = temp;
	}
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
	return 0;
}","#include <stdio.h>

void clmem(char* tmp){
	for(int i=0; i<100; i++){
		tmp[i] = 0;
	}
}

void sv3rd(char* zk2, char* zk3){
	int j=0;
	for(int i=0; zk2[i] != '\0'; i+=3){
		zk3[j] = zk2[i];
		j++;
	}
}

void rmxyq(char* zk1, char* zk2){
	int j=0;
	for(int i=0; zk1[i] != '\0'; i++){
		if((zk1[i] !='x') && (zk1[i] !='y') && (zk1[i] !='q') &&
		   (zk1[i] !='X') && (zk1[i] !='Y') && (zk1[i] !='Q')){
			zk2[j] = zk1[i];
			j++;
		}
	}
}

int main(int argc, char** argv){
	char zk1[100];
	clmem(zk1);
	char zk2[100];
	clmem(zk2);
	char zk3[100];
	clmem(zk3);
	char eingang;
	int src_idx = 0;
	int dst_idx = 0;
	for(int i=1; i<argc; i++){
		src_idx = 0;
		while((eingang = argv[i][src_idx])){
			zk1[dst_idx] = eingang;
			dst_idx++;
			src_idx++;
		}
	}
	// printf(""zk1 = %s.\n"", zk1);
	rmxyq(zk1, zk2);
	// printf(""zk2 = %s.\n"", zk2);
	sv3rd(zk2, zk3);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", zk2);
	printf(""Der neue String lautet: %s\n"", zk3);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	int count = zahl;
	int src_idx = 0;
	int dest_idx = 0;
	while((dest[dest_idx] != 0) && (src[src_idx] != 0) && (count > 0)){
		dest[dest_idx] = src[src_idx];
		src_idx++;
		dest_idx++;
		count--;
	}
}

void umdrehen( char* str )
{
	int len = 0;
	while((str[len] != 0)) len++;
	char tmp[100];
	int index = len;
	for(int i=0; i<len; i++){
		tmp[index-1] = str[i];
		index--;
	}
	for(int i=0; i<len; i++){
		str[i] = tmp[i];
	}
	
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_485,VName_485,"#include <stdio.h>

void factorize(long product, long *factor1, long *factor2)
{
   product / factor1 = factor2;
}

int main(){
    long product = 0;
    long factor1 = 1;
    long factor2 = product;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", product);
	product = factorize;
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_488,VName_488,"#include <stdio.h>

void factorize(long produkt, long *faktor1, long *faktor2)
{
    if(produkt == 1){
        *faktor1 = 1;
        *faktor2 = produkt;
    }
    else if((produkt % 2) != 0){
        for(int i = produkt / 2; (produkt % i) != 0; i--){
            *faktor1 = i-1;
        }
        *faktor2 = (produkt / faktor1);
    }
    else{
        *faktor2 = 2;
        *faktor1 = (produkt / 2);
    }
}

int main(){
    long int faktor1 = 0;
    long int faktor2 = 0;
    long int produkt;
	printf(""Please enter an Integer: "");
	scanf(""%li"", &produkt);
	factorize(produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktor1, faktor2);
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_496,VName_496,"#include <stdio.h>

void factorize(long resultat, long *nummer1, long *nummer2)
{
	if (resultat == 0 || resultat == 1){
		*nummer1 = 1;
		*nummer2 = resultat;
	}
	else{
		
		for(long i = resultat/2; i>0; i--){
			if (resultat % i == 0){
				*nummer1 = i;
				break;
			}
		}
		*nummer2 = resultat/ *nummer1; 
	}
}

int main(){
	long resultat;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &resultat);
	long nummer1;
	long nummer2;
	factorize(resultat,&nummer1,&nummer2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
	return 0;
}","#include <stdio.h>

void changing(char* string[100]){
	int length;
	for (int i = 0; *string[i] != '\0'; ++i){
		length = i;
	}
	for(int j = 0; j < length; j++){
		if ((*string[j] == 'x') || (*string[j] == 'X') || (*string[j] == 'y') || (*string[j] == 'Y') || (*string[j] == 'q') || (*string[j] == 'Q' )){
			for(int k = j; k < length; k++){
				*string[k] = *string[k + 1];
			}
			length = length - 1;
			j = j - 1;	
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"",*string);
	int lennew;
	for (int i = 0; *string[i] != '\0'; ++i){
		lennew = i;
	}
	printf(""Der neue String lautet: "");
	for(int i = 0; i<lennew; i = i+3){
		printf(""%s"" , string[i]);
	} 
}

int main(){
	char* str[100];

	scanf(""%p"", str);

	int i = 0;
	int j = 0;
	while(*str[i]){
		if (*str[i] != ' ')
			*str[j++] = *str[i];
		i = i + 1;
	}
	*str[j] = '\0';
	changing(str);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_498,VName_498,"#include <stdio.h>
void factorize(long resultat, long *nummer1, long *nummer2)
{
if   (resultat != 0 && resultat != 1)
{
    int divided = resultat/2;
    int divisor;
for (int i = divided; i>0; i--)
{
if (resultat % i == 0)
{
 divisor = i;
 break;
}
}
*nummer1 = divisor;
*nummer2 = resultat/ divisor;
}
else
{
*nummer1 = 1;
*nummer2 = resultat;
}
}

int main()
{
    printf(""Please enter an Integer: "");
    long integer;
    scanf(""%ld"", &integer);
    long n1;
    long n2;
    factorize(integer, &n1, &n2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", integer, n1 ,n2);
    return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_479,VName_479,"#include <stdio.h>

void factorize(long product, long *factor1, long *factor2)
{
    for (int i = 2; i <= product; i++) {
        if (product % i == 0) {
            *factor2 = i;
            *factor1 = product / i;
            break;
        }
	}
	if (*factor2 > product) {
	    *factor1 = 1;
	    *factor2 = product;
	} 
}

int main(){
	long product, factor1, factor2;
	printf(""Please enter an Integer: "");
    scanf(""%ld"", &product);
    factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
	return 0;
}","#include<stdio.h>

void sort (char** words, int numberOfArguments) {
    char result1[100], result2[100];
    int result1marker = 0;
    int result2marker = 0;
    for (int i = 1; i < numberOfArguments; i++) {
        for (int j = 0; words[i][j] != '\0'; j++) {
            if (words[i][j] != 'x' && words[i][j] != 'y' && words[i][j] != 'q' && words[i][j] != 'X' && words[i][j] != 'Y' && words[i][j] != 'Q') {
                result1[result1marker] = words[i][j];
                result1marker++;
            }
        }
    }
    result1[result1marker] = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", result1);
    for (int i = 0; result1[i] != '\0'; i++) {
        if (i % 3 == 0) {
            result2[result2marker]=result1[i];
            result2marker++;
        }
    }
    result2[result2marker] = '\0';
    printf(""Der neue String lautet: %s"", result2);
}

int main (int argc, char** argv) {
    sort(argv, argc);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>

int mystrlen(char* str) {
    int result = 0;
    for (int i = 0; str[i] != '\0'; i++) {
        result++;
    }
    return result;
}
 
void ersetzen(char* dest, int zahl, char* src) {
    if (zahl > 0) {
        for (int i = 0; i < zahl && dest[i] != '\0' && src[i] != '\0' && i < mystrlen(src); i++) {
            dest[i] = src[i];
        }
    }   
}

void umdrehen(char* str) {
    int stringlength = mystrlen(str);
    char reverse[stringlength+1];
    int j = stringlength;
    int i = 0;
    for (; i < stringlength; i++) {
        reverse[j] = str[i];
        j--;
        }
    for (; j < stringlength; j++) {
        str[j] = reverse[j+1];
    }
}

int main(int argc, char* argv[]) {  
    char test[11] = ""0123456789"";
    printf(""Das Original ist: %s \n"", test);
    ersetzen(test, atoi(argv[1]), argv[2]);
    printf(""Ersetzt : %s \n"", test);
    umdrehen(test);
    printf(""Rückwärts : %s \n"", test);
}"
Name_73,VName_73,"#include <stdio.h>

void factorize(long resultat, long *nummer1, long *nummer2)
{
    long p;
if (resultat == 0){
*nummer1 = 1;
*nummer2 = 0;
}
else if (resultat == 1){
    *nummer1 = 1;
    *nummer2 = 1;
}
 else {
   p = 2;
   while(p<=resultat){
        if( resultat % p == 0){
            *nummer2= p;
            *nummer1 = resultat / p;
            p = resultat+1;
        }
        p=p+1;
   }
    }
}

int main(){
	printf(""Please enter an Integer: "");
	long res;
	long res_final;
	int a;
	int b;
	long* num1 = &a;
	long* num2 = &b;
	scanf(""%ld"",&res);
	res_final = res;
	factorize (res,num1,num2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",res_final,a,b);
	return 0;
}","#include <stdio.h>

int main( int argc, char *argv[] )
{
char str_1[100];
char str_2[100];
int i = 0;
int n = 0;
int m = 0;
int x = 0;
for (n=0;n<argc;n++){
    for(i=0;argv[n][i]!='\0';i++){
    str_1[m] = argv[n][i];
    m++;
    }
}
    str_1[m]='\0';
       for(i=0;str_1[i]!='\0';i++){
       str_1[i]=str_1[i+12];
  }

for(m=0;str_1[m]!='\0';m++){
    if(str_1[m]=='x'||str_1[m]=='y'||str_1[m]=='q'||str_1[m]=='X'||str_1[m]=='Y'||str_1[m]=='Q'){
        for(i=m;str_1[i]!='\0';i++){
            str_1[i]=str_1[i+1];
        }
    }
}
printf(""x,y,q und X,Y,Q aussortiert: %s\n"", str_1);

for (m=0;str_1[m]!='\0';m++){
    if (m==0||m%3==0){
    str_2[x]=str_1[m];
    x++;
}
}
str_2[x]='\0';
printf(""Der neue String lautet: %s\n"", str_2);
return 0;

}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_489,VName_489,"#include <stdio.h>
#include <string.h>

    int product;
    int factor1;
    int factor2;

 void factorize(long product, long *factor1, long *factor2){
    //factorization

    for( int i = 0; i < 2 ; i++){
    factor1 = 2;//die ganzzahlige Vielfache vom Produkt
    factor2 = product/2; //das Produkt / die ganzzahlige Vielfache vom Produkt;
    }
 }

int main(){
    printf(""Please enter an Integer: "");
    scanf(""%li "", &product);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);


    return 0;
}","int static str[100];
int main(){
    for (int i = 0; i < str; i++);
char* str[i] = {""./[programm]"", ""lasse"", ""roland"", ""max"", ""ivo""};
student_main(5, str);

// 2. Test (./[programm] PPR macht Spass!)
char* str[i] = {""./[programm]"", ""PPR"", ""macht"", ""Spass!""};
student_main(4, str);
}
printf(""Der neue String lautet: %c"", str);","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
 char* str[] = {""./[programm]"", ""40"", ""pprMachtSpassss""};
student_main(2, str);
char str[6] = ""Robin"";
printf(""%s\n"", str);
}

void umdrehen( char* str )
{
  printf(""%s\n"", str);
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_502,VName_502,"#include <stdio.h>

void factorize(long produkt, long *faktor1, long *faktor2)
{
    *faktor1 = 1;
    *faktor2 = 0;
	if(produkt==1)
	{
	    *faktor1 = 1;
	    *faktor2 = 1;
	}
	else if(produkt>=2)
	{
	    *faktor1=0;
	    *faktor2=2;
	    while(produkt % *faktor2 != 0)
	    {
	        (*faktor2)++;
	    }
    	*faktor1 = produkt / *faktor2;
	}
}

int main(){
    long int faktor1;
    long int faktor2 = 2;
    long int produkt;
	printf(""Please enter an Integer: "");
	scanf(""%ld"",&produkt);
	factorize(produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktor1, faktor2 );
	return 0;
}","#include<stdio.h>

int main()
{
    

}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_493,VName_493,"#include <stdio.h>

void factorize(long product, long *factor1, long *factor2){
	if(product == 0 || product == 1){
	    *factor1 = 1;
	    *factor2 = product;
	}
	else if((product % 2) != 0){
	    for(int i = product / 2; (product % i) != 0; i--){
	        *factor1 = i-1;
	    }
	    *factor2 = (product / *factor1);
	}
	else{
	    *factor2 = 2;
	    *factor1 = (product / 2);
	}
}

int main(){
    long int factor1 = 0;
    long int factor2 = 0;
    long int product;
	printf(""Please enter an Integer: "");
	scanf(""%li"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
	return 0;
}","#include <stdio.h>

int main(int argc, char* argv[]){
    char str[100] = """";
    char strnew[100] = """";
    for(int i = 1; i <= argc; i++){
        int e = 0;
        while(str[e] != '\0') e++;
        for(int j = 0; argv[i][j] != '\0'; j++){
            if(argv[i][j] != 'x' && argv[i][j] != 'y' && argv[i][j] != 'q' && argv[i][j] != 'X' && argv[i][j] != 'Y' && argv[i][j] != 'Q'){
                str[e] = argv[i][j];
                e++;
            }
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", str);
    int o = 0;
    int c = 0;
    while(o == 0){
        for(int i = 0; i <= 2; i++){
            if(str[c] == '\0'){
                o = 1;
                break;
            }
            strnew[c] = str[c];
            c++;
        }
    }
    printf(""Der neue String lautet: %s\n"", strnew);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_504,VName_504,"#include <stdio.h>

void factorize(long produkt, long *faktor1, long *faktor2){
    int i = 2;
    if(produkt == 1){
        i = 1;
    }
    else if(produkt % 2 == 0){
        i = 2;
    } else if(produkt%i != 0 && i < produkt){
        while( produkt%i != 0 && i < produkt){
        i++;
        }
    } else {
        i = 1;
    }
    *faktor1 = produkt / i;
    *faktor2 = i;
	// Your factorization
}

int main(){
    long produkt = 1, faktor1, faktor2;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &produkt);
	factorize(produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktor1, faktor2);
	return 0;
}","#include <stdio.h>

int Zusammen(char* str1, char* str2 )
    int i, l = 0
    for (i = 0, str1[i] != '\0', i++){
        l++;
    }
    for (i = 0, str2[i] != '\0', i++){
        str1[l+i] = str2[i]
    }
    str1[l+i] = '\0'

int main(int argc, char** argv[100] ){
// argv[1] = lasse

// argv[2] = roland
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src){
    int i = 0;
    for(i = 0; i + 1 <= zahl && dest[i] != '\0' && src[i] != '\0'; i++){
        dest[i] = src[i];
    }
    return dest;
}

void umdrehen( char* str ){
    int counter = 0;
    int a;
    int j;
    int b;
    char str2[100];
    for(a = 0; str[a] != '\0'; a++){
        counter++;
    }
    for( int i = counter - 1, j = 0; i >=0; i--, j++){
        str[j] = str2[i];        
    }
    str[counter]='\0';
    return str;
}

int main( int argc, char** argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_456,VName_456,"#include <stdio.h>

void factorize(long ergebnis, long *zahl1, long *zahl2)
{
	if( ergebnis % 2 = !0){
	    *zahl2 = 2;
	    *zahl1 = ergebnis / 2;
	}
	else( ergebnis % 3 = !0 ){
	    *zahl2 = 3;
	    *zahl1 = ergebnis / 3;
	}
	else(){
	    *zahl2 = 1;
	    *zahl1 = ergebnis;
	}
}

int main(){
    long ergebnis;
    long zahl1;
    long zahl2;
	printf(""Please enter an Integer: "");
	scanf( ""%ld"" , &ergebnis );
	factorize(ergebnis, &zahl1 , &zahl2 );
	printf(""Possible Factors of %ld are %ld and %ld.\n"", ergebnis, zahl1, zahl2);
	return 0;
}","#include <stdio.h>

void strCmp(char* str1, char* str2){
    for(int i = 0; str1[i] != '\0'; i++){
        if (str1[i] != 'X' != 'Y' != 'Q' != 'x' != 'y' != 'q'){
            str2[i]= str1[i];
        }
        
    }
}


int main(int argc; char* argv[]){
    char kette[100];
    strCmp(argv, kette);
    for(int i = 0;str ; i++)
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_500,VName_500,"#include <stdio.h>

void factorize(long ergebnis, long *zahl1, long *zahl2)
{
	if (ergebnis == 0){
	        *zahl2 = 0;
	        *zahl1 = 0;
	        }
	else if (ergebnis%2 == 0){
	        *zahl2 = 2;
	        *zahl1 = ergebnis/2;
	        }
	else if (ergebnis%2 != 0) {
	   if (ergebnis == 1){
	        *zahl2 = 1;
	        *zahl1 = 1;
	        }
	        else {
	           for (int i = 3; ; i+=2){
	            if (ergebnis%i == 0){
	            *zahl2 = i;
	            *zahl1 = ergebnis/i;
	            break;
	    }
	} 
	        }
	}
}

int main(){
    long ergebnis = 0, zahl1, zahl2;
	printf(""Please enter an Integer: "");
	scanf(""%li"",&ergebnis);
	factorize(ergebnis, &zahl1, &zahl2);
	printf(""Possible Factors of %li are %li and %li.\n"", ergebnis, zahl1, zahl2);
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_503,VName_503,"#include <stdio.h>

void factorize(long produkt, long *faktor1, long *faktor2)
{
	// Your factorization
    if (produkt==0){
        *faktor1=1;
        *faktor2=produkt;
        return;
    }
    else{
    if (produkt==1){
        *faktor1=1;
        *faktor2=1;
        return;;
    }
    else{
    for (int i= (int)produkt - 1;i>1;i--){

        if (produkt%i==0){
            *faktor1=i;
            *faktor2=produkt/i;
            return;
        } } } }
    *faktor1=1;
    *faktor2=produkt;
}

int main(){
    long produkt;
    long faktor1;
    long faktor2;
	printf(""Please enter an Integer: "");
    scanf(""%i"",&produkt);
    factorize(produkt,&faktor1,&faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",produkt,faktor1,faktor2);
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{

for (int i=0;i<zahl&&dest[i]!='\0';i++){
dest[i]=src[i];
}
}

void umdrehen( char* str )
{

int len=0;
for (int i=0; str[i]!='\0';i++){
    len+=1;

}
char saver[len];
for (int i=0; str[i]!='\0';i++){
saver[len-i-1]=str[i];
}
for (int i=0;i<len;i++){
    str[i]=saver[i];
}
}



int main( int argc, char* argv[] )
{
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_506,VName_506,"#include <stdio.h>

void factorize(long ergebnis, long *zahl1, long *zahl2)
{
	if(ergebnis == 0 || ergebnis == 1)
	{
		*zahl1 = 1;
		*zahl2 = ergebnis;
	}
	else if(ergebnis % 2 != 0)
	{
		long c = ergebnis;
		while(c % (ergebnis/2) != 0)
		{
			ergebnis -= 1;
		}
		ergebnis /= 2;
		*zahl1 = ergebnis;
		*zahl2 = c / *zahl1;
	}
	else
	{
		*zahl1 = ergebnis / 2;
		*zahl2 = ergebnis / *zahl1;
	}
} 

int main()
{
	long ergebnis;
	long a = 0;
	long b = 0;
	long *zahl1 = &a;
	long *zahl2 = &b;

	printf(""Please enter an Integer: "");
	scanf(""%ld"", &ergebnis);
	factorize(ergebnis, &a, &b);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", ergebnis, *zahl1, *zahl2);

	return 0;
}","#include <stdio.h>

int main 
char strl[100];","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_472,VName_472,"#include <stdio.h>

void factorize(long product, long *factor1, long *factor2)
{
	// Your factorization
}

int main(){
	printf(""Please enter an Integer: "");
	printf(""Possible Factors of %ld are %ld and %ld.\n"");
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
