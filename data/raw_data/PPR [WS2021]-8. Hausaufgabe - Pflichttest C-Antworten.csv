Nachname,Vorname,Antwort 8,Antwort 9
Name_189,VName_189,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
	for(int j=0; j<5; j++){
		for(int i=0; i<4; i++){
			if(artikelGewicht[i] == 0){
				artikelGewicht[i] = artikelGewicht[i+1];
				artikelGewicht[i+1] = 0;
			}
			else if((artikelGewicht[i] + artikelGewicht[i+1])<= 10){
				artikelGewicht[i] = artikelGewicht[i] + artikelGewicht[i+1];
				artikelGewicht[i+1] = 0;
			}
			
		}

	}
	for(int k=0; k<5; k++ ){
		paeckchenGewicht[k] = artikelGewicht[k];
	}

}


double berechnePaketKosten( int paeckchenGewicht[] )
{
double endkosten = 0;
	double kosten = 0;
	for(int i=0; i<5; i++){
		if(paeckchenGewicht[i] == 0){
			kosten = 0.00;
		}
		else if(paeckchenGewicht[i] <= 10){
			kosten = 3.00;
			endkosten += kosten;
		}
		else if(paeckchenGewicht[i] > 10){
			kosten = 3.00 + ((paeckchenGewicht[i]-10) * 0.45);
			endkosten += kosten;
		}
		printf(""Gewicht des %i. Paeckchens: %i Kilo\n"", i+1, paeckchenGewicht[i] );
		printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, kosten);		
	}



	return endkosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
		int shiftVZ = 0; // 0 == -, 1 == +
		if(shift >=0)shiftVZ = 1;
		int buchVZ = 2; // 0 == großer Buchstabe, 1 == kleiner Buchstabe		
		if('a' <= *p_char && *p_char <= 'z') buchVZ = 1;
		if('A' <= *p_char && *p_char <= 'Z') buchVZ = 0;
		int buchabstand = 0;
		
		
		if(shiftVZ == 1 && buchVZ == 1){ //positiver kleiner
			if('a' <= *p_char && *p_char < 'z' - shift +1){//normal
				*p_char = *p_char + shift;
			}
			else{//Knickpunkt
				buchabstand = 'z' - *p_char;
				*p_char = 'a' + (shift - buchabstand) -1;
			}
		}
		if(shiftVZ == 1 && buchVZ == 0){ //positiver großer
			if('A' <= *p_char && *p_char < 'Z' - shift +1){//normal
				*p_char = *p_char + shift;
			}
			else{//Knickpunkt
				buchabstand = 'Z' - *p_char;
				*p_char = 'A' + (shift - buchabstand) -1;
			}
		}
		if(shiftVZ == 0 && buchVZ == 1){ //negativer kleiner
			if('a' - shift -1 < *p_char && *p_char <= 'z'){//normal
				*p_char = *p_char + shift;
			}
			else{//Knickpunkt

				buchabstand = *p_char - 'a';
				*p_char = 'z' + (shift + buchabstand)+1;
			}
		}
		if(shiftVZ == 0 && buchVZ == 0){ //negativer kleiner
			if('A' - shift -1 < *p_char && *p_char <= 'Z'){//normal
				*p_char = *p_char + shift;
			}
			else{//Knickpunkt
				buchabstand = *p_char - 'A';
				*p_char = 'Z' + (shift + buchabstand)+1;
			}
		}
		else{
			*p_char = *p_char;
		}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(int i = 0;i < maxlength; i++ )
	{	
	  shiftChar(&str[i], shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_209,VName_209,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int i;
    int m = 0;
    int* p_1 = &paeckchenGewicht[0];
    int* p_2 = &paeckchenGewicht[1];

    for (i = 0; i < 5; i++)
    {
        if (artikelGewicht[i] > 10)
         {
             *p_1 += artikelGewicht[i];
             p_1 = p_1 + 1;
             p_2 = p_2 + 1;
         }
         else
         {
             *p_1 += artikelGewicht[i];

             if (*p_1 > 10)
             {
                 p_2 = p_1 + 1;
                 *p_1 -= artikelGewicht[i];
                 *p_2 += artikelGewicht[i];
                 p_1 = p_1 + 1;

             }
         }
    }

}

double berechnePaketKosten( int paeckchenGewicht[] )

{
/*
     in berechnePaketKosten müsst ihr über die Paket (Gewichte) iterieren,
     und die Kosten nach obigem Schema summieren. Missachtet Pakete mit Gewicht 0.
     Gewicht von (inklusive) 10 Kilo 3 € Versandkosten. Darüber hinaus sind für jedes zusätzliche Kilo 45 Cent zu bezahlen.
*/

    double summe = 0;
    double hilfe = 0;
    int i;

    for (i = 0; i < 5; i++)
    {

       hilfe = 0;

       if(paeckchenGewicht[i] > 10)
       {
           hilfe = (paeckchenGewicht[i] - 10);
           hilfe = hilfe * 0.45;
           hilfe = hilfe + 3;
       }
       else if (paeckchenGewicht[i] > 0)
       {
           hilfe += 3;

       }

       summe += hilfe;

       printf(""Gewicht des %i. Paeckchens: %i Kilo \n"" , i + 1 , paeckchenGewicht[i]);
       printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro \n \n""  , i + 1 , hilfe);

    }

    return summe;

}


int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>
int hilfe = 0;
int Hilfe2 = 0;
/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift.
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    int i;

    if (hilfe <= 1)
    {
        for (i = 0; i < Hilfe2; i++)
        {
            if (*p_char >= 97 && *p_char <= 122 )
            {
                if (((int)*p_char + shift)>= 127 )
                {
                    *p_char = (((int)*p_char + shift)-26);
                }
                else
                {

                    *p_char += shift;

                    if(*p_char > 122)
                    {
                        *p_char -= shift;
                        *p_char -= (26-shift);
                    }
                }
            }

            else if (*p_char >= 65 && *p_char <= 90 )
            {
                *p_char += shift;

                if(*p_char > 90)
                {
                    *p_char -= 26;
                }
            }

            p_char = p_char + 1;
        }
    }

    else if (hilfe >= 2)
        {
            for (i = 0; i < Hilfe2; i++)
            {
                if (*p_char >= 97 && *p_char <= 122 )
                {
                    *p_char += shift;

                    if(*p_char < 97)
                    {
                        *p_char += 26;
                    }
                }


                else if (*p_char >= 65 && *p_char <= 90 )
                {
                    *p_char += shift;

                    if(*p_char < 65)
                    {
                        *p_char += 26;
                    }
                }

                p_char = p_char + 1;
            }
        }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben.
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben.
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    int i;
    Hilfe2 = maxlength;

// Verschlüsselung

    if (shift > 0)
    {
        hilfe = 1;
        shiftChar(str,shift);
    }
// Entschlüsselung

    else if (shift < 0)
    {
        hilfe = 2;
        shiftChar(str,shift);
    }
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann.
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);

	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);

	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_190,VName_190,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{ int i=0;
  int j=0;
  while (i<5&&j<5)
     {if (artikelGewicht[j]>=10||j==4)
         {paeckchenGewicht[i]=artikelGewicht[j];
         i++;
        j++; }
  else if (j<4&&(artikelGewicht[j]+artikelGewicht[j+1])>=10)
         {paeckchenGewicht[i]=artikelGewicht[j];
          i++;
          j++;}
  else {artikelGewicht[j+1]+=artikelGewicht[j];
          j++;}}

}

double berechnePaketKosten( int paeckchenGewicht[] )
{
float Versandkosten[5]={0};
    for (int i=0;i<5;i++)
        {if (paeckchenGewicht[i]==0) Versandkosten[i]=0;
         else if (paeckchenGewicht[i]<=10)
             Versandkosten[i]=3;
        else Versandkosten[i]=3+((paeckchenGewicht[i]-10)*0.45);
}
for (int i=0;i<5;i++)
    if (paeckchenGewicht[i]==0) i++;
    else
        printf (""\nGewicht des %i. Paeckchens: %i Kilo\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",i+1,paeckchenGewicht[i],i+1,Versandkosten[i]);
double GesamtKosten;
    for (int i=0;i<5;i++)
        {GesamtKosten+=Versandkosten[i];}
return GesamtKosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{ if (*p_char>='A'&&*p_char<='Z')
        {*p_char=*p_char+shift;
            if (*p_char<'A'||*p_char>'Z')
                { if (shift<0) *p_char+=26;
                  else         *p_char-=26;}
        }
 else if (*p_char>='a'&&*p_char<='z')
        {*p_char=*p_char+shift;
            if (*p_char<'a'||*p_char>'z')
                { if (shift<0) *p_char+=26;
                  else         *p_char-=26;}

        }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
for (int i=0;i<maxlength;i++)
    {if ((str[i] >= 'A' && str[i] <= 'Z')||(str[i] >='a' && str[i] <= 'z'))
       {char* p_char=&str[i];
        shiftChar(p_char,shift);}}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_198,VName_198,"#include <stdio.h>
#include <stdlib.h>

int checkFirstEmptySlot (int paeckchenGewicht[]) {
    for (int i = 0; i <= 4; i++) {
        if (paeckchenGewicht[i] == 0) 
            return i;
    }
    return 4; 
}

int sumUp (int artikelGewicht[], int start, int end) {
    int sum = 0; 
    for (int i = start; i <= end; i++) {
        sum += artikelGewicht[i];
    }
    return sum;
}


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

    int i = 0; 
    while (1) {
        if (i == 0) {
            if (artikelGewicht[i] >= 10) {
                paeckchenGewicht[checkFirstEmptySlot(paeckchenGewicht)] = artikelGewicht[i];
                i++;
                continue;
            }
            else if (artikelGewicht[i] < 10) {
                if (artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2] + artikelGewicht[i+3]+ artikelGewicht[i+4] <= 10) {
                    paeckchenGewicht[checkFirstEmptySlot(paeckchenGewicht)] = artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2] + artikelGewicht[i+3]+ artikelGewicht[i+4];
                    break;
                }
                else if (artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2] + artikelGewicht[i+3] <= 10) {
                    paeckchenGewicht[checkFirstEmptySlot(paeckchenGewicht)] = artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2] + artikelGewicht[i+3];
                    i = 4; 
                    continue;
                }
                else if (artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2] <= 10) {
                    paeckchenGewicht[checkFirstEmptySlot(paeckchenGewicht)] = artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2];
                    i = 3; 
                    continue;
                }
                else if (artikelGewicht[i] + artikelGewicht[i+1] <= 10) {
                    paeckchenGewicht[checkFirstEmptySlot(paeckchenGewicht)] = artikelGewicht[i] + artikelGewicht[i+1]; 
                    i = 2; 
                    continue;
                }
                else {
                    paeckchenGewicht[checkFirstEmptySlot(paeckchenGewicht)] = artikelGewicht[i]; 
                    i++; 
                    continue;
                }
            }
        }

        if (i == 1) {
            if (artikelGewicht[i] >= 10) {
                paeckchenGewicht[checkFirstEmptySlot(paeckchenGewicht)] = artikelGewicht[i];
                i++;
                continue;
            }
            else if (artikelGewicht[i] < 10) {
                if (artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2] + artikelGewicht[i+3] <= 10) {
                    paeckchenGewicht[checkFirstEmptySlot(paeckchenGewicht)] = artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2] + artikelGewicht[i+3];
                    break;
                }
                else if (artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2] <= 10) {
                    paeckchenGewicht[checkFirstEmptySlot(paeckchenGewicht)] = artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2]; 
                    i = 4;
                    continue;
                }
                else if (artikelGewicht[i] + artikelGewicht[i+1] <= 10) {
                    paeckchenGewicht[checkFirstEmptySlot(paeckchenGewicht)] = artikelGewicht[i] + artikelGewicht[i+1]; 
                    i = 3; 
                    continue;
                }
                else {
                    paeckchenGewicht[checkFirstEmptySlot(paeckchenGewicht)] = artikelGewicht[i]; 
                    i++; 
                    continue;
                }

            }

        }


        if (i == 2) {
            if (artikelGewicht[i] >= 10) {
                paeckchenGewicht[checkFirstEmptySlot(paeckchenGewicht)] = artikelGewicht[i];
                i++;
                continue;
            }
            else if (artikelGewicht[i] < 10) {
                if (artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2] <= 10) {
                    paeckchenGewicht[checkFirstEmptySlot(paeckchenGewicht)] = artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2]; 
                    break;
                }
                else if (artikelGewicht[i] + artikelGewicht[i+1] <= 10) {
                    paeckchenGewicht[checkFirstEmptySlot(paeckchenGewicht)] = artikelGewicht[i] + artikelGewicht[i+1]; 
                    i = 4; 
                    continue;
                }
                else {
                    paeckchenGewicht[checkFirstEmptySlot(paeckchenGewicht)] = artikelGewicht[i]; 
                    i++; 
                    continue;
                }

            }
        }

        if (i == 3) {
            if (artikelGewicht[i] >= 10) {
                paeckchenGewicht[checkFirstEmptySlot(paeckchenGewicht)] = artikelGewicht[i];
                i++;
                continue;
            }

            else if (artikelGewicht[i] < 10) {
                if (artikelGewicht[i] + artikelGewicht[i+1] <= 10) {
                    paeckchenGewicht[checkFirstEmptySlot(paeckchenGewicht)] = artikelGewicht[i] + artikelGewicht[i+1]; 
                    break;
                }
                else {
                    paeckchenGewicht[checkFirstEmptySlot(paeckchenGewicht)] = artikelGewicht[i]; 
                    i++; 
                    continue;
                }
            }

        }

        if (i == 4) {
            paeckchenGewicht[checkFirstEmptySlot(paeckchenGewicht)] = artikelGewicht[i];
            break;
        }

    }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */
    double res = 0; 

    for (int i = 0; i <= 4; i++) {

        printf(""\nGewicht des %d. Paeckchens: %d Kilo\n"", i+1, paeckchenGewicht[i]);
        if (paeckchenGewicht[i] <= 10) {
            printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"",i+1, 3.00);
            res += 3.00;
        }

        else {
            int j = paeckchenGewicht[i]; 
            int diff = j - 10; 
            printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"",i+1, 3.00 + diff * 0.45);
            res += 3.00 + diff * 0.45;
        }

    }

    return res;

}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
char big[26] = {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'}; 
char small[26] = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'};
char bigN[26] = {'Z', 'Y', 'X', 'W', 'V', 'U', 'T', 'S', 'R', 'Q', 'P', 'O', 'N', 'M', 'L', 'K', 'J', 'I', 'H', 'G', 'F', 'E', 'D', 'C', 'B', 'A'}; 
char smallN[26] = {'z', 'y', 'x', 'w', 'v', 'u', 't', 's', 'r', 'q', 'p', 'o', 'n', 'm', 'l', 'k', 'j', 'i', 'h', 'g', 'f', 'e', 'd', 'c', 'b', 'a'};
void shiftChar(char* p_char, int shift)
{
    // ... hier Code einfuegen ...
    if (shift > 0) {
    for (int i = 0; i <= 25; i++) {
        if (*p_char == big[i]) {
            if (shift + i > 25) {
                int diff = shift + i - 25; 
                *p_char = big[diff-1];
                break;
            }
            else {
                *p_char = big[i + shift];
                break;
            }
        }

        if (*p_char == small[i]) {
            if (shift + i > 25) {
                int diff = shift + i - 25; 
                *p_char = small[diff-1];
                break;
            }
            else {
                *p_char = small[i + shift];
                break;
            }
        }

    }
}

    else {
        shift = -1*shift;
    for (int i = 0; i <= 25; i++) {
        if (*p_char == bigN[i]) {
            if (shift + i > 25) {
                int diff = shift + i - 25; 
                *p_char = bigN[diff-1];
                break;
            }
            else {
                *p_char = bigN[i + shift];
                break;
            }
        }

        if (*p_char == smallN[i]) {
            if (shift + i > 25) {
                int diff = shift + i - 25; 
                *p_char = smallN[diff-1];
                break;
            }
            else {
                *p_char = smallN[i + shift];
                break;
            }
        }


    }
    }




}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    // ... hier Code einfuegen ...
    for (int i = 0; i <= maxlength-1; i++) {
        shiftChar(&str[i], shift); 
    } 

    //size_t size = sizeof(str)/sizeof(str[0]);
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
    char str[50] = ""Froh zu sein bedarf es wenig"";  // Originaltext
    int shift = 5;
    printf(""Original: "");
    printf(""%s\n"", str);
    
    // Verschluesseln
    cipher(str, shift, 50);
    printf(""Verschluesselt: "");
    printf(""%s\n"", str);
    
    // Entschluesseln
    cipher(str, -shift, 50);
    printf(""Entschluesselt: "");
    printf(""%s\n"", str);
}"
Name_193,VName_193,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int z = 0;
    for (int i = 0; i <= 4; i++)
    {
        if (artikelGewicht[i] >= 10)
        {
            paeckchenGewicht[z] = artikelGewicht[i];
            float kosten = (3.00 + (paeckchenGewicht[z] - 10) * 0.45);
            z++;
        }
        else
        {
            int k = 0;
            paeckchenGewicht[z] = artikelGewicht[i];
            while (k == 0)
            {
                if (paeckchenGewicht[z] + artikelGewicht[i + 1] < 10)
                {
                    paeckchenGewicht[z] += artikelGewicht[i + 1];
                    i++;
                }
                else
                {
                    k++;
                    z++;
                }
            }
        }
    }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double endkosten = 0;
    for (int i = 0; i <= 4; i++)
    {
        if (paeckchenGewicht[i] != 0)
        {
            if (paeckchenGewicht[i] <= 10)
            {
                endkosten += 3.00;
                printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i + 1, paeckchenGewicht[i]);
                printf(""Die Versandkosten ihres %i. Paeckchens betragen: 3.00 Euro\n"", i + 1);
            }
            else
            {
                endkosten += (3.00 + (paeckchenGewicht[i] - 10) * 0.45);
                printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i + 1, paeckchenGewicht[i]);
                float kosten = (3.00 + (paeckchenGewicht[i] - 10) * 0.45);
                printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i + 1, kosten);
            }
        }
    }
    return endkosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    if ('a' <= *p_char && *p_char <= 'z')
    {
        int i = 0;
        if (shift > 0)
        {
            if (*p_char + shift <= 'z')
                *p_char += shift;
            else
            {

                while ((*p_char + 1) <= 'z')
                {
                    *p_char = *p_char + 1;
                    i++;
                }
                if (*p_char == 'z')
                {
                    *p_char = 'a';
                    i++;
                }
                while (i < shift)
                {
                    *p_char = *p_char + 1;
                    i++;
                }
            }
        }
        else
        {
            if (*p_char + shift >= 'a')
                *p_char += shift;
            else
            {
                while ((*p_char - 1) >= 'a')
                {
                    *p_char = *p_char - 1;
                    i--;
                }

                *p_char = 'z';
                i--;

                while (i > shift)
                {
                    *p_char = *p_char - 1;
                    i--;
                }
            }
        }
    }

    else
    {
        if ('A' <= *p_char && *p_char <= 'Z')
        {
            int i = 0;
            if (shift > 0)
            {
                if (*p_char + shift <= 'Z')
                    *p_char += shift;
                else
                {

                    while ((*p_char + 1) <= 'Z')
                    {
                        *p_char = *p_char + 1;
                        i++;
                    }
                    if (*p_char == 'Z')
                    {
                        *p_char = 'A';
                        i++;
                    }
                    while (i < shift)
                    {
                        *p_char = *p_char + 1;
                        i++;
                    }
                }
            }
            else
            {
                if (*p_char + shift >= 'A')
                    *p_char += shift;
                else
                {
                    while ((*p_char - 1) >= 'A')
                    {
                        *p_char = *p_char - 1;
                        i--;
                    }

                    *p_char = 'Z';
                    i--;

                    while (i > shift)
                    {
                        *p_char = *p_char - 1;
                        i--;
                    }
                }
            }
        }
    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for (int i = 0; i < maxlength; i++)
    {
        shiftChar(&str[i], shift);
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_194,VName_194,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
for (int i = 0; i <= 4; i++) {
    if (i == 0 ) {
        paeckchenGewicht[i] = artikelGewicht[i];
        
    } else if (paeckchenGewicht[i - 1] + artikelGewicht[i] <= 10) {
            paeckchenGewicht[i - 1] = artikelGewicht[i] + paeckchenGewicht[i - 1];
    }  else {
            paeckchenGewicht[i] = artikelGewicht[i];
        }
    }

}


double berechnePaketKosten( int paeckchenGewicht[] )
{
    double total_kosten = 0;
    for (int i = 0; i <= 4; i++) {
        double curr_kosten = 0;
        if (paeckchenGewicht[i] <= 10) {
            curr_kosten = 3;
        }  else {
            double zusatzkosten = 0.45 * (paeckchenGewicht[i] - 10);
            curr_kosten = 3 + zusatzkosten;
        }
        
        printf(""\nGewicht des %d. Paeckchens: %d Kilo\n"", i + 1, paeckchenGewicht[i]);
        printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"", i + 1, curr_kosten);
        
        total_kosten += curr_kosten;
    }
    return total_kosten;
}
   



int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char p_char, int shift)
{
	char abc[] = ""abcdefghijklmnopqrstuvwxyz"";
	char ABC[] = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ"";
	printf(""\n%d"", p_char);
	if ( isupper(p_char) ) {
	    //int index = strchr(ABC, *p_char);
        //if(index != NULL) {
        //    int index = pointer - ABC;
        //    printf(""\n%d"", index);
        //}
	} else {
	    
	}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	char encrypted[maxlength];
	for (int i = 0; i <= maxlength; i++) {
	    shiftChar(str[i], shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_204,VName_204,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
	int i = 0;
	for (int j = 0; i < 5; j++) {
		do
		{
			paeckchenGewicht[j] += artikelGewicht[i];
			i++;
		}
		while (paeckchenGewicht[j] + artikelGewicht[i] < 10); 
	}
}
double berechnePaketKosten( int paeckchenGewicht[] )
{
	double summe = 0.0;
	for (int i = 0; i < 5; i++) {
		printf(""Gewicht des %i. Paeckchens: %i Kilo\n"",i+1, paeckchenGewicht[i]);
		double preis = 0;
		if (paeckchenGewicht[i] > 10)
			preis = 3.00 + 0.45 * (paeckchenGewicht[i]-10);
		else if (paeckchenGewicht[i] <= 10)
			preis = 3.00;
		printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n\n"",i+1, preis);
		summe += preis;
	}
	return summe;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""Die Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	if ((*p_char >= 'a') && (*p_char <= 'z')) {
		*p_char += shift;
		if (*p_char > 'z' || *p_char < 'a') {
			if (shift > 0)
				*p_char -= 26;
			else if (shift < 0)
				*p_char += 26;
		}
	}
	else if ((*p_char >= 'A') && (*p_char <= 'Z')) {
		*p_char += shift;
		if (*p_char > 'Z' || *p_char < 'A') {
			if (shift > 0)
				*p_char -= 26;
			else if (shift < 0)
				*p_char += 26;
		}
	}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(int i = 0; i < maxlength; i++) {
		shiftChar(str + i,shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_208,VName_208,"#include <stdio.h>
#include <stdlib.h>



void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
for(int j=0;j<4; j++)
for (int i=0; i<4;i++){
	if (artikelGewicht[i]==0){
		artikelGewicht[i]=artikelGewicht[i+1];
	artikelGewicht[i+1]=0;}
	if(0<(artikelGewicht[i]+artikelGewicht[i+1])&&(artikelGewicht[i]+artikelGewicht[i+1])<=10){
	artikelGewicht[i]=(artikelGewicht[i]+artikelGewicht[i+1]);
	artikelGewicht[i+1]= 0;
	}}
			
	for(int i=0;i<5;i++){
paeckchenGewicht[i]=artikelGewicht[i];}
}


double berechnePaketKosten( int paeckchenGewicht[] )
{ double x[5];
	for (int i=0;i<5;i++)
	{
		if ((0<paeckchenGewicht[i])&&(paeckchenGewicht[i]<=10)) x[i]=x[i]+3;
		else if(0<paeckchenGewicht[i]){
			x[i]=x[i]+(3+((paeckchenGewicht[i]-10)*0.45));
		}
	printf(""\nGewicht des %i. Paeckchens: %i Kilo \n"",i+1,paeckchenGewicht[i]);
	printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",i+1,x[i]);
	}
	double y= (x[0]+x[1]+x[2]+x[3]+x[4]);
	return y;
}


int main () // nicht aendern!
{
	int artikelGewicht[5];
	artikelGewicht[0] = 60;
	artikelGewicht[1] = 57;
	artikelGewicht[2] = 6;
	artikelGewicht[3] = 9;
	artikelGewicht[4] = 4;
	printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"",
	artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
	artikelGewicht[3],artikelGewicht[4]);
	
	int paeckchenGewicht[5] = {0,0,0,0,0};
	packePakete( paeckchenGewicht, artikelGewicht );
	
	double endkosten = berechnePaketKosten( paeckchenGewicht );
	printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>


void shiftChar(char* p_char, int shift)
{
	

	*(p_char)= (*(p_char)+shift);


}


void cipher(char str[], int shift, int maxlength)
{	int x;
	char* p_char= &str[0];
	for(int i=0;i<maxlength;i++){
	if(('a'<=(*(p_char+i)))&&(*(p_char+i))<=('z'))  x=1;
	if((('A')<=(*(p_char+i))&&(*(p_char+i))<=('Z')))x=2;
	switch(x){
		case 1:
		if(((('a'-shift)<=(*(p_char+i)))&&((*(p_char+i))<=('z')-shift))) 
		shiftChar(p_char+i, shift);
		else if((0<shift)&&(((('z'-shift)<=(*(p_char+i)))&&*(p_char+i)<='z'))){
		*(p_char+i)=*(p_char+i)-('z'-'a')-1;
		shiftChar(p_char+i, shift);	}
		else if((0>shift)&&(('a'<=(*(p_char+i)))&&((*(p_char+i))<=('a'-shift)))){
		*(p_char+i)=*(p_char+i)+('z'-'a')+1;
		shiftChar(p_char+i, shift);	}
		break;
		case 2:
		if((('A'-shift)<=(*(p_char+i)))&&((*(p_char+i))<=('Z')-shift))
		shiftChar(p_char+i, shift);
		else if((0<shift)&&((('Z'-shift)<=(*(p_char+i)))&&((*(p_char+i))<='Z'))){
		*(p_char+i)=*(p_char+i)-('z'-'a')-1;
		shiftChar(p_char+i, shift);	}
		else if((0>shift)&&(('A'<=(*(p_char+i)))&&((*(p_char+i))<=('A'-shift)))){
		*(p_char+i)=*(p_char+i)+('z'-'a')+1;
		shiftChar(p_char+i, shift);	}
		break;
		
		
	}
	}
}

int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_213,VName_213,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int j = 0;
    for(int i = 0; i <5; i++){
        if(artikelGewicht[i] >= 10){
            paeckchenGewicht[j] = artikelGewicht[i];
            j++;
        }
        else if((artikelGewicht[i] + paeckchenGewicht[j]) < 10){
            paeckchenGewicht[j] += artikelGewicht[i];
        }
        else if((artikelGewicht[i] + paeckchenGewicht[j]) == 10){
            paeckchenGewicht[j] += artikelGewicht[i];
            j++;
        }
        else{
            j++;
            paeckchenGewicht[j] = artikelGewicht[i];
            j++;
        }
    }
}
    

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double endkosten = 0;
    float pktkosten[5] = {0, 0, 0, 0, 0};
    for(int i = 0; i < 5; i++){
        if(paeckchenGewicht[i] > 10){
            pktkosten[i] = (3.00 + (paeckchenGewicht[i] - 10) * 0.45);
        }
        else if( paeckchenGewicht[i] == 0) break;
        else{
            pktkosten[i] = 3.00;
        }
        endkosten += pktkosten[i];
        printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i+1, paeckchenGewicht[i]);
        printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, pktkosten[i]);
    }
    return endkosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"",
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift.
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    if(shift > 0){
        if('A' <= *p_char && *p_char < 'Z'){
            do{
                *p_char = *p_char + 1;
                shift--;
            }
            while(*p_char < 'Z' && shift != 0);
            if(shift != 0){
                *p_char = 'A' + shift - 1;
            }
        }
        else if(*p_char == 'Z') *p_char = 'A' + shift - 1;
        else if('a' <= *p_char && *p_char < 'z'){
            do{
                *p_char = *p_char + 1;
                shift--;
            }
            while(*p_char < 'z' && shift != 0);
            if(shift != 0){
                *p_char = 'a' + shift - 1;
            }
        }
        else if(*p_char == 'z') *p_char = 'a' + shift - 1;
    }
    else if(shift < 0){
        if('A' < *p_char && *p_char <= 'Z'){
            do{
                *p_char = *p_char - 1;
                shift++;
            }
            while(*p_char > 'A' && shift != 0);
            if(shift != 0){
                *p_char = 'Z' + shift + 1;
            }
        }
        else if(*p_char == 'A') *p_char = 'Z' + shift + 1;
        else if('a' < *p_char && *p_char <= 'z'){
            do{
                *p_char = *p_char - 1;
                shift++;
            }
            while(*p_char > 'a' && shift != 0);
            if(shift != 0){
                *p_char = 'z' + shift + 1;
            }
        }
        else if(*p_char == 'a') *p_char = 'z' + shift + 1;
    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben.
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    for(int i = 0; i < maxlength; i++){
        shiftChar(&str[i], shift);
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann.
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
    char str[50] = ""Froh zu sein bedarf es wenig"";     // Originaltext
    int shift = 5;
    printf(""Original: "");
    printf(""%s\n"", str);
    
    // Verschluesseln
    cipher(str, shift, 50);
    printf(""Verschluesselt: "");
    printf(""%s\n"", str);
    
    // Entschluesseln
    cipher(str, -shift, 50);
    printf(""Entschluesselt: "");
    printf(""%s\n"", str);
}"
Name_197,VName_197,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift.
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift){
  if('a' <= *p_char && *p_char >= 'z'){
*p_char=*p_char+shift;
if(*p_char){
  *p_char=*p_char- - 'z' + 'a' - 1;
}}
  if( 'A' <=  *p_char && *p_char >= 'Z'){
  *p_char=*p_char+shift;
  if(*p_char){
  *p_char=*p_char- - 'z' + 'a' - 1;
}}}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben.
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
  int i;
for ( i=0; str[i] <= maxlength; ++i ){
shiftChar (&str[i], shift);
}}


/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann.
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 3;
	printf(""Original: "");
	printf(""%s\n"", str);

	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);

	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_76,VName_76,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_192,VName_192,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_196,VName_196,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

void shiftChar(unsigned char* p_char, int shift)
{
  unsigned char lowercase = *p_char >= 'a' && *p_char <= 'z';
  unsigned char uppercase = *p_char >= 'A' && *p_char <= 'Z';
  unsigned char isletter = lowercase || uppercase;
  
  if (isletter) *p_char += shift;
  

  if (uppercase && *p_char > 90 && shift > 0) while (*p_char > 90) *p_char -= 26;
  if (lowercase && *p_char > 122 && shift > 0) while  (*p_char > 122) *p_char -= 26; 
  if (uppercase && *p_char < 65 && shift < 0) while (*p_char < 65) *p_char += 26;
  if (lowercase && *p_char < 97 && shift < 0) while (*p_char < 97) *p_char += 26;
}


void cipher(char str[], int shift, int maxlength)
{
  char letter;
  char *p_letter;
  int i;
  for (i = 0; i < maxlength; ++i)
  {
    letter=str[i];
    //printf(""%c"", letter);
    p_letter = &letter;
    shiftChar(p_letter, shift);
    //printf(""%c\n"", letter);
    str[i] = letter;
  }
  //printf(""%s\n"", str);

}


int main(void)
{
  char str[29] = ""Froh zu sein bedarf es wenig"";   // Originaltext
  int shift = 5;
  printf(""Original: "");
  printf(""%s\n"", str);
  
  // Verschluesseln
  cipher(str, shift, 29);
  printf(""Verschluesselt: "");
  printf(""%s\n"", str);
  
  // Entschluesseln
  cipher(str, -shift, 29);
  printf(""Entschluesselt: "");
  printf(""%s\n"", str);
  return 0;
}"
Name_212,VName_212,"#include <stdio.h>
#include <stdlib.h>



void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
for(int j=0;j<4; j++)
for (int i=0; i<4;i++){
	if (artikelGewicht[i]==0){
		artikelGewicht[i]=artikelGewicht[i+1];
	artikelGewicht[i+1]=0;}
	if(0<(artikelGewicht[i]+artikelGewicht[i+1])&&(artikelGewicht[i]+artikelGewicht[i+1])<=10){
	artikelGewicht[i]=(artikelGewicht[i]+artikelGewicht[i+1]);
	artikelGewicht[i+1]= 0;
	}}
			
	for(int i=0;i<5;i++){
paeckchenGewicht[i]=artikelGewicht[i];}
}


double berechnePaketKosten( int paeckchenGewicht[] )
{ double x[5];
	for (int i=0;i<5;i++)
	{
		if ((0<paeckchenGewicht[i])&&(paeckchenGewicht[i]<=10)) x[i]=x[i]+3;
		else if(0<paeckchenGewicht[i]){
			x[i]=x[i]+(3+((paeckchenGewicht[i]-10)*0.45));
		}
	printf(""\nGewicht des %i. Paeckchens: %i Kilo \n"",i+1,paeckchenGewicht[i]);
	printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",i+1,x[i]);
	}
	double y= (x[0]+x[1]+x[2]+x[3]+x[4]);
	return y;
}


int main () // nicht aendern!
{
	int artikelGewicht[5];
	artikelGewicht[0] = 60;
	artikelGewicht[1] = 57;
	artikelGewicht[2] = 6;
	artikelGewicht[3] = 9;
	artikelGewicht[4] = 4;
	printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"",
	artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
	artikelGewicht[3],artikelGewicht[4]);
	
	int paeckchenGewicht[5] = {0,0,0,0,0};
	packePakete( paeckchenGewicht, artikelGewicht );
	
	double endkosten = berechnePaketKosten( paeckchenGewicht );
	printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>


void shiftChar(char* p_char, int shift)
{
	

	*(p_char)= (*(p_char)+shift);


}


void cipher(char str[], int shift, int maxlength)
{	int x;
	char* p_char= &str[0];
	for(int i=0;i<maxlength;i++){
	if(('a'<=(*(p_char+i)))&&(*(p_char+i))<=('z'))  x=1;
	if((('A')<=(*(p_char+i))&&(*(p_char+i))<=('Z')))x=2;
	switch(x){
		case 1:
		if(((('a'-shift)<=(*(p_char+i)))&&((*(p_char+i))<=('z')-shift))) 
		shiftChar(p_char+i, shift);
		else if((0<shift)&&(((('z'-shift)<=(*(p_char+i)))&&*(p_char+i)<='z'))){
		*(p_char+i)=*(p_char+i)-('z'-'a')-1;
		shiftChar(p_char+i, shift);	}
		else if((0>shift)&&(('a'<=(*(p_char+i)))&&((*(p_char+i))<=('a'-shift)))){
		*(p_char+i)=*(p_char+i)+('z'-'a')+1;
		shiftChar(p_char+i, shift);	}
		break;
		case 2:
		if((('A'-shift)<=(*(p_char+i)))&&((*(p_char+i))<=('Z')-shift))
		shiftChar(p_char+i, shift);
		else if((0<shift)&&((('Z'-shift)<=(*(p_char+i)))&&((*(p_char+i))<='Z'))){
		*(p_char+i)=*(p_char+i)-('z'-'a')-1;
		shiftChar(p_char+i, shift);	}
		else if((0>shift)&&(('A'<=(*(p_char+i)))&&((*(p_char+i))<=('A'-shift)))){
		*(p_char+i)=*(p_char+i)+('z'-'a')+1;
		shiftChar(p_char+i, shift);	}
		break;
		
		
	}
	}
}

int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_201,VName_201,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
do {
if(artikelGewicht[0]>0 && artikelGewicht[0]+artikelGewicht[1]<=10){
artikelGewicht[0]=(artikelGewicht[0]+artikelGewicht[1]);
artikelGewicht[1]=artikelGewicht[2];
artikelGewicht[2]=artikelGewicht[3];
artikelGewicht[3]=artikelGewicht[4];
artikelGewicht[4]=0;
}

}
while((artikelGewicht[0]+artikelGewicht[1])<=10);


for (int i=0;i<5;i++){
if (artikelGewicht[i]>10){
paeckchenGewicht[i]=artikelGewicht[i];
continue;


}
if (artikelGewicht[i]>0 && artikelGewicht[i]<=10){
paeckchenGewicht[i]=artikelGewicht[i];
continue;
}
}

}

double berechnePaketKosten( int paeckchenGewicht[] )
{
double preiseinzeln;
double preisgesamt;
for (int i=0;i<5;i++){

if (paeckchenGewicht[i]>0 && paeckchenGewicht[i]<=10){
printf(""Gewicht des %i. Paeckchens: %i Kilo\n"", (i+1), paeckchenGewicht[i]);
preiseinzeln =3;  
printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",(i+1),preiseinzeln);
}
else if (paeckchenGewicht[i]>10){
printf(""Gewicht des %i. Paeckchens: %i Kilo\n"", (i+1), paeckchenGewicht[i]);
preiseinzeln=(3+((paeckchenGewicht[i]-10)*0.45));
printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",(i+1),preiseinzeln);
}
if (paeckchenGewicht[i]>0){
preisgesamt+=preiseinzeln;

}
}
return preisgesamt;
}






int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>


char c;
char* p_char = &c;
/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
int a;
int i=0;
if (shift > 0){a=1;}
else if (shift < 0){a=-1;}

switch (a){

case 1 :

if (*p_char>='A' && *p_char<='Z'){
i=*p_char;
i=i+shift;
int j = shift/26;
if (j==0){ j=1;}
if (i > 90){
int k = 26*j ;

*p_char=i-k;
}
else {*p_char=i;}// normal shiften

}
else if (*p_char>='a' && *p_char<='z'){
i=*p_char;//umwandlung pointer wert in integer 
i =i+shift;//geshifteter wert in integer 
int j = shift/26;//wie oft rum
if (j==0){ j=1;}
	if (i > 122)
	{
		int k = 26*j ;//wie oft st der ueberlauf
		
		*p_char=i-k;//shiften mit ueberlauf
	}
		
	else {*p_char=i;}//shiften im wertbereich kein ueberlauf
}


break;
//ende case 1

case -1 :

if (*p_char>='A' && *p_char<='Z'){
i=*p_char;
i=i+shift;
int j = shift/26;
if (j==0){ j=1;}
if (i < 65){
int k = 26*j ;

*p_char=i+k;
}
else {*p_char=i;}// normal shiften

}
else if (*p_char>='a' && *p_char<='z'){
i=*p_char;//umwandlung pointer wert in integer 
i =i+shift;//geshifteter wert in integer 
int j = shift/26;//wie oft rum
if (j==0){ j=1;}
	if (i < 97)
	{
		int k = 26*j ;//wie oft st der ueberlauf
		
		*p_char=i+k;//shiften mit ueberlauf
	}
		
	else {*p_char=i;}//shiften im wertbereich kein ueberlauf

break;
//ende case -1
default :

break;
}
}//ende switch
}
/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
for (int i=0;i<= maxlength;i++){
shiftChar(&str[i], shift);
}
}
/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_218,VName_218,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
	int b = 0;
	int c = 0;
	for(int i = 0; i < 5; i++){
		if(artikelGewicht[i] >= 10){ 
			paeckchenGewicht[c] = artikelGewicht[i];
			c++;
		}
		else{
			b += artikelGewicht[i];
			while(b + artikelGewicht[i+1] < 10){
				i++;
				b += artikelGewicht[i];
			}
			paeckchenGewicht[c] = b;
			c++;
			b = 0;
		}
	}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
	double a = 0;
	for(int i = 0; i < 5; i++){
		printf(""Gewicht des %i. Paeckchens: %i Kilo\n"", i + 1, paeckchenGewicht[i]);
		if(paeckchenGewicht[i] == 0){ 
			printf(""Die Versandkosten ihres %i. Paeckchens betragen: 0 Euro\n\n"", i + 1);
			break;
		}
		double b = 3;
		if(paeckchenGewicht[i] > 10){
			b += (paeckchenGewicht[i] - 10) * 0.45;
		}
		printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n\n"", i + 1, b);
		a += b;
	}
	return a;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""Die Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	int i = *p_char;
	if(i >= 'A' && i <= 'Z'){
		i += shift;
		if(i > 'Z') i = 'A' + (i - 'Z') - 1;
		if(i < 'A') i = 'Z' - ('A' - i) +1;
	}
	else{
		if(i >= 'a' && i <= 'z'){
		i += shift;
		if(i > 'z') i = 'a' + (i - 'z') - 1;
		if(i < 'a') i = 'z' - ('a' - i) +1;
		}
	}
	*p_char = i;
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(int i = 0; i < maxlength; i++){
		shiftChar( (str + i), shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_81,VName_81,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
int a = 0;
for(int i=0; (i<5 && a<5); i++){
    do{paeckchenGewicht[i] += artikelGewicht[a];
    a++;}
    while((paeckchenGewicht[i]+artikelGewicht[a]<10) && a<5);}
}

  



double berechnePaketKosten( int paeckchenGewicht[] )
{
double summe =0;
double preis;
for(int i=0; i<5; i++){
    if(paeckchenGewicht[i] > 10){
        preis = 3 + (paeckchenGewicht[i]-10)*0.45;}
        else{
            preis = 3;}
    printf(""Gewicht des %i. Paeckchens: %i Kilo\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",
    (i+1), paeckchenGewicht[i], (i+1), preis);
    summe += preis;}
return summe;}


   




int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{unsigned char gB = ('a' <= *p_char && *p_char <= 'z');
if(gB && (*p_char + shift) > 'z') {shift -= 26;
*p_char += shift;}
else if(gB && (*p_char +shift) < 'a') {shift +=26;
*p_char += shift;}
else if(gB)*p_char += shift;

unsigned char kB = ('A' <= *p_char && *p_char <= 'Z');
if(kB && (*p_char + shift) > 'Z') {shift -= 26;
*p_char += shift;}
else if(kB && (*p_char +shift) < 'A') {shift +=26;
*p_char += shift;}
else if(kB)*p_char += shift;
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{for(char* p_char = str; p_char < str + maxlength; p_char++){
    shiftChar(p_char,shift);
}
	
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_211,VName_211,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


  paeckchenGewicht[0] = artikelGewicht[0];
  int j = 0;

  for(int i=1; i<5;i++)
  {
    if(paeckchenGewicht[j]+artikelGewicht[i]<10)
      paeckchenGewicht[j]+=artikelGewicht[i];
    else
    {
      j++;
      paeckchenGewicht[j]+=artikelGewicht[i];
    }
  }

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


  double preis, summe;

  for(int i=0; i<5; i++)
  {
    printf(""Gewicht des %i. Paeckchens: %i Kilo\n"", i+1, paeckchenGewicht[i]);
    preis =3;
    if(paeckchenGewicht[i]>10)
      preis+=(paeckchenGewicht[i]-10)*0.45;
    summe += preis;
    printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n \n"", i+1, preis);
  }
  return summe;


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
  char temp;
  if(*p_char >= 65 && *p_char <=90)
  {
    temp = (*p_char-65) + shift;
    if(temp>=26)
      *p_char = 65 + (temp - 26);
    else if(temp<0)
      *p_char = 65 + (temp + 26);
    else if(0 <= temp && temp < 26)
      *p_char = 65+ temp;
  }
  else if(*p_char >= 97 && *p_char <=122)
    {
      temp = (*p_char-97) + shift;
      if(temp>=26)
        *p_char = 97 + (temp - 26);
      else if(temp<0)
        *p_char = 97 + (temp + 26);
      else if(0 <= temp && temp < 26)
        *p_char = 97 + temp;
    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
  for(int i=0; i<maxlength; i++)
  {
    shiftChar(str, shift);
    str++;
  }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_195,VName_195,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{

   int i = 0;
	int ii = 0;
		
	do {

		paeckchenGewicht[ii] = artikelGewicht[i++];
		if (i==5){break;}
		
		while ((paeckchenGewicht[ii] + artikelGewicht[i]) <= 10) {
			paeckchenGewicht[ii] += artikelGewicht[i++];
			if (i==5){break;}
			}
		
		ii++;
								
		} while (i!=5); 
	 

	for (ii=0; ii<5; ii++){
		}

}

double berechnePaketKosten( int paeckchenGewicht[] )
{

   double Versandkosten[5];
    double summe =0;
	int ii =0; 
	
	while (ii<5) {
		if (paeckchenGewicht[ii] != 0){
			printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", ii+1, paeckchenGewicht[ii]);
			
			if (paeckchenGewicht[ii] <=10){
				Versandkosten[ii] = 3.00;
				}
				else {
					Versandkosten[ii] = (3 + (paeckchenGewicht[ii] - 10)* 0.45);
				}
			
			printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", ii+1, Versandkosten[ii]);
			summe += Versandkosten[ii];
			}
		ii++;
		}	
	return summe;  

}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	int vorher = *p_char;
	
	if (vorher >= 65 && vorher <= 90){
		vorher += shift;
		if (vorher < 65){
			vorher += 26;
		}
		if (vorher > 90){
			vorher -= 26;
		}
		}
	if (vorher >= 97 && vorher <= 122){
		vorher += shift;
		if (vorher < 97){
		vorher += 26;
		}
		if (vorher > 122){
			vorher -= 26;
			}
		}

 *p_char = vorher;
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	int i = 0;
	for( i = 0; i < maxlength; i++){
		shiftChar(&str[i], shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_200,VName_200,"#include <stdio.h>
#include <stdlib.h>

// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
	do{
		if( artikelGewicht[0]>0 && (artikelGewicht[0]+artikelGewicht[1]) <= 10 ){
			artikelGewicht[0]=(artikelGewicht[0]+artikelGewicht[1]);
			artikelGewicht[1]=artikelGewicht[2];
			artikelGewicht[2]=artikelGewicht[3];
			artikelGewicht[3]=artikelGewicht[4];
			artikelGewicht[4]=0;
		}	
	}while ((artikelGewicht[0]+artikelGewicht[1])<=10);
	for ( int i=0; i<5; i++ ){
		int count= i;
		if (artikelGewicht[i]>10){
			paeckchenGewicht[i]=artikelGewicht[i];
			continue;
		}
		/*else if( artikelGewicht[i]>0 && (artikelGewicht[i]+artikelGewicht[i-1]) <= 10 ){
			artikelGewicht[i]=(artikelGewicht[i]+artikelGewicht[i-1]);
			artikelGewicht[i-1]=0;
			continue;
		}
		else if( artikelGewicht[i]>0 && (artikelGewicht[i]+artikelGewicht[i+1]) <= 10 ){
			paeckchenGewicht[i]=(artikelGewicht[i]+artikelGewicht[i+1]);
			paeckchenGewicht[i-1]=0;
			artikelGewicht[i+1]=(artikelGewicht[i]+artikelGewicht[i+1]);
			artikelGewicht[i]=0;
			continue;
		}*/
		else if (artikelGewicht[i]>0 && artikelGewicht[i]<=10){
			paeckchenGewicht[i]=artikelGewicht[i];
			continue;
		}
	}
}

double berechnePaketKosten( int paeckchenGewicht[])
{
	double einzelPreis;
	double gsmtPreis;
	for ( int i=0; i<5; i++ ){
		if( paeckchenGewicht[i]>0 && paeckchenGewicht[i]<=10 ){
			printf(""Gewicht des %i. Paeckchens: %i Kilo\n"", (i+1), paeckchenGewicht[i]);
			einzelPreis=3;
			printf(""\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", (i+1), einzelPreis);
		}else if(paeckchenGewicht[i]>0 && paeckchenGewicht[i]>10){
			printf(""Gewicht des %i. Paeckchens: %i Kilo\n"", (i+1), paeckchenGewicht[i]);
			einzelPreis=(3+((paeckchenGewicht[i]-10)*0.45));
			printf(""\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", (i+1), einzelPreis);
		}
		if (paeckchenGewicht[i]>0){
			gsmtPreis+=einzelPreis;
		}	
	}
	return gsmtPreis;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

char c;
char* p_char = &c;
/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
int a;
int i=0;
if (shift > 0){a=1;}
else if (shift < 0){a=-1;}
switch (a){
case 1 :
if (*p_char>='A' && *p_char<='Z'){
i=*p_char;
i=i+shift;

if (i > 90){

*p_char=i-26;
}
else {*p_char=i;}// normal shiften
}
else if (*p_char>='a' && *p_char<='z'){
i=*p_char;//umwandlung pointer wert in integer 
i =i+shift;//geshifteter wert in integer 
    if (i > 122)
    {
        *p_char=i-26;//shiften mit ueberlauf
    }
        
    else {*p_char=i;}//shiften im wertbereich kein ueberlauf
}
//printf(""%c"",*p_char);
break;
//ende case 1
case -1 :
if (*p_char>='A' && *p_char<='Z'){
i=*p_char;
i=i+shift;
if (i < 65){
*p_char=i+26;
}
else {*p_char=i;}// normal shiften
}
else if (*p_char>='a' && *p_char<='z'){
i=*p_char;//umwandlung pointer wert in integer 
i =i+shift;//geshifteter wert in integer 
    if (i < 97)
    {
        *p_char=i+26;//shiften mit ueberlauf
    }
        
    else {*p_char=i;}//shiften im wertbereich kein ueberlauf
break;
//ende case -1
default :
break;
}
}//ende switch
}
/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
for (int i=0;i<= maxlength;i++){
shiftChar(&str[i], shift);
}
}
/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
    char str[50] = ""Froh zu sein bedarf es wenig"";     // Originaltext
    int shift = 5;
    printf(""Original: "");
    printf(""%s\n"", str);
    
    // Verschluesseln
    cipher(str, shift, 50);
    printf(""Verschluesselt: "");
    printf(""%s\n"", str);
    
    // Entschluesseln
    cipher(str, -shift, 50);
    printf(""Entschluesselt: "");
    printf(""%s\n"", str);
}"
Name_210,VName_210,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
for (int i=0, s=0; i<5 && s>=0; i++, s++)
	{
		if (artikelGewicht[i] > 10)
		{
		paeckchenGewicht[s]=artikelGewicht[i];
		}
		if (artikelGewicht[i]<=10 && artikelGewicht[i]+artikelGewicht[i+1]<=10)
		{
		paeckchenGewicht[s]=artikelGewicht[i]+artikelGewicht[i+1];
		}
		if (artikelGewicht[i]<=10 && artikelGewicht[i]+artikelGewicht[i+1]>=10)
		{
		paeckchenGewicht[s]=artikelGewicht[i];
		}
	}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
double kosten=0;
double endkosten=0;
for (int i=0; i<5; i++)
{
if (paeckchenGewicht[i]<=10)
	{
	kosten=3;
	}
if (paeckchenGewicht[i]>10)
	{
	kosten=3+(0.45*(paeckchenGewicht[i]-10));
	}
printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i+1, paeckchenGewicht[i]);
printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, kosten);
endkosten+=kosten;
}

return endkosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	char v1 = ('A' <= *p_char && *p_char <= 'Z');
	char v2 = ('a' <= *p_char && *p_char <= 'z');
	
	if (v1) 
	{
	*p_char += shift;
	if (*p_char > 'Z') *p_char -= 26;
	if (*p_char < 'A') *p_char += 26;
	}
	else if (v2)
	{
	*p_char += shift;
	if (*p_char > 'z') *p_char -= 26;
	if (*p_char < 'a') *p_char += 26;
	}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for (int i=0; i<maxlength; i++)
	{
	shiftChar(&str[i], shift);
	} 
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_214,VName_214,"#include <stdio.h>
#include <stdlib.h>

double einzelPaketKosten(int einzelPaeckchenGewicht)
{
  double einzelKosten = 0;
  if(einzelPaeckchenGewicht <= 10)
  {
    einzelKosten += 3.0;
  }
  else if(einzelPaeckchenGewicht > 10)
  {
    einzelKosten = (einzelPaeckchenGewicht - 10) * 0.45 + 3;
  }
  return einzelKosten;
}

// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
  //paeckchenGewicht iterieren
  int shift = 0;
  // TODO array 6 sieht falsch aus!
  paeckchenGewicht[0] = artikelGewicht[0];

  for(int i=1; i < 5; i++)
  {
    // verhindert überlauf vom array
    // if (i == 0) {
    //   paeckchenGewicht[0] = artikelGewicht[0];
    // }
    // das vorherige paket mitbenutzen?
    if (paeckchenGewicht[shift] + artikelGewicht[i] < 10 ){
      paeckchenGewicht[shift] += artikelGewicht[i];
      //shift += 1;
    }
    // neues paket schnüren
    else {
      paeckchenGewicht[shift + 1] = artikelGewicht[i];
      shift += 1;
    }
  }
}


double berechnePaketKosten( int paeckchenGewicht[] )
{
  double einzelKosten;
  double endkosten = 0;
  for(int i = 0; i < 5; i++)
  {
    //einzelKosten = einzelPaketKosten(paeckchenGewicht[i]);

    if(paeckchenGewicht[i] != 0)
    {
      einzelKosten = einzelPaketKosten(paeckchenGewicht[i]);
      endkosten += einzelKosten;
    }

    printf(""Gewicht des %i. Paeckchens: %d Kilo\n"", i + 1, paeckchenGewicht[i]);
    printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i + 1, einzelKosten);
    //printArray(paeckchenGewicht);
  }
  return endkosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift.
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{

  if (*p_char >= 'a' && *p_char <= 'z') {
    *p_char = *p_char + shift;
    if (*p_char > 'z') {
      *p_char += 'a' - 'z' - 1;
    }
    if (*p_char < 'a') {
      *p_char -= 'a' - 'z' - 1;
    }
  }
  if (*p_char >= 'A' && *p_char <= 'Z') {
    *p_char = *p_char + shift;
    if (*p_char > 'Z') {
      *p_char += 'A' - 'Z' - 1;
    }
    if (*p_char < 'A') {
      *p_char -= 'A' - 'Z' - 1;
    }
  }

}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben.
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
  char *p_char;
  // char ziffernArray[maxlength];
	// ... hier Code einfuegen ...
  for(int i = 0; i < maxlength; i++)
  {
    p_char = &str[i];
    shiftChar(p_char, shift);
  }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann.
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);

	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);

	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_203,VName_203,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int t = 0;
    int i = 0;
    while(i < 5){
        *(paeckchenGewicht + t) = artikelGewicht[i];
        for(int k = i+1; k < 6; k++){
            if(paeckchenGewicht[t]+artikelGewicht[k] > 10){
                i = k;
                t++;
                break;
            }
            *(paeckchenGewicht + t) += artikelGewicht[k];
        }
    }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    
    double preis = 0;
    double endpreis = 0;
    for(int i = 0; i < 5; i++){
        if(i>0 && i<5)printf(""\n"");
        switch(paeckchenGewicht[i] > 10){
            case 0:
            if(paeckchenGewicht[i] == 0){
                break;
            }
            preis = 3;
            break;
            case 1:
            preis = (3 + (paeckchenGewicht[i] - 10)*0.45);
            break;
        }
        endpreis += preis;
        printf(""Gewicht des %d. Paeckchens: %d Kilo\n"", i+1, paeckchenGewicht[i]);
        printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2lf Euro\n"", i+1, preis);
    }
    return endpreis;

}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>


/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    shift = ((shift%26) + 26)%26;
	if( (65 <= (int)*p_char) && ((int)*p_char <= 90) ){
        if(*p_char + shift <= 90){
            *p_char = *p_char + shift;
        }
        else{     
            *p_char = 64 + (*p_char + shift)%90;
        }
    }
    else if ( (97 <= (int)*p_char) && ((int)*p_char <= 122) ){
        if(*p_char + shift <= 122){
            *p_char = *p_char + shift;
        }
        else{
            *p_char = 96 + (*p_char + shift)%122;
        }
    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    for(int i = 0; i < maxlength; i++){
        shiftChar( str+i, shift );
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_191,VName_191,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
for(int i=0;i<5;i++){
    int j=i;
if(artikelGewicht[i]==0){
    paeckchenGewicht[j-1];
    break;
}
else if(artikelGewicht[i]>=10){
    paeckchenGewicht[i]=artikelGewicht[i];
    break;
}
else if(artikelGewicht[i]<10 && artikelGewicht[i]+artikelGewicht[i+1]>10){
    paeckchenGewicht[i]=artikelGewicht[i];
    break;
}
else{
    paeckchenGewicht[i]=artikelGewicht[j];
    artikelGewicht[j]=0;
        while(artikelGewicht[j]<10 && paeckchenGewicht[i]+artikelGewicht[j+1]<=10){
        paeckchenGewicht[i]=+artikelGewicht[j+1];
        artikelGewicht[j+1]=0;
        j++;
}
}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
for(int i;i<5;i++){
float preis=0;
    if(paeckchenGewicht[i]<=10){
        preis=3;
    }
    else{
int j=11;
while(paeckchenGewicht[i]>0 && j<paeckchenGewicht[i]){
  preis+=0.45;
  j++;
}
}
printf(""Gewicht des %i. Paeckchens: %i Kilo \nDie Versandkosten ihres %i. Paeckchens betragen: %f Euro"", i, paeckchenGewicht[i], i, preis);
}
}

int main ();
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"",
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);

   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );

   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_206,VName_206,"#include <stdio.h>
#include <stdlib.h>

void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
	int j = - 1;
	for(int i = 0; i < 5; i++){
		do{
			j += 1;
			if(j != 5 && (paeckchenGewicht[i] + artikelGewicht[j]) <= 10) {	
				paeckchenGewicht[i] += artikelGewicht[j];
			}else if(j != 5 && artikelGewicht[j] > 10 && paeckchenGewicht[i] == 0 ){
				paeckchenGewicht[i] += artikelGewicht[j];
			}else{
				j -= 1; 
				break;
			}
		}while(paeckchenGewicht[i] < 10);
	}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
	double z = 0;
	double x = 0;
	int y = 0;
	for(int i = 0; i < 5; i++){
		z = 0;
		if(paeckchenGewicht[i] > 10){
			y = paeckchenGewicht[i] - 10;
			z = 3 + 0.45*y;
			x += 3 + 0.45*y;
		}else if(paeckchenGewicht[i] == 0){
			x += 0;
		}else{
			z = 3;
			x += 3;
		}
		printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i + 1 , paeckchenGewicht[i]);
		printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i + 1, z);
	}
	return x;
}

int main() // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete(paeckchenGewicht, artikelGewicht);
   
   double endkosten = berechnePaketKosten(paeckchenGewicht);
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_199,VName_199,"#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{   
    // Weight of our merged packages
    int CurrentPaeckchenGewicht = 0;
    
    // -1 here because increment by 1 when adding (so then starts at 0, first spot in array)
    int PaeckchenCount = -1;
    
    for(int i = 0; i < 5; i++){
        
       //printf(""Current Vale %d\n"",artikelGewicht[i]);
       //printf(""Current Vale 2 %d\n"",CurrentPaeckchenGewicht + CurrentPaeckchenGewicht);
        
        //we cant combine we are fat package
        if (artikelGewicht[i] >= 10){
            
            //we need to create 1 package before cannot combine
            if (CurrentPaeckchenGewicht != 0){
                
                PaeckchenCount++;
                int * gg = &paeckchenGewicht[PaeckchenCount];
                *gg = CurrentPaeckchenGewicht;
                CurrentPaeckchenGewicht = 0;
            }    
                

            CurrentPaeckchenGewicht = artikelGewicht[i]; 
            //printf(""Creating big package  %d\n"",CurrentPaeckchenGewicht);
            PaeckchenCount++;
            int * gg = &paeckchenGewicht[PaeckchenCount];
            *gg = CurrentPaeckchenGewicht;
            CurrentPaeckchenGewicht = 0;
                
        } else
        
        //we can combine the packages without going over 10 weight limit
        if (CurrentPaeckchenGewicht + artikelGewicht[i] <= 10){
            //printf(""adding before %d\n"",CurrentPaeckchenGewicht);
            CurrentPaeckchenGewicht = CurrentPaeckchenGewicht + artikelGewicht[i];
            //printf(""adding after %d\n"",CurrentPaeckchenGewicht);
            
            //last package, collect whats left and package it up
            if (i == 4){
              //  printf(""Creating package 1  %d\n"",CurrentPaeckchenGewicht);
                
                PaeckchenCount++;
                int * gg = &paeckchenGewicht[PaeckchenCount];
                *gg = CurrentPaeckchenGewicht;
                CurrentPaeckchenGewicht = 0;
            }
        } else {
            
            //if (CurrentPaeckchenGewicht =)
            //printf(""Creating package 2 %d\n"",CurrentPaeckchenGewicht);
            //we cannot combine packages, have to make a new on
            
            if (artikelGewicht[i] < 10){
                 i--;
            } else 
            {
                CurrentPaeckchenGewicht = artikelGewicht[i];
                //printf(""We have a big one %d"", artikelGewicht[i]);
            }
               
                
            PaeckchenCount++;
            int * gg = &paeckchenGewicht[PaeckchenCount];
            *gg = CurrentPaeckchenGewicht;
            CurrentPaeckchenGewicht = 0;
        }
    }


}

double berechnePaketKosten( int paeckchenGewicht[] )
{
   // Gewicht des 1. Paeckchens: 1 Kilo
//Die Versandkosten ihres 1. Paeckchens betragen: 3.00 Euro
    
    
    
 //if all packages are zergo then we have nothing to ship    
    bool FoundNonZeroPackage = false;
    double OutPaketKosten = 0;
    
    double TempPackgeWeight;
    
    for(int i = 0; i < 5; i++){
        
        //printf("" HERE %d \n"", paeckchenGewicht[i]);
        
        double IndividualCost = 0;
        
        if (paeckchenGewicht[i] == 0){
            continue;
        }
        
        
        TempPackgeWeight = paeckchenGewicht[i];
        
        if (paeckchenGewicht[i] >= 10){
            
            TempPackgeWeight -= 10;
  
            IndividualCost +=3;
            
            IndividualCost += TempPackgeWeight * 0.45;
            
        } else if (paeckchenGewicht[i] < 10){
            IndividualCost +=3;
        } 
        
        
        
    printf(""Gewicht des %d. Paeckchens: %d Kilo \n"",i + 1, paeckchenGewicht[i]);
    
    
    printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro \n"", i+ 1, IndividualCost);
     
     if (paeckchenGewicht[i] > 0){
        
         FoundNonZeroPackage = true;
         OutPaketKosten += IndividualCost;
        }
     
     
     
    }
    
    return OutPaketKosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>

void shiftChar (char * p_char, int shift){
    
    //shifted value
    // (int) *p_char converts char to ASCII integer value 
    int ShiftedASCIIValue = (int) *p_char + shift;
    
    //Uppercase A-Z //ASCII CODE 65-90 A-Z
    if ((int) *p_char >= 65 && (int) *p_char <= 90){
        
        if (ShiftedASCIIValue > 90) {
            
            //loop around to first if above z (122) ^^^^
            *p_char = 65 + ShiftedASCIIValue - 91;
            
        } else if (ShiftedASCIIValue < 65) {
        
            //loop around to last if below a (97) ^^^^
            *p_char = 91 - 65 + ((int) *p_char + shift);
        } else {
            
            //normal shift no annoying looping
            *p_char += shift;
        }
    }
    
    
    //Lowercase a-z //ASCII CODE 97-122 a-z
    if ((int) *p_char >= 97 && (int) *p_char <= 122) {
        
        if (ShiftedASCIIValue > 122) {
            
            //loop around to first if above z (122) ^^^^
            //note its 123 and not 122 here because a is value ""0"", so account for that by increasing by 1 here
            *p_char = 97 + ShiftedASCIIValue - 123;
        
        } else if (ShiftedASCIIValue < 97) {
        
            //loop around to last if below a (97) ^^^^
            *p_char = 123 - 97 + ((int) *p_char + shift);
        } else {
            
            //normal shift no annoying looping
            *p_char += shift;
        }
    }
}

void cipher (char str [], int shift, int maxlength){
    for (int i = 0; i < maxlength; i++){
        
        // here we do the pointer thing
        // we get a pointer to the character in the array, so we can modify it. 
        char * gg = &str[i];
        
        //run decripter thingy
        shiftChar(gg,shift);
    }
}

int main()
{   
    
    char str[50] = ""Froh zu sein bedarf es wenig"";     // Originaltext
    int shift = 5;
    printf(""Original: "");
    printf(""%s\n"", str);

    // Verschluesseln
    cipher(str, shift, 50);
    printf(""Verschluesselt: "");
    printf(""%s\n"", str);

    // Entschluesseln
    cipher(str, -shift, 50);
    printf(""Entschluesselt: "");
    printf(""%s\n"", str);

    return 0;
}"
Name_223,VName_223,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}",-
Name_216,VName_216,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_215,VName_215,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_219,VName_219,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
int packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{   
    for(int i = 0; i < 5; i++)
    {
        if(artikelGewicht[i] >= 10) paeckchenGewicht[i] = artikelGewicht[i];

        else if(artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2] + artikelGewicht[i+3] + artikelGewicht[i+4] <= 10)
        {
           paeckchenGewicht[i] = artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2] + artikelGewicht[i+3] + artikelGewicht[i+4];
           artikelGewicht[i+1] = 0;
           artikelGewicht[i+2] = 0;
           artikelGewicht[i+3] = 0;
           artikelGewicht[i+4] = 0;
        }
        else if(artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2] + artikelGewicht[i+3] <= 10)
        {
           paeckchenGewicht[i] = artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2] + artikelGewicht[i+3];
           artikelGewicht[i+1] = 0;
           artikelGewicht[i+2] = 0;
           artikelGewicht[i+3] = 0;
        }
        else if(artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2] <= 10)
        {
           paeckchenGewicht[i] = artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2];
           artikelGewicht[i+1] = 0;
           artikelGewicht[i+2] = 0;
        }
        else if(artikelGewicht[i] + artikelGewicht[i+1] <= 10)
        {
           paeckchenGewicht[i] = artikelGewicht[i] + artikelGewicht[i+1];
           artikelGewicht[i+1] = 0;
        }
        else paeckchenGewicht[i] = artikelGewicht[i];
    }
}



double berechnePaketKosten( int paeckchenGewicht[] )
{
    float endkosten = 0;

    for(int i = 0; i < 5; i++)
    {
        printf(""Gewicht des %i. Paeckchens: %i Kilo\n"", (i+1), paeckchenGewicht[i]);

        if(paeckchenGewicht[i] > 10)
        {
            float versandkosten = 3 + (paeckchenGewicht[i] - 10) * 0.45;
            printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n\n"", (i+1), versandkosten);
            endkosten += versandkosten;
        }
        else 
        {
            printf(""Die Versandkosten ihres %i. Paeckchens betragen: 3.00 Euro\n\n"", (i+1));
            endkosten += 3.00;
        }
    }
    return endkosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""Die Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

void shiftChar(char* p_char, int shift)
{

}

int cipher(char str[], int shift, int maxlength)
{
	for(int i = 0; str[i] != 0 ; i++)
    {
        if('A' >= str[i] <= 'U') str[i] += shift;
      
        else if('a' >= str[i] <= 'u' ) str[i] += shift;

        else if(str[i] = 'V') str[i] = 'A';
        else if(str[i] = 'W') str[i] = 'B';
        else if(str[i] = 'X') str[i] = 'C';
        else if(str[i] = 'Y') str[i] = 'D';
        else if(str[i] = 'Z') str[i] = 'E';

        else if(str[i] = 'v') str[i] = 'a';
        else if(str[i] = 'w') str[i] = 'b';
        else if(str[i] = 'x') str[i] = 'c';
        else if(str[i] = 'y') str[i] = 'd';
        else if(str[i] = 'z') str[i] = 'e';

        else; str[i] = str[i];
    }  
}

int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_207,VName_207,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for (int i=0; i < maxlength; i++)
	{
		if( 'A' <= str[i] && str[i] <= 'Z')
		{
			if( 'A' <= str[i] + shift && str[i] + shift <= 'Z')
			{
				str[i] += shift;
			}
			else if('A' > str[i] + shift)
			{
				str[i] += shift + 26;
			}
			else if('Z' < str[i] + shift)
			{
				str[i] += shift - 26;
			}
		}
		else if ('a' <= str[i] && str[i] <= 'z')
		{
			if( 'a' <= str[i] + shift && str[i] + shift <= 'z')
			{
				str[i] += shift;
			}
			else if('a' > str[i] + shift)
			{
				str[i] += shift + 26;
			}
			else if('z' < str[i] + shift)
			{
				str[i] += shift - 26;
			}
		}
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_226,VName_226,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{

    for(int i=0; i<5; i++)
    {
        float versandKosten = 0;
        if(artikelGewicht[i] <= 10)
        {
            paeckchenGewicht[i]+= artikelGewicht[i];
            versandKosten = 3;
            printf(""\nGewicht des %d. Paeckchens: %d Kilo\nDie Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"", i+1,artikelGewicht[i],i+1,versandKosten);
        }
        if(artikelGewicht[i] >=10)
        {
        versandKosten = 3 +((artikelGewicht[i]-10)*(.45f));
          paeckchenGewicht[i] = artikelGewicht[i];
          printf(""\nGewicht des %d. Paeckchens: %d Kilo\nDie Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"", i+1,artikelGewicht[i],i+1,versandKosten);
        }
    }

}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    float gesamtSumme =0;
    for(int i=0; i<5; i++)
    {
        if(paeckchenGewicht[i] <= 10)
        {
            gesamtSumme += 3;    
        }
        if(paeckchenGewicht[i] > 10)
        {
            gesamtSumme += 3 +((paeckchenGewicht[i]-10)*(.45f));
        }
    }
    return gesamtSumme;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

char alphabetSmall[27] = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','\0'};
char alphabetCaps[27] = {'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','\0'};

char shiftChar(char zeichen, int shift)
{
for (int i = 0; i < sizeof(alphabetSmall)-1; i++)
	{
		if (alphabetSmall[i] == zeichen)
		{
			int j;
			if (i + shift >= (sizeof(alphabetSmall)))
			{
				j = i;
				j = 0 + (shift -((sizeof(alphabetSmall)) - i));
				if (j < 0) 
				{
					j = sizeof(alphabetSmall) + ((sizeof(alphabetSmall)) + j);
				}
				

			}
			else if (i + shift < 0)
			{
				j = i;
				j = sizeof(alphabetSmall)-(shift -((sizeof(alphabetSmall)) - i));
				
			}
			else if(i + shift >= 0 && i + shift <= (sizeof(alphabetSmall)))
			{
				j = i + shift;
				
			}
			char newChar = alphabetSmall[j];
			return newChar;
		}
		if (alphabetCaps[i] == zeichen)
		{
			int j;
			if (i + shift >= (sizeof(alphabetCaps)))
			{
				j = i;
				j = 0 + (shift - ((sizeof(alphabetCaps)) - i));
				if (j < 0)
				{
					j = sizeof(alphabetCaps) + ((sizeof(alphabetCaps)) + j);
				}
			}
			else if (i + shift < 0)
			{
				j = i;
				j = sizeof(alphabetSmall) - (shift - ((sizeof(alphabetCaps)) - i));
			}
			else
			{
				j = i + shift;
			}
			char newChar = alphabetCaps[j];
			return newChar;
		}
		else if (zeichen == ' ')
		{
			char newChar = ' ';
			return newChar;
		}
}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    for (int i = 0; i <= maxlength; i++)
	{
		str[i] = shiftChar(str[i], shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_229,VName_229,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_217,VName_217,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
	*p_char+=shift;
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_88,VName_88,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_228,VName_228,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int paeckchennr = 0;    
for(int i = 0; i < 5; i++)  //kann maximal fünf mal durchlaufen, da es nur fünf artikel gibt
    {
        int* p_i = &i;       //hiermit kann bei der for funktion im else fall das i aktualisiert werden
        if(artikelGewicht[i] > 10) paeckchenGewicht[paeckchennr]=artikelGewicht[i];
        else
        if((artikelGewicht[i]+artikelGewicht[i+1]) > 10) paeckchenGewicht[paeckchennr]=artikelGewicht[i];
        else
        {
           for(int j = i; j < 4, (paeckchenGewicht[paeckchennr]+artikelGewicht[j])<=10; j++)
           {
               paeckchenGewicht[paeckchennr] += artikelGewicht[j];
               *p_i = j;
           }
        }
        paeckchennr++;
    }
}

double berechnePaketKosten( int paeckchenGewicht[] ) //wenn mehr als 10 kg dann for funktion bis gewicht unter 10, jede iteration + 45 cent
{
    double preis = 3.00;
    double* p_p = &preis;
    double gespreis = 0;
    for(int i = 0; i < 5; i++)
    {
        *p_p = 3;
        printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", (i+1), paeckchenGewicht[i]);
        if(paeckchenGewicht[i] > 10);
        {
            for(int tempgewicht = paeckchenGewicht[i]; tempgewicht > 10; tempgewicht--)
            {
                preis += 0.45;
            }
        }
        printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, preis);
        gespreis += preis;
    }
    return gespreis;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	if('a'<= *p_char && *p_char <= 'z')
   {
      if('a' <= (*p_char + shift) && (*p_char+shift)<= 'z') *p_char = *p_char + shift;
      else
      {
         if((*p_char + shift) > 'z') *p_char = *p_char + shift - 26;
         if((*p_char + shift) < 'a') *p_char = *p_char + shift + 26;
      }
      
   }
   if('A'<= *p_char && *p_char <= 'Z')
   {
      if('A' <= (*p_char + shift) && (*p_char+shift)<= 'Z') *p_char = *p_char + shift;
      else
      {
         if((*p_char + shift) > 'Z') *p_char = *p_char + shift - 26;
         if((*p_char + shift) < 'A') *p_char = *p_char + shift + 26;
      }
      
   }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(int i = 0; i < maxlength; i++)
    {
        char* p_char = &str[i];
        shiftChar(p_char, shift);
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_225,VName_225,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{

}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double kosten=0.00;
    	for (int i=0; i<5; i++){
	    	double kosten_1=0.00;
	    	if (paeckchenGewicht[i]<=10){kosten_1+=3.00;
	     	printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i+1, paeckchenGewicht[i]);
	         	printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, kosten_1);
    	    	kosten+=kosten_1;}
	    	else {kosten_1+=(3+0.45*(paeckchenGewicht[i]-10)); printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i+1, paeckchenGewicht[i]);
    	    	printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, kosten_1);
	        	kosten+=kosten_1;}
	}
	return kosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	if ('A'<=(*p_char) && (*p_char)<='Z'){
		if ((*p_char+shift)>'Z'){
			*p_char='A'+(shift-('Z'-*p_char+1));
			return;
		}
		if ((*p_char+shift)<'A'){
			*p_char='Z'+(shift+(*p_char-'A'+1));
		}
		else *p_char+=shift;
	}
	if('a'<=(*p_char) && (*p_char)<='z'){
		if ((*p_char+shift)>'z'){
			*p_char='a'+(shift-('z'-*p_char+1));
			return;
		}
		if ((*p_char+shift)<'a'){
			*p_char='z'+(shift+(*p_char-'a'+1));
		}
		else *p_char+=shift;
	}
	else *p_char+=0;
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    for (int i=0; i<=maxlength; i++){
		shiftChar(&str[i], shift);
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_224,VName_224,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_221,VName_221,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int paeckchen = 0;
    for(int artikel = 0; artikel < 5; artikel++)
    {
        if(artikelGewicht[artikel]>10 && paeckchenGewicht[paeckchen] == 0)
        {
            paeckchenGewicht[paeckchen] += artikelGewicht[artikel];
            paeckchen++;
        }       
        else if(paeckchenGewicht[paeckchen]+artikelGewicht[artikel] <= 10)
        {
            paeckchenGewicht[paeckchen] += artikelGewicht[artikel];
        }
        else 
        {
            paeckchen++;
            artikel--;
        }
    }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double summe = 0;
    double Preise[5];
    for(int i = 0; i < 5; i++)
    {
        if(paeckchenGewicht[i] <= 10) 
        {
            Preise[i] = 3;
            summe += 3;
        }
        else 
        {
            Preise[i] = 0.45* (paeckchenGewicht[i] - 10) + 3;
            summe += 0.45* (paeckchenGewicht[i] - 10) + 3;
        }
        printf(""Gewicht des %i. Paeckchens: %i Kilo\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n\n"",i+1,paeckchenGewicht[i],i+1,Preise[i]);
    }
    return summe;
}


int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_222,VName_222,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] ){
	
	int j = 0;

	for(int i = 0; i < 5; i++){
		if(artikelGewicht[i] > 10){
			paeckchenGewicht[j] = artikelGewicht[i];
			j++;
		}else{
			while(paeckchenGewicht[j] <= 10){
				paeckchenGewicht[j] += artikelGewicht[i];
			}
			j++;
		}

	}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
	double summe = 0;

	for(int i = 0; i < 5; i++){
		if(paeckchenGewicht[i] == 0){
			summe += 0;
		}else if(paeckchenGewicht[i] <= 10){
			summe += 3.0;
		}
		else{
			summe += 3 + ((paeckchenGewicht[i] - 10) * 0.45);
		}
	}


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	
    
	    p_char += shift;
	
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(int i = 0; i < maxlength; i++){
	   if(str[i] == '\0'){
	       break;
	   }else{
	       str[i] = shiftChar(str[i], shift);
	   }
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_202,VName_202,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
