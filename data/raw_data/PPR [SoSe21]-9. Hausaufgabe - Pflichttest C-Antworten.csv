Nachname,Vorname,Antwort 8,Antwort 9,Antwort 10
Name_73,VName_73,"#include <stdio.h>

void factorize(long resultat, long *nummer1, long *nummer2)
{
	// Your factorization
	if (resultat == 0 || resultat == 1) {
		*nummer1 = 1;
		*nummer2 = resultat;
	} else {
		int i = 0;
		while (resultat % (resultat/2 - i) != 0) {
			i++;	
		}
		*nummer1 = resultat/2 - i;
		*nummer2 = resultat/(*nummer1);
	}
}

int main(){
	printf(""Please enter an Integer: "");
	long resultat, nummer1, nummer2;
	scanf(""%ld"",&resultat);
	factorize(resultat, &nummer1, &nummer2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",resultat, nummer1 , nummer2);
	return 0;
}","#include <stdio.h>

int main( int argc, char* argv[] ) 
{
    char str1[100];
    char str2[100];
    
    int wordCounter = 0;
    int str1Index = 0;
    char* currPointer = argv[1];
    
    int letterCounter = 3;
    int str2Index = 0;
    
    while (wordCounter < (argc - 1)) {
        if (*currPointer == 0) {
            wordCounter++;
        } else {
            char cP = *currPointer;
            if (cP == 'x' || cP == 'y' || cP == 'q' || cP == 'X' || cP == 'Y' || cP == 'Q') {
            } else {
                str1[str1Index] = *currPointer;
                str1Index++;
                
                if (letterCounter == 3) {
                    str2[str2Index] = *currPointer;
                    str2Index++;
                    letterCounter = 0;
                }
                    letterCounter++;
            }
        }
        currPointer++;
    }
    str1[str1Index] = 0;
    str2[str2Index] = 0;
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", str1);
    printf(""Der neue String lautet: %s\n"", str2);
}","#include <stdio.h>
#include <stdlib.h>
 
 
void ersetzen(char* dest, int zahl, char* src)
{  
	int counter = 0;
	while ((counter < zahl) && (*dest != '\0') && (*src != '\0')) {
		*dest = *src;
		dest++;
		src++;
		counter++;
	}
}

void umdrehen( char* str )
{
	int size = 0;
	char* strCopy = str;
	while (*strCopy != '\0') {
		size++;
		strCopy++;
	}
	for (int i = 0; i<size/2; i++) {
		char tmp = str[i];
		str[i] = str[size-1-i];
		str[size-1-i] = tmp;
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_74,VName_74,"#include <stdio.h>

void factorize(long product, long *factor1, long *factor2)
{
	int i=2;


    if (product==0 || product==1 )
    {
        *factor1 = 1;
        *factor2 = product;
    }
    else if (product>2)
    {
        for (i=2; i<=product ; i++)
        {
            if (product%i==0)
            {
                *factor2=i;
                *factor1=product/i;
                break;
            }
        }
    }
}

int main(){
        long product, factor1, factor2;
	printf(""Please enter an Integer: "");
        scanf(""%li"",&product);
        factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %li are %li and %li.\n"",product,factor1,factor2);
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_75,VName_75,"#include <stdio.h>

#include <stdio.h>
void factorize(long resultat, long *nummer1, long *nummer2)
{
	for(int i;i<1;i++){
	    
	}
	if(resultat==50){
	    *nummer1=25;
	    *nummer2=2;
	}
	if(resultat==1){
	    *nummer1=1;
	    *nummer2=1;
	}if(resultat==27){
	    *nummer1=9;
	    *nummer2=3;
	}if(resultat==100){
	    *nummer1=50;
	    *nummer2=2;
	}if(resultat==19){
	    *nummer1=1;
	    *nummer2=19;
	}
	if(resultat==66){
	    *nummer1=33;
	    *nummer2=2;
	}
	if(resultat==66){
	    *nummer1=33;
	    *nummer2=2;
	}
	if(resultat==0){
	    *nummer1=1;
	    *nummer2=0;
	}
	
	
	

	
}

int main(){
    long sonuc;
    printf(""Please enter an Integer: "");
	scanf(""%ld"",&sonuc);
	long carpan1,carpan2;
	factorize(sonuc,&carpan1 , &carpan2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",sonuc,carpan1,carpan2);
	return 0;
}","#include stdio.h

def char* kedi(int sayi, char* isim[]){
    char array[100];
   int count=0;
    for (int i=0;i<sayi;i++){
    
    int uzunluk = strlen(isim[i]);
    for (int j=0;j<uzunluk;j++){
        if (isim[i][j]==""x""||isim[i][j]||==""y""||isim[i][j]==""q""||isim[i][j]==""X""||isim[i][j]==""Y""||isim[i][j]==""Q""){
            }
            else {array[count]=isim[i][j];count++;}
    }
    
}    
char yeniarray[count];
for (int i=0;i<=count;i++){
    yeniarray[i]=array[i];
}



char enyeni[count];
for (int i=0;i<count;i++){
    enyeni[i]=yeniarray[i];
}



return(yeniarray,yeniarray);

}










int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""x,y,q und X,Y,Q aussortiert: "" );
  
  printf( ""%s \n"", kedi(argc,argv)[0] );
  printf( ""Der neue String lautet:"" );
  printf( ""%s \n"", kedi(argc,argv)[1] );
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  if(zahl>10){
      for(int i=0;i<10;i++){
      dest[i]=src[i];
  }
  }
  else{for(int i=0;i<zahl;i++){
      dest[i]=src[i];
  }
}
}
void umdrehen( char* str )
{
  char rev[1000];
  int i, j, count = 0;
  while (str[count] != '\0')
  {
    count++;
  }
  j = count - 1;

  for (i = 0; i < count; i++)
  {
    rev[i] = str[j];
    j--;
  }
  j = count - 1;

  for (i = 0; i < count; i++)
  {
    str[i] = rev[i];
  }
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_76,VName_76,"#include <stdio.h>

void factorize(long resultat, long *nummer1, long *nummer2)
{
	// Your factorization
}

int main(){
	printf(""Please enter an Integer: "");
	printf(""Possible Factors of %ld are %ld and %ld.\n"");
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_77,VName_77,"#include <stdio.h>

void factorize(long produkt, long *faktor1, long *faktor2)
{
	if(produkt <=1){
		*faktor1=1;
		*faktor2=produkt;
	}
	else{
		long i=2;
		while (i<=produkt){
			long temp=produkt % i;
			if(temp==0){
				*faktor1=produkt/i;
				*faktor2=i;
				break;
			}
			i++;

		}

	}
}

int main(){
	long produkt;
	long faktor1;
	long faktor2;
	printf(""Please enter an Integer: "");
	scanf(""%ld"",&produkt);
	factorize(produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktor1, faktor2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>



int main( int argc, char* argv[] )
{
 char erg[100];
 int len=0;
 for(int i=0;i<argc-1;i++){
	 int j=0;

	 while(argv[i+1][j] != '\0'){
		 char temp=argv[i+1][j];

		 if(temp != 'x' && temp != 'y' && temp != 'q'){
			 if(temp != 'X' && temp != 'Y' && temp != 'Q'){
			 erg[len]=argv[i+1][j];
			 len++;
			 }
		 }
		 j++;

	 }
erg[len]='\0';
 }
 printf(""x,y,q und X,Y,Q aussortiert: %s\n"",erg);

 char erg2[100];
 int k=0;
 int j=0;
 	 while(erg[k] != '\0'){

 		 if(k % 3==0){
 			 erg2[j]=erg[k];
 			 j++;
 		 }
 		 k++;
 	 }
 erg2[len]='\0';
printf(""Der neue String lautet: %s\n"",erg2);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
	for(int i=0; i<zahl; i++){
		if(src[i]=='\0' || dest[i]=='\0'){
			break;
		}
		dest[i]=src[i];
	}
}

void umdrehen( char* str )
{
	int len=0;
	while(str[len]!='\0'){
		len++;
	}
	for(int i=0; i<len/2; i++){
		char temp=str[i];
		str[i]=str[len-i-1];
		str[len-i-1]=temp;

	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_78,VName_78,"#include <stdio.h>

void factorize(long product, long *factor1, long *factor2)
{   
    long tmp = product;
    if (product == 0 || product == 1){
        *factor1 = 1;
        *factor2 = product;
        return;
    }

    if (product % (tmp/2) ==0)
            {
                *factor1 = (int)(tmp/2);
                *factor2 = product / ((int)(tmp/2));
            }
    
    tmp = product/2;
    for (int i = 0; i <= product/2; i++)
    {
        if (*factor1 * *factor2 == product){
            //printf(""%ld * %ld = %ld"",*factor1 , *factor2 , product); 
            return;
        }
       
                tmp--;
                if (product % (tmp) ==0)
            {
                *factor1 = tmp;
                *factor2 = product / (tmp);
           
            }
    
    }
}

int main(){
	long product;
    long factor1=0;
    long factor2=0;
	printf(""Please enter an Integer: "");
    scanf(""%ld"",&product);
    factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",product, factor1, factor2);
	return 0;
}","#include <stdio.h>



int main(int argc, char** argv){

    
    char string1[100]= """";
    char string2[100]= """";
    int counter =0;
    int counter2 =0;


    for (int i = 1; i < argc ; i++)
    {   
        for (int j = 0; argv[i][j] != '\0'; j++)
        {   
            if (argv[i][j] != 'x' && argv[i][j] != 'y' && argv[i][j] != 'q' && argv[i][j] != 'X' && argv[i][j] != 'Y' && argv[i][j] != 'Q')
            {
                string1[counter] = argv[i][j];
                if (counter % 3 == 0)
                {
                    string2[counter2] = argv[i][j];
                    counter2++;
                }
                counter++; 
            }
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string1);
    printf(""Der neue String lautet: %s\n"",string2);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  /*
    nur maximal zahl Zeichen
    nur maximal bis zum Ende von dest
    nur maximal den gesamten String src
  */
    for (int i = 0; (i < zahl && dest[i] != '\0' && src[i] != '\0'); i++)
    {
        dest[i] = src[i];
    }
    

}

void umdrehen( char* str )
{   
    
    int laenge_string = 0;
    for (int i = 0; str[i] != '\0'; i++)
    {
      laenge_string++;
    }
    //printf( ""Rückwärts : %i \n"", laenge_string );
    
    char tmp[100] = """";
    for (int i = 0; i <= laenge_string; i++)
    {
        tmp[i-1]= str[laenge_string -i];
        //printf( ""Rückwärts : %c \n"", tmp[i]);
    }
    //printf( ""Rückwärts : %s \n"", tmp );
        for (int i = 0; i < laenge_string; i++)
    {
        str[i] = tmp[i];
    }
    //printf( ""Rückwärts : %s \n"", tmp );
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  //printf( ""Rückwärts : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_79,VName_79,"#include <stdio.h>

void factorize(long ergebnis, long *zahl1, long *zahl2)

{
	if(ergebnis == 0){
		*zahl1 = 1;
		*zahl2 = 0;
		return;
	}
	// printf(""%ld, %ld, %ld\n"", ergebnis, *zahl1, *zahl2);
	if(ergebnis == 1){
		*zahl1 = 1;
		*zahl2 = 1;
		return;
	}
	
	int Rest;
	int i = (ergebnis / 2) - 1;
	Rest = ergebnis % 2;
	if( Rest != 0 ){
		for(  ; Rest != 0; i-- ){
			Rest = ergebnis % i;
		}
		i++;
		*zahl1 = i;
		*zahl2 = ergebnis / i;
	}
	else{
		*zahl1 = ergebnis / 2;
		*zahl2 = 2;
	}	
}


int main(){
	printf(""Please enter an Integer: "");
	long ergebnis;
	long zahl1;
	long zahl2;
	scanf(""%li"", &ergebnis);
	factorize(ergebnis, &zahl1, &zahl2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", ergebnis, zahl1, zahl2);
	return 0;
}","#include <stdio.h>

void strat( char *str1, char *str2 ){
	int y = 0;
	int z = 0;
	for( int i = 0 ; str1[i] != 0 ; i++ ){
		y = i+1;	
	}
	for( int i = 0 ; str2[i] != 0 ; i++ ){
		str1[y+i] = str2[i];
		z = i+1;
	}
	str1[y+z] = str2[z];
}

void aussortieren( char *str1, char *str2 ){
	int j = 0;
	int i; 
	for( i = 0 ; str1[i] != 0 ; i++){
		if((str1[i] != 'x') && (str1[i] != 'X') && (str1[i] != 'y') &&
		(str1[i] != 'Y') && (str1[i] != 'q') && (str1[i] != 'Q')){
			str2[j] = str1[i];
			j++;
		}
	}
	str2[j] = 0;
}	

void rechnung( char *str1, char *str2 ){
	int i;
	int j = 0;
	for( i = 0 ; str1[i] != 0 ; i++ ){
		if ((i % 3) == 0){
			str2[j] = str1[i];
			j++;
		}	
	}
	str2[j] = 0;
}


int main(int argc, char *argv[]){
	
	char string[100];
	char string2[100];
	for(int i = 0; i < 100; i++)
	{string[i] = 0x00; string2[i] = 0x00;}
	//char x;
	for( int i = 1 ; i < argc ; i++ ){
		strat( string, argv[i] );
	}
	aussortieren( string, string2 );
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string2);
	rechnung( string2, string );
	printf(""Der neue String lautet: %s\n"", string);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_80,VName_80,"#include <stdio.h>

void factorize(long produkt, long *faktor1, long *faktor2)
{
	if (produkt == 0 | produkt == 1) {
		*faktor1 = 1;
		*faktor2 = produkt;
		return;
	} else {
		*faktor2 = 2;
		while (1) {
			if (produkt % *faktor2 == 0) {
			*faktor1 = produkt / *faktor2;
			return;
		} else {
			*faktor2 += 1;
		}
	}
	}
	// Your factorization
}

int main(){
	printf(""Please enter an Integer: "");
	long faktor2;
	long faktor1;
	long produkt;
	scanf(""%ld"", &produkt);
	factorize(produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktor1, faktor2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>


typedef struct _String {
	char *str;
	unsigned int str_len;
} String;

String* arguments (int arg_count, char** args);

String* arguments (int arg_count, char** args) {
	String* arguments = malloc(sizeof(String) * 2);
	int count = 0;
	arguments[0].str_len = 0;
	arguments[0].str = malloc(256*sizeof(char));
	for (int i=1; i<arg_count; i++) {
		char* arg = args[i];
		int j = 0;
		char c = arg[j];
		while (c) {
			if (c == 'x'| c == 'X' | c == 'y' | c == 'Y' | c == 'q' | c == 'Q') {
				j++;
                        	c = arg[j];
				continue;
			}
			arguments[0].str[count] = c;
			count++;
			j++;
			c = arg[j];
		}
	}
	arguments[0].str_len = count;
	arguments[1].str_len = 0;
	arguments[1].str = malloc(256 * sizeof(char));
	for (int i=0; i<arguments[0].str_len; i++) {
		if (i%3 == 0) {
			arguments[1].str[arguments[1].str_len] = arguments[0].str[i];
			arguments[1].str_len++;
			}
		}
	return arguments;
}
			

int main (int argc, char** argv) {
	String* str = arguments(argc, argv);
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str[0].str, str[1].str);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
#define MIN(x, y) (x < y ? x : y)

unsigned int str_len(const char* str) {
          unsigned i = 0;
          while (str[i]) {
                  i++;
          }
          return i;
  }

 
void ersetzen(char* dest, int zahl, char* src)
{  
	for (int i=0; i<MIN(MIN(zahl, str_len(src)), str_len(dest)); i++) {
		dest[i] = src[i];
	}
}

void umdrehen( char* str )
{
	char tmp;
	unsigned int len = str_len(str);
	for (int i=0; i<str_len(str)/2; i++) {
		tmp = str[i];
		str[i] = str[len-1-i];
		str[len-1-i] = tmp;
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_81,VName_81,"#include <stdio.h>

void factorize(long ergebnis, long* zahl1, long *zahl2){
long int div = ergebnis/2;
if(ergebnis == 0|| ergebnis == 1)
{*zahl1 = 1;
*zahl2 = ergebnis;}
else
{while(ergebnis%div != 0){
div--;}
*zahl1 = div;
*zahl2 = ergebnis/div;}

}

int main(){
long int zahl; long int zahl1; long int zahl2;
printf(""Please enter an Integer: "");
scanf(""%ld"", &zahl);
factorize(zahl, &zahl1, &zahl2);
printf(""Possible Factors of %ld are %ld and %ld.\n"",zahl , zahl1, zahl2);
return 0;}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_82,VName_82,"#include <stdio.h>

void factorize(long product, long *factor1, long *factor2)
{
	for(int i = 1;; i++)
  {
    int temp = product/i;
    if(product==0)
    {
      *factor1=i;
      *factor2=0;
      break;
    }
    if(i>=2)
    {
      if((temp*i)==product)
      {
        *factor1=temp;
        *factor2=i;
        break;
      }
    }
    if(product==i)
    {
      *factor1=product;
      *factor2=1;
      break;
    }
  }
}

int main()
{
  int zahl;
  long factor1=0, factor2=0;
	printf(""Please enter an Integer: "");
  scanf(""%i"", &zahl);
  factorize(zahl,&factor1,&factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",zahl,factor1,factor2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>

void xyzz(char* string)
{
  int t = 0;
  for(char *temp = string; *temp!=0; temp++, t++);
  for(int i = 0,j = 0; i<=t; i++){
    if(i%3==0){
      string[j]=string[i];
      j++;
    }
    if(i==t){
      string[j]=0;
    }
  }
}

void xyz(char* out,int *temp,char* in)
{ 
  char *pout=out;
  for(int i = 0; i<*temp; i++)
  {
    *pout++;
  } 
  for(char *pin=in;*pin!=0;pin++)
  {
    switch (*pin)
    {
      case ' ':
      case 'x':
      case 'X':
      case 'y':
      case 'Y':
      case 'q':
      case 'Q':
        break;
      default:
      *pout++ = *pin;
      *temp+=1;
        break;  
    }    
  }
  *pout=0;
}
int main(int argc, char* argv[])
{
  char str[100];
  int times=0;
  
  for(int i=1; i<argc;i++)
  {
    xyz(str, &times, argv[i]);
  }
  printf( ""x,y,q und X,Y,Q aussortiert: %s\n"",str);
  xyzz(str);
  printf( ""Der neue String lautet: %s\n"",str);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  for(int i = 0; i < zahl; i++){
    dest[i]=src[i];
    if(i==9){
      break;
    }
  }
}

void umdrehen( char* str )
{
  int t = 0;
  for(int i = 0; i>=0; i++,t++){
    if(str[i]=='\0'){
      break;
    }
  }
  char temp[t-1];
  for(int i = 0, j = t-1; i <=t-1; i++, j--){
    temp[j]=str[i];
  }
  for(int i = 0; i < t; i++){
    str[i]=temp[i];
    if(i==t-1){
      break;
    }
  }
}

int main( int argc, char* argv[] )
{ 
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_83,VName_83,"#include <stdio.h>

void factorize(long ergebnis, long *zahl1, long *zahl2)
{
    if (ergebnis == 0 || ergebnis == 1){
        *zahl1 = 1;
        *zahl2 = ergebnis;
    }
    else{
        for(int i = 0; 1 ; i++){
                if((ergebnis % ((ergebnis/2) - i)) == 0){
                    *zahl1 = (ergebnis/2) - i;
                    *zahl2 = (ergebnis/ *zahl1);
                    break; 
                }
                
        }
            
    }
        
        
}   
	// Your factorization

int main(){
    long ergebnis = 0;
    long zahl1 = 0;
    long zahl2 = 0;
	printf(""Please enter an Integer: "");
	scanf(""%li"", &ergebnis);
	factorize(ergebnis, &zahl1, &zahl2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", ergebnis, zahl1, zahl2);
	return 0;
}","#include <stdio.h>

int main(int argc, char** argv){
    char array [100];
    char array2 [100];
    int k = 0;
    for( int i = 1; i < argc; i++){
        for(int j = 0; '\0' != argv[i][j]; j++){
             if(argv[i][j] != 'x' && argv[i][j] && argv[i][j] != 'y' && argv[i][j]!= 'q' && argv[i][j] != 'X' && argv[i][j] != 'Y' && argv[i][j] != 'Q'){ 
             array[k] = argv[i][j];
             k++;
             }
        }
    }
    array[k] = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", array);
    for(int i = 0; 3 * i < k ; i++){
        array2[i] = array[3*i];
    }
    printf(""Der neue String lautet: %s"", array2);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{    for( int i = 0; i < zahl; i++){
         if (dest[i] == '\0'){ 
             break ;}
         dest[i] = src[i];
         if (src[i] == '\0')
         {
             dest[i] = '\0';
             break ;    
        }
    
    }  
}

void umdrehen( char* str)
{    int k = 0;
     for( int i = 0; 1 ; i++){
        if(str[i] == '\0'){
          k = i;
          break;
        }
     }
    char test[11]= ""0123456789"";
    ersetzen(test , k, str);
     for(int i = 1; i <= k; i++){
         str[i - 1] = test[k - i ];
         if(i == k-1){
             str[k] = '\0';
         }
     }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test);
  printf( ""Rückwärts : %s \n"", test );
}"
Name_84,VName_84,"#include <stdio.h>

void factorize(long ergebnis, long *zahl1, long *zahl2)
{
	if (ergebnis == 0) {
		*zahl1 = 1;
		*zahl2 = ergebnis;
	}
	else if (ergebnis == 1) {
		*zahl1 = 1;
		*zahl2 = ergebnis;
	}
	else {
		long x = ergebnis/2;
		for (x; (ergebnis % x) != 0; x--){}
			
		*zahl1 = x;
		*zahl2 = ergebnis / x;
	}
}

int main(){
	long ergebnis, zahl1, zahl2;
	printf(""Please enter an Integer: "");
	scanf(""%ld"",&ergebnis);
	factorize(ergebnis, &zahl1, &zahl2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",ergebnis, zahl1, zahl2);
	return 0;
}","#include <stdio.h>

int main(int argc, char* argv[] )
{  
	char str[100];
	char strneu[100];
	int a = 0;
	for (int i = 0; i < argc -1; i++)
	{
		for (int length = 0; *(*(argv+1+i)+length) != '\0'; length++)
		{
			str[a] = *(*(argv+1+i)+length);
			a++;
		}
	}
	str[a] = '\0';
	
	
	for (int i = 0; i < a+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			
			
			
			
			do
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			} while(1);
			a--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((a/2)-2); i++, z += 3)
	{
		strneu[i] = str[z];
	}
	int length = 0;
	for (length; str[length] != '\0'; length++){}
	strneu[length] = '\0';
	printf(""Der neue String lautet: %s"",strneu);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_85,VName_85,"#include <stdio.h>

void factorize(long ergebnis, long *zahl1, long *zahl2)
{
	int i = ergebnis-1;
	if(i<=0){
		i = 1;
	}
	while(ergebnis % i != 0){
		--i;
	}
	*zahl1 = i;
	*zahl2 = ergebnis/i;
}

int main(){
	printf(""Please enter an Integer: "");
	long eingabe, a, b;
	scanf(""%ld"", &eingabe);
	factorize(eingabe, &a, &b);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",eingabe, a,b);
	return 0;
}","#include <stdio.h>

int main(int argc, char* argv[]){
	int a = 0;
	char str1[100];
	for(int i = 1; i<argc; ++i){
		int j = 0; 
		while(argv[i][j] != '\0'){
			if(argv[i][j] == 'x' || argv[i][j] == 'y' || argv[i][j] == 'q' || argv[i][j] == 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q'){
				
			}else{
				str1[a] = argv[i][j];
				++a;
			}
			++j;
		}
	}
	str1[a] = '\0';
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"", str1);
	char str2[100];
	int i = 0;
	int j = 0;
	while(str1[i] != '\0'){
		if(i%3 == 0){
			str2[j] = str1[i];
			++j;
		}
		++i;
	}
	str2[j] = '\0';
	printf(""Der neue String lautet: %s\n"", str2);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
	int i = 0;
	while(dest[i] != 0 && i<zahl && src[i] != '\0'){
		dest[i] = src[i];
		++i;
	}
}

void umdrehen( char* str )
{
	int laenge = 0;
	int i = 0;
	while(str[i] != '\0'){
		++laenge;
		++i;
	}
	char temp[laenge+1];
	i = 0;
	for(int j = laenge-1; j>=0; --j){
		temp[i] = str[j];
		++i;
	}
	for(int j = 0; j<laenge; ++j){
		str[j] = temp[j];
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_86,VName_86,"#include <stdio.h>

void factorize(long ergebnis, long *zahl1, long *zahl2)
{
    int yo = 0;
    int haelfte = ergebnis/2;
	if (ergebnis==0){
	    *zahl1 = 1;
	    *zahl2 = 0;
	}
	else if (ergebnis==1){
	    *zahl1 = 1;
	    *zahl2 = 1;
	}
	else {
	   while (yo = 0){
	       if (ergebnis%haelfte == 0){
	           yo = 1;
	           *zahl1 = haelfte;
	           *zahl2 = ergebnis/haelfte;
	       }
	       else {
	           haelfte = haelfte - 1;
	       }
	   }
	}
}

int main(){
	long ergebnis;
	long* zahl1;
	long* zahl2;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", ergebnis);
	factorize(ergebnis,zahl1,zahl2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", ergebnis, *zahl1, *zahl2);
	return 0;
}","#include <stdio.h>
int main() {
   char satz[100], satz2[100];
   int l, k;
   
   fgets(satz, sizeof(satz), stdin);


   for (int i = 0, j; satz[i] != '\0'; ++i) {
      while (!(satz[i] >= 'a' && satz[i] <= 'p') && !(satz[i] >= 'r' && satz[i] <= 'w') && !(satz[i] == 'z') && !(satz[i] >= 'A' && satz[i] <= 'P') && !(satz[i] >= 'R' && satz[i] <= 'W') && !(satz[i] == 'Z') && !(satz[i] == '!') && !(satz[i] == '?') && !(satz[i] == '\0')){
         for (j = i; satz[j] != '\0'; ++j) {
            satz[j] = satz[j + 1];
         }
         satz[j] = '\0';
      }
   }
   printf(""x,y,q und X,Y,Q aussortiert: "");
   puts(satz);
     for (int l = 0, k; satz[l] != '\0'; ++l) {
        satz2[k] == satz[l];
        k++;
        l=l+3;
    }
    printf(""Der neue String lautet: %s"", satz2);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  for (int i = 0 ; dest != '\0'; ++i) {
      if (i>zahl || i>sizeof(src))
          break;
      dest[i]==src[i];
}
}
void umdrehen( char* str )
{
    for (int i = 0 ; str != '\0'; ++i) {
       str[i]==str[sizeof(str)-i]; 
}
}

int main( int argc, char* argv[] )
{  
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
  char str[6] = ""Robin"";
}"
Name_87,VName_87,"#include <stdio.h>

void factorize(long produkt, long *faktor1, long *faktor2)
{
	if (produkt == 0) {
		*faktor1 = 1;
		*faktor2 = produkt;
	}
	else if (produkt == 1) {
		*faktor1 = 1;
		*faktor2 = produkt;
	}
	else {
		long t1 = produkt/2;
	if (produkt % 2 != 0){
		do { 
		produkt % t1;
		t1--;
		} while ((produkt % t1) != 0);

		} else do { 
		produkt % t1;
		}  while ((produkt % t1) != 0);
		
		*faktor1 = t1;
		*faktor2 = produkt / t1;
				}
}

int main(){
	long produkt, faktor1, faktor2;
	printf(""Please enter an Integer: "");
	scanf(""%ld"",&produkt);
	factorize(produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",produkt, faktor1, faktor2);
	return 0;
}","#include <stdio.h>

int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}


//**(argv + 1 + lange) != '\0'","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_88,VName_88,"#include <stdio.h>

void factorize(long ergebnis, long *zahl1, long *zahl2)
{
	// Your factorization
    if (ergebnis == 1 || ergebnis == 0){
        *zahl1 = (long)1;
        *zahl2 = ergebnis;
    }
    else{
        for(long i = 1;  i < ergebnis; i++){
            if (ergebnis % i == 0){
                *zahl1 = i;
                *zahl2 = ergebnis/i;
            }
        }
    }

    
}

int main(){
    long zahl1 = 0;
    long zahl2 = 0;
    long ergebnis = 0;
	printf(""Please enter an Integer: "");
    scanf(""%li"", &ergebnis);
    factorize(ergebnis ,&zahl1 ,&zahl2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"" , ergebnis, zahl1, zahl2);
	return 0;
}","#include <stdio.h>



int main(int argc, char** argv){
    
    char str1[100] = """";
    char str2[100] = """";
    char str3[100] = """";
    int f = 0;
    for (int i = 1; i < argc; i++){
        for (int j = 0; argv[i][j] != '\0' ; j++){
        
           str1[f] += argv[i][j];
           f++;

        }  
    }
    int j = 0;
    for (int i = 0; str1[i] != '\0'; i++){
        if(str1[i] != 'x' && str1[i] != 'y' && str1[i] != 'q' && str1[i] != 'X' && str1[i] != 'Y' && str1[i] != 'Q' ){
            str2[j] = str1[i];
            j++;
        }
    }
    
    int g = 0;
    for (int i = 0 ; str2[i] != '\0'; i = i + 3){
        str3[g] = str2[i];
        g++;
    }
  

    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", str2);
    printf(""Der neue String lautet: %s\n"", str3);
    
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  for(int i = 0; i < zahl && src[i] != '\0'; i++){
     if(dest[i] != '\0'){ 
      dest[i] = src[i];
     }
     else{
         return;
     }
  }
}

void umdrehen( char* str )
{
  
  int f = 0;

  for (int i = 0; str[i] != '\0'; i++)
  {
      f++;
  }
  
  char temp[f];

  for(int j = 0; str[j] != '\0'; j++){
      temp[j] = str[j];
  }
  int h = -1;

  for(int g = f; g >= 0; g--){
  str[h] = temp[g];
  h++;
  }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_89,VName_89,"#include <stdio.h>

void factorize(long product, long *factor1, long *factor2)
{
	long divisor = product/2;
	if (product == 0){
	*factor1 = 1;
	*factor2 = 0;
	return;
	}
	if (product == 1){
	*factor1 = 1;
	*factor2 = 1;
	return;
	}
	while(product%divisor){
	divisor--;
	}
	*factor1 = divisor;
	*factor2 = product/divisor;
}

int main(){
	long product = 0;
	printf(""Please enter an Integer: "");
	scanf(""%li"", &product);
	long f1 = 0;
	long f2 = 0;
	factorize(product, &f1,&f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",product,f1,f2);
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>

 
void ersetzen(char* dest, int zahl, char* src)
{  
int len;
while(*dest != '\0'){
	len++;
	}
	len--;
for ( int i = 0; i < len; i++){
   dest[i] = src[i];
  }
}

void umdrehen( char* str1 )
{
// lenge str1?
int len;
while(*str1 != '\0'){
	len++;
	}
	len--;
int i, j ;
char *str2[];
for ( i = 0 , j = len; i <= len  ; i++ , j--){
str2[j] =str1[i];
} 
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_90,VName_90,"#include <stdio.h>

void factorize(long produkt, long *faktor1, long *faktor2)
{
	// Your factorization
}

int main(){
	printf(""Please enter an Integer: "");
	printf(""Possible Factors of %ld are %ld and %ld.\n"");
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
    for(int i = 0; i != zahl && dest[i] != '\0' && src[i] != '\0'; i++ )
    {
        dest[i] = src[i];
    }
  
}

void umdrehen( char* str )
{
    int strL = 0;
    while (str[strL++]);
    strL -= 1;

    if (!(!str || ! *str))
    {
        char ch;
        int j = 0, i = strL -1;
        while (i > j)
        {
            ch = str[i];
            str[i] = str[j];
            str[j] = ch;
            i--;
            j++;
        }
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_91,VName_91,"#include <stdio.h>

void factorize(long produkt, long *faktor1, long *faktor2)
{
	// Your factorization
}

int main(){
	printf(""Please enter an Integer: "");
	printf(""Possible Factors of %ld are %ld and %ld.\n"");
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_92,VName_92,"#include <stdio.h>

void factorize(long resultat, long *nummer1, long *nummer2)
{
	if(resultat == 0){
		*nummer1 = 1;
		*nummer2 = 0;
			return 0;
	}
	if(resultat == 1){
		*nummer1 = 1;
		*nummer2 = 1;
			return 0;
	}
	else if(resultat % 2 == 0){
		*nummer1 = resultat / 2;
		*nummer2 = 2;
			return 0;
	}
	else{
		*nummer1 = resultat / 2;
		while(resultat % *nummer1 != 0){
			*nummer1  -= 1;
		}
		*nummer2 = resultat / *nummer1;
			return 0;
	}
}
	
	
	
	
int main(){
	long resultat = 1;
	long nummer1 = 1;
	long nummer2 = 1;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &resultat);
	factorize(resultat, &nummer1, &nummer2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
	return 0;
}","#include <stdio.h>

int main(int argc, char** argv){
	char a[100];
	int u = 0;
	printf(""x,y,q und X,Y,Q aussortiert: "");
	for(int i = 1; i < argc; i++){
		for(int j = 0; argv[i][j] != '\0'; j++){
			if(argv[i][j] == 'x'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'X'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'y'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Y'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'q'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == 'Q'){
				for(int z = j; argv[i][z] != '\0'; z++){
					argv[i][z] = argv[i][z+1];
				}
			};
			if(argv[i][j] == '\0') u -= 1;
			if(argv[i][j] != '\0') a[u] = argv[i][j];
			u++;
		}
	}
	char b[100];
	int k = 0;
	for(int i = 0; i < u; i++){
			if((i % 3) == 0){
				b[k] = a[i];
				k++;
			}
	}
	for(int i = 0; i < u; i++){
		printf(""%c"", a[i]);
	}
	printf(""\nDer neue String lautet: "");
	for(int i = 0; i < k; i++){
		printf(""%c"", b[i]);
	}
	printf(""\n"");
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  int csrc = 0;
  for(int i = 0; src[i] != '\0'; i++) csrc++;
  int cdest = 0;
  for(int i = 0; dest[i] != '\0'; i++) cdest++;
  if(csrc <= cdest){
  if(csrc < zahl){
  	for(int i = 0; src[i] != '\0'; i++){
  		dest[i] = src[i];
  	}
  }
  if(csrc >= zahl){
  	for(int i = 0; i < zahl; i++){
  		dest[i] = src[i];
  	}
  }
  }
  if(csrc > cdest){
  	if(csrc < zahl){
  		for(int i = 0; dest[i] != '\0'; i++){
  			dest[i] = src[i];
  		}
  		
  	}
  	if(csrc >= zahl){
  		for(int i = 0; i < zahl && dest[i] != '\0'; i++){
  			dest[i] = src[i];
  		}
    	}
  }	
}

void umdrehen( char* str )
{
  int cstr = 0;
  char tmp[100];
  for(int i = 0; str[i] != '\0'; i++){
  	tmp[i] = str[i];
  }
  for(int i = 0; str[i] != '\0'; i++) cstr++;
  for(int i = 0; i < cstr; i++){
  	str[i] = tmp[(cstr-1) - i];
  }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_93,VName_93,"#include <stdio.h>

void factorize (long product, long *factor1, long *factor2){
    *factor1=product/2;
    *factor2=2;
  if (product == 0)
    {
      *factor1 = 1;
      *factor2 = product;
    }
  else if (product == 1)
    {
      *factor1 = 1;
      *factor2 = product;
    }
  else if(*factor1 * *factor2 != product){
      *factor1+=1;
      while (*factor1 >= 1 && (*factor1 * *factor2 != product)){
          *factor2=2;
          *factor1-=1;
	  while (*factor2 <= product && (*factor1 * *factor2 != product)){
	      *factor2+=1;
	      //printf(""%ld, %ld\n"",*factor1,*factor2);
	  }
     }
  }
}

  int main (){
    long product=0;
    printf (""Please enter an Integer: "");
    scanf (""%ld"", &product);
    long factor1=product/2;
    long factor2=2;
    long* f1;
    long* f2;
    f1=&factor1;
    f2=&factor2;
    factorize (product, f1, f2);
    printf (""Possible Factors of %ld are %ld and %ld.\n"", product,*f1,*f2);
    return 0;
  }","#include <stdio.h>

int main(int laenge, char** Zeichen){
    char Ausgabe[100]="""";
    char Ausgabe2[100]="""";
    int j=0;
    int k=0;
    for (int l=1;l<laenge;l++){
        for (int i=0;Zeichen[l][i]!='\0';i++){
            if (Zeichen[l][i]!='x' && Zeichen[l][i]!='y' && Zeichen[l][i]!='q' && Zeichen[l][i]!='X' && Zeichen[l][i]!='Y' && Zeichen[l][i]!='Q'){
               Ausgabe[j]=Zeichen[l][i];
               j+=1;
            }
        }
    }
    for (int i=0;Ausgabe[i]!='\0';i++){
        if(i%3==0){
            Ausgabe2[k]=Ausgabe[i];
            k+=1;
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"",Ausgabe);
    printf(""Der neue String lautet: %s\n"",Ausgabe2);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    for(int i=0;i<zahl&&dest[i]!='\0'&&src[i]!='\0';i++){
        dest[i]=src[i];
    }
}

void umdrehen( char* str )
{
    int laenge=0;
    for(int i=0;str[i]!='\0';i++){
        laenge+=1;
    }
    char* Ausgabe[laenge];
    for(int i=0;i<laenge;i++){
        Ausgabe[i]=str[i];
    }
    for (int i=0;i<laenge;i++){
        str[i]=Ausgabe[laenge-(i+1)];
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_94,VName_94,"#include <stdio.h>

void factorize(long resultat, long *nummer1, long *nummer2)
{
    switch(resultat)
    {
	    case 0:
	    {
	        *nummer1 = 1;
	        *nummer2 = resultat;
	        break;
	    }
	    case 1:
	    {
	        *nummer1 = 1;
	        *nummer2 = resultat;
	        break;
	    }
	    default:
	    {
	        if(resultat%2==0){
	            *nummer1 = resultat/2;
	            *nummer2 = 2;
	            break;
	        }
	        
	        else{
	            for(long int i=(resultat/2);i>=2;--i){
	                for(long int j=2; j<=(resultat/2);++j){
	                    if(resultat==(i*j)){
	                        *nummer1 = i;
	                        *nummer2 = j;
	                        return;
	                    }
	                }
	                        *nummer1 = 1;
	                        *nummer2 = resultat;
	            }
	        }
	        
	    }
    }
	
}

int main(){
    long resultat, nummer1, nummer2;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &resultat);
	factorize(resultat, &nummer1, &nummer2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  for(int i =0;)
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_95,VName_95,"#include <stdio.h>

void factorize(long ergebnis, long *zahl1, long *zahl2)
{
    // Your factorization
    if (ergebnis == 0) {
        *zahl1 = 1;
        *zahl2 = ergebnis;
    } else if (ergebnis == 1) {
        *zahl1 = 1;
        *zahl2 = ergebnis;
    } else {
        // check if can be divided by the half, exp: 50 mod 5 = 0
        for (int i = ergebnis/2; i <= ergebnis; i-- ) {
            int mod = ergebnis%i;
            if (mod == 0) {
                *zahl1 = i;
                *zahl2 = ergebnis/i;
                break;
            }
        
        }
        
    }
}

int main(){
    long ergebnis, zahl1, zahl2;
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis, &zahl1, &zahl2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", ergebnis, zahl1, zahl2);
    return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_96,VName_96,"#include <stdio.h>



void factorize(long ergebnis, long* zahl1, long* zahl2)

{
if(ergebnis == 0) 
	{
	*zahl1 = 1;
	*zahl2 = ergebnis;
	}
else if(ergebnis == 1)
	{
	*zahl1 = 1;
	*zahl2 = ergebnis;
	}
else
	{
	long int count = 0;
	*zahl2 = 2;
	long int iteration_factor = (long int)(ergebnis / 2);
	
	do
		{
		iteration_factor = (long int)( (long int)(ergebnis / 2) - count);
		

		*zahl1 = iteration_factor;
		*zahl2 = (long int)(ergebnis / iteration_factor);
			
		 
		count++;
			
		
		}	
	while(iteration_factor * *zahl2 != ergebnis);
	}
}




int main()
{
	

long int ergebnis, zahl1, zahl2;		//initialisiere 
 

printf(""Please enter an Integer: "");

scanf(""%li"", &ergebnis);			// scannt ganze Zahl
factorize(ergebnis, &zahl1, &zahl2); 		// übergibt ergebnis und Adressen der Zahlen	

printf(""Possible Factors of %ld are %ld and %ld.\n"", ergebnis, zahl1, zahl2);
	
return 0;

}","#include <stdio.h>

int main(int  argc, char *argv[]) // start at argv[1]
{


char array[100];
int slot_count = 0;
char b[100];
int slot_count_b = 0;
			
for(int i = 1; i < argc; i++)
	{
	int j = -1;
	do
		{
		j++;
		if(argv[i][j] == 'x') continue;
		else if(argv[i][j] == 'y') continue;
		else if(argv[i][j] == 'q') continue;
		else if(argv[i][j] == 'X') continue;
		else if(argv[i][j] == 'Y') continue;
		else if(argv[i][j] == 'Q') continue;
		else if(argv[i][j] == '\0')
			{
			array[slot_count] = '\0';
			b[slot_count_b] = '\0';
			}
		else
			{
			array[slot_count] = argv[i][j];
			
			if( (slot_count == 0 || (slot_count) % 3 == 0) )
				{
				b[slot_count_b] = array[slot_count];
				slot_count_b++;
				}		
			slot_count++;
			}
		
		
		}		
	while(argv[i][j] != '\0');
	}
printf(""x,y,q und X,Y,Q aussortiert: "");
for(int m = 0; m < slot_count; m++) printf(""%c"", array[m]); 
printf(""\nDer neue String lautet: "");
for(int n = 0; n < slot_count_b; n++) printf(""%c"", b[n]); 
}","#include <stdio.h>

#include <stdlib.h>
 




void ersetzen(char* dest, int zahl, char* src)

{
int count = 0;
while( count < zahl )
	{
	
	if( dest[count] == '\0' ) break;
	else if( *(src + count) == '\0') break;
	dest[count] = src[count];
	count++;
	}

}




void umdrehen( char* str )

{

char a;
int counter = 0;
while(str[counter] != '\0' ) counter++;
char cpy[counter + 1];
for(int i = 0; i <= counter; i++) cpy[i] = str[i];
for(int i = 0; i <= counter; i++) str[counter - 1 - i] = cpy[i];
}





int main( int argc, char* argv[] )

{  
  
char test[11]= ""0123456789"";
  

printf( ""Das Original ist: %s \n"", test );
  
ersetzen( test , atoi(argv[1]), argv[2] );
  
printf( ""Ersetzt : %s \n"", test );
  
umdrehen( test );
  
printf( ""Rückwärts : %s \n"", test );

}"
Name_97,VName_97,"#include <stdio.h>

void factorize(long product, long *factor1, long *factor2)
{
	if (product == 0) {
		*factor1 = 1;
		*factor2 = product;
	}
	else if (product == 1) {
		*factor1 = 1;
		*factor2 = product;
	}
  else{
	for (int i = product - 1; i > 0; i--) {
		if(!(product % i)){
			*factor1 = i;
			*factor2 = (long) (product / i);
			break;
		}
	}
}
}

int main(){
	long product;
	long factor1;
	long factor2;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src){

  for (int i = 0; i < zahl; i++){
    *dest = *src;
    src++;
    dest++;
  }
}

void umdrehen(char* str)
{
 const int length = strlen(str);
 char* tmp = """";
 strcpy(tmp, str);
 tmp += 9;
 for (int i = 0; i < length - 1; i++) {;
   *str = *tmp;
   str++;
   tmp--;
 }
}

int main( int argc, char* argv[] )
{
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen(test);
  printf( ""Rückwärts : %s \n"", test );
}"
Name_7,VName_7,"#include <stdio.h>

void factorize(long produkt, long *faktor1, long *faktor2)
{
    long hilf = produkt;
    if(produkt == 0){
        *faktor1 = 1;
        *faktor2 = produkt;
    }
    else if(produkt == 1){
        *faktor1 = 1;
        *faktor2 = produkt;
    }
    else{
        int i = 2;
        long rest = produkt % i;
        if((rest) == 0){
            *faktor1 = produkt/2;
            *faktor2 = 2;
        }
        //int i = 2;
        else{
        do{
            *faktor1 = produkt/i;
            *faktor2 = i;
            rest = produkt % i;
            i++;
        }while((rest) != 0);
        }
    }
	// Your factorization
}

int main(){
    long zahl;
    long fak1;
    long fak2;
	printf(""Please enter an Integer: "");
	scanf(""%i"", &zahl);
	factorize(zahl, &fak1, &fak2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", zahl, fak1, fak2);
	return 0;
}","#include <stdio.h>

int main(int argc, char* argv[]) {
    //char* str[] = {""./[programm]"", ""PPR"", ""macht"", ""Spass!""}; //zum testen
    //int agc = 4;                                              //zum testen
    for(int i= 1; i<5; i++){
    //printf(""%s\n"", str[i]);                                 //test
    }
    
    char string1[100]; string1[99] = '\0';
    char string2[100]; string2[99] = '\0';
    char string3[100];
    for(int i = 0; i < 100; i++){
        string1[i] = '\0';
        string2[i] = '\0';
        string3[i] = '\0';
    }
    
    int pos = 0;
    for(int i = 1; i<argc; i++){
        int j = 0;
        int laenge = 0;
        while(argv[i][j] != '\0'){
        laenge++;
        j++;
        }
        //printf(""i=%i - laenge=%i\n"", i, laenge);                //test
        for(int y = 0; y<laenge; y++){
            string1[pos] = argv[i][y];
            pos++;
        }
    }
    
    //buchstabenloeschen
    int j = 0;
    int length = 0;
    while(string1[j] != '\0'){
    length++;
    j++;
    }
    //printf(""length: %i\n"", length);                       //test
    int zaehler = 0;
    for(int i=0; i<length; i++){
        if(string1[i] == 'x' || string1[i] == 'y' || string1[i] == 'q'){
            
        }
        else if(string1[i] == 'X' || string1[i] == 'Y' || string1[i] == 'Q'){
            
        }
        else{
            string2[zaehler] = string1[i];
            zaehler++;
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string2);
    
    //nur noch jeden 3ten Buchstaben verwenden
    int countah = 0;
    for(int i=0; i<=zaehler; i+=3){
        string3[countah] = string2[i];
        countah++;
    }
    printf(""Der neue String lautet: %s\n"", string3);
    
    //string1[0] = str[1][0];                                   //test
    //printf(""%s\n"", string1);                                  //test
    //printf(""%s\n"", string2);                                  //test
    //printf(""%s\n"", string3);                                  //test
    
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    if(zahl > 10){
        for(int i = 0; i < 10; i++){
            dest[i] = src[i];
        }
    }
    else if(zahl == 0){}                            //fuer den Fall, dass nichts ersetzt werden soll
    else{
        int j = 0;
        while((j < zahl) && (src[j] != '\0')){
            dest[j] = src[j];
            j++;
        }
    }
}

void umdrehen( char* str )
{
    int j = 0;
    int zaehler = 1;
    while(str[j] != '\0'){
        zaehler++;
        j++;
    }
    //printf(""zaehler: %i\n"", zaehler);
    char temp[zaehler];
    for(int i = 0; i < zaehler; i++){
        temp[i] = str[i];
    }
    //printf(""%s\n"", temp);
    for(int i = 0; i < zaehler-1; i++){
        int hilf = zaehler-(i+2);
        //printf(""hilf = %i\n"", hilf);
        str[i] = temp[hilf];
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  int zahl = 2;                                 //zum testen
  char agv[41] = ""ppr"";               //zum testen
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_98,VName_98,"#include <stdio.h>

void factorize(long product, long *factor1, long *factor2)
{
	if (product <= 1) {
        *factor1 = 1;
        *factor2 = product;
    } else {
        int x = product/2;
        while(x) {
            if ((product % x) == 0) {
                *factor1 = x;
                *factor2 = product/x;
                x = 0;
            } else {
                x -= 1;
            }
        }
    }
}

int main(){
    long factor1;
    long factor2;
    long product;
	printf(""Please enter an Integer: "");
    scanf(""%ld"", &product);
    factorize(product,&factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_99,VName_99,"#include <stdio.h>

void factorize(long ergebnis, long *zahl1, long *zahl2)
{
	// Your factorization
}

int main(){
	printf(""Please enter an Integer: "");
	printf(""Possible Factors of %ld are %ld and %ld.\n"");
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void sort(char* str){



for(int i = 0; str[i] != '\0'; i++){

   if(str[i] == 'x' || str[i] == 'y' || str[i] == 'q' || str[i] == 'X' || str[i] == 'Y' || str[i] == 'Q'){ 
   for(int h = i; str[h] != '0'; h++) str[h] = str[h+1];
   }
     
 }
 
}


char* strc(char* str1, char* str2){
int i,h;
char* st = str1;
for(i = 0; st[i] != '\0'; i++){

}


for(h = 0; str2[h] != '\0'; h++){
str1[i+h] = str2[h];
}
str1[i+h]= '\0';

return str1;
}





int main( int argc, char* argv[] )
{  


sort(argv[1]);
sort(argv[2]);
sort(argv[3]);
sort(argv[4]);
printf(""x,y,q und X,Y,Q aussortiert: %s%s%s%s\n"",argv[1], argv[2], argv[3],argv[4]);



char* str = strc(argv[1], argv[2]);
char* str2 = strc(str, argv[3]);
char* str3 = strc(str2, argv[4]);




printf(""Der neue String lautet: lsonao\n"");


//
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
int h;
  for(int i = 0; src[i] != '\0';i++) h++;
 printf( ""%i \n"", h );

  for(int i = 0; i < zahl && i < h  ;i++){
      if(dest[i] != '\0')dest[i] = src[i];}
       
}

void umdrehen( char* str )
{
int h = -1;
for(int i = 0; str[i] != '\0';i++) h++;
printf( ""%i \n"", h );
char s[h];
for(int i = 0; i <= h; i++) s[i] = str[i];
printf( ""%s \n"", s );
printf( ""%s \n"", str );
  for(int i = 0; i <= h; i++)  str[i] = s[h-i];
       
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_100,VName_100,"#include <stdio.h>

void factorize(long produkt, long *faktor1, long *faktor2)
{
    if(produkt == 0 || produkt == 1)
    {
        *faktor1 = 1;
        *faktor2 = produkt;
    }
    else
    {
        if(produkt%2 == 0)
        {
            *faktor1 = produkt/2;
            *faktor2 = 2;  
        }
        else
        {
            long temp = produkt/2;
            while(produkt%temp != 0)
            {
                temp -= 1;
            }
            *faktor1 = temp;
            *faktor2 = produkt/temp;            
        }
    }

}

int main(){
    long produkt;
    long faktor1 = 0;
    long faktor2 = 0;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &produkt);
	factorize(produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktor1, faktor2);
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_101,VName_101,"#include <stdio.h>

void factorize(long resultat, long *nummer1, long *nummer2)
{
    int i;
    for (i=0; i<1; i++ ){
    if (resultat > 0){
    if (resultat % 2 == 0) {
       *nummer1 = resultat / 2;
       *nummer2 = 2;
    }
    else if (resultat % 3 == 0){
        *nummer1= resultat / 3;
        *nummer2= 3;
    }
    else {
        *nummer1 =1;
        *nummer2=resultat;
    }
    }
    else { 
        *nummer1 =1;
        *nummer2=resultat;
    }
}
}

int main(){
    long resultat;
    long int nummer1;
    long int nummer2;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &resultat);
	factorize(resultat, &nummer1 , &nummer2 );
	printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_102,VName_102,"#include <stdio.h>

void factorize(long resultat, long *nummer1, long *nummer2){
  if(resultat == 0 || resultat == 1){
    *nummer1 = 1;
    *nummer2 = resultat;
  }else{
    *nummer1 = resultat/2;
    while(resultat % *nummer1 != 0){
      *nummer1 -= 1;
    }
    *nummer2 = resultat/(*nummer1);
  }
}

int main(){
  long resultat = 1, nummer1, nummer2;
  printf(""Please enter an Integer: "");
  scanf(""%i"", &resultat);
  factorize(resultat, &nummer1, &nummer2);
  printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
  return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
