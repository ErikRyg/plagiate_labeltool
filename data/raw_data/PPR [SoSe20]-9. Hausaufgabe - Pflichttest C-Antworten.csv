Nachname,Vorname,E-Mail-Adresse,Status,"Begonnen am",Beendet,"Verbrauchte Zeit","Bewertung/20,00","Antwort 1","Antwort 2","Antwort 3","Antwort 4","Antwort 5","Antwort 6","Antwort 7","Antwort 8","Antwort 9","Antwort 10"
Geilert,"Kai Christopher",kai.c.geilert@campus.tu-berlin.de,Beendet,"19. Juni 2020  10:18","27. Juni 2020  10:19","8 Tage","18,51","char *daumen = (char*)zeigefinger - 2;
zeigefinger = (int*)daumen;","Nichts, da Programm nicht kompiliert.",5,"Ein C-String ist ein Array von char-Variablen.",5,232,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: %; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: 201; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: 202; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: -; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 2(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: 2; Teil 130: 1; Teil 131: 0; Teil 132: 0; Teil 133: 3(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: 200; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 4(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 5(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 201; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 4(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 5(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: %; Teil 196: %; Teil 197: %; Teil 198: %; Teil 199: 6(14); Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: -; Teil 206: -; Teil 207: -; Teil 208: -; Teil 209: -; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	int n = 2;
	if(product == 0)
	{
		*f1 = 1;
		*f2 = 0;
	}
	else if(product == 1)
	{
		*f1 = 1;
		*f2 = 1;
	}
	else
	{
		while((product % n) != 0)
		{
			n+=1;
		}
		if ((product % n) == 0)
		{
			*f1 = product/n;
			*f2 = n;
		}
	}
}

int main()
{
	long product;
	long factor1;
	long factor2;

	printf(""Please enter an Integer: "");
	scanf(""%ld"",&product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",product,factor1,factor2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 

void ersetzen(char* dest, int zahl, char* src)
{
	int count1=0;
	int count2=0;
	for(int i = 0; dest[i] != '\0' ; i++)
	{
		count1++;
	}
	//printf(""%i\n"",count1);
	for(int i = 0; src[i] != '\0' ; i++)
	{
		count2++;
	}
	//printf(""%i\n"",count2);
	if((zahl <= count2) && (zahl <= count1))
	{
	//printf(""%i <= %i & %i <= %i"" , zahl , count2 , zahl , count1);
		for(int i=0;i < zahl; i++)
		{
	
			if(dest[i] != '\0')
			{
				dest[i] = src[i];
			}
			else
			{
				break;
			}
		}
	}
	else if((count1 <= count2) && (count1 <= zahl))
	{
	//printf(""%i <= %i & %i <= %i"" , count1 , count2 , count1 , zahl);
		for(int i=0;i < count1; i++)
		{
	
			if(dest[i] != '\0')
			{
				dest[i] = src[i];
			}
			else
			{
				break;
			}
		}
	}
	else if((count2 <= count1) && (count2 <= zahl))
	{
	//printf(""%i <= %i & %i <= %i"" , count2 , count1 , count2 , zahl);
		for(int i=0;i < count2; i++)
		{
	
			if(dest[i] != '\0')
			{
				dest[i] = src[i];
			}
			else
			{
				break;
			}
		}
	}
	
}

void umdrehen( char* str )
{
 	int count1=0;
	for(int i = 0; str[i] != '\0' ; i++)
	{
		count1++;
	}
	//printf(""%i\n"",count1);
	char tmp[count1 + 1];
	for(int i=0; i <= count1; i++)
	{
		tmp[i] = str[i];
	//	printf(""%c\n"",tmp[i]);
	}
	for(int i=0; i <= count1; i++)
	{
		str[i] = tmp[(count1 - i) - 1];
	//	printf(""%c\n"",str[i]);
	}
	//str[count1 + 1] = '\0';
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  test[11] = '\0';
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char** argv)
{
	char name[100];
	int k = 0;
	printf(""x,y,q und X,Y,Q aussortiert: "");
	for(int j = 1 ; j < argc;j++)
	{
//		printf(""%s\n"", argv[j]);
			for(int i = 0 ; argv[j][i] != '\0'; i++)
			{
//			printf(""%c\n"", argv[j][i]);
			//	name[j][i] = argv[j][i];
				if( (argv[j][i] !='x') && (argv[j][i] !='y') && (argv[j][i] !='q') && (argv[j][i] !='X') && (argv[j][i] !='Y') && (argv[j][i] !='Q'))
				{	
					printf(""%c"", argv[j][i]);
					name[k] = argv[j][i];
					k++;
				}
				else
				{
					continue;
				}
			}			
	}
	name[k] = '\0';
	printf(""\nDer neue String lautet: "");
	for(int k = 0 ; name[k] != '\0' ; k++)
	{
				if( (k % 3) == 0 )
				{
					printf(""%c"", name[k]);
				}
				else
				{
					continue;
				}
	}
	printf(""\n"");			
}"
Ketzel,"Anton Florian",ketzel@campus.tu-berlin.de,Beendet,"19. Juni 2020  10:34","25. Juni 2020  11:08","6 Tage","16,40","23 2",80,99,5,5,"zeigefinger = (int*)((short*)zeigefinger - 4);","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 2012; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 13; Teil 134: _; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 2(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: 2; Teil 152: 1; Teil 153: 0; Teil 154: 0; Teil 155: 3(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: 200; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 4(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 5(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: 208; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
   if(product == 0){
      *f1 = 1;
      *f2 = 0;
      return;
   
   }
   if(product != 1){
       *f2 = 2;
       while(product % *f2 !=0){
       *f2 = *f2+1;
     }
   
      if(*f2 == product){
         *f1 = 1;
      } 
      else{
           *f1 = product / *f2; 
     }
   } 
   else { 
         *f1 = 1;
         *f2 = 1;
   }
}

int main(){
    long zahl = 0;
    long faktor1 = 1;
    long faktor2 = 1;
    
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &zahl);
	factorize(zahl, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", zahl, faktor1, faktor2);
	
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
     for(int i = 0; i < zahl; i++){
   
         if(dest[i] == '\0' || (char)src[i] == '\0'){
             break;
         }
         else{
              dest[i] = src[i];
         }
     }  
}

void umdrehen( char* str )
{
  int lang = 0;
  while (str[lang] != '\0'){
         lang++;
    }
   int i = 0;
   char tmp[lang];
   while(str[i] != '\0'){
         tmp[i] = str[i];
         i++;
   }
   for(int i = 0; i < lang; i++){
        str[i] = tmp[lang-1-i];
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include<stdio.h>


int main(int argc, char* argv[])
{  

   int max = argc-1;
   
   for(int i = 1; i < argc; i++ ){
        for(int j = 0; argv[i][j] != '\0'; j++ ) max++;  
   }
   
   char string[max+1];
   int zahler = 0;
   
   for(int i = 1; i < argc; i++ ){
      for(int j = 0; argv[i][j] != '\0'; j++ ){
          
          switch(argv[i][j]) {
                 case 'x': break;
                 case 'X': break;
                 case 'y': break;
                 case 'Y': break;
                 case 'q': break;
                 case 'Q': break;
                 default: string[zahler] = argv[i][j]; zahler++; break; 
           }
      }   
   }
   string[zahler] = '\0';
   printf(""x,y,q und X,Y,Q aussortiert: %s \n"", string);
   
   max = 1;
   while(string[max] != '\0') max++;
   char string2[max+1];
   zahler = 0;
   for(int i = 0; i < (max) ;i += 3){
         
         string2[zahler] = string[i];
         zahler++;
     }
     string2[zahler] = '\0';
   printf(""Der neue String lautet: %s "", string2);
 
   return 0;  
   
}"
Xie,Xuan,xuan.xie@campus.tu-berlin.de,Beendet,"19. Juni 2020  12:22","26. Juni 2020  16:39","7 Tage 4 Stunden","18,00","Nichts, da Programm nicht kompiliert.","zeigefinger = (int*)((short*)zeigefinger - 4);","Ein C-String ist ein Array von char-Variablen.",80,5,232,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	unsigned long div = product/2;
	if(product <= 1){
		*f1 = 1;
		*f2 = product;
		return;
	}
	while((product%div)!=0)
		div--;
	
	*f1 = div;
	*f2 = product/div;

	return;

}

int main(){
	long n =0,f1 = 0,f2 = 0;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &n);
	getchar();
	factorize(n, &f1, &f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", n, f1, f2);
	return 0;
}","#include <stdio.h>

int main(int argc, char *argv[])
{
	int a =0;
	char test[100] = """";
	for(int i = 1; i <argc; i++){
		for(char *p = argv[i]; (*p) != '\0'; p++){
			if((*p != 'x') && (*p != 'y')&& (*p != 'q')&& (*p != 'X')&& (*p != 'Y')&& (*p != 'Q')){
				test[a] = *p;
				a++;
			}
		}
	}
	test[a] = '\0';
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", test);
	char neu[100] ="""";
	int i = 0;
	for(; i < a; i+=3){
		neu[i/3] = test[i];
	}
	neu[i/3] = '\0';
	printf(""Der neue String lautet: %s\n"", neu);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  for(int i=0;i < zahl;i++){
	 	if(dest[i] == '\0' || src[i] == '\0') break;
        dest[i] = src[i];
    }
}

void umdrehen( char* str )
{
  int len = 0;
    while (str[len] != '\0')
        len++;
    int t;
    for (int i = 0; i < len / 2; i++)
    {
        t = str[i];
        str[i] = str[len - i - 1];
        str[len - i - 1] = t;
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Li,Zhaonan,z.li.1@tu-berlin.de,Beendet,"19. Juni 2020  17:30","26. Juni 2020  10:19","6 Tage 16 Stunden","19,96","Nichts, da Programm nicht kompiliert.","zeigefinger = (int*)((short*)zeigefinger - 4);",232,"Ein C-String ist ein Array von char-Variablen.",80,5,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: --; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	unsigned long temp=product/2;
	if (product<=1){
		*f1=1;
		*f2=product;
	}
	else{
		while ((product%temp)!=0){
			temp--;
		}
		*f1=temp;
		*f2=product/temp;	
	}
}

int main(){
	long zahl=0;
	long num1=0;
	long num2=0;
	printf(""Please enter an Integer: "");
	scanf(""%li"",&zahl);
	factorize(zahl,&num1,&num2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",zahl,num1,num2);
	return 0;
}","#include <stdio.h>

int main(int argc, char** argv){
	char dst[100];
	int counter=0;
	char neu[100];
	for (int i=1;i<argc;i++){
		for (char* j=argv[i];(*j)!='\0';j++){
			if ((*j)!='x'&&(*j)!='y'&&(*j)!='q'&&(*j)!='X'&&(*j)!='Y'&&(*j)!='Q'){
				dst[counter]=(*j);
				counter++;
			}
		}
	}
	dst[counter]='\0';
	int n=0;
	for (int i=0;i<=counter/3;i++){
		n=i*3;
		neu[i]=dst[n];
	}
	neu[counter/3+1]='\0';
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",dst);
	printf(""Der neue String lautet: %s\n"",neu);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	for (int i=0;i<zahl;i++){
		if(dest[i]=='\0'||src[i]=='\0'){
			break;
		}
		dest[i]=src[i];
	}
}

void umdrehen( char* str )
{
	char temp[100];
	int i=0;
	for (char* p=str;(*p)!='\0';p++){
		temp[i]=(*p);
		i++;
	}
	for (int j=0;j<i;j++){
		str[j]=temp[i-j-1];
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Kubale,"Kyra Antonia",k.kubale@campus.tu-berlin.de,Beendet,"19. Juni 2020  22:27","29. Juni 2020  00:07","9 Tage 1 Stunde","19,95",232,80,5,5,5,"zeigefinger = (int*)((short*)zeigefinger - 4);","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	for (long i = product/2; i > 1; --i)
	{
		if (product %i == 0)
		{
			*f1 = i;
			*f2 = product / i;
			return;				
		}
	}
	*f1 = product;
	*f2 = 1;
}

int main(){
	long product;
	long f1;
	long f2;

	printf(""Please enter an Integer: "");
	scanf (""%ld"", &product);
	factorize (product, &f1, &f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, f1, f2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h> 

char *newstring(int len)
{
	return (char *) malloc(sizeof(char) * (len + 1));
}

int laenge (char *str)
{	
	int c = 0;
     while (*str)
     {
     	c++;
     	str++;
     }
     return c;
}

char* verknuepfen (int argc, char *argv[])
{
	int l = 0;
	char* ret;
	char* add;
	for (int i = 1; i < argc; ++i)
	{
		l += laenge(argv[i]);
	}
	ret = newstring(l);
	add = ret;
	for (int i = 1; i < argc; ++i)
	{
		char *str = argv[i];
		while (*str)
		{
			*add = *str;
			add++;
			str++;
		}
	}
	*add = '\0';
	return ret;
}

char* bentfernen(char *str)
{
	char *ret = newstring(laenge(str));
	char *add = ret;
	while(*str)
	{
		switch (*str)
		{
			case 'x':
			case 'y':
			case 'q':
			case 'Y':
			case 'X':
			case 'Q':
				break;
			default: 
				*add = *str;
				add++;
				break;
		}
		str++;
	}
	*add = '\0';
	return ret;
}

char* rausnehmen(char *str, int n)
{
	char *ret = newstring(laenge(str));
	char *add = ret;
	int i = 0;
	while (*str)
	{
		if (i%n == 0)
		{
			*add = *str;
			add++;
		}
		str++;
		i++;
	}
	*add = '\0';
	return ret;
}

int main(int argc, char *argv[])
{
	
	char *bla = verknuepfen(argc, argv);
	char *blub = bentfernen(bla);
	char *blib = rausnehmen(blub,3);
	
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", blub);
	printf(""Der neue String lautet: %s\n"", blib);
	
	free(bla);
	free(blub);
	free(blib);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>

int laenge (char *str)
{	
	int c = 0;
     while (*str)
     {
     	c++;
     	str++;
     }
     return c;
}
 
void ersetzen(char* dest, int zahl, char* src)
{  
  	int i = 0;
  	if (zahl == 0)
  		return;
  	if (zahl > laenge(dest)) 
  		zahl = laenge(dest);
  	while (*src && i < zahl)
  	{
  		*dest = *src;
  		src++;
  		dest++;
  		i++;
  	}
}

void umdrehen( char* str )
{
 	int l = laenge(str);
	for (int i = 0; i < l/2; ++i)
	{
		char tmp = *(str+i);
		*(str+i) = *(str+(l-1)-i);
		*(str+(l-1)-i) = tmp;
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Serour,"Ali Hussein Adel",a.serour@tu-berlin.de,Beendet,"20. Juni 2020  08:16","28. Juni 2020  02:38","7 Tage 18 Stunden","16,36","zeigefinger = (int*)((short*)zeigefinger - 4);",5,80,5,5,"Nichts, da Programm nicht kompiliert.","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: %; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: 204; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: 208; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: -; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 2(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: 2; Teil 130: 1; Teil 131: 0; Teil 132: 0; Teil 133: 3(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: 200; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 4(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 5(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 5(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long* f1, long* f2)
{
if ((product%2)==0){
*f2=2;
*f1=product/(*f2);
}
else if ((product%3)==0){
*f2=3;
*f1=product/(*f2);
}
else if ((product%5)==0){
*f2=5;
*f1=product/(*f2);
}
else if ((product%6)==0){
*f2=6;
*f1=product/(*f2);
}
else if ((product%7)==0){
*f2=7;
*f1=product/(*f2);
}
else{
*f1=product;
*f2=1;
}
}

int main(){
    long product;
    long factor1=0;
    long factor2=0;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
void attach(char* atch, char* w1, char* w2,char* w3, char* w4){
int l=0, m=0, n=0, o=-1;
for(int i=0; w1[i]!='\0'; i++){
l++;
}
for(int i=0; w2[i]!='\0'; i++){
m++;
}
for(int i=0; w3[i]!='\0'; i++){
n++;
}
for(int i=0; w4[i]!='\0'; i++){
o++;
}
for(int i=0;w1[i]!='\0';i++){
atch[i]=w1[i];
}
for(int i=0;w2[i]!='\0';i++){
atch[i+l]=w2[i];
}
for(int i=0;w3[i]!='\0';i++){
atch[i+l+m]=w3[i];
}
for(int i=0;w4[i]!='\0';i++){
atch[i+l+m+n]=w4[i];
}
atch[l+m+n+o+1]='\0';
}
void attachalt4(char* atch, char* w1, char* w2,char* w3){
int l=0, m=0, n=-1;
for(int i=0; w1[i]!='\0'; i++){
l++;
}
for(int i=0; w2[i]!='\0'; i++){
m++;
}
for(int i=0; w3[i]!='\0'; i++){
n++;
}
for(int i=0;w1[i]!='\0';i++){
atch[i]=w1[i];
}
for(int i=0;w2[i]!='\0';i++){
atch[i+l]=w2[i];
}
for(int i=0;w3[i]!='\0';i++){
atch[i+l+m]=w3[i];
}
atch[l+m+n+1]='\0';
}
void attachalt3(char* atch, char* w1, char* w2){
int l=0, m=-1;
for(int i=0; w1[i]!='\0'; i++){
l++;
}
for(int i=0; w2[i]!='\0'; i++){
m++;
}
for(int i=0;w1[i]!='\0';i++){
atch[i]=w1[i];
}
for(int i=0;w2[i]!='\0';i++){
atch[i+l]=w2[i];
}
atch[l+m+1]='\0';
}
void attachalt2(char* atch, char* w1){
int l=-1;
for(int i=0; w1[i]!='\0'; i++){
l++;
}
for(int i=0;w1[i]!='\0';i++){
atch[i]=w1[i];
}
atch[l+1]='\0';
}
void filter(char* lel){
char fltr[100];
char cr;
int j=0;
for (int i = 0; lel[i]!='\0'; i++) {
      if ((lel[i] != 'x') && (lel[i] != 'X') && (lel[i] != 'y')&&(lel[i] != 'Y')&&(lel[i] != 'q')&&(lel[i] != 'Q')) {
         cr = lel[i];
         fltr[j] = cr;
         j++;
}
}
 fltr[j] = '\0';
for(int i=0; i<j;i++)
{
lel[i]=fltr[i];
}
lel[j] = '\0';
}

void filter2(char* change){
char copy[100];
int counter=0;
for(int i=0; change[i]!='\0';i++){
copy[i]=change[i];
counter++;
}
copy[counter]='\0';
int end=counter/3;
for(int i=1;i<=end;i++){
change[i]=copy[3*i];
}
change[end+1]='\0';
}



int main(int argc, char* argv[])
{
char output[100];
if(argc==2)
{
attachalt2(output, argv[1]);
filter(output);
printf(""x,y,q und X,Y,Q aussortiert: %s\n"", output);
filter2(output);
printf(""Der neue String lautet: %s\n"", output);
}
else if(argc==3)
{
attachalt3(output, argv[1], argv[2]);
filter(output);
printf(""x,y,q und X,Y,Q aussortiert: %s\n"", output);
filter2(output);
printf(""Der neue String lautet: %s\n"", output);
}
else if(argc==4)
{
attachalt4(output, argv[1], argv[2], argv[3]);
filter(output);
printf(""x,y,q und X,Y,Q aussortiert: %s\n"", output);
filter2(output);
printf(""Der neue String lautet: %s\n"", output);
}
else if (argc==5)
{
attach(output, argv[1], argv[2], argv[3], argv[4]);
filter(output);
printf(""x,y,q und X,Y,Q aussortiert: %s\n"", output);
filter2(output);
printf(""Der neue String lautet: %s\n"", output);
}
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
int length=0;
int max = 11;
for(int v=0;src[v] != '\0';v++){
length=length+1;
}
if((length<=zahl) && (length<=max)){
for(int i=0;(src[i] != '\0'); i++){
dest[i] = src [i];
}
return;
}
else if((zahl<=max)){
for(int i=0; (i<zahl); i++){
dest[i] = src [i];
}
return;
}
else{
for(int i=0; (dest[i] != '\0'); i++){
dest[i] = src [i];
}
}
}

void umdrehen( char* str )
{
int k=-1;
for(int c=0;str[c]!='\0';c++){
k++;
}
int ve = k;
char copy[100];
for(int de=0; de<=ve; de++){
copy[de]=str[de];
}
for(int j = 0; j <= ve; j++)
{
    str[j] = copy[k];
    k--;

}
}


int main( int argc, char* argv[] )
{
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Yilmaz,Zeynep,zeynep.yilmaz@campus.tu-berlin.de,Beendet,"20. Juni 2020  10:20","28. Juni 2020  22:31","8 Tage 12 Stunden","8,15","Ein C-String ist ein Array von char-Variablen.",1,"Nichts, da Programm nicht kompiliert.","zeigefinger = (int*)((short*)zeigefinger - 4);","Nichts, da Programm nicht kompiliert.","23 2","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 3; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: 2; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: -; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: 2; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: 1; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: -; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: 1; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: 0; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: v; Teil 111: 13; Teil 112: -; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 2; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
    if((product % 2 != 0) || (product == 0) || (product == 1))
    {
        *f1 = 1;
        *f2 = product;
    }
    else
    {
        *f1 = product / 2;
        *f2 = 2;
    }
}

int main()
{
    long number = 0, factor1 = 0, factor2 = 0;
    long* f1 = &factor1;
    long* f2 = &factor2;
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &number);
    factorize(number, &factor1, &factor2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", number, *f1, *f2);
    return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
    int i = 0;
    while(i == zahl)
    {
        char* str = 0;
        str[i] = dest[i];
    }
}

void umdrehen( char* str )
{
  int counter = 0;
  for(int i = 0; str[i] != '\0'; i++)
  {
      counter ++;
  }
  char strtemp[counter +1];
  for(int i = 0; i < counter; i++)
  {
      strtemp[i] = str[(counter - 1 - i)];
  }
  for(int i = 1; i < counter; i++)
  {
      str[i] = strtemp[i];
  }
}

int main( int argc, char* argv[] )
{
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Zhou,Tianjing,t.zhou@tu-berlin.de,Beendet,"20. Juni 2020  10:31","28. Juni 2020  15:11","8 Tage 4 Stunden","14,91",80,"Nichts, da Programm nicht kompiliert.",5,5,232,"Ein C-String ist ein Array von char-Variablen.","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: -; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product,long *f1,long *f2)
{
	if(product==1){
		*f1=1;
		*f2=1;
	}
	else {
	  *f2=2; 
      while(product%(*f2)!=0)
	{
  	  *f2=*f2+1;
     }     
    *f1 = product/(*f2);
    }
}

int main(){
	long Eingabe;
	long  p2;
	long  p1;	
	printf(""Please enter an Integer: "");
	scanf(""%ld"",&Eingabe);
	factorize(Eingabe,&p1,&p2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",Eingabe,p1,p2);
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)// dest= test
{  
  int length = 0;
  while(dest[length]!='\0'){
      length++;	
  }
  
  int size = 0;
  while(src[size]!='\0'){
      size++;	
  }
  for(int i=0; i<zahl&&i<length&&i<size;i++)
  {
  	dest[i]= src[i];
  }
  dest[length]='\0';
}

void umdrehen( char* str )
{
	int a=0;
	while(str[a]!='\0'){
		a++;
	}
	for(int b=0;b<(a/2);b++){
    	char x = str[b];
		str[b] = str[a-1-b];
		str[a-1-b] = x;		
	}
}


int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Reuter,Lenard,lenard.reuter@tu-berlin.de,Beendet,"20. Juni 2020  12:48","25. Juni 2020  15:06","5 Tage 2 Stunden","19,10",232,"Ein C-String ist ein Array von char-Variablen.","Nichts, da Programm nicht kompiliert.",80,5,"zeigefinger = (int*)((short*)zeigefinger - 4);","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: -; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 2(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: 2; Teil 130: 1; Teil 131: 0; Teil 132: 0; Teil 133: 3(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: 200; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 4(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 5(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: 208; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 4(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 5(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: %; Teil 196: %; Teil 197: %; Teil 198: %; Teil 199: 6(14); Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: -; Teil 207: -; Teil 208: -; Teil 209: -; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	// Your factorization
	if((product % 3 == 0) && (product != 3)){
		*f1 = 3;
		*f2 = (product/3);
	}
	if((product % 2 == 00) && (product != 2)){
		*f1 = 2;
		*f2 = (product/2);
	}
	else{
		*f1 = 1;
		*f2 = product;
	}
}

int main(){
	long int produkt;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &produkt);
	long int faktor1;
	long int faktor2;
	factorize(produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktor2, faktor1);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	if(zahl <= 11){ 
		for(int i = 0; i < zahl; i++){
			if(src[i] == '\0') break;
			dest[i] = src[i];
		}
	}
	if(zahl > 11){
		for(int i = 0; i < 10; i++){
			if(src[i] == '\0') break;
			dest[i] = src[i];	
		}
	}
}

void umdrehen( char* str )
{
	static int strlaenge;
	for(int i = 0; str[i] != '\0'; i++){
		strlaenge++;
	}
	char tmp[11] = """";
	for(int i = 0; i <= strlaenge; i++){
		tmp[i] = str[i];
	}
	for(int i = 0; ; i++){
		if(str[i] == '\0') break;
		str[i] = tmp[(strlaenge - 1 - i)];	
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>

int main(int argc, char* argv[]){  

    int x = 0;
    char Wort1[100]= """";
    char Wort2[100]= """";
    for(int i = 1; i < argc; i++){
        for(int j = 0; argv[i][j] != '\0' ; j++){
        	if((argv[i][j] == 'x') || (argv[i][j] == 'y') || (argv[i][j] == 'q') || (argv[i][j] == 'X') || (argv[i][j] == 'Y') || (argv[i][j] == 'Q')) continue;
        else{
        	Wort1[x] = argv[i][j];
        	x+=1;
        }
    }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", Wort1);
    int y = 0;
    for(int i = 0; Wort1[i] != '\0'; i += 3){
    	Wort2[y] = Wort1[i];
    	y++;
    }
    printf(""Der neue String lautet: %s\n"", Wort2);
    return 0;
}"
Marold,Johannes,j.marold@tu-berlin.de,Beendet,"20. Juni 2020  13:01","24. Juni 2020  14:07","4 Tage 1 Stunde","18,46",5,"Ein C-String ist ein Array von char-Variablen.",80,"zeigefinger = (int*)((short*)zeigefinger - 4);",232,5,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6; Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
  int count = 0;
  if (product >= 0) {
  for (int i = 2; i < product; i++) {
    if (product%i == 0 && product/i != 1) {
      *f1 = product/i;
      *f2 = i;
      break;
    }
    count++;
    if (count == product -2) {
      *f1 = product;
      *f2 = 1;
      break;
    }
  }
  if (product == 0 || product == 1) {
    *f1 = product;
    *f2 = 1;
  }
} else {
for (int i = -2; i > product; i--) {
  if (product%i == 0 && product/i != 1) {
    *f1 = product/i;
    *f2 = i;
    break;
  }
  count++;
  if (count == -product -2) {
    *f1 = product;
    *f2 = 1;
    break;
  }
}
if (product == -1) {
  *f1 = product;
  *f2 = 1;
}
}
}

int main(){
	printf(""Please enter an Integer: "");
  long zahl = 0;
  scanf(""%ld"", &zahl);
  long fak1 = 0;
  long fak2 = 0;
  factorize(zahl, &fak1, &fak2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", zahl, fak1, fak2);
	return 0;
}","#include <stdio.h>

int main(int argc, char** argv) {
  char kette[100];
  char final_chain[33];
  int count = 0;

  for (int i = 1; i < argc; i++) {
    for (int j = 0; argv[i][j] != '\0'; j++) {
      if (argv[i][j] != 'x'&& argv[i][j] != 'y'&& argv[i][j] != 'q' && argv[i][j] != 'X'&& argv[i][j] != 'Y' && argv[i][j] != 'Q') {
        kette[count] = argv[i][j];
        count++;
      }
    }
  }

  for (int i = count; i < 100; i++) {
    kette[i] = '\0';
  }


  count = 0;
  for (int i = 0; kette[i] != '\0'; i += 3) {
    final_chain[count] = kette[i];
    count++;
  }

  for (int i = count; i < 33; i++) {
    final_chain[i] = '\0';
  }

  printf(""x,y,q und X,Y,Q aussortiert: %s\n"", kette);
  printf(""Der neue String lautet: %s\n"", final_chain);
  return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  for (int i = 0; dest[i] != '\0'; i++) {
    if (src[i] == '\0') {
      break;
    }
    if (i == zahl) {
      break;
    }
      dest[i] = src[i];
  }
}

void umdrehen( char* str )
{
    int count = 0;
  char str_tmp[100] = """";
  for (int i = 0; str[i] != '\0'; i++) {
    str_tmp[i] = str[i];
    count++;
  }
  for (int i = 0; str_tmp[i] != '\0'; i++) {
    str[i] = str_tmp[count-1];
    --count;
  }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Yin,Ruizhe,ruizhe.yin@campus.tu-berlin.de,Beendet,"20. Juni 2020  19:16","28. Juni 2020  23:56","8 Tage 4 Stunden","15,81",80,5,5,"0,1,2,3,4",232,"Ein C-String ist ein Array von char-Variablen.","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: %; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: 204; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: 208; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: 212; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2; Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 3; Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: 2; Teil 152: 1; Teil 153: 0; Teil 154: 0; Teil 155: 4; Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5; Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3; Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: 208; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6; Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: -; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	int b=0;int c;
    for(long i=2;i<product;i++){
    if(product%i==0){
        *f2=i;
        c=product/i;
        *f1=c;
        b=1;
        break;
    }
        
}
    if(b==0)
    {
        *f1=1;
        *f2=product;
    }// Your factorization
}

int main(){
	long i;long k;long j;
    printf(""Please enter an Integer: "");
    scanf(""%ld"",&i);
    factorize(i,&k,&j);
    printf(""Possible Factors of %ld are %ld and %ld.\n"",i,k,j);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
char cc[100];
int n=0;
int k=0;
char dd[100];
void choose(char str[]){
    int m=0;
    for(int i=0;i<n;i+=3){
        dd[m]=str[i];
        m+=1;
    }
}
int main(int argc, char *argv[])
{char aa[100];
    for(int i=1;i<argc;i++){
        for(int j=0;argv[i][j]!='\0';j++){
            aa[k]=argv[i][j];
            k++;
        }
    }
      char temp;
      for(int i=0;aa[i]!='\0';i++){
          if(aa[i]!='x'&&aa[i]!='y'&&aa[i]!='q'&&aa[i]!='X'&&aa[i]!='Y'&&aa[i]!='Q')
          {temp=aa[i];
              cc[n]=temp;
              n+=1;
          }
      }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"",cc);
    choose(cc);
    printf(""Der neue String lautet: %s"",dd);
    
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  int len=0;
   while (dest[len++]);
   len--;
    int a=0;
    while(src[a++]);
    a--;
    if (zahl>a)
        zahl=a;
    if(len<=zahl)
        zahl=len;
    for(int i=0;i<zahl;i++)
    {
        dest[i]=src[i];
    }
  
}

void umdrehen( char* str )
{
  int len=0;
  while (str[len++]);
  len--;
  int min = 0;
  int max = len - 1;
  while (min<max)
  {char temp = str[min];
      str[min] = str[max];
      str[max] = temp;
      min++;
      max--;
  }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Lindner,Charlotte,lindner.2@campus.tu-berlin.de,Beendet,"20. Juni 2020  22:21","25. Juni 2020  14:06","4 Tage 15 Stunden","18,46","Ein C-String ist ein Array von char-Variablen.",232,5,5,"zeigefinger = (int*)((short*)zeigefinger - 4);",5,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 12; Teil 57: %; Teil 58: %; Teil 59: 1; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 13; Teil 68: 208; Teil 69: %; Teil 70: %; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 12; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: 0; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 13; Teil 90: 212; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 2(14); Teil 101: -; Teil 102: %; Teil 103: %; Teil 104: %; Teil 105: %; Teil 106: %; Teil 107: 2; Teil 108: 1; Teil 109: 0; Teil 110: 0; Teil 111: 3(14); Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: 200; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 4(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 5(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: 208; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 4(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 5(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: 216; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 4(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 5(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: 224; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	int rest;	
	if(product == 0){
		*f1 = 0;
		*f2 = 1;
		return;
	}
	for ( int i = 2;; i++){
		rest = product % i;
		if (rest == 0 && i != product){
			*f2 = i;
		    *f1 = product / i;
			break;
		}
		else if(i > product){
			*f1 = product;
		    *f2 = 1;
			break;
		}
	}
}	

int main(){
    long int produkt;
	long int faktor1;
	long int faktor2;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &produkt);
	factorize( produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktor1, faktor2);
	return 0;
}","#include <stdio.h>


int main(int argc, char* argv[]){
	char string[100];
	char rest[100];
	int zahl = 0;
	for(int i = 1; i < argc; i++){
		for( int u = 0; argv[i][u] != '\0'; u++){
			if ( argv[i][u] != 'q' && argv[i][u] != 'x' && argv[i][u] != 'y' && argv[i][u] != 'Q' && argv[i][u] != 'X' && argv[i][u] != 'Y' ){
				string[zahl] = argv[i][u];
				zahl = zahl + 1;
			}
		}
	}
	string[zahl] = '\0';
	
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string);
	for(int i = 0; i < zahl; i++){
		static int u = 0;
		rest[u] = string[i];
		u = u + 1;
		i = i + 2;
		rest[u] = '\0';
	}
	printf(""Der neue String lautet: %s\n"", rest);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  	for( int i = 0; i < zahl; i++){
		if (dest[i] == '\0' || src[i] == '\0')
		break;
		dest[i] = src[i];
	}
}

void umdrehen( char* str )
{
  	unsigned int anzahl = 0;
	for( int i = 0; str[i] != '\0'; i++){
		anzahl++;
	}
	for( int i = 0; i < (anzahl/2); i++){
		char tmp = str[i];
		str[i] = str[anzahl - i - 1];
		str[anzahl - i - 1] = tmp;
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Weiser,Gregor,gregor.weiser@campus.tu-berlin.de,Beendet,"21. Juni 2020  04:45","26. Juni 2020  20:06","5 Tage 15 Stunden","14,10","Ein C-String ist ein Array von char-Variablen.",232,5,80,5,"zeigefinger = (int*)((short*)zeigefinger - 4);","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: -; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 2(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: 2; Teil 130: 1; Teil 131: 0; Teil 132: 0; Teil 133: 3(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: 200; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 4(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 5(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: 208; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 4(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 5(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: %-; Teil 196: %; Teil 197: %; Teil 198: %; Teil 199: 6(14); Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: -; Teil 207: -; Teil 208: -; Teil 209: -; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	if (product%2==0&&product!=2){
		*f1=product/2;
		*f2=2;
	}
	if (product%3==0&&product!=3){
		*f1=product/3;
		*f2=3;
	}
	if (product%2!=0&&product%3!=0){*f1=product; *f2=1;}
}

int main(){
	long product;
	long faktor1;
	long faktor2;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &product);
	factorize(product, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, faktor1, faktor2);
	return 0;
}","#include<stdio.h>

int main(int argc, char* argv[]){
	char a[100]= """";
	char b[100]="""";
	int x=0;
	for(int i=1 ;i<argc ;i++){
		for (int j=0; argv[i][j] != '\0'; j++){
			if(argv[i][j]== 'x' || argv[i][j]== 'y' || argv[i][j]== 'q' || argv[i][j]== 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q') continue;
			else {
				a[x]=argv[i][j];
				x+=1;
			}
	}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", a);
	int y=0;
	for(int i=0; i<100; i+=3){
		b[y]=a[i];
		y++;
	}
	printf(""Der neue String lautet: %s\n"", b);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Zierbock,"Lukas Tim",zierbock@campus.tu-berlin.de,Beendet,"21. Juni 2020  13:51","26. Juni 2020  16:08","5 Tage 2 Stunden","14,46","zeigefinger = (int*)((short*)zeigefinger - 4);","Nichts, da Programm nicht kompiliert.",80,5,232,strlen(zahl),"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 204; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	// Your factorization
	if(product == 1 || product == 0){
		*f1 = product * 1;
		*f2 = product * 1;
	}
	
	else{
		for(int i = 1; i < product; i++){
			if(product % i == 0){
				*f1 = i;
				*f2 = product / i;
			}
		}
	}
}

int main(){
	printf(""Please enter an Integer: "");
	long Produkt = 0;
	scanf(""%ld"", &Produkt);
	long Faktor1 = 0;
	long Faktor2 = 0;
	factorize(Produkt, &Faktor1, &Faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", Produkt, Faktor1, Faktor2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  for(int i = 0; i <= zahl-1; i++){
      if(src[i] == '\0') break;
      if(dest[i] == '\0') break;
      dest[i] = src[i];
    }
}

void umdrehen( char* str )
{
  int groesse = 0;
  while(str[groesse] != '\0'){
    groesse++;
  }
  int j = groesse - 1;
  for(int i = 0; i < j; i++, j--){
    char c = str[i];
    str[i] = str[j];
    str[j] = c;
  }

}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","keine motivation diesmal"
Everwien,"Moritz Anton Jakob",moritz.everwien@campus.tu-berlin.de,Beendet,"21. Juni 2020  16:04","28. Juni 2020  15:04","6 Tage 23 Stunden","5,84","Ein C-String ist ein Array von char-Variablen.",5,80,5,"Nichts, da Programm nicht kompiliert.",5,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: ; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: ; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: ; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: ; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: ; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: ; Teil 210: 15; Teil 211: -; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220:","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	// Your factorization
}

int main(){
	printf(""Please enter an Integer: "");
	printf(""Possible Factors of %ld are %ld and %ld.\n"");
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Klawon,"Alina Paulin",klawon@campus.tu-berlin.de,Beendet,"21. Juni 2020  20:22","28. Juni 2020  11:18","6 Tage 14 Stunden","13,01",-,"Ein C-String ist ein Array von char-Variablen.","Nichts, da Programm nicht kompiliert.",5,232,5,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: 204; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: %; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: 208; Teil 58: %; Teil 59: 1; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: %; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 212; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: 0; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: -; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: %; Teil 105: %; Teil 106: %; Teil 107: 2; Teil 108: 1; Teil 109: 0; Teil 110: 0; Teil 111: 13; Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: 200; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 2(13); Teil 123: ; Teil 124: ; Teil 125: ; Teil 126: ; Teil 127: ; Teil 128: ; Teil 129: ; Teil 130: ; Teil 131: ; Teil 132: ; Teil 133: 3(14); Teil 134: ; Teil 135: ; Teil 136: ; Teil 137: ; Teil 138: ; Teil 139: ; Teil 140: ; Teil 141: ; Teil 142: ; Teil 143: ; Teil 144: 4(14); Teil 145: ; Teil 146: ; Teil 147: ; Teil 148: ; Teil 149: ; Teil 150: ; Teil 151: ; Teil 152: ; Teil 153: ; Teil 154: ; Teil 155: 5(14); Teil 156: ; Teil 157: ; Teil 158: ; Teil 159: ; Teil 160: ; Teil 161: ; Teil 162: ; Teil 163: ; Teil 164: ; Teil 165: ; Teil 166: 3(14); Teil 167: ; Teil 168: ; Teil 169: ; Teil 170: ; Teil 171: ; Teil 172: ; Teil 173: ; Teil 174: ; Teil 175: ; Teil 176: ; Teil 177: 4(14); Teil 178: ; Teil 179: ; Teil 180: ; Teil 181: ; Teil 182: ; Teil 183: ; Teil 184: ; Teil 185: ; Teil 186: ; Teil 187: ; Teil 188: 5(14); Teil 189: ; Teil 190: ; Teil 191: ; Teil 192: ; Teil 193: ; Teil 194: ; Teil 195: ; Teil 196: ; Teil 197: ; Teil 198: ; Teil 199: 14; Teil 200: ; Teil 201: ; Teil 202: ; Teil 203: ; Teil 204: ; Teil 205: ; Teil 206: ; Teil 207: ; Teil 208: ; Teil 209: ; Teil 210: 15; Teil 211: ; Teil 212: ; Teil 213: ; Teil 214: ; Teil 215: ; Teil 216: ; Teil 217: ; Teil 218: ; Teil 219: ; Teil 220:","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	if(product == 0 || product == 1){
		*f1 = product;
		*f2 = 1;
	}	

	else if(((product % 2) != 0) && ((product % 3) != 0)){
		*f1 = product;
		*f2 = 1;
	}

	else if((product % 2) == 0){
		*f1 = product / 2;
		*f2 = 2;
	}

	else if((product % 3) == 0){
		*f1 = product / 3;
		*f2 = 3;
	}
}

int main(){
    
	long eingabe = 0;
	long factor1 = 0;
	long factor2 = 0;

	printf(""Please enter an Integer: "");
	scanf(""%ld"", &eingabe);

	factorize(eingabe, &factor1, &factor2);


	printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, factor1, factor2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    for(int i = 0; i < zahl; i++){
		if(dest[i] == '\0' || src[i] == '\0') break;
	
		else dest[i] = src[i];
	}  
}

void umdrehen( char* str )
{
    //wie groß ist der String, der umgedreht werden soll?
	int counter = 0;

	for(int i = 0; str[i] != '\0'; i++){
		counter++;
	}

 	char temp[11] = """";

	//str wird umgedreht und in temp gespeichert
	for(int i = 0; i < counter; i++){
		temp[i] = str[counter - (i+1)];
	} 

	//der umgedrehte String wird zurück in str gespeichert
	for(int i = 0; i < counter; i++){
		str[i] = temp[i];
	}   
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>

void append(char* append_str, char* str, int* counter)
{

	for(int i = 0; i < 10; i++){
		
		if(str[i] == '\0') break;

		else if(str[i] == 'x' || str[i] == 'y' || str[i] == 'q');	
		else if(str[i] == 'X' || str[i] == 'Y' || str[i] == 'Q');

		else{			
			append_str[*counter] = str[i];
			*counter = *counter + 1;
		}
	}

	append_str[*counter] = '\0';
}


void removeThirdChar(char* string, char* str_ohneThirdChar, int* counter)
{
	int j = 0;

	for(int i = 0; i < *counter; i++)
	{
		if(string[i] == '\0') break;

		else if((i % 3) == 0)
		{
			str_ohneThirdChar[j] = string[i];
			j++;
		}  
	}

	str_ohneThirdChar[*counter] = '\0';
}


int main(int argc, char* argv[])
{

	char string[100];

	int index_counter = 0;

	for(int i = 1; i < argc; i++){
		append(string, argv[i], &index_counter);
	}
		
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string);


// new_string wird erstellt, um mit der Funktion removeThirdChar() das erste und dann jedes dritte Zeichen von string in new_string zu kopieren. 

	char new_string[100];

	removeThirdChar(string, new_string, &index_counter);
	
	printf(""Der neue String lautet: %s\n"", new_string);
}"
Müller,"Frank Michael",mueller.30@campus.tu-berlin.de,Beendet,"21. Juni 2020  22:29","28. Juni 2020  21:54","6 Tage 23 Stunden","12,72","char *daumen = (char*)zeigefinger - 2;
zeigefinger = (int*)daumen;",PPR,5,"Nichts, da Programm nicht kompiliert.","Ein C-String ist ein Array von char-Variablen.",5,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 3; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: 2; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: %; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: 1; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: 0; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: -; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 2(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: 2; Teil 130: 1; Teil 131: 0; Teil 132: 0; Teil 133: 3(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: 2; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 4(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 5(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 4(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: -; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize (long product, long *f1, long *f2) {


    *f1 = 0;
    *f2 = 0;
    if (product == 1){
        *f1= 1;
        *f2= 1;
    }
    for (long i = 1; i < product; i++){
        if (product % i == 0) {
            *f1 = i;
            *f2 = product / i;
            }
        }

    }



int main(){
    printf(""Please enter an Integer: "");
   long product = 0;
   long f1 = 0;
   long f2 = 0;
    scanf(""%ld"", &product);
    factorize (product, &f1, &f2);

    printf(""Possible Factors of %ld are %ld and %ld.\n"",product, f1, f2);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src) {
    for (int i = 0; i < zahl; i++) {
        if (dest[i] == '\0' || src[i] == '\0') {
            break;
        }

        dest[i] = src[i];
    }
}

void umdrehen( char* str ) {
    char a[50];
    int count = 0;
    int i = 0;

    while (str[count] != '\0') {
        count++;
    }

    while (i < count) {
        a[i] = str[i];
        i++;
    }
    for (i = 0; i < count; i++) {
        str[i] = a[count - 1 - i];

    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",-
Yu,Qi,qi.yu@campus.tu-berlin.de,Beendet,"21. Juni 2020  22:30","29. Juni 2020  00:07","7 Tage 1 Stunde","20,00","Ein C-String ist ein Array von char-Variablen.",5,"zeigefinger = (int*)((short*)zeigefinger - 4);",232,5,80,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long* f1, long* f2)
{
    //your factorization
    int i, j;
    if (product == 0 || product == 1)
    {
        i = 1;
        j = product;
    }
    else
    {
        for (i = 2; i <= (product / 2 + 1); i++)
        {
            if (i == (product / 2 + 1))
            {
                i = 1;
                j = product;
                break;
            }
            else if (product % i == 0)
            {
                j = product / i;
                break;
            }
        }
    }
    *f1 = i;
    *f2 = j;
}

int main() {
    printf(""Please enter an Integer: "");
    long num;
    scanf(""%ld"", &num);
    long x = 1, y = 1;
    long* m, * n;
    m = &x; n = &y;
    factorize(num, m, n);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", num, *n, *m);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
    for (int m = 0; m < zahl; m++) {
        if (dest[m] == '\0' || src[m] == '\0') {
            break;
        }
        dest[m] = src[m];
       
    }
}

void umdrehen(char* str)
{
    char temp;
    int size = 0;
    while (str[size] != '\0')
    {
        size++;
    }
    for (int m = 0; m < size/2; m++) {
        temp = str[m];
        str[m] = str[size - m - 1];
        str[size - m - 1] = temp;
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include<stdio.h>

int count = 0;
int main(int argc, char** argv)
{
    printf(""x,y,q und X,Y,Q aussortiert: "");
    for (int i = 1; i < argc; i++) {

        for (int j = 0; argv[i][j] != '\0'; j++) {

            if ((argv[i][j] != 'x') && (argv[i][j] != 'y') && (argv[i][j] != 'q') && (argv[i][j] != 'X') && (argv[i][j] != 'Y') && (argv[i][j] != 'Q')) {
                printf(""%c"", argv[i][j]);
            }
        }
    }


    printf(""\nDer neue String lautet: "");
    for (int i = 1; i < argc; i++) {

        for (int j = 0; argv[i][j] != '\0'; j++) {

            if (argv[i][j] != 'x' && argv[i][j] != 'y' && argv[i][j] != 'q' && argv[i][j] != 'X' && argv[i][j] != 'Y' && argv[i][j] != 'Q') {

                if (count % 3 == 0) {

                    printf(""%c"", argv[i][j]);

                }
                count++;
            }
        }
    }
    printf(""\n"");

    return 0;
}"
Reinhold,"Franz Peter Matthias",f.reinhold@campus.tu-berlin.de,Beendet,"21. Juni 2020  22:50","28. Juni 2020  23:44","7 Tage","13,14",5,"Ein C-String ist ein Array von char-Variablen.",5,232,5,"zeigefinger = (int*)((short*)zeigefinger - 4);","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: 1; Teil 38: 0; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: 1; Teil 70: 0; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: 0; Teil 103: %; Teil 104: %; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: 212; Teil 140: 0; Teil 141: 0; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 216; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: -; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
if(product % 2 == 0)
   {
   *f1 = product/2;
   *f2 = 2;
   }
else if(product % 3 == 0)
   { 
   *f1 = product/3;
   *f2 = 3;
   }
else if(product % 5 == 0)
   {
   *f1 = product/5;
   *f2 = 5;
   }
else if(product % 7 == 0)
   {
   *f1 = product/7;
   *f2 = 7;
   }
else if(product ==0)
   {
   *f1 = 0;
   *f2 = 0;
   }
else
  {
  *f1 = product;
  *f2 = 1;
  }
}

int main(){

long eingabe;
long faktor1 = 0;
long faktor2 = 0;
long* fak1 = &faktor1;
long* fak2 = &faktor2;

	printf(""Please enter an Integer: "");
        scanf(""%ld"", &eingabe);
        factorize(eingabe, fak1, fak2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, faktor1, faktor2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
int ende1 = 0;
int ende2 = 0;
if(zahl > 0)
 {
for(int j = 1; src[j] != '\0'; j++)
   {
   ende2 += 1;
   }
for(int i = 1; dest[i] != '\0'; i++)
   {
   ende1 += 1;
   }
 for(int i = 0; i <= zahl && i <= ende2 && i <= ende1 ; i++)
    {
    dest[i] = src[i];
    }
 }
}

void umdrehen( char* str )
{
   char test1[15];
int i;
int j;
int zahl = 0;
for(int k = 1; str[k] != '\0'; k++)
   {
   zahl += 1;
   }
for(i = 0, j = zahl; j >=0 ; i++, j--)
 {
  test1[j] = str[i];
 }
for(i = 0; str[i] != '\0'; i++)
 {
  str[i] = test1[i];
 }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",-
Hach,"Cosima Analina Theresa",c.hach@campus.tu-berlin.de,Beendet,"21. Juni 2020  23:55","26. Juni 2020  14:06","4 Tage 14 Stunden","19,46",0,5,80,"zeigefinger = (int*)((short*)zeigefinger - 4);","Ein C-String ist ein Array von char-Variablen.","Nichts, da Programm nicht kompiliert.","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 204; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>
void factorize(long product, long *f1, long *f2)
{
    // printf(""enter funktion\n"");
    int primes[25] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97};
    // printf(""primzahlen erstellt\n"");
    for (int i = 0; i < 8; i++){
        if (product == primes[i] || product == 1 || product == 0){
            // printf(""erste bedingung geprüft\n"");
            *f1 = product;
            *f2 = 1;
            break;
        } else if (product % primes[i] == 0) {
            // printf(""zweite bedingung geprüft\n"");
            *f1 = primes[i];
            *f2 = product/primes[i];
            break;
            
        }
    }
}
int main(){
    
    long eingabe;
    long factor1, factor2;
    printf(""Please enter an Integer: "");
    scanf(""%li"", &eingabe);
    factorize(eingabe, &factor1, &factor2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, factor2, factor1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){
    
    if(argc == 1) {
        printf(""null argument: %d"", argc);
        exit(5);
    }
    //char wort[] ={'H','a','l','l','o'};
    char *jederDritte =(char *)malloc(100);
    for(int i=0; i<100;i++){
        jederDritte[i]=0;}
    int k=0, cnt =0, n=0;
    // speicher besorgen mit 0 fuellen
    char *zensiert =(char *)malloc(100);
    for(int i=0; i<100;i++){
        zensiert[i]=0;}
    
for (int anzArg = 1; anzArg < argc; anzArg++) {
    
    
    for(int i=0; i< 100;i++){
        if ( argv[anzArg][i] == 0 ) break; // ende vom wort
         if (argv[anzArg][i]!='x'&& argv[anzArg][i]!='X'
            && argv[anzArg][i]!='y'&& argv[anzArg][i]!='Y'
            && argv[anzArg][i]!='q'&& argv[anzArg][i]!='Q')
            {
                
                zensiert[n++] = argv[anzArg][i];
                if((cnt%3) == 0)jederDritte[k++] = zensiert[n-1];
                cnt++;
            }
        
        
    }
    
    
    
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s"",zensiert);
    printf(""\n"");
    printf(""Der neue String lautet: %s"", jederDritte);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{ 
if(zahl<10){ 

  for(int i=0; i<zahl; i++){
	  	if('\0' == src[i]){
		break;
		}
  dest [i] = src[i];
  
	}
}
else {
 for(int i=0; i<10; i++){
	  	if('\0' == src[i]){
		break;
		}
  dest [i] = src[i];
  
	}
}
}
void umdrehen( char* str )
{
	int j=0;
	while(str [j]!='\0'){
		j++;
}
int b= j/2;

  for(int i=0; i<b;i++){
	 char a=str [i];
	 str [i]= str[j-i-1];
	  str [j-i-1]=a;
	  
  }

}

int main( int argc, char* argv[] )
{  

  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );

}"
Przestacki,"Helena Lara",przestacki@campus.tu-berlin.de,Beendet,"21. Juni 2020  23:58","27. Juni 2020  00:20","5 Tage","19,96",232,5,80,"zeigefinger = (int*)((short*)zeigefinger - 4);","Nichts, da Programm nicht kompiliert.",5,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 204; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
    // printf(""enter funktion\n"");
    int primes[25] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97};
    // printf(""primzahlen erstellt\n"");
    for (int i = 0; i < 8; i++){
        if (product == primes[i] || product == 1 || product == 0){
            // printf(""erste bedingung geprüft\n"");
            *f1 = product;
            *f2 = 1;
            break;
        } else if (product % primes[i] == 0) {
            // printf(""zweite bedingung geprüft\n"");
            *f1 = primes[i];
            *f2 = product/primes[i];
            break;
            
        }
    }
}

int main(){
	
    long eingabe;
    long factor1, factor2;
    printf(""Please enter an Integer: "");
    scanf(""%li"", &eingabe);
    factorize(eingabe, &factor1, &factor2);

	printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, factor2, factor1);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>


int main(int argc, char* argv[]){
	
	if(argc == 1) {
		printf(""null argument: %d"", argc);
		exit(5);
	}

	
	char *jederDritte =(char *)malloc(100);
	for(int i=0; i<100;i++){
		jederDritte[i]=0;}
	int k=0, cnt =0, n=0;

	// speicher besorgen mit 0 fuellen
	char *zensiert =(char *)malloc(100);
	for(int i=0; i<100;i++){
		zensiert[i]=0;}
	
for (int anzArg = 1; anzArg < argc; anzArg++) {
	
	
	for(int i=0; i< 100;i++){
		if ( argv[anzArg][i] == 0 ) break; // ende vom wort
 		if (argv[anzArg][i]!='x'&& argv[anzArg][i]!='X'
			&& argv[anzArg][i]!='y'&& argv[anzArg][i]!='Y'
			&& argv[anzArg][i]!='q'&& argv[anzArg][i]!='Q')
			{
				
				zensiert[n++] = argv[anzArg][i];
				if((cnt%3) == 0)jederDritte[k++] = zensiert[n-1];
				cnt++;
			}
		
		
	}
	
	
	
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s"",zensiert);
	printf(""\n"");
	printf(""Der neue String lautet: %s"", jederDritte);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
if(zahl<10){

  for(int i=0; i<zahl; i++){
  if('\0' == src[i]){
break;
}
  dest [i] = src[i];
 
}
}
else {
 for(int i=0; i<10; i++){
  if('\0' == src[i]){
break;
}
  dest [i] = src[i];
 
}
}
}
void umdrehen( char* str )
{
int j=0;
while(str [j]!='\0'){
j++;
}
int b= j/2;

  for(int i=0; i<b;i++){
char a=str [i];
str [i]= str[j-i-1];
 str [j-i-1]=a;
 
  }

}

int main( int argc, char* argv[] )
{  

  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );

}"
Xiao,Yi,yi.xiao@campus.tu-berlin.de,Beendet,"22. Juni 2020  00:12","28. Juni 2020  23:56","6 Tage 23 Stunden","12,32","Beim Lesen merkt sich ein C-String die aktuelle Position.",5,5,"23 2",5,"zeigefinger = (int*)((short*)zeigefinger - 4);","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: -; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 2(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: 2; Teil 130: 1; Teil 131: 0; Teil 132: 0; Teil 133: 3(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: 200; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 4(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 5(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: 208; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 4(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 5(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long* f1, long* f2)
{
	long j = 1;
	if (product == 1) {
		*f1 = 1;
		*f2 = 1;
	}
	for (long i = 2; i <= product; i++) {
		if (product%i == 0) {
			*f1 = i;
			j = product / i;
			*f2 = j;
			break;
		}
	}
}

int main() {
	long p = 0;
	long k1 = 0;
	long k2 = 0;
	long* fp1 = &k1;
	long* fp2 = &k2;
	printf(""Please enter an Integer: "");
	scanf(""%ld"",&p);
	factorize(p,fp1,fp2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",p, *fp2, *fp1);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
    char ss[50];
    int count; 
    int sn = 0;
    for(count = 0; count < zahl; count++)
    {   
        ss[sn] = src[count];
        sn++;
        
    } 
    ss[sn] = '\0';
    dest = ss;

}

void umdrehen(char* str)
{
    int i = 0;
    int len = 0;
    while (str[i++] != '\0')
    len = i;
	printf(""%d\n"", len); 

	char* p1;
	char* p2;
	p1 = str;				
	p2 = str + len - 1;	
	
	while (p1 < p2)				
	{
		char c = *p1;
		*p1 = *p2;				
		*p2 = c;
		p1++;						
		p2--;						
	}
}

int main(int argc, char* argv[])
{
    char test[11] = ""0123456789"";
    printf(""Das Original ist: %s \n"", test);
	ersetzen(test, atoi(argv[1]), argv[2]);
    printf(""Ersetzt : %s \n"", test);
    umdrehen(test);
    printf(""Rückwärts : %s \n"", test);
}","#include <stdio.h>

void main(int argc, char* argv[]) {
    char str[50];
    int count; 
    int sn = 0;
    int n =0;
    for(count = 1; count < argc; count++)
    {
        for(n=0; argv[count][n]!='\0'; n++){   
            str[sn] = argv[count][n];
            sn++;
        }
    } 
    str[sn] = '\0';

    int j, k;
    printf(""x,y,q und X,Y,Q aussortiert: "");

    for (j = k = 0; str[j] != '\0'; j++) {
        if ((int)str[j] != (int)'x' && (int)str[j] != (int)' ' && (int)str[j] != (int)'y' && (int)str[j] != (int)'q' && (int)str[j] != (int)'X' && (int)str[j] != (int)'Y' && (int)str[j] != (int)'Q') {
            str[k] = str[j];
            k++;
        }
    }
    str[k] = '\0';
    printf(""%s\n"", str);

    int m, y;
    for (m = y = 0; str[m] != '\0'; m++) {
        if (m % 3 == 0 || m == 0) {
            str[y] = str[m];
            y++;
        }

    }
    str[y] = '\0';
    printf(""Der neue String lautet: %s"", str);
}"
Zou,Yukang,yukang.zou@campus.tu-berlin.de,Beendet,"22. Juni 2020  00:23","24. Juni 2020  20:41","2 Tage 20 Stunden","19,75","zeigefinger = (int*)((short*)zeigefinger - 4);",5,5,"Nichts, da Programm nicht kompiliert.","Ein C-String ist ein Array von char-Variablen.",232,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: -; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: %; Teil 213: %; Teil 214: %; Teil 215: %; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	if ((product % 2 != 0) || (product == 0) || (product == 1)) 
	{
	    *f1 = 1;
		*f2 = product;
	}
	else {
		*f1 = product / 2;
		*f2 = 2;
	}
}

int main(){
	long number = 0;
	long a = 0;
	long b = 0;
	long* f1 = &a;
	long* f2 = &b;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &number);
	factorize(number, f1, f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", number, *f1, *f2);
	return 0;
}","#include <stdio.h>
int main(int argc, char* argv[]) { 
	char str1[100];
	int k =0;
	for (int i = 1; i < argc; i++) {
		for (int j = 0; argv[i][j] != '\0'; j++) {
			if ((argv[i][j] != 'x') && (argv[i][j] != 'y') && (argv[i][j] != 'q') && (argv[i][j] != 'X') && (argv[i][j] != 'Y') && (argv[i][j] != 'Q')) {
				str1[k] = argv[i][j];
				k++;
			}
		}
	}
	str1[k] = '\0';
	printf(""x,y,q und X,Y,Q aussortiert: %s"", str1);
	char str2[100];
	int i = 0, j = 0;
	while ((str1[i] != '\0') && (i < k)) {
		str2[j] = str1[i];
		i += 3;
		j++;
	}
	str2[j] = '\0';
	printf(""\nDer neue String lautet: %s"", str2);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
 	int idx = 0;
	while ((dest[idx] != '\0') && (idx < zahl)) {
		dest[idx] = src[idx];
		idx++;
	} 
}

void umdrehen( char* str )
{
  	int idx = 0;
	while (str[idx] != '\0') {
		idx++;
	}
	char temp;
	for (int i = 0; i < (idx / 2); i++) {
		temp = str[i];
		str[i] = str[idx - i - 1];
		str[idx - i - 1] = temp;
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Zahir,Oussama,o.zahir@campus.tu-berlin.de,Beendet,"22. Juni 2020  00:34","27. Juni 2020  10:21","5 Tage 9 Stunden","19,70",80,5,232,"zeigefinger = (int*)((short*)zeigefinger - 4);",5,5,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: -; Teil 135: -; Teil 136: -; Teil 137: -; Teil 138: -; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: %; Teil 196: %; Teil 197: %; Teil 198: %; Teil 199: 14; Teil 200: %; Teil 201: 2; Teil 202: 1; Teil 203: 0; Teil 204: 0; Teil 205: %; Teil 206: -; Teil 207: -; Teil 208: -; Teil 209: -; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include<stdio.h>

void factorize(long product, long *f1, long *f2)
{
     for(long i=2; i<product; ++i){
         if(product%i == 0){
            *f1=(product/i);
            *f2=i;
            i=product;
         }
     }
     
}

int main(){
    
        long z=0;
	printf(""Please enter an Integer: "");
	scanf(""%ld*"", &z);
	long z1=z;
	long z2=1;
	factorize(z, &z1, &z2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", z, z1, z2);
	return 0;
}","#include <stdio.h>




void kopieren(char s[], char r[], int* f, int* z)

{
            
     for(int i=0; i<*z; ++i)
     {   
             r[*f]=s[i];
             *f+=1;         
     }
}

void zaehlen(char s[], int* p)
{
     for(int i=0; s[i]!=0; ++i)
     {
         *p+=1;
     }
}




int main(int argc, char *argv[])
{       
    char r[100];
    int z=0;
    int* p_z=&z;
    int f=0;
    int* p_f=&f;
    
    for(int i=1; i<argc; ++i)
    {
        zaehlen(argv[i], p_z);        
        kopieren(argv[i], r, p_f, p_z);    
        z=0;
    }     

    int d=0;
    int* p_d=&d;
    for(int i=0; r[i]!=0; ++i)
     {
         if((!(r[i]-120)) || (!(r[i]-121)) || (!(r[i]-113)) || (!(r[i]-88)) || (!(r[i]-89)) || (!(r[i]-81)))
         {
            r[i]=r[i+1];
            for(int j=i+1;r[j]!=0;++j)
            {
                r[j]=r[j+1];
            }  
            --i;
            *p_d+=1;
         }
     }
    int a=((f-d)/3)+1;
    r[f-d]=0;
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", r); 
    

    
    for(int i=1; i< a; ++i)
    {
        static int b=0;
        r[i]=r[b+3];
        b+=3;
    }
    r[a]=0;
    printf(""Der neue String lautet: %s\n"", r); 

}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
     for(int i=0; (i<zahl) && (src[i]!=0) && (dest[i]!=0); ++i)
     {
         dest[i]=src[i];
     } 
}

void umdrehen( char* str )
{ 
     int a=0;
     int* p_a=&a;
     
     for(int i=0; str[i]!=0; ++i)
     {
         *p_a+=1;
     }
     

     
     if(!(*p_a%2))
     {     
         char s[*p_a/2];
         for(int i=0; i<(*p_a)/2; ++i)
         {         
         s[((*p_a/2)-1)-i]=str[i];    
         }  
         for(int i=0; i<(*p_a/2); ++i)
         {
         str[i]=str[(*p_a-1)-i];
         }
         for(int i=*p_a-1; i>=(*p_a/2); --i)
         {
         str[i]=s[i-(*p_a/2)];
         }
     }
     else if((*p_a%2))
     {
         char s[*p_a/2];
         for(int i=0; i<((*p_a)/2); ++i)
         {         
         s[((*p_a/2)-1)-i]=str[i];    
         }  
         for(int i=0; i<(*p_a/2); ++i)
         {
         str[i]=str[(*p_a-1)-i];
         }
         for(int i=*p_a; i>(*p_a/2); --i)
         {
         str[i]=s[i-(*p_a/2)-1];
         }
     }
}


int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Persson,"Cecilia Mimmi",bd6cc6f9b59b8626dcb74df8423c76b4,Beendet,"22. Juni 2020  00:37","29. Juni 2020  00:07","6 Tage 23 Stunden","12,63",5,"Ein C-String ist ein Array von char-Variablen.",80,5,5,23,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 11; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 12; Teil 57: %; Teil 58: %; Teil 59: 1; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 11; Teil 68: 208; Teil 69: %; Teil 70: %; Teil 71: 0; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 12; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: -1; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: 212; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 13; Teil 101: -; Teil 102: %; Teil 103: %; Teil 104: %; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 2(14); Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: 2; Teil 119: 1; Teil 120: 0; Teil 121: -1; Teil 122: 3(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: 200; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 4(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 204; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 5(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: -; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>
#include <stdlib.h>

void factorize(long product, long *f1, long *f2)
{
    for (int i = 2; i <= labs(((product)^(1/2))); i++){
        if(product %i == 0){
            *f1 = product/i;
            *f2 = product/(*f1);
            return;
            }
        }
    *f1 = 1;
    *f2 = product;
    
}

int main(){
    long eingabe = 0;
    long a;
    long b;
    long* factor1 = &a;
    long* factor2 = &b;
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &eingabe);
    factorize(eingabe, factor1, factor2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, *factor1, *factor2);
    return 0;
    
}","#include <stdio.h>
#include <stdlib.h>


int main(int argc, char** argv){

    char* inputWords[30];
    for(int i = 0; i < 30; i++){
        inputWords[i] = NULL;
    }
    
    char wholeString[150];
    for(int i = 0; i < argc-1; i++){
        inputWords[i] = argv[i+1];
    }

    
    printf(""x,y,q und X,Y,Q aussortiert: "");

    int letterCount = 0;
    for(int x = 0; inputWords[x] != NULL; x++){
        for(int y = 0; inputWords[x][y] != '\0'; y++){
            if(inputWords[x][y] != 'x' && inputWords[x][y] != 'y' && inputWords[x][y] != 'q' && inputWords[x][y] != 'X' && inputWords[x][y] != 'Y' && inputWords[x][y] != 'Q') {
            wholeString[letterCount] = inputWords[x][y];
            letterCount++;
            printf(""%c"", wholeString[letterCount-1]);
    }
    }
    }    
    printf(""\nDer neue String lautet: "");
    char newString[100];
    int newStringCounter = 0;
    for(int z = 0; z < letterCount; z++) {
        if(z%3 == 0){
            newString[newStringCounter] = wholeString[z];
            newStringCounter++;
            printf(""%c"", newString[newStringCounter-1]);
        }
    }
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Wegner,"Tabea Elke Barbara",tabea.eb.wegner@campus.tu-berlin.de,Beendet,"22. Juni 2020  10:21","22. Juni 2020  18:16","7 Stunden 55 Minuten","14,24","Nichts, da Programm nicht kompiliert.",P,"*zeigefinger = leute;",5,"Ein C-String ist ein Array von char-Variablen.","23 2","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: %; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: 204; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: 208; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: 212; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: -; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: 208; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	// Your factorization
}

int main(){
	printf(""Please enter an Integer: "");
	printf(""Possible Factors of %ld are %ld and %ld.\n"");
	return 0;
}","#include <stdio.h>

int main (int argc, char* argv[]){
	char zielstr[100];
	int laenge =0;
	char* zielpoi = zielstr;
	for ( int a = 1; a < argc; a++){
		while ( *argv[a] != 0 ){
		if (*argv[a] != 'x'&& *argv[a] != 'y'&& *argv[a] != 'q'&& *argv[a] != 'X'&& *argv[a] != 'Y'&& *argv[a] != 'Q'){
		*zielpoi = * argv[a];
		zielpoi++;
		laenge++;}
		argv[a]++;
		}
	}
	*zielpoi = 0;
	
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", zielstr);
	char shorty [100];
	int b;
	for (b = 0 ; b<laenge; b = b+3){
		shorty [b/3] = zielstr[b];
	}
	shorty[b/3]=0;
	printf(""Der neue String lautet: %s\n"", shorty); 
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  while ( *dest !=0 && zahl > 0 && *src !=0) {
	*dest = *src;
	dest++;
	src++;
	zahl--;}
  
}

void umdrehen( char* str )
{ char* anf = str;
	char* end = str;
	char tauschi;
	while ( *end != 0) end++;
	end--;
	while ( end > anf ) {
		tauschi = *anf;
		*anf = *end;
		*end = tauschi;
		anf++;
		end--;
	}
	

  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Wappenschmitt,"Vincent Kieran",v.wappenschmitt@campus.tu-berlin.de,Beendet,"22. Juni 2020  10:28","26. Juni 2020  16:23","4 Tage 5 Stunden","19,50",5,5,80,5,5,"zeigefinger = (int*)((short*)zeigefinger - 4);","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	for(long i=2; i<((product/2)); i++){
		if(((product%i)==0)){
			*f2 = i;
			*f1 = product/i;
			return;
		}
	}
	*f1 = product;
	*f2 = 1;
}

int main(){
	long zahl;
	long f1;
	long f2;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &zahl);
	factorize(zahl, &f1, &f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", zahl, f1, f2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  for (int i = 0; i < zahl; i++){
  	if((dest[i] != '\0') && (src[i] != '\0')){
  		dest[i] = src[i];
  	}else{
  		return;
  	}
  }
}

void umdrehen( char* str )
{
	int i = 0;
  for( ; str[i] != '\0'; i++);
  char tmp[i];
 
  int a = 0;
  int b = i;
  for( ; a<b; a++){
  	tmp[a] = str[i-1];
  	i--;
  }
 
  tmp[a] = '\0';
  b = a;
  
  for(int i=0 ; i<b; i++){
  	str[i] = tmp[i];
  }
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>

void zusammen(char** src, char dest[], int anzahl){
	int k = 0;
	for(int i = 1; i < anzahl; i++){
		for(int j = 0; src[i][j] != '\0'; j++){
			if((src[i][j] != 'x') && (src[i][j] != 'y') && (src[i][j] != 'q') && (src[i][j] != 'X') && (src[i][j] != 'Y') && (src[i][j] != 'Q') ){
				dest[k] = src[i][j];
				k++;
			}     
		}
	}
	dest[k] = '\0';
}
void neueKette(char src[], char dest[]){
	int j = 0;
	for(int i = 0; src[i] != '\0'; i++){
		if((i%3 == 0) || (i == 0)){
			dest[j] = src[i];
			j++;
		}
	}
	dest[j] = '\0';
}

int main( int argc, char* argv[] ){
	if(argc>1){
		char zeichenkette[100];
		zusammen(argv, zeichenkette, argc);
		printf(""x,y,q und X,Y,Q aussortiert: %s\n"", zeichenkette);
		char neuek[100];
		neueKette(zeichenkette, neuek);
		printf(""Der neue String lautet: %s\n"", neuek);
		
	}else{
		printf(""Keine Parameter uebergeben!\n"");
	}
}"
Delzer,Ole,ole.delzer@campus.tu-berlin.de,Beendet,"22. Juni 2020  12:23","28. Juni 2020  20:10","6 Tage 7 Stunden","18,60","Ein C-String ist ein Array von char-Variablen.","Nichts, da Programm nicht kompiliert.",5,232,"zeigefinger = (int*)((short*)zeigefinger - 4);",5,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 12; Teil 57: %; Teil 58: %; Teil 59: 1; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 13; Teil 68: 208; Teil 69: %; Teil 70: %; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 12; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: 0; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 13; Teil 90: -; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 2(14); Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: 2; Teil 108: 1; Teil 109: 0; Teil 110: 0; Teil 111: 3(14); Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: 212; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 13; Teil 134: -; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 2(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 3(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: 200; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 4(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 5(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	// Your factorization
	char positive = 1;
	if(product < 0){
		positive = 0;
		product = -product;
	}
	for(long i=2; i<product; i++){
		if(product%i == 0){
			if(positive){
				*f2 = product / i;
			} else {
				*f2 = - product / i;
			}
			*f1 = i;
			return;
		}
	}
	if(positive){
		*f2 = product;
	} else {
		*f2 = -product;
	}
	*f1 = 1;
}

int main(){
	long product;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &product);
	long f1, f2;
	factorize(product, &f1, &f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, f2, f1);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{

  for(int i=0; i<zahl; i++){
    if(*(src + i) != '\0' && *(dest + i) != '\0'){
      dest[i] = src[i];
    } else {
      return;
    }
  }
}

void umdrehen( char* str )
{
  int length = 0;
  while(*(str + length) != '\0'){
    length++;
  }
  char reversed[length];

  int j = length - 1;
  for(int i=0; i<length && j>=0; i++){
    if(*(str+i) == '\0'){
      j--;
    }
    reversed[i] = str[j];
    j--;
  }

  for(int i=0; i<length; i++){
    str[i] = reversed[i];
  }
}

int main( int argc, char* argv[] )
{
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
  return 0;
}","#include <stdio.h>

int main( int argc, char* argv[] ){

  int totallength = 0;;
  for(int i=1; i<argc; i++){
    int count = 0;
    for(int j=0; argv[i][j] != '\0'; j++){
      count++;
    }
    totallength += count;
  }

  char combined[totallength];
  char thirds[totallength];
  
  int counter = 0;
  int k = 0;
  for(int i=1; i<argc; i++){
    for(int j=0; argv[i][j] != '\0'; j++){
      if(argv[i][j] != 'x' && argv[i][j] != 'y' && argv[i][j] != 'q' && argv[i][j] != 'X' && argv[i][j] != 'Y' && argv[i][j] != 'Q'){
        combined[counter] = argv[i][j];
        if(counter%3 == 0){
          thirds[k] = combined[counter];
          k++;
        }
        counter++;
      }
    }
  }
  combined[counter] = '\0';
  thirds[k] = '\0';

  printf(""x,y,q und X,Y,Q aussortiert: %s\n"", combined);

  printf(""Der neue String lautet: %s\n"", thirds);
}"
Zhang,Lujie,lujie.zhang@campus.tu-berlin.de,Beendet,"22. Juni 2020  13:30","28. Juni 2020  23:35","6 Tage 10 Stunden","18,75",80,5,5,5,"Beim Lesen merkt sich ein C-String die aktuelle Position.","zeigefinger = (int*)((short*)zeigefinger - 4);","子问题 1：9; 子问题 2：-; 子问题 3：-; 子问题 4：-; 子问题 5：-; 子问题 6：-; 子问题 7：-; 子问题 8：-; 子问题 9：-; 子问题 10：-; 子问题 11：-; 子问题 12：10; 子问题 13：%; 子问题 14：3; 子问题 15：2; 子问题 16：1; 子问题 17：0; 子问题 18：%; 子问题 19：%; 子问题 20：%; 子问题 21：%; 子问题 22：%; 子问题 23：11; 子问题 24：200; 子问题 25：%; 子问题 26：%; 子问题 27：%; 子问题 28：%; 子问题 29：%; 子问题 30：%; 子问题 31：%; 子问题 32：%; 子问题 33：%; 子问题 34：12; 子问题 35：%; 子问题 36：2; 子问题 37：%; 子问题 38：%; 子问题 39：%; 子问题 40：%; 子问题 41：%; 子问题 42：%; 子问题 43：%; 子问题 44：%; 子问题 45：13; 子问题 46：204; 子问题 47：%; 子问题 48：%; 子问题 49：%; 子问题 50：%; 子问题 51：%; 子问题 52：%; 子问题 53：%; 子问题 54：%; 子问题 55：%; 子问题 56：11; 子问题 57：%; 子问题 58：%; 子问题 59：%; 子问题 60：%; 子问题 61：%; 子问题 62：%; 子问题 63：%; 子问题 64：%; 子问题 65：%; 子问题 66：%; 子问题 67：12; 子问题 68：%; 子问题 69：%; 子问题 70：1; 子问题 71：%; 子问题 72：%; 子问题 73：%; 子问题 74：%; 子问题 75：%; 子问题 76：%; 子问题 77：%; 子问题 78：13; 子问题 79：208; 子问题 80：%; 子问题 81：%; 子问题 82：%; 子问题 83：%; 子问题 84：%; 子问题 85：%; 子问题 86：%; 子问题 87：%; 子问题 88：%; 子问题 89：11; 子问题 90：%; 子问题 91：%; 子问题 92：%; 子问题 93：%; 子问题 94：%; 子问题 95：%; 子问题 96：%; 子问题 97：%; 子问题 98：%; 子问题 99：%; 子问题 100：12; 子问题 101：%; 子问题 102：%; 子问题 103：%; 子问题 104：0; 子问题 105：%; 子问题 106：%; 子问题 107：%; 子问题 108：%; 子问题 109：%; 子问题 110：%; 子问题 111：13; 子问题 112：212; 子问题 113：%; 子问题 114：%; 子问题 115：%; 子问题 116：%; 子问题 117：%; 子问题 118：%; 子问题 119：%; 子问题 120：%; 子问题 121：%; 子问题 122：11; 子问题 123：%; 子问题 124：%; 子问题 125：%; 子问题 126：%; 子问题 127：%; 子问题 128：%; 子问题 129：%; 子问题 130：%; 子问题 131：%; 子问题 132：%; 子问题 133：2(14); 子问题 134：-; 子问题 135：%; 子问题 136：%; 子问题 137：%; 子问题 138：%; 子问题 139：%; 子问题 140：2; 子问题 141：1; 子问题 142：0; 子问题 143：0; 子问题 144：3(14); 子问题 145：%; 子问题 146：%; 子问题 147：%; 子问题 148：%; 子问题 149：%; 子问题 150：200; 子问题 151：%; 子问题 152：%; 子问题 153：%; 子问题 154：%; 子问题 155：4(14); 子问题 156：%; 子问题 157：%; 子问题 158：%; 子问题 159：%; 子问题 160：%; 子问题 161：%; 子问题 162：%; 子问题 163：%; 子问题 164：%; 子问题 165：%; 子问题 166：5(14); 子问题 167：%; 子问题 168：%; 子问题 169：%; 子问题 170：%; 子问题 171：%; 子问题 172：208; 子问题 173：%; 子问题 174：%; 子问题 175：%; 子问题 176：%; 子问题 177：3(14); 子问题 178：%; 子问题 179：%; 子问题 180：%; 子问题 181：%; 子问题 182：%; 子问题 183：%; 子问题 184：%; 子问题 185：%; 子问题 186：%; 子问题 187：%; 子问题 188：6(14); 子问题 189：%; 子问题 190：%; 子问题 191：%; 子问题 192：%; 子问题 193：%; 子问题 194：-; 子问题 195：-; 子问题 196：-; 子问题 197：-; 子问题 198：-; 子问题 199：14; 子问题 200：%; 子问题 201：%; 子问题 202：%; 子问题 203：%; 子问题 204：%; 子问题 205：%; 子问题 206：%; 子问题 207：%; 子问题 208：%; 子问题 209：%; 子问题 210：15; 子问题 211：%; 子问题 212：%; 子问题 213：%; 子问题 214：%; 子问题 215：%; 子问题 216：%; 子问题 217：%; 子问题 218：%; 子问题 219：%; 子问题 220：%","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	if ((product % 2 != 0) || (product == 0) || (product == 1))
    {
        *f1 = 1;
        *f2 = product;
    }
    else
    {
        *f1 = product / 2;
        *f2 = 2;
    }
}

int main(){
    long number = 0;
    long i = 0;
    long j = 0;
    long *f1 = &i;
    long *f2 = &j;
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &number);
    factorize(number,f1,f2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"",number,*f1,*f2);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    int i = 0;
	while ((*dest != '\0') && (i < zahl)) 
	{
		*dest = *src;
		dest++;
		src++;
		i++;
	}
}

void umdrehen( char* str )
{
  int i = 0;
	while (str[i++]);
	i--;
	int min = 0;
	int max = i - 1;
	while (min < max)
	{
		char temp = str[min];
		str[min] = str[max];
		str[max] = temp;
		min++;
		max--;
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include<stdio.h>

int main(int argc, char** argv)
{
    int i, j;
    int n = 0;
    char a[50];
    char b[50];
    for (i = 1; i < argc; i++)
    {
        for (j = 0; argv[i][j] != '\0'; j++)
        {
            if ((argv[i][j] != 'x') &&
                (argv[i][j] != 'y') &&
                (argv[i][j] != 'q') &&
                (argv[i][j] != 'X') &&
                (argv[i][j] != 'Y') &&
                (argv[i][j] != 'Q'))
            {
                a[n] = argv[i][j];
                n++;
            }
        }
    }
    a[n] = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s"", a);
    for (i = 0, j = 0; (a[i] != '\0') && (i < n); i += 3, j++) {
        b[j] = a[i];
    }
    b[j] = '\0';
    printf(""\nDer neue String lautet: %s"", b);
}"
Chen,Jingtian,jingtian.chen@campus.tu-berlin.de,Beendet,"22. Juni 2020  19:45","24. Juni 2020  23:42","2 Tage 3 Stunden","19,32",232,5,5,"zeigefinger = (int*)((short*)zeigefinger - 4);","Ein C-String ist ein Array von char-Variablen.",5,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: -; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 2(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: 2; Teil 130: 1; Teil 131: 0; Teil 132: 0; Teil 133: 3(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: 200; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 4(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 5(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: 204; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 4(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 5(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	for (int j = 2;  j < product; j++)
	{
		if(product%j != 0)
		{
			
		}
		else
		{
			*f1 = product / j;
			*f2 = j;
			return;
		}
	}
	*f1 = product;
	*f2 = 1;
	return;
}

int main(){
	long i;
	printf(""Please enter an Integer: "");
	scanf(""%li"", &i);
	long faktor1;
	long faktor2;
	long *fak1 = &faktor1;
	long *fak2 = &faktor2;
	factorize(i, fak1, fak2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", i, faktor1, faktor2);
	return 0;
}","#include <stdio.h>


int main(int argc, char *argv[])
{
	char str1[100] = """";
	char str2[100] = """";
	int p = 0;
    for(int i = 1; i < argc; i++)
    {
    	for(int j = 0; argv[i][j] != '\0'; j++)
    	{
    		if(
			(argv[i][j] != 'x') &&
			(argv[i][j] != 'y') &&
			(argv[i][j] != 'q') &&
			(argv[i][j] != 'X') &&
			(argv[i][j] != 'Y') &&
			(argv[i][j] != 'Q')
			)
    		{
				str1[p] = argv[i][j]; 
    			p++;
			}	
		}
	}
	
	printf(""x,y,q und X,Y,Q aussortiert: "");
	for (int k = 0; str1[k] != '\0'; k++)
	{
		printf(""%c"",str1[k]);	
	}

	printf(""\nDer neue String lautet: "");
	for (int k = 0; str1[3 * k] != '\0'; k++)
	{
		str2[k] = str1[3 * k];
		printf(""%c"",str2[k]);	
	}
    return 0;
}","#include <stdio.h>
#include <stdlib.h>

//src in dest copy
void ersetzen(char* dest, int zahl, char* src)
{
	for(int i = 0; i< zahl && src[i] != '\0' && dest[i] != '\0'; i++)
	{
		dest[i] = src[i];
	}
}

void umdrehen( char* str )
{
	int num = 0;
	for(int i=0; str[i] != '\0'; i++)
	{
		num++;
	}
	for(int i=0; i < num/2; i++)
	{
		char c;
		c = str[i];
		str[i] = str[num -1 - i];
		str[num - 1 - i] = c;
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Szczepanski,Michal,m.szczepanski@campus.tu-berlin.de,Beendet,"22. Juni 2020  20:07","26. Juni 2020  12:35","3 Tage 16 Stunden","14,44",5,80,232,5,5,"Ein C-String ist ein Array von char-Variablen.","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 208; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: ; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 216; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 224; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 2(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 11; Teil 134: -; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 2(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: 2; Teil 152: 1; Teil 153: 0; Teil 154: 0; Teil 155: 3(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: 200; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 4(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 5(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: 208; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: ; Teil 189: ; Teil 190: ; Teil 191: ; Teil 192: ; Teil 193: ; Teil 194: ; Teil 195: ; Teil 196: ; Teil 197: ; Teil 198: ; Teil 199: ; Teil 200: ; Teil 201: ; Teil 202: ; Teil 203: ; Teil 204: ; Teil 205: ; Teil 206: ; Teil 207: ; Teil 208: ; Teil 209: ; Teil 210: 15; Teil 211: -; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: -; Teil 217: -; Teil 218: -; Teil 219: -; Teil 220: -","#include <stdio.h>

char isPrime(long num){
	for(int i = 2; i < num; i++){
		if(num % i == 0) return 0;
	}
	return 1;
}

void factorize(long product, long *f1, long *f2)
{
	if(product == 0 || product == 1){
		*f1 = product;
		*f2 = 1;
	}
	else if(isPrime(product)){
		*f1 = product;
		*f2 = 1;
	}
	else{
		for(int i = 2; i < product; i++){
			if(product % i == 0){
				*f1 = i;
				*f2 = product/i;
				break;
			}
		}
	}
}

int main(){
	long zahl;
	long fak2 = 1;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &zahl);
	long fak1 = zahl;
	long *faktor1 = &fak1;
	long *faktor2 = &fak2;
	factorize(zahl, faktor1, faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", zahl, *faktor2, *faktor1);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	for(int i = 0; i < zahl; i++){
		if(dest[i] == '\0' || src[i] == '\0'){
			break;
		}
		dest[i] = src[i];
	}
}

void umdrehen( char* str )
{
	char array[50];
	int length = 0;
	while(str[length] != '\0'){
		length ++;
	}
	for(int i = 0; i < length; i++){
		array[i] = str[i];
	}
	int j = length-1;
	for(int i = 0; i < length; i++){
		str[i] = array[j];
		j--;
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>

int main(int argc, char* argv[]){
	
	
char string1[100];
int counter = 0;

	for(int i=1; i<argc; i++){
		for(int j=0; argv[i][j]!='\0'; j++){
			if(argv[i][j] != 'X' &&argv[i][j] != 'Y' &&argv[i][j] != 'Q' &&argv[i][j] != 'x' &&argv[i][j] != 'y' &&argv[i][j] != 'q'&&argv[i][j]!='\0'){
				string1[counter] = argv[i][j];
				counter++;
			}
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: "");
	for(int i=0; i<counter; i++){
		printf(""%c"", string1[i]);
	}

	
	
	
	printf(""\n"");

	int liczba=0;

	printf(""Der neue String lautet: "");

	for(int i=0; i<counter; i++){
		if(liczba%3==0){
			printf(""%c"", string1[i]);
		}
		liczba++;
	}
}"
Traupe,Franka,6829f723e70eccea0f21004e7bd77aee,Beendet,"23. Juni 2020  13:49","27. Juni 2020  16:13","4 Tage 2 Stunden","20,00",5,232,"Ein C-String ist ein Array von char-Variablen.","Nichts, da Programm nicht kompiliert.",5,5,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	if(product==0){
		*f1=0;
		*f2=1;
	}else if(product==1){
		*f1=1;
		*f2=1;
	}else if(product==-1){
		*f1=-1;
		*f2=1;
	}else{
		int i=2;
		while(product%i!=0){
			i++;
		}
		*f2=i;
		*f1=product/i;
	}
}

int main(){
	printf(""Please enter an Integer: "");
	long zahl=0;
	scanf(""%ld"",&zahl);
	long f1=0;
	long f2=0;
	factorize(zahl,&f1,&f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",zahl,f1,f2);
	return 0;
}","#include <stdio.h>

int main(int argc, char** argv){
	int z=0;
	char loesung[100];

	for(int i=1;i<argc;i++){
		for(int j=0;argv[i][j]!='\0';j++){
			if(argv[i][j]!='x'&&argv[i][j]!='y'&&argv[i][j]!='q'&&argv[i][j]!='X'&&argv[i][j]!='Y'&&argv[i][j]!='Q'){
				loesung[z]=argv[i][j];
				z++;
			}
		}
	}
	loesung[z]='\0';

	printf(""x,y,q und X,Y,Q aussortiert: "");

	for(int i=0;loesung[i]!='\0';i++){
		printf(""%c"",loesung[i]);
	}

	char neu[100];
	int j=0;
	for(int i=0;loesung[i]!='\0';i++){
		if(i%3==0){
			neu[j]=loesung[i];
			j++;
		}
	}
	neu[j]='\0';


	printf(""\nDer neue String lautet: "");
	for(int i=0;neu[i]!='\0';i++){
		printf(""%c"",neu[i]);
	}
	printf(""\n"");
		
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
  for(int i=0;i<zahl;i++){
    if(dest[i]=='\0') break;
    if(src[i]=='\0') break;
    dest[i]=src[i];
  } 
}

void umdrehen( char* str )
{
  int length=0;
  while(str[length]!='\0')length++;

  char new[length+1];

  for(int i=0;str[i]!='\0';i++){
    new[length-1-i]=str[i];
  }
  new[length]='\0';

  for(int i=0;new[i]!='\0';i++){
    str[i]=new[i];
  }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test);
}"
Hansel,"Karsten Siegfried",hansel@campus.tu-berlin.de,Beendet,"23. Juni 2020  15:50","28. Juni 2020  15:27","4 Tage 23 Stunden","4,79","zeigefinger = (int*)((short*)zeigefinger - 4);","Nichts, da Programm nicht kompiliert.",80,5,"Ein C-String ist ein Array von char-Variablen.",232,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: %; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 11; Teil 46: %; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 12; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 11; Teil 68: %; Teil 69: %; Teil 70: %; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 12; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: %; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 2(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 3(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 4(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 2(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 4(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 5(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: %; Teil 196: %; Teil 197: %; Teil 198: %; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: -; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: -; Teil 217: -; Teil 218: -; Teil 219: -; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	// Your factorization
}

int main(){
	printf(""Please enter an Integer: "");
	printf(""Possible Factors of %ld are %ld and %ld.\n"");
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
 int h;
  for(int i = 0; src[i] != '\0';i++) h++;

  for(int i = 0; i < zahl && i < h  ;i++){
      if(dest[i] != '\0')dest[i] = src[i];}
      
}

void umdrehen( char* str )
{
 int h = -1;
for(int i = 0; str[i] != '\0';i++) h++;
char s[h];
for(int i = 0; i <= h; i++) s[i] = str[i];

  for(int i = 0; i <= h; i++) str[i] = s[h-i]; 
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
 
void sort(char* str){



for(int i = 0; str[i] != '\0'; i++){

   if(str[i] == 'x' || str[i] == 'y' || str[i] == 'q' || str[i] == 'X' || str[i] == 'Y' || str[i] == 'Q'){ 
   for(int h = i; str[h] != '0'; h++) str[h] = str[h+1];
   }
     
 }
 
}


char* strc(char* str1, char* str2){
int i,h;
char* st = str1;
for(i = 0; st[i] != '\0'; i++){

}


for(h = 0; str2[h] != '\0'; h++){
str1[i+h] = str2[h];
}
str1[i+h]= '\0';

return str1;
}





int main( int argc, char* argv[] )
{  


sort(argv[1]);
sort(argv[2]);
sort(argv[3]);
sort(argv[4]);
printf(""x,y,q und X,Y,Q aussortiert: %s%s%s%s\n"",argv[1], argv[2], argv[3],argv[4]);






printf(""Der neue String lautet: lsonao\n"");

}"
Janzen,"Lynn Merle Henriette Maja",lynn.janzen@campus.tu-berlin.de,Beendet,"23. Juni 2020  16:04","26. Juni 2020  16:35","3 Tage","19,46",5,"test.c:6:15: error: expected expression     char zahl[{a}] = ""Peter"";               ^ test.c:10:1: error: expected expression } ^ 2 errors generated.","zeigefinger = (int*)((short*)zeigefinger - 4);","Nichts, da Programm nicht kompiliert.",232,"Ein C-String ist ein Array von char-Variablen.","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 204; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
    // printf(""enter funktion\n"");
    int primes[25] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97};
    // printf(""primzahlen erstellt\n"");
    for (int i = 0; i < 8; i++){
        if (product == primes[i] || product == 1 || product == 0){
            // printf(""erste bedingung geprüft\n"");
            *f1 = product;
            *f2 = 1;
            break;
        } else if (product % primes[i] == 0) {
            // printf(""zweite bedingung geprüft\n"");
            *f1 = product/primes[i];
            *f2 = primes[i];
            break;
            
        }
    }
}

int main(){
	
    long eingabe;
    long factor1, factor2;
    printf(""Please enter an Integer: "");
    scanf(""%li"", &eingabe);
    factorize(eingabe, &factor1, &factor2);

	printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, factor1, factor2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    for (int i = 0; i < zahl; i++){
        if (dest[i] == '\0' || src[i] == '\0') break;
        dest[i] = src[i];
    }
  
}

void umdrehen( char* str )
{
    char temp;
    // count symbols in str:
    int ende = 0;
    for (int i = 0; str[i] != '\0'; i++) ende++ ;
    for (int i=0, j=ende-1; i<=j; i++, j--)
    {
        temp=str[i];
        str[i]=str[j];
        str[j]=temp;
    }
    
  
}

int main( int argc, char* argv[] )
{  
  // argc = menge Zeichen die ersetzt werden sollen --> ende der schleife, int Zahl
  // argv[] = char src
  // char dest = test
  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>


void haengenundsortieren(char* dest, int anzahl, char** src) {
    
    int k = 0;
    for (int j = 1; j < anzahl; j++){
        // printf(""erste Schleife\n"");
        for (int i = 0; src[j][i] != '\0'; i++){
            // printf(""zweite schleife\n"");
            if (src[j][i] !='x' &&src[j][i] != 'y'&&src[j][i] != 'q' 
                &&src[j][i] != 'X'&&src[j][i] != 'Y'  &&src[j][i] != 'Q'){
                dest[k] = src[j][i];
                k++;
            }
        }
    
    }  
  
}

void jedesdritte (char* ziel, char* quelle){

    int k = 0;

    for (int i = 0; quelle[i] != '\0'; i = i+3){
        
        ziel[k] = quelle[i];
        k++;
        
    }
    
    
}



int main (int argc, char** argv){

    // zeichenketten aneinanderhängen
    char kette[100] = { '\0' };
    char jederdritte[100] = { '\0' };
    
    haengenundsortieren (kette, argc, argv);
    jedesdritte (jederdritte, kette);
    
    printf(""x,y,q und X,Y,Q aussortiert: %s"", kette);
    printf(""\nDer neue String lautet: %s\n"", jederdritte);

}"
Breitenbach,"Johann Philipp",johann.p.breitenbach@campus.tu-berlin.de,Beendet,"23. Juni 2020  20:00","26. Juni 2020  16:10","2 Tage 20 Stunden","19,30","zeigefinger = (int*)((short*)zeigefinger - 4);","Nichts, da Programm nicht kompiliert.",5,"Ein C-String ist ein Array von char-Variablen.",80,5,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 2(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: 5; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 3(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: 200; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 4(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 5(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: 204; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 4(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 5(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: 208; Teil 195: %; Teil 196: %; Teil 197: %; Teil 198: %; Teil 199: 6; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: -; Teil 206: -; Teil 207: -; Teil 208: -; Teil 209: -; Teil 210: 15; Teil 211: -; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{

	for(int i=2; i<=product;i++){
		if((product % i) == 0){
			*f2 = i;
			*f1 = product / i;
			break;
		}
	}
	if(*f2 == 0){
	*f2=1;
	*f1= product / *f2;
	} 	// Your factorization
}


int main(){
	long wert = 1;
	long f1 = 0;
	long f2 = 0;
	printf(""Please enter an Integer: "");
		scanf(""%ld"", &wert);
	factorize(wert, &f1, &f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", wert, f1,f2);
	return 0;
}","#include <stdio.h>
void eins(char** argv, char* A1, int argc){
int A=0;
for(int j=1; j < argc; j++){
	for(int i=0;argv[j][i] !='\0';i++)
		if(argv[j][i]!='x' && argv[j][i]!='y' && argv[j][i]!='q' && argv[j][i]!='X' 	    && argv[j][i]!='Y' && argv[j][i]!='Q'){
				A1[A]=argv[j][i];
				A++;
	}
	}
}
void zwei(char* A2, const char* A1){
	int j = 0;
	for(int i=0;A1[i] != '\0';i++){
		if(i%3==0 || i==0){
			A2[j]=A1[i];
			j++;
		}
		A2[j]='\0';
	}
}

int main(int argc, char** argv){				
	char A1[100];
	char A2[100];
	eins(argv,A1,argc);
	zwei(A2,A1);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",A1);
	printf(""Der neue String lautet: %s\n"",A2);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  for(int i=0;i<zahl;i++){
  	if(i==10){ 
  		dest[i]='\0';
  		break;
  	}
  	else if(src[i] !='\0'){
  		dest[i]=src[i];
  	}
  	
  }
}

void umdrehen( char* str )
{
  int zahl = 0;
  for(int i=0;str[i]!='\0';i++)
  	zahl=i;
  char umd[11];
  for(int i = 0; i<=(zahl+1);i++){
  	umd[i]=str[i];
  }
  for(int i = 0; i<(zahl+1);i++){
  	str[i]=umd[(zahl)-i];
  }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Chen,Jiaqi,jiaqi.chen.2@campus.tu-berlin.de,Beendet,"23. Juni 2020  20:43","23. Juni 2020  22:41","1 Stunde 58 Minuten","19,32","Ein C-String ist ein Array von char-Variablen.",80,5,"zeigefinger = (int*)((short*)zeigefinger - 4);",5,5,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: -; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 2(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: 2; Teil 130: 1; Teil 131: 0; Teil 132: 0; Teil 133: 3(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: 200; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 4(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 5(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: 204; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 4(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 5(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	for (int j = 2;  j < product; j++)
 {
  if(product%j == 0)
  {
   *f1 = product / j;
   *f2 = j;
   return;
  }
  
 }
 *f1 = product;
 *f2 = 1;
 return;
}

int main(){
	long i;
 printf(""Please enter an Integer: "");
 scanf(""%li"", &i);
 long int fak1;
 long int fak2;
 factorize(i, &fak1, &fak2);
 printf(""Possible Factors of %ld are %ld and %ld.\n"", i, fak1, fak2);
 return 0;
}","#include <stdio.h>


int main(int argc, char *argv[])
{
 char stra[100] = """";
 char strb[100] = """";
 int x = 0;
    for(int i = 1; i < argc; i++)
    {
     for(int j = 0; argv[i][j] != '\0'; j++)
     {
      if(
   (argv[i][j] != 'x') &&
   (argv[i][j] != 'y') &&
   (argv[i][j] != 'q') &&
   (argv[i][j] != 'X') &&
   (argv[i][j] != 'Y') &&
   (argv[i][j] != 'Q')
   )
      {
    stra[x] = argv[i][j]; 
       x++;
   } 
  }
 }
 
 printf(""x,y,q und X,Y,Q aussortiert: "");
 for (int z = 0; stra[z] != '\0'; z++)
 {
  printf(""%c"",stra[z]); 
 }

 printf(""\nDer neue String lautet: "");
 for (int z = 0; stra[3 * z] != '\0'; z++)
 {
  strb[z] = stra[3 * z];
  printf(""%c"",strb[z]); 
 }
    return 0;
}","#include <stdio.h>
#include <stdlib.h>

//src in dest copy
void ersetzen(char* dest, int zahl, char* src)
{
	int i = 0;
 while( i< zahl && src[i] != '\0' && dest[i] != '\0')
 {
  dest[i] = src[i];
  i++;
 }
}

void umdrehen( char* str )
{
 int num = 0;
 int i=0;
 while( str[i] != '\0')
 {
  num++;
  i++;
 }
 i=0;
 while( i < num/2)
 {
  char c;
  c = str[i];
  str[i] = str[num -1 - i];
  str[num - 1 - i] = c;
  i++;
 }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Plank,"Julian Maximilian",j.plank@campus.tu-berlin.de,Beendet,"24. Juni 2020  09:40","28. Juni 2020  20:54","4 Tage 11 Stunden","12,14",5,5,"Ein C-String ist ein Array von char-Variablen.",80,232,5,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 3; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: 2; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: -; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: 2; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: 1; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: -; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: 1; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: 0; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: -; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: 0; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: -; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 2; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: -; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: 0; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
  for(int i=2; i<100; i++){
	if(product%i==0){
    *f1=product/i;
    break;
    }
  }
}

int main(){
  long int product;
  long int f1;
  long int f2;
	printf(""Please enter an Integer: "");
  scanf(""%ld"", &product);
  if(product==1){printf(""Possible Factors of 1 are 1 and 1.\n"");}
  else{
  factorize (product, &f1, &f2);
  f2=product/f1;
  if(f1==1){
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, f2, f1);
}else{
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, f1, f2);
}
}
	return 0;
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
  int z;
  for (int i=0; dest[i] != '\0'; ++i){
    z=i;
  }
  scanf(""%i"", &zahl);
  scanf(""%s"", src);
  int r;
  for (int i=0; src[i] != '\0'; ++i){
    r=i;
  }
  r++;
  if(zahl>r && r<=z++){zahl=r;
  for(int i=0; i<zahl; i++){
    dest[i]=src[i];
  }
}
  if(r>z){
    r=z;
    int v=z;
    for(int i=0; i<v+1; i++){
      dest[i]=src[i];
    }
  }else {
  for(int i=0; i<zahl; i++){
    dest[i]=src[i];
  }}
}


void umdrehen( char* str )
{
    int counter = 0;
    for (int i=0; str[i] != '\0'; i++)
    {
        counter ++;
    }
    char strtemp[counter+1];
    for(int i=0; i<counter; i++)
    {
        strtemp[i] = str[(counter -1 -i)];

    }
    for (int i=0; i < counter; i++)
    {
        str[i]=strtemp[i];
    }
}

int main( int argc, char* argv[] )
{
  int h=0;
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , h , argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",-
Stammerjohann,Pia,pia.stammerjohann@campus.tu-berlin.de,Beendet,"24. Juni 2020  11:31","27. Juni 2020  20:01","3 Tage 8 Stunden","9,21","zeigefinger = (int*)((short*)zeigefinger - 4);",5,5,80,232,5,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2[14]; Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3[14]; Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4[14]; Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5[14]; Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3[14]; Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6[14]; Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
for(long i = product/2; i > 1; i-- )
{
if( product % i == 0)
{
*f1 = i;
*f2 = product / i; 
return;
}
}
*f1 = product; 
*f2 = 1;
}

int main(){
	long product;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &product);
	long f1; 
	long f2;
	factorize(product, &f1, &f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, f1, f2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",-
Li,Guanyang,guanyang.li@campus.tu-berlin.de,Beendet,"24. Juni 2020  12:30","24. Juni 2020  14:50","2 Stunden 19 Minuten","17,82",5,P,5,5,5,"zeigefinger = (int*)((short*)zeigefinger - 4);","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: -; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 2(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: 2; Teil 130: 1; Teil 131: 0; Teil 132: 0; Teil 133: 3(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: 200; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 4(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 5(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: 204; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 4(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 5(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
 for (int j = 2;  j < product; j++)
 {
  if(product%j != 0)
  {
   
  }
  else
  {
   *f1 = product / j;
   *f2 = j;
   return;
  }
 }
 *f1 = product;
 *f2 = 1;
 return;
}

int main(){
 long i;
 printf(""Please enter an Integer: "");
 scanf(""%li"", &i);
 long faktor1;
 long faktor2;
 long *fak1 = &faktor1;
 long *fak2 = &faktor2;
 factorize(i, fak1, fak2);
 printf(""Possible Factors of %ld are %ld and %ld.\n"", i, faktor1, faktor2);
 return 0;
}","#include <stdio.h>


int main(int argc, char *argv[])
{
 char str1[100] = """";
 char str2[100] = """";
 int p = 0;
    for(int i = 1; i < argc; i++)
    {
     for(int j = 0; argv[i][j] != '\0'; j++)
     {
      if(
   (argv[i][j] != 'x') &&
   (argv[i][j] != 'y') &&
   (argv[i][j] != 'q') &&
   (argv[i][j] != 'X') &&
   (argv[i][j] != 'Y') &&
   (argv[i][j] != 'Q')
   )
      {
    str1[p] = argv[i][j]; 
       p++;
   } 
  }
 }
 
 printf(""x,y,q und X,Y,Q aussortiert: "");
 for (int k = 0; str1[k] != '\0'; k++)
 {
  printf(""%c"",str1[k]); 
 }

 printf(""\nDer neue String lautet: "");
 for (int k = 0; str1[3 * k] != '\0'; k++)
 {
  str2[k] = str1[3 * k];
  printf(""%c"",str2[k]); 
 }
    return 0;
}","#include <stdio.h>
#include <stdlib.h>

//src in dest copy
void ersetzen(char* dest, int zahl, char* src)
{
 for(int i = 0; i< zahl && src[i] != '\0' && dest[i] != '\0'; i++)
 {
  dest[i] = src[i];
 }
}

void umdrehen( char* str )
{
 int num = 0;
 for(int i=0; str[i] != '\0'; i++)
 {
  num++;
 }
 for(int i=0; i < num/2; i++)
 {
  char c;
  c = str[i];
  str[i] = str[num -1 - i];
  str[num - 1 - i] = c;
 }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Albrecht,Jonas,jonas.albrecht.1@campus.tu-berlin.de,Beendet,"24. Juni 2020  15:30","29. Juni 2020  00:07","4 Tage 8 Stunden","18,60","zeigefinger = (int*)((short*)zeigefinger - 4);",232,5,"Ein C-String ist ein Array von char-Variablen.",5,80,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: -; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 2(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: 200; Teil 130: 204; Teil 131: 208; Teil 132: 212; Teil 133: 3(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: 200; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 4(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 5(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: 208; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 4(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 5(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: %; Teil 196: %; Teil 197: %; Teil 198: %; Teil 199: 6(14); Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: -; Teil 207: -; Teil 208: -; Teil 209: -; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2) // long = long int
{
	if(product % 2 == 0 && product != 2){
		*f1 = product/2;
		*f2 = 2;
	} else if(product % 3 == 0 && product != 3){
		*f1 = product/3;
		*f2 = 3;
	} else{
		*f1 = product;
		*f2 = 1;
	}
}

int main(){
	long zahl;
	long faktor1;
	long faktor2;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &zahl);
	factorize(zahl, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", zahl, faktor1, faktor2);
	return 0;
}","#include <stdio.h>

char strCmp(char* str1, char* str2, int* x){
	for(int j = 0; str2[j] != '\0' ; j++){
		if(str2[j] == 'x' || str2[j] == 'y' || str2[j] == 'q' || str2[j] == 'X' || str2[j] == 'Y' || str2[j] == 'Q') continue;
		else {
				str1[*x]=str2[j]; 
				*x+=1;
		}
	}
	return 0; 
} 

char strSpeichern2(char* str1, char* str2, int length){
		int j = 0;
		for(int i = 0; i < length; i+=3){
			str1[j]=str2[i];
			j++;
		} 
		str1[j+1]='\0';
	return 0;
} 

 int strlength(char* str){
	int i = 0;
	for(; str[i] != '\0'; i++);
	return i;
} 

int main(int argc, char** argv){  
	if(argc < 2){ 
		printf(""Falsche Verwendung. ./[programmname] [name zum testen] erwartet.\n"");
		return 0;
	}
	int x = 0;
	int l = 0;
	char wort1[100]= """";
	char wort2[100]= """";
	for(int i = 1; i < argc; i++){
		strCmp(wort1, argv[i], &x);
		l = strlength(wort1);
		strSpeichern2(wort2, wort1, l);
	} 
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", wort1);
	printf(""Der neue String lautet: %s\n"", wort2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	if(zahl <= 11){
		for(int i = 0; src[i] != '\0' && i < zahl; i++){
			dest[i]=src[i];
		}
	}
	if(zahl > 11){
		for(int i = 0; src[i] != '\0' && i < 10; i++){
			dest[i]=src[i];
		}
	}
}

void umdrehen( char* str)
{	
	int length = 0;
	for(; str[length] != '\0'; length++);
	
	char tmp[11]= """";
	for(int i = 0; i <= length; i++){
		tmp[i]=str[i];
	}
	for(int i = 0; str[i] != '\0'; i++){
		str[i]= tmp[length-1-i];
	}
}

int main( int argc, char* argv[] )
{
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Salomon,Astrid,salomon@tu-berlin.de,Beendet,"24. Juni 2020  16:26","28. Juni 2020  23:58","4 Tage 7 Stunden","13,01","zeigefinger = (int*)((short*)zeigefinger - 4);",50,5,5,5,"23 2","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 12; Teil 57: %; Teil 58: %; Teil 59: 1; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 13; Teil 68: 208; Teil 69: %; Teil 70: %; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 12; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: 0; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 13; Teil 90: -; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 2(14); Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: %; Teil 105: %; Teil 106: %; Teil 107: 2; Teil 108: 1; Teil 109: 0; Teil 110: 0; Teil 111: 3(14); Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: 200; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 4(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 5(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: 204; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 4(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 5(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: 208; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 4(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 5(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>
#include<stdlib.h>

void factorize(long product, long *f1, long *f2)
{
    if(product == 0 || product == 1)
    {
        *f1 = product;
        *f2 = 1;
    }
	else 
	{
	    int x = 2;

        for( ; !(product % x == 0); x++)
	    {
	        continue;
	    }
        if (x == product)
        {
           *f1 = product;
           *f2 = 1;
        }
        else
        {
           *f1 = product/x;
           *f2 = x;
        }
	}
	// eingabe einer Primzahl
	// Your factorization
}

int main()
{
	printf(""Please enter an Integer: "");
    

    long* p = malloc(3*sizeof(long));
	scanf(""%ld"", p);
	
	factorize(*p, p+1, p+2);
	
	printf(""Possible Factors of %ld are %ld and %ld.\n"", *p, *(p+1), *(p+2));
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{   

    int z = 0;    
    for(int i = 0; i != zahl; i++)
    {
        if( dest[z] != '\0' && src[z] != '\0')
        {
              dest[z] = src[z];
              z++;
        }     
        else break;
    }
  
}

void umdrehen( char* str )
{
    char str2[100];
    int a = 0; 
    for( ; str[a]!= '\0'; a++)
    {
        str2[a] = str[a];   

    }     
    for(int d = 0; d != 10; d++)
    {        
        a--;        
        str[d] = str2[a];
    } 
  
}


int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",-
Thomas,"Fabian Alexander",f.thomas@campus.tu-berlin.de,Beendet,"24. Juni 2020  17:42","28. Juni 2020  23:12","4 Tage 5 Stunden","8,77","*zeigefinger = leute;",5,"Nichts, da Programm nicht kompiliert.",5,5,80,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: %; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: 204; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: 208; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 2(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: 2; Teil 130: 1; Teil 131: 0; Teil 132: 0; Teil 133: 3(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: 200; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 4(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 5(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 204; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 4(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: -; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
    if (product == 0){
        *f1 = 0;
        *f2 = 1;
    } else if (product == 1){
        *f1 = 1;
        *f2 = 1;
    }else{
        for(int i = 2; i <= product; i++){
            if ((product % i) == 0){
                *f1 = product / i;
                *f2 = i;
                break;
            }
        }
    }
}

int main(){
    long product;
    long int f1 = 0;
    long int f2 = 0;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &product);
	factorize(product, &f1, &f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, f1, f2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",-
Holz,"Maximilian Torsten",m.holz@campus.tu-berlin.de,Beendet,"24. Juni 2020  17:43","28. Juni 2020  23:20","4 Tage 5 Stunden","9,27","zeigefinger = (int*)((short*)zeigefinger - 4);",80,"Nichts, da Programm nicht kompiliert.","Ein C-String ist ein Array von char-Variablen.",5,5,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: %; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: 204; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: 208; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 2(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: 2; Teil 130: 1; Teil 131: 0; Teil 132: 0; Teil 133: 3(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: 200; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 4(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 5(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 204; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 4(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: -; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
    if (product == 0){
    *f1 = 0;
    *f2 = 1;
    } else if (product == 1){
    *f1 = 1;
    *f2 = 1;
    }else{
    for(int i = 2; i <= product; i++){
    if ((product % i) == 0){
    *f1 = product / i;
    *f2 = i;
    break;
}
}
}
}

int main(){
    long product;
    long int f1 = 0;
    long int f2 = 0;
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &product);
    factorize(product, &f1, &f2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", product, f1, f2);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>

char * killqxy(char string[100]) {
char newString[100];
char newString2[100];
int length;

int j = 0;
int i;
int k = 0;

for (i = 0; string[i] != '\0'; i++)
{
length++;
}

for(i = 0; i <= length; i++) {
    if (string[i] == 'q' || string[i] == 'x' || string[i] == 'y') {
    continue;
    } 
    else if (string[i] == 'Q' || string[i] == 'X' || string[i] == 'Y'){
    continue;
    }
    else {
        newString[j] = string[i];
        j++;
    }
}

for (i = 0; i <= j; i++) {
if(i%3 != 0) {
newString2[k] = newString[i];
k++;
}
}
return newString2;
}

void main() {
char input[100];
char killedstring[100];

printf(""Geben Sie ein paar Wörter ein : "");
fgets(input, 100, stdin);
printf(""Ihre Eingabe: %s\n"",input);

killedstring == killqxy(input);","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Wöstheinrich,"Ida Maria",woestheinrich@campus.tu-berlin.de,Beendet,"25. Juni 2020  09:05","28. Juni 2020  18:43","3 Tage 9 Stunden","18,00",80,5,"Nichts, da Programm nicht kompiliert.",232,"zeigefinger = (int*)((short*)zeigefinger - 4);",5,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{	
	if (product != 1){
	  long i = 2;
	  while (product % i != 0 && i != 0)
	  {
	    i++;
	  }
	  *f1 = i;
	  *f2 = product/i;
	}
}

int main(){
	long integer;
	long f1 = 1;
	long f2 = 1;
	printf(""Please enter an Integer: "");
	scanf(""%li"", &integer);
	factorize(integer, &f1, &f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", integer, f2, f1 );
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  if (zahl > 0){
     int i = 0;
     while (i < zahl && dest[i] != '\0'){
     	if (src[i] != '\0'){
    	dest[i] = src[i];
    	}
    	else break;
      i++;
     }
  }
}

void umdrehen( char* str )
{ 
  int l = 0;
  while (str[l] != '\0'){
  l++;
  }	
  for(int i = 0; i < l/2; i++){
    char tmp = str[i];
    str[i] = str[l-1-i];	
    str[l-1-i] = tmp;
  }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>

int main(int argc, char* argv[])
{ 
  char str[200]= """"; 
  int i = 0;
  for(int j = 1; j < argc; j++)
  {
    for(int k = 0; argv[j][k] != '\0'; k++)
    {
       if (argv[j][k] != 'x' && argv[j][k] != 'y' && argv[j][k] != 'q' && argv[j][k] != 'X' && argv[j][k] != 'Y' && argv[j][k] != 'Q' && argv[j][k] != ' ')
       {
          str[i] = argv[j][k];
          i++;
       }
    }  
  }
  printf(""x,y,q und X,Y,Q aussortiert: %s\n"", str);
  char str3[67] = """";
  int l = 0;
  int j = 0;
  while(str[j] != '\0'){ 
        str3[l]=str[j];
        l++;
        if (str[j+1] != '\0' && str[j+2] != '\0' && str[j+3] != '\0'){
          j = j + 3;
        }
        else break;
  }
  printf(""Der neue String lautet: %s\n"", str3);   
}"
Zenker,Pascal,846a63afa3d6a324d0edce8eed5793b1,Beendet,"25. Juni 2020  09:47","25. Juni 2020  12:32","2 Stunden 45 Minuten","19,59","zeigefinger = (int*)((short*)zeigefinger - 4);",5,"Nichts, da Programm nicht kompiliert.",232,5,80,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: 200; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 11; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 12; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: 0; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 13; Teil 101: 212; Teil 102: %; Teil 103: %; Teil 104: %; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 11; Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 13; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 5(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: -; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: -; Teil 217: -; Teil 218: -; Teil 219: -; Teil 220: -","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
    int foundfirst = 0;
	for(long i = (long)product/2; i>1; i--){
        if(product % i == 0){
            if(foundfirst){
                *f2 = i;
            }
            else{
                *f1 = i;
                foundfirst = 1;
            }
            
        }
    }
}

int main(){
	printf(""Please enter an Integer: "");
    long product;
    scanf(""%ld"", &product);
    long f1 = 1;
    long f2 = 1;
    factorize(product, &f1, &f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, f1, f2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    int index = 0;
    while (*src){
        if(index==zahl){
            return;
        }
        if(index==10){
            return;
        }
        dest[index] = *src++;
        index++;
    }
}

void umdrehen( char* str )
{
    char ret[11];
    int len = 0;
    while (*str){
        str++;
        len++;
    }
    str--;
    for(int i=0; i<len; i++){
        ret[i] = *str--;
    }
    str++;
    for(int i=0; i<len; i++){
        *str = ret[i];
        str++;
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

int main( int argc, char* argv[] )
{  
    char final[100];
    int index = 0;
    for(int i=1; i<argc; i++){
        char *src =  argv[i];
        while (*src){
            if(*src==88){
                src++; 
                continue;
            } 
            if(*src==89) {
                src++; 
                continue;
            }
            if(*src==113) {
                src++; 
                continue;
            }
            if(*src==120) {
                src++; 
                continue;

            }
            if(*src==121) {
                src++; 
                continue;
            }
            if(*src==81) {
                src++; 
                continue;
            }
            final[index++] = *src++;
        }
    }
    final[index] = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", final);
    char newstring[100];
    int stringindex = 0;
    for(int i = 0; i<index; i++){
        if(i == 0){
            newstring[stringindex++] = final[i];
        }
        else if(i % 3 == 0){
            newstring[stringindex++] = final[i];
        }
    }
    newstring[stringindex] = '\0';
    printf(""Der neue String lautet: %s\n"", newstring);
}"
Dudasko,Dominik,d.dudasko@tu-berlin.de,Beendet,"25. Juni 2020  10:11","28. Juni 2020  12:19","3 Tage 2 Stunden","14,05","zeigefinger = (int*)((short*)zeigefinger - 4);",232,5,80,"Ein C-String ist ein Array von char-Variablen.",5,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: 201; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 11; Teil 46: %; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 12; Teil 57: 202; Teil 58: %; Teil 59: 1; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 11; Teil 68: %; Teil 69: %; Teil 70: %; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 12; Teil 79: 203; Teil 80: %; Teil 81: %; Teil 82: 0; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 13; Teil 101: -; Teil 102: %; Teil 103: %; Teil 104: %; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 2(14); Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: 2; Teil 119: 1; Teil 120: 0; Teil 121: 0; Teil 122: 3(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: 200; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 4(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: 201; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: 202; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 5(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
int i;

if (product == 0 || product == 1)
	{ *f1 = 1;
	  *f2 = 1;}
if (product == 3 || product == 2) 
	{ *f1 = product;
	  *f2 = 1;}

for (i=2; i<=(product/2); i++){
	if (product % i !=0 )
	{ *f2 = 1;
	  *f1 = product;
	  break; }
	
	if (product % i == 0 )
	{ *f1 = (product/i);
	  *f2 = i;
	  break;	
	}
	}}
int main(){

long product = 0;
long teiler1 = 0;
long teiler2 = 0;


	printf(""Please enter an Integer: "");
	scanf(""%ld"", &product);
	
	factorize (product,&teiler1,&teiler2);
	
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, teiler1, teiler2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>

 
void ersetzen(char* dest, int zahl, char* src)
{ 
int dest_lenght = 0;
int src_lenght = 0;

for(int i = 0; dest[i] != '\0'; i++) { dest_lenght = dest_lenght + 1 ;}
for(int i = 0; src[i] != '\0'; i++) { src_lenght = src_lenght + 1 ;}

if( zahl > dest_lenght && dest_lenght <= src_lenght) zahl = dest_lenght;
if(zahl > dest_lenght && dest_lenght > src_lenght)  zahl = src_lenght;
if(zahl <= dest_lenght && zahl >= src_lenght) zahl = src_lenght;
else zahl = zahl;

//printf(""%d\n"", dest_lenght);
//printf(""%d\n"", src_lenght);
//printf(""%d\n"", zahl);

zahl = zahl - 1;
for(int i =0; i<dest_lenght ;i++) {
	if(i<= zahl && src[i] != dest[i]) dest[i] = src[i];}
}

void umdrehen( char* str )
{
int str_lenght = 0;
for(int i = 0; str[i] != '\0'; i++) { str_lenght = str_lenght + 1 ;}
 
//printf(""%d\n"", str_lenght); 
 
char tmp[str_lenght];
tmp[str_lenght] = '\0';

for(int i = str_lenght -1 ; i >= 0 ; i--) { tmp[str_lenght - i -1] = str[i];}
for(int i = 0; i <= str_lenght; i++) { str[i] = tmp[i];}
}

int main( int argc, char* argv[] )
{  
 char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

int main ( int argc, char* argv[]){

int j;
int i;
int k=0;
char* tmp[argc];
char complete[100];


for(i =1; i<argc; i++)
 	{tmp[i] = argv[i];
 	for(j = 0; tmp[i][j] != '\0';j++) 
 		{complete[k] = tmp [i][j];
  		k++;}}

for(int l = k; l <= 100; l++) { complete[l] = '\0';}
 		

//printf(""%s\n"", complete);


int m;
int n = 0;
int z = 0;
char complete2[n+1];
for(m = 0; complete[m] != '\0'; m++) 
	{ if((complete[m] != 'x')&&(complete[m] != 'y')&&(complete[m] != 'q')&&(complete[m] != 'X')&&(complete[m] != 'Y')&&(complete[m] != 'Q')) 
		{complete2[n] = complete[m];
		n++;}
	  else {z++;}
	  }
n = n - z;
complete2[n+1] = '\0';		
printf(""x,y,q und X,Y,Q aussortiert: %s\n"", complete2);


int o;
int p=0;
char complete3[p+1];
for(o = 0; complete2[o] != '\0'; o++)
	{if (o % 3 == 0)
		{complete3[p] = complete2[o];
		p++;}}
		
complete3[p] = '\0';
printf(""Der neue String lautet: %s\n"", complete3);
}"
Wegener,"Philipp Dieter",philipp.d.wegener@campus.tu-berlin.de,Beendet,"25. Juni 2020  10:17","27. Juni 2020  14:01","2 Tage 3 Stunden","20,00","zeigefinger = (int*)((short*)zeigefinger - 4);",5,232,5,5,"Ein C-String ist ein Array von char-Variablen.","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	if (product == 0){
		*f1 = 0;
		*f2 = 1;
	}else if (product == 1){
		*f1 = 1;
		*f2 = 1;
	}else for (long i = product -1; i > 0; i--){
		if((product % i) == 0){
			*f1 = i;
			*f2 = (product / i);
			break;
		}
	}
}

int main(){
	long wert = 0;
	long a = 0;
	long b = 0;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &wert);
	factorize(wert, &a, &b);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", wert, a, b);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  for(int i = 0; dest[i] != '\0' && src[i] != '\0' && i < zahl; i++){
	  dest[i] = src[i];	 
  }
}

void umdrehen( char* str )
{
  int count = 0;
	for(int i = 0; str[i] != '\0'; i++){
	  count++;
	}
	int d;
	int c;
	char arr[count];
	for (int b=count; b>0; b--) {
        d = b-1;
        c = count-b;
            *(arr+c) = *(str+d);
    }
	for(int i = 0; str[i] != '\0' && arr[i] != '\0'; i++){
		str[i] = arr[i];
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>

int Anzahl(char str[]){
	int count = 0;
	for(int i = 0; str[i] != '\0'; i++){
	  count++;
	}	
	return count;
}

int main( int argc, char* argv[]){
	
	char gesamt[100]= """";
	
	for(int i = 1; i<argc; i++){
		int aktuell = Anzahl(gesamt);
		int momentan = Anzahl(argv[i]);
		int j = aktuell;
		int k = 0;
		for(; j < aktuell + momentan +2; j++){
			gesamt[j] = argv[i][k];
			k++;
		}
		gesamt[j+1]='\0';
	}

	char ohnex[100]="""";
	int n = 0;
	for(int i = 0; i< Anzahl(gesamt); i++){
	if(gesamt[i] == 'X'||gesamt[i] == 'Y'||gesamt[i] == 'Q'||gesamt[i] == 'x'||gesamt[i] == 'y'||gesamt[i] == 'q'){
	
	} else{
			ohnex[n] = gesamt[i];
			n++;
		}
	}
	
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", ohnex);
	
	char dritte[100]="""";
	int m = 0;
	for(int i = 0; i< Anzahl(ohnex) +1; i++){
		if (i==0){
			dritte[i] = ohnex[i];
			m++;
		}
		else if((i % 3) == 0){
			dritte[m] = ohnex[i];
			m++;
		}
	}
	printf(""Der neue String lautet: %s"", dritte);
}"
"De Jonge",Daniel,d.dejonge@campus.tu-berlin.de,Beendet,"25. Juni 2020  13:26","25. Juni 2020  16:56","3 Stunden 29 Minuten","19,10","Ein C-String ist ein Array von char-Variablen.",80,"zeigefinger = (int*)((short*)zeigefinger - 4);","Nichts, da Programm nicht kompiliert.",232,5,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 11; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 12; Teil 57: %; Teil 58: %; Teil 59: 1; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 11; Teil 68: 208; Teil 69: %; Teil 70: %; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 12; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: 0; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: 212; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 13; Teil 101: -; Teil 102: %; Teil 103: %; Teil 104: %; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 2(14); Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: 2; Teil 119: 1; Teil 120: 0; Teil 121: 0; Teil 122: 3(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: 200; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 4(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 208; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 216; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 5(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	if(product % 2 == 0)
	{
		*f1 = product / 2;
		*f2 = 2;
	}
	else if(product % 3 == 0)
	{
		*f1 = product / 3;
		*f2 = 3;
	}
	else //primzahl
	{
		*f1 = product;
		*f2 = 1;
	}
}

int main(){
	long product;
	long f1;
	long f2;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &product);
	factorize(product, &f1, &f2);

	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, f1, f2);
	return 0;
}","#include <stdio.h>

int main(int argc, char** argv)
{
    //zusammenfügen und aussortieren
    char sort[100];
    int count = 0;
    for(int i = 1; i < argc; i++)
    {
        for(int j = 0; argv[i][j] != '\0'; j++)
        {
            char c = argv[i][j];
            if(c == 'x' || c == 'X' || c == 'y' || c == 'Y' || c == 'q' || c == 'Q')
            {
                continue;
            }
            else
            {
                sort[count] = c;
                count++;
            }
        }
    }
    sort[count] = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", sort);

    //neuer String
    char neu[100];
    count = 0;
    for(int j = 0; sort[j] != '\0'; j++)
    {
        if(j % 3 == 0)
        {
            neu[count] = sort[j];
            count++;
        }
    }
    printf(""Der neue String lautet: %s\n"", neu);

}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
  for(int j = 0; (src[j] != '\0') && (j < zahl) && (j < 10); j++)
  {
    dest[j] = src[j];
  }
}

void umdrehen( char* str )
{
  //get length
  int len = 0;
  while(str[len] != '\0')
  {
    len++;
  }
  //reverse string
  int j = len - 1;
  for(int i = 0; i < len / 2; i++)
  {
    char tmp = str[i];
    str[i] = str[j];
    str[j] = tmp;
    j--;
  }
}

int main( int argc, char* argv[] )
{
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Zhu,Yao,yao.zhu@campus.tu-berlin.de,Beendet,"25. Juni 2020  21:54","28. Juni 2020  23:23","3 Tage 1 Stunde","13,25","zeigefinger = (int*)((short*)zeigefinger - 4);",5,"Beim Lesen merkt sich ein C-String die aktuelle Position.",5,80,"23 2","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: -; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: %; Teil 213: %; Teil 214: %; Teil 215: %; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
    if ((product % 2 != 0) || (product == 0) || (product == 1))
    {
        *f1 = 1;
        *f2 = product;
    }
    else
    {
        *f1 = product / 2;
        *f2 = 2;
    }
}

int main() {
    long number = 0;
    long a = 0;
    long b = 0;
    long *f1 = &a;
    long *f2 = &b;
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &number);
    factorize(number,f1,f2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"",number,*f1,*f2);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include<stdio.h>

int main(int argc, char** argv)
{
	int i, j;
	int n = 0;
	char aa[60];
	char bb[60];
	for (i = 1; i < argc; i++)
	{
		for (j = 0; argv[i][j] != '\0'; j++)
		{
			if ((argv[i][j] != 'x') &&
				(argv[i][j] != 'y') &&
				(argv[i][j] != 'q') &&
				(argv[i][j] != 'X') &&
				(argv[i][j] != 'Y') &&
				(argv[i][j] != 'Q'))
			{
				aa[n] = argv[i][j];
				n++;
			}
		}
	}
	aa[n] = '\0';
	printf(""x,y,q und X,Y,Q aussortiert: %s"", aa);
	for (i = 0, j = 0; (aa[i] != '\0') && (i < n); i += 3, j++) {
		bb[j] = aa[i];
	}
	bb[j] = '\0';
	printf(""\nDer neue String lautet: %s"", bb);
}"
Mühlhoff,Luis,l.muehlhoff@campus.tu-berlin.de,Beendet,"26. Juni 2020  00:02","28. Juni 2020  21:57","2 Tage 21 Stunden","13,56",-,232,80,"Ein C-String ist ein Array von char-Variablen.",5,5,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: ; Teil 146: ; Teil 147: ; Teil 148: ; Teil 149: ; Teil 150: ; Teil 151: ; Teil 152: ; Teil 153: ; Teil 154: ; Teil 155: ; Teil 156: ; Teil 157: ; Teil 158: ; Teil 159: ; Teil 160: ; Teil 161: ; Teil 162: ; Teil 163: ; Teil 164: ; Teil 165: ; Teil 166: ; Teil 167: ; Teil 168: ; Teil 169: ; Teil 170: ; Teil 171: ; Teil 172: ; Teil 173: ; Teil 174: ; Teil 175: ; Teil 176: ; Teil 177: ; Teil 178: ; Teil 179: ; Teil 180: ; Teil 181: ; Teil 182: ; Teil 183: ; Teil 184: ; Teil 185: ; Teil 186: ; Teil 187: ; Teil 188: ; Teil 189: ; Teil 190: ; Teil 191: ; Teil 192: ; Teil 193: ; Teil 194: ; Teil 195: ; Teil 196: ; Teil 197: ; Teil 198: ; Teil 199: ; Teil 200: ; Teil 201: ; Teil 202: ; Teil 203: ; Teil 204: ; Teil 205: ; Teil 206: ; Teil 207: ; Teil 208: ; Teil 209: ; Teil 210: ; Teil 211: ; Teil 212: ; Teil 213: ; Teil 214: ; Teil 215: ; Teil 216: ; Teil 217: ; Teil 218: ; Teil 219: ; Teil 220:","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
for(long i = 2; i < product; i++){
    if(product%i == 0){
        *f1 = (product/i);
        *f2 = i;
        return;
    }
}
*f1 = product;
*f2 = 1;
}

int main(){
    long product =0;
    long lol = 0; 
    long lol2= 0;
    long *wtf1 = &lol;
    long *wtf2 = &lol2;
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &product);
    factorize(product, wtf1, wtf2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", product, lol, lol2);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    for(int i = 0; i < zahl; i++){
        if(dest[i] != '\0' && src[i] != '\0'){
            dest[i] = src[i]; 
        }
        else return;
    }
}

void umdrehen( char* str )
{
    int z = 0;
    for(int i = 0; str[i] != '\0'; i++) {z+=1;}
    char tmp[z+1];
    for(int i = 0; i <=z ; i++) {
    tmp[i] = str[i];
    }
    for(int i = 0; i <z ; i++){
        str[i] = tmp[z-1-i];
            //printf(""%c"", str[i]);
    }
    //printf(""%s"", str);
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen(test);
  printf( ""Rückwärts : %s \n"", test );
}",-
Bakir,Rejne,rejne.bakir@campus.tu-berlin.de,Beendet,"26. Juni 2020  08:27","28. Juni 2020  23:50","2 Tage 15 Stunden","10,00",5,"Ein C-String ist ein Array von char-Variablen.",232,"Nichts, da Programm nicht kompiliert.",80,5,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2){
	char simple = 0;
	if (product == 0 || product == 1) simple = 1;
	else{
		simple = 1;
		for (long i=product; i>1; i--){
			if (product % i == 0) {
				*f1 = i;
				*f2 = product/i;
				simple = 0;
			}
		}
	}
	if (simple){
		*f1 = product;
		*f2 = 1;
	}
}

int main(){
	printf(""Please enter an Integer: "");
	long product;
	long f1, f2;
	scanf(""%ld"", &product);
	factorize(product, &f1, &f2); 
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, f2, f1);
	return 0;
}","#include <stdio.h>

int leange(char* str){
	int i = 0;
	while (str[i] != '\0') i++;
	return i;
}



int main(int argc, char* argv[]){
	int gesamtleange = 0;
	for (int i=1; i<argc; i++){
		gesamtleange += leange(argv[i]);
	}
	// neuer string fuer Kombination
	char gesamt[gesamtleange+1];
	// zwischenstelle
	int z = 0;
	// alle strings
	for (int i=1; i<argc; i++){
		//printf(""string: %s.\n"", argv[i]);
		// alle chars pro string
		for (char* str = argv[i]; *str != '\0'; str++){
			//printf(""char: %c\n"", *(str));
			if (*str !='x' && *str!='y' && *str !='q' && *str !='X' && *str !='Y' && *str !='Q'){
				gesamt[z] = *str;
				z++;
			}
		}
	}
	gesamt[z] = '\0';
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", gesamt);
	
	// nur jeden dritten char:
	char reduziert[gesamtleange];	
	z=0;
	for (int i=0; i<gesamtleange; i+=3) {
		//printf(""char: %c\n"", gesamt[i]);
		reduziert[z] = gesamt[i];
		z++;
	}
	while (reduziert[z] != '\0') {
	    reduziert[z] = '\0';
	    z++;
	}
	printf(""Der neue String lautet: %s\n"", reduziert);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Nedwidek,"Anna Maria",27debaee3b1a763a1dc11e59b4eaecd4,Beendet,"26. Juni 2020  16:05","28. Juni 2020  17:36","2 Tage 1 Stunde","19,13",5,80,"Nichts, da Programm nicht kompiliert.","Ein C-String ist ein Array von char-Variablen.","zeigefinger = (int*)((short*)zeigefinger - 4);",5,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 2(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: 2; Teil 130: 1; Teil 131: 0; Teil 132: 0; Teil 133: 3(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: 200; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 4(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 5(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: 204; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 4(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 5(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: %; Teil 196: %; Teil 197: %; Teil 198: %; Teil 199: 6(14); Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: -; Teil 207: -; Teil 208: -; Teil 209: -; Teil 210: 15; Teil 211: -; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	int tmp = 1;
    long prod = product;

    if(product < -2) 
    {
        prod = -product;
    }

    if(prod > 2) //negative Zahlen noch einbinden
    {
        for(int i=2; i<=(prod/2); ++i)
        {
            if(product % i == 0)
            {
                *f1 = (product/i);
                *f2 = i;
                tmp = 0;
                break;
            }
        }
    }
    if(tmp==1)
    {
        *f1 = product;
        *f2 = 1;
    }
}



int main()
{
    long number;
    long f1=0;
    long f2=0;

	printf(""Please enter an Integer: "");
    scanf(""%ld"", &number);
    factorize(number, &f1, &f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", number, f1, f2);
	return 0;
}","#include <stdio.h>


void filtern(int argc, char** argv, int mod)
{
    char* pointer;
    int counter = -1;
    
    for(int i=1; i < argc; i++)
    {
        for(pointer = argv[i]; *pointer != '\0'; pointer++)
        {
            switch(*pointer)
            {
                case 'x': break;
                case 'X': break;
                case 'y': break;
                case 'Y': break;
                case 'q': break;
                case 'Q': break;
                default: 
                {
                    counter++;
                    if(counter % mod == 0)
                    {
                        printf(""%c"", *pointer); 
                    }
                    break;
                }
            }
        }
    }
    printf(""\n"");
}




int main(int argc, char* argv[])
{
    //verketten(argc, argv);
    printf(""x,y,q und X,Y,Q aussortiert: "");
    filtern(argc, argv, 1);
    printf(""Der neue String lautet: "");
    filtern(argc, argv, 3);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  for(int i=0; dest[i] != '\0'; ++i)
    {
        if (src[i] == '\0')
        {
            break;
        }    
        if(i <= (zahl-1))
        {
            dest[i] = src[i];
        }    
    }

}

void umdrehen( char* str )
{
  int str_len;
    
    //berechne string laenge
    for(str_len=0; str[str_len] != '\0'; str_len++);
    
    //lege neues array an
    char tmp[str_len+1];
    
    //rueckwaerts umkopieren in tmp array
    for(int j=0; j<str_len; j++)
    {
        tmp[j] = str[str_len-1-j];
    }
    
    //die Terminationsnull nicht vergessen
    tmp[str_len] = 0;
    
    //Und nun zurueck kopieren
    for(int j=0; j<str_len; j++)
    {
        str[j] = tmp[j];
    }

}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Neufeld,"Lisa Maria",l.neufeld@campus.tu-berlin.de,Beendet,"26. Juni 2020  16:36","27. Juni 2020  20:01","1 Tag 3 Stunden","19,01",5,"Nichts, da Programm nicht kompiliert.",80,"Ein C-String ist ein Array von char-Variablen.",5,232,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: %; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: 204; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: 208; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 2(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: 2; Teil 130: 1; Teil 131: 0; Teil 132: 0; Teil 133: 3(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: 2; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 4(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 5(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 1; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 4(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 5(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: %; Teil 196: %; Teil 197: %; Teil 198: %; Teil 199: 6(14); Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: -; Teil 206: -; Teil 207: -; Teil 208: -; Teil 209: -; Teil 210: 15; Teil 211: -; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

long x;
long y;

void factorize(long product, long *f1, long *f2)
{
    if(product % 2 ==0 || product % 3 ==0){
        if(product % 2 ==0){
            *f2 = 2;
            *f1 = product / 2;
        }
        if(product % 3 ==0){
            *f2 = 3;
            *f1 = product / 3;
        }

    }
    else{
        *f2 = 1;
        *f1 = product;
    }
    // Your factorization
}

int main(){
    long product ;
    long *f1 = &x;
    long *f2 = &y;
    printf(""Please enter an Integer: "");
    scanf(""%ld"" ,&product);
    factorize(product, &x, &y);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", product, *f1, *f2);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
int j=0;
for(char *dest2 = dest; *dest2 != '\0'; dest2++){
    j++;
}



for (int i=0; i<zahl; i++){
        char y[3] = ""ei"";
        if(src[i]!= y[2]){
            if(i<j){
                dest[i]=src[i];
            }
            else break;
        }
        else break;
    }  
}

void umdrehen( char* str )
{
    int j=0;
    for(char *str2 = str; *str2 != '\0'; str2++){
        j++;
    }

	
	char copy[j+1];
	for(int k=0;k<j;k++){
		copy[k]=str[k];
	}
	
	int i = 0;
	int z = j;
	while(i<z){
		str[i] = copy[j-1];
		i++;
		j--;
	}
   
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>

void verketten(int argc, char** argv)
{
    for(int i=1; i < argc; i++)
    {
        printf(""%s"", argv[i]);
    }
    printf(""\n"");
}


void filtern(int argc, char** argv, int mod)
{
    char* pointer;
    int counter = -1;

    for(int i=1; i < argc; i++)
    {
        for(pointer = argv[i]; *pointer != '\0'; pointer++)
        {
            switch(*pointer)
            {
                case 'x': break;
                case 'X': break;
                case 'y': break;
                case 'Y': break;
                case 'q': break;
                case 'Q': break;
                default:
                {
                    counter++;
                    if(counter % mod == 0)
                    {
                        printf(""%c"", *pointer);
                    }
                    break;
                }
            }
        }
    }
    printf(""\n"");
}




int main(int argc, char* argv[])
{
    //verketten(argc, argv);
    printf(""x,y,q und X,Y,Q aussortiert: "");
    filtern(argc, argv, 1);
    printf(""Der neue String lautet: "");
    filtern(argc, argv, 3);
}"
Lenz,"Felix Michael",f.lenz.1@campus.tu-berlin.de,Beendet,"26. Juni 2020  16:59","28. Juni 2020  19:55","2 Tage 2 Stunden","14,84","Nichts, da Programm nicht kompiliert.",5,"Ein C-String ist ein Array von char-Variablen.",5,5,"zeigefinger = (int*)((short*)zeigefinger - 4);","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 202; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 204; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 206; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 204; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	if(product == 0 || product == 1 || product == 2 || product == 3 || product == 5|| product == 7)
	{
		*f1 = product;
		*f2 = 1;
	}else if(product %2 == 0)
	{
		*f1 = product/2;
		*f2 = 2;
	}else if(product %3 == 0)
	{
		*f1 = product/3;
		*f2 = 3;
	}else if(product %5 == 0)
	{
		*f1 = product/5;
		*f2 = 5;
	}else if(product %7 == 0)
	{
		*f1 = product/7;
		*f2 = 7;
	}else
	{
		*f1 = product;
		*f2 = 1;
	}
}

int main(){
	long int zahl = 0;
	long int fz1 = 0;
	long int fz2 = 0;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &zahl);
	factorize(zahl, &fz1, &fz2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", zahl, fz1, fz2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	for(int i=0; i < zahl && dest[i] != '\0' && src[i] != '\0'; i++)
	{
		dest[i] = src[i];
	}
}

void umdrehen( char* str )
{
  	int l = 1;
	for (int i=0; str[i] !='\0'; i++)l=l+1;
	char kopie[l];
	for (int i =0; str[i] != '\0'; i++)
	{
		if(str[i] == '\0')break;
		kopie[i] = str[i];
	}
	for (int i =l; i>= 0; i--)
	{
		str[(l-i)] = kopie[i-2];
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","// dümmste Aufgabe mit der schlechtesten Vorbereitung durch Tut. und VL Danke für die demotivation!!!!!!!!!!!!!!!!!!!!!!!


#include <stdio.h>
#include <stdlib.h>

void sort(char* kopie, char* str)
{  
	int c=0;
	for (int i =0; str[i] != '\0'; i++)
	{
		if(str[i] == '\0')break;
		if(str[i]=='X'||str[i]=='Y'||str[i]=='Q'||str[i]=='x'||str[i]=='y'||str[i]=='q') c++;
		else kopie[i-c] = str[i];
	}
}

void third(char* str, char* kop)
{  
	int l = 1;
	int c = 0;
	for (int i=0; str[i] !='\0'; i++)l=l+1;
	for (int i  = 0;c <= l; i++)
	{
		kop[i] = str[c];
		c = c+3;
	}
	kop[((l/3)+1)]='\0';
}


int main( int argc, char** argv)
{  
	char kopie[1];
	char KLO[1];
	sort(kopie, argv[1]);
	printf( ""x,y,q und X,Y,Q aussortiert: %s \n"", kopie );
	third(kopie, KLO);
	printf( ""Der neue String lautet: %s \n"", KLO );

}"
Budde,"Markus Stefan",m.budde@campus.tu-berlin.de,Beendet,"26. Juni 2020  18:13","29. Juni 2020  00:07","2 Tage 5 Stunden","18,79","zeigefinger = (int*)((short*)zeigefinger - 4);","Nichts, da Programm nicht kompiliert.",80,"Ein C-String ist ein Array von char-Variablen.",5,5,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 208; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 216; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 224; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: 200; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 216; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	if (product == 1){
	*f1 = 1;
	*f2 = 1;
	}
	for (int i = product-1; i > 1; i--){
		if (product % i == 0){
		*f1 = product / i;
		*f2 = i;
		}
		if (*f1 == *f2) {
			*f1 = 1;
			*f2 = 1;
		}
	}
}


int main(){	
	long int zahl;
	printf(""Please enter an Integer: "");
	scanf(""%li"", &zahl);
	long int faktor[2] = {0,0};
	factorize(zahl, faktor, faktor+1 );
	printf(""Possible Factors of %ld are %ld and %ld.\n"", zahl, faktor[0], faktor[1]);
	return 0;
}","#include <stdio.h>

int main(int argc, char** argv){
	char eingabe[100];
	int k = 0;
	for (int l = 1; l < argc; l++){
	for (int i = 0; argv[l][i] != '\0'; i++){
		switch(argv[l][i]){
			case 'x': break;
			case 'y': break; 
			case 'q': break;
			case 'X': break; 
			case 'Y': break;
			case 'Q': break;
			default:{
				eingabe[k] = argv[l][i];
				k++;
				eingabe[k+1] = '\0';
				eingabe[k+2] = '\0';	
				eingabe[k+3] = '\0';	
			}
		}
	}
	}	
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", eingabe);
	
	char jededrei[100];
	int j = 0;
	for (int i = 0; eingabe[i] != '\0'; i += 3){
		jededrei[j] = eingabe[i];
		j++;
	}	
	printf(""Der neue String lautet: %s\n"", jededrei);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  for (int i = 0; i < zahl && src[i] != '\0' && dest[i] != '\0'; i++){
		dest[i] = src[i] ;
	} 
}

void umdrehen( char* str )
{
    int max;
	for( max = 0; str[max] != '\0'; max++);
	char tmp[max];
  	tmp[max] = '\0';
  	for(int i = max-1 ; i >= 0; i--){
  	tmp[max-1 -i] = str[i];
  	}
 
  	for(int i = 0; tmp[i] != '\0'; i++){
  		str[i] = tmp[i];
  	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Haas,Lea,lea.haas@campus.tu-berlin.de,Beendet,"26. Juni 2020  23:35","28. Juni 2020  21:36","1 Tag 22 Stunden","14,16","char *daumen = (char*)zeigefinger - 2;
zeigefinger = (int*)daumen;",5,5,"Nichts, da Programm nicht kompiliert.",5,80,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 3; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: 2; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: %; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: 1; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: 0; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: -; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 2; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: -; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
    int primzahl = 0;
	for(int i=2; i <= (product-1) ; i++)
	{
		if(product%i == 0)
		{
		*f2=i;
		*f1= (product/(*f2));
		primzahl = 1;
		break;
		}
	}
	if (primzahl == 0)
	{
	*f1 = product;
	*f2 = 1;
	}
}



int main(){
	printf(""Please enter an Integer: "");
	long product;
	scanf(""%ld"", &product);
	long f1;
	long f2;
	factorize (product, &f1, &f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, f1, f2);
	return 0;
}","#include <stdio.h>

int main ()","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	for (int i = 0; dest[i] != '\0' && src[i] != '\0' && i < zahl; i++)
	{
	dest[i] = src[i];
	}
}

void umdrehen( char* str )
{
  int counter = 0;
	for (int i = 0; str[i] != '\0'; i++)
	{
		counter ++;
	}
	char strtemp[counter +1];
	for (int i = 0; i < counter; i++)
	{
		strtemp[i] = str[(counter -1 - i)];
	}
	for (int i = 0; i < counter; i++)
	{
		str[i] = strtemp[i];
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Shad,"Omair Anwar",o.shad@campus.tu-berlin.de,Beendet,"26. Juni 2020  23:44","28. Juni 2020  23:55","2 Tage","17,68","Ein C-String ist ein Array von char-Variablen.",232,5,5,6,P,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 13; Teil 134: -; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 2(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: 2; Teil 152: 1; Teil 153: 0; Teil 154: 0; Teil 155: 3(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: 200; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 4(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 5(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: 208; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 3(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: %; Teil 196: %; Teil 197: %; Teil 198: %; Teil 199: 6(14); Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: -; Teil 206: -; Teil 207: -; Teil 208: -; Teil 209: -; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	if (product%2==0 && product>2){
        *f1=product/2;
        *f2=2;
    }
    else {
        for (int i=3;i<product;i++){
            if(product%i==0){
                *f1=product/i;
                *f2=i;
                break;
            }

        }
    }
    if(*f1==0 && *f2==0){
            *f1=product;
            *f2=1;
    }

}

int main(){
    long eingabe=0;
    long faktor1=0;
    long faktor2=0;

	printf(""Please enter an Integer: "");
    scanf(""%ld"",&eingabe);
    factorize(eingabe,&faktor1,&faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",eingabe,faktor1,faktor2);
	return 0;
}","#include <stdio.h>

void SkipChar(char* String, char* newstring){
    int n=0;
    for (int i=0;String[i]!='\n';i+=3){
        if (i>=3){
            if (String[i-2]=='\0' || String[i-1]=='\0') break;
        }
        newstring[n]=String[i];
        n++;
    }
}

int main(int argc, char* argv[]){

    char string[100]="""";
    char newstring[100]="""";
    int n=0;
    for (int i=1;i<argc;i++){
        for(int m=0;argv[i][m]!='\0';m++){
            if(argv[i][m]!='x' && argv[i][m]!='y'&& argv[i][m]!='q'&& argv[i][m]!='X'&& argv[i][m]!='Y'&& argv[i][m]!='Q'){
                string[n]=argv[i][m];
                n++;
            }
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"",string);
    SkipChar(string,newstring);
    printf(""Der neue String lautet: %s\n"",newstring);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  for (int i=0;i<zahl;i++){
      if (src[i]!='\0' && dest[i]!='\0' && i<10){
          dest[i]=src[i];
      }
  }
}

void umdrehen( char* str )
{
 int n=0;
  char tmp[11]="""";
  int m=0;  
  for (int i=0;str[i]!=0;i++){
      m++;
  }
  m-=1;

  for (int i=0;i<=m;i++){
      tmp[i]=str[i];
  }
  for(int i=m;i>=0;i--){
    str[i]=tmp[n];

    n++;
  }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Knapp,"Felicia Felina",f.knapp@campus.tu-berlin.de,Beendet,"26. Juni 2020  23:47","28. Juni 2020  13:41","1 Tag 13 Stunden","18,01","Nichts, da Programm nicht kompiliert.",5,"Ein C-String ist ein Array von char-Variablen.",5,5,80,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: %; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: 204; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: 208; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 2(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: 2; Teil 130: 1; Teil 131: 0; Teil 132: 0; Teil 133: 3(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: 2; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 4(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 5(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 1; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 4(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 5(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: %; Teil 196: %; Teil 197: %; Teil 198: %; Teil 199: 6(14); Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: -; Teil 206: -; Teil 207: -; Teil 208: -; Teil 209: -; Teil 210: 15; Teil 211: -; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

long x;
long y;

void factorize(long product, long *f1, long *f2)
{
    if(product % 2 ==0 || product % 3 ==0){
        if(product % 2 ==0){
            *f2 = 2;
            *f1 = product / 2;
        }
        if(product % 3 ==0){
            *f2 = 3;
            *f1 = product / 3;
        }

    }
    else{
        *f2 = 1;
        *f1 = product;
    }
    // Your factorization
}

int main(){
    long product ;
    long *f1 = &x;
    long *f2 = &y;
    printf(""Please enter an Integer: "");
    scanf(""%ld"" ,&product);
    factorize(product, &x, &y);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", product, *f1, *f2);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  

int j=0;
for(char *dest2 = dest; *dest2 != '\0'; dest2++){
    j++;
}



for (int i=0; i<zahl; i++){
        char y[3] = ""ei"";
        if(src[i]!= y[2]){
            if(i<j){
                dest[i]=src[i];
            }
            else break;
        }
        else break;
    }

}

void umdrehen( char* str )
{
    int j=0;
    for(char *str2 = str; *str2 != '\0'; str2++){
        j++;
    }

	
	char copy[j+1];
	for(int k=0;k<j;k++){
		copy[k]=str[k];
	}
	
	int i = 0;
	int z = j;
	while(i<z){
		str[i] = copy[j-1];
		i++;
		j--;
	}
    
}


int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>

void verketten(int argc, char** argv)
{
    for(int i=1; i < argc; i++)
    {
        printf(""%s"", argv[i]);
    }
    printf(""\n"");
}


/*
void filtern(int argc, char** argv)
{
    char* pointer;


    for(int i=1; i < argc; i++)
    {
        for(pointer = argv[i]; *pointer != '\0'; pointer++)
        {
            switch(*pointer)
            {
                case 'x': break;
                case 'X': break;
                case 'y': break;
                case 'Y': break;
                case 'q': break;
                case 'Q': break;
                default: printf(""%c"", *pointer); break;
            }
        }
    }
    printf(""\n"");
}
*/


void filtern(int argc, char** argv, int mod)
{
    char* pointer;
    int counter = -1;

    for(int i=1; i < argc; i++)
    {
        for(pointer = argv[i]; *pointer != '\0'; pointer++)
        {
            switch(*pointer)
            {
                case 'x': break;
                case 'X': break;
                case 'y': break;
                case 'Y': break;
                case 'q': break;
                case 'Q': break;
                default:
                {
                    counter++;
                    if(counter % mod == 0)
                    {
                        printf(""%c"", *pointer);
                    }
                    break;
                }
            }
        }
    }
    printf(""\n"");
}




int main(int argc, char* argv[])
{
    //verketten(argc, argv);
    printf(""x,y,q und X,Y,Q aussortiert: "");
    filtern(argc, argv, 1);
    printf(""Der neue String lautet: "");
    filtern(argc, argv, 3);
}"
Westerhof,Camille,3bdae171e077adbc3dca25941e524fc5,Beendet,"27. Juni 2020  11:12","28. Juni 2020  23:17","1 Tag 12 Stunden","11,96",6,P,"zeigefinger = (int*)((short*)zeigefinger - 4);","Ein C-String ist ein Array von char-Variablen.",5,"23 2","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: -; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: 200; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 12; Teil 46: 204; Teil 47: %; Teil 48: 1; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 12; Teil 57: 208; Teil 58: %; Teil 59: %; Teil 60: 0; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 13; Teil 68: -; Teil 69: %; Teil 70: %; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 2(14); Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: 2; Teil 86: 1; Teil 87: 0; Teil 88: 0; Teil 89: 3(14); Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: 200; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 4(14); Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: %; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 3(14); Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: 208; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 5(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: -; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 6(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: -; Teil 141: -; Teil 142: -; Teil 143: -; Teil 144: 15; Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 15; Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 4(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 5(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: -; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: -; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
    if (product == 1 || product == 0) {
        *f1 = 1;
        *f2 = 1;
        
    }
    else {
        
    
    int i, count = 0;
    
    
    
    
    
    for (i = 1; i <= product; i++) {
        if (product%i == 0) {
            count++;
        }
        
    }
    
    if (count == 2) {
        // printf(""%d is Prime\n"", product);
        *f1 = product;
        *f2 = 1;
    } else {
        
        // printf(""%d is not\n"", product);
        
        for (i = 2; i <= product; ++i) {
            if (product % i == 0) {
                // printf(""%d **++"", i);
                *f1 = i;
                
                break;
            }
        }
    }
    *f2 = (product/ *f1);
    

    }}











int main(){
    long zahl = 0;
    long p1 = 0;
    long p2 = 0;
    
    printf(""Please enter an Integer: "");
    scanf(""%li"", &zahl);
    
    long* p_zahl = &zahl;
    long* p_p1 = &p1;
    long* p_p2 = &p2;
    
    
    factorize(*p_zahl, p_p1, p_p2);
    
    printf(""Possible Factors of %li are %li and %li.\n"", zahl, p2, p1);
    
    
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include<stdio.h>
void eins(char** argv, char* A1, int argc){
    int A=0;
    for(int j=1; j < argc; j++){
        for(int i=0;argv[j][i] !='\0';i++)
            if(argv[j][i]!='x' && argv[j][i]!='y' && argv[j][i]!='q' &&
               argv[j][i]!='X'         && argv[j][i]!='Y' && argv[j][i]!='Q'){
                A1[A]=argv[j][i];
                A++;
            }
    }
}
void zwei(char* A2, const char* A1){
    int j = 0;
    for(int i=0;A1[i] != '\0';i++){
        if(i%3==0 || i==0){
            A2[j]=A1[i];
            j++;
        }
    }
}

int main(int argc, char** argv){
    char A1[100] = """";
    char A2[100] = """";
    eins(argv,A1,argc);
    zwei(A2,A1);
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"",A1);
    printf(""Der neue String lautet: %s\n"",A2);
}"
Roth,"Leonard Augustin Orson Jonatha",leonard.roth@campus.tu-berlin.de,Beendet,"27. Juni 2020  12:40","27. Juni 2020  14:00","1 Stunde 19 Minuten","20,00",5,"Nichts, da Programm nicht kompiliert.","Ein C-String ist ein Array von char-Variablen.",232,80,"zeigefinger = (int*)((short*)zeigefinger - 4);","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	if (product == 0){
		*f1 = 0;
		*f2 = 1;
	}else if (product == 1){
		*f1 = 1;
		*f2 = 1;
	}else for (long i = product -1; i > 0; i--){
		if((product % i) == 0){
			*f1 = i;
			*f2 = (product / i);
			break;
		}
	}
}

int main(){
	long wert = 0;
	long c = 0;
	long x = 0;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &wert);
	factorize(wert, &c, &x);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", wert, c, x);
	return 0;
}","#include <stdio.h>

int Anzahl(char str[]){
	int count = 0;
	for(int i = 0; str[i] != '\0'; i++){
	  count++;
	}	
	return count;
}

int main( int argc, char* argv[]){
	
	char gesamt[100]= """";
	
	for(int i = 1; i<argc; i++){
		int aktuell = Anzahl(gesamt);
		int momentan = Anzahl(argv[i]);
		int j = aktuell;
		int k = 0;
		for(; j < aktuell + momentan +2; j++){
			gesamt[j] = argv[i][k];
			k++;
		}
		gesamt[j+1]='\0';
	}

	char ohnex[100]="""";
	int n = 0;
	for(int i = 0; i< Anzahl(gesamt); i++){
	if(gesamt[i] == 'X'||gesamt[i] == 'Y'||gesamt[i] == 'Q'||gesamt[i] == 'x'||gesamt[i] == 'y'||gesamt[i] == 'q'){
	
	} else{
			ohnex[n] = gesamt[i];
			n++;
		}
	}
	
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", ohnex);
	
	char dritte[100]="""";
	int m = 0;
	for(int i = 0; i< Anzahl(ohnex) +1; i++){
		if (i==0){
			dritte[i] = ohnex[i];
			m++;
		}
		else if((i % 3) == 0){
			dritte[m] = ohnex[i];
			m++;
		}
	}
	printf(""Der neue String lautet: %s"", dritte);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  for(int i = 0; dest[i] != '\0' && src[i] != '\0' && i < zahl; i++){
	  dest[i] = src[i];	  
  }
}

void umdrehen( char* str )
{
	int count = 0;
	for(int i = 0; str[i] != '\0'; i++){
	  count++;
	}	
	int d;
	int c;
	char arr[count];
	for (int b=count; b>0; b--) {
        d = b-1;
        c = count-b;
            *(arr+c) = *(str+d);
    }
	for(int i = 0; str[i] != '\0' && arr[i] != '\0'; i++){
		str[i] = arr[i];
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Song,Yiyang,621216c38c6d3a82c36546decaf03ecf,Beendet,"27. Juni 2020  13:04","27. Juni 2020  22:55","9 Stunden 50 Minuten","20,00",5,"Nichts, da Programm nicht kompiliert.","zeigefinger = (int*)((short*)zeigefinger - 4);",5,5,232,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
    // Your factorization
    if (product<2){
        *f1 = 1;
        *f2 = product;
        return;
    }
    long d =2;
    while (product%d!=0){
        d++;
    }
    *f1=product/d;
    *f2=d;
}

int main(){
    long n, fac1, fac2;
    printf(""Please enter an Integer: "");
    scanf(""%ld"",&n);
    factorize(n,&fac1,&fac2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"",n,fac1,fac2);
    return 0;
}","#include <stdio.h>

int main(int argc, char *argv[])
{
//    argc = 5;
//    argv[1]= ""lasse"";
//    argv[2]=""roland"";
//    argv[3]= ""max"";
//    argv[4]= ""ivo"";

    char out[100]="""";
    int z = 0;
    for(int i = 1; i < argc; i++) {
        int j =0;
        while ('\0'!=argv[i][j]){
            char tmp = argv[i][j];
            if (tmp != 'x' && tmp != 'y' && tmp != 'q' && tmp != 'X' && tmp != 'Y' && tmp != 'Q'){
                out[z]=tmp;
                z++;
            }
            j++;
        }
    }
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"",out);

    char out2[100] = """";
    int i = 0;
    int j =0;
    while ('\0'!=out[i]){
        out2[j]=out[i];
        j++;
        i+=3;
    }
    printf(""Der neue String lautet: %s"",out2);

}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
    int i =0;
    while (dest[i]!='\0' && src[i]!='\0' &&i<zahl){
        dest[i]=src[i];
        i++;
    }

}

void umdrehen( char* str )
{
    char tmp;
    int l=0;
    while (str[l]!='\0'){
        l++;
    }
    for (int i=0;i<l/2;i++){
        tmp=str[l-i-1];
        str[l-i-1]=str[i];
        str[i]=tmp;
    }

}

int main( int argc, char* argv[] )
{
    char test[11]= ""0123456789"";
    printf( ""Das Original ist: %s \n"", test );
    ersetzen( test , atoi(argv[1]), argv[2] );
    printf( ""Ersetzt : %s \n"", test );
    umdrehen( test );
    printf( ""Rückwärts : %s \n"", test );
}"
Städtler,"Amelia Alexandra",a.staedtler@campus.tu-berlin.de,Beendet,"27. Juni 2020  13:41","28. Juni 2020  20:15","1 Tag 6 Stunden","14,91",5,5,232,"Ein C-String ist ein Array von char-Variablen.","zeigefinger = (int*)((short*)zeigefinger - 4);",80,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: -; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	long test = 2;
	while(test < product){
		if((product % test) == 0){
			*f1 = product / test;
			*f2 = test;
			return;
		}
		test++;
	}
	*f1 = product;
	*f2 = 1;
	return;
}

int main(){
	long read;
	long f1;
	long f2;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &read);
	factorize(read, &f1, &f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", read, f1, f2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	if(zahl > 0){

		char* srcLetter = src;
		char* destLetter = dest;
		int i = 0;
		while((i <= zahl) && (*srcLetter != '\0') && (*destLetter != '\0')){
			*destLetter = *srcLetter;
			
			srcLetter++;
			destLetter++;
			i++;
		}	
		*destLetter = '\0';
	
	}
}

void umdrehen( char* str )
{
	char* strLetter = str;
	int i = 0;
  	while(*strLetter != '\0'){
		i++;
		strLetter++;
	}

	char tmp[i];
	
	strLetter = str;
	for(int j = 0; j < i; j++){
		tmp[j] = *strLetter;
		strLetter++;
	}
	
	strLetter--;
	
	for(int j = 0; j < i; j++){
		*strLetter = tmp[j];
		strLetter--;
	}
	
	*strLetter = '\0';
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",-
Nguyen,"Thanh Tung",nguyen.3@campus.tu-berlin.de,Beendet,"27. Juni 2020  15:29","28. Juni 2020  20:46","1 Tag 5 Stunden","13,06","zeigefinger = (int*)((short*)zeigefinger - 4);",5,5,"Ein C-String ist ein Array von char-Variablen.",232,80,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: 204; Teil 36: %; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 11; Teil 46: %; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 12; Teil 57: 208; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 11; Teil 68: %; Teil 69: %; Teil 70: %; Teil 71: %; Teil 72: %; Teil 73: 3; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: -; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 2(14); Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: 2; Teil 97: 1; Teil 98: 0; Teil 99: 0; Teil 100: 3(14); Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: %; Teil 105: %; Teil 106: 2; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 4(14); Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 5(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: 1; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 3(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 4(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 5(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: 0; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 5(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: %; Teil 196: %; Teil 197: %; Teil 198: %; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: %; Teil 213: %; Teil 214: %; Teil 215: %; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	
	long i, flag = 0;
	long x = product;

    for (i = 2; i <= product / 2; ++i) {

        // condition for non-prime
        if (product % i == 0) {
            flag = 1;
            break;
        }
    }

    if (product == 1) { // Zahl ist 1
        *f1 = product;
		*f2 = 1;
    }
    else {
        if (flag == 0){ // Primzahl
            *f1 = product;
			*f2 = 1;
		}
       else{
		   	*f1 = i;
			*f2 = x/i;
	   }
    }
	
}

int main(){
	long product;
	long f1,f2;

	printf(""Please enter an Integer: "");
	scanf(""%ld"",&product);
	factorize(product, &f1,&f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",product,f2,f1);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    int i = 0;
int lim = 10;
  if(zahl < lim ){
	lim = zahl;
}
	for(i=0;i < lim;i++){
	dest[i] = src[i];
		}
}

void umdrehen( char *str )
{
		char *start = str;
		char *inv_str = str;
		char temp;
		while(*str)
			str++;
			--str;
		
		while(inv_str < str){
			temp = *inv_str;
			*inv_str = *str;
			*str = temp;
			inv_str++;
			str--;
		}
  }


int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",-
Thal,"Ben Niclas David",ben.nd.thal@campus.tu-berlin.de,Beendet,"27. Juni 2020  17:46","28. Juni 2020  19:28","1 Tag 1 Stunde","18,00",6,5,80,"*zeigefinger = leute;",232,"Ein C-String ist ein Array von char-Variablen.","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{

	for(int i = 2; i<product/2; i++){
		if (product%i==0){
			*f1=product/i;
			*f2=i;
			break;		
		}	
	}
	if (*f1==0 && *f2==0){
		*f1=product;
		*f2=1;
	}
}

int main(){
	long int phuq1 = 0;
	long int phuq2 = 0;
	long int megaPhuq = 0;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &megaPhuq);
	factorize(megaPhuq, &phuq1, &phuq2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", megaPhuq, phuq1, phuq2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  for(int i=0; i<zahl && dest[i]!='\0' && src[i]!='\0'; i++){
  	dest[i]=src[i];
  }
}

void umdrehen( char* str )
{
int laenge=0;
char tmp[100];
while(str[laenge]!='\0')laenge++;
for(int i=0; i<laenge; i++)tmp[i]=str[i];
for (int i=0; i<laenge;i++) str[i]=tmp[laenge-i-1];	
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
 
void aussortieren(char* str, int* laenge){
	int zahl=0;
	for(int i=0; (i+zahl)<(*laenge); i++){
		while((i+zahl)<(*laenge) && (str[i+zahl]=='x'||str[i+zahl]=='y'||str[i+zahl]=='q'||str[i+zahl]=='X'||str[i+zahl]=='Y'||str[i+zahl]=='Q')) {
			zahl++;
		}				
		str[i]=str[i+zahl];
	}
	str[*laenge-zahl]='\0';
	*laenge-=zahl;
}

void dritteln(char* str, int laenge){
	char tmp[35];
	int zahler=0;
	for(int i=0; i<laenge; i++){
		if((i)%3==0){
			tmp[zahler]=str[i];
			zahler++;
		}
	}
	tmp[zahler+1]='\0';
	printf(""Der neue String lautet: %s"", tmp);
}

int main( int argc, char* argv[] )
{  
  char alles[100];
  int zaler=0;
  for(int i=1;i<argc;i++){
  	for(int j=0;argv[i][j]!='\0';j++){
  		alles[zaler]=argv[i][j];
  		zaler++;
  	}
  }
  alles[zaler+1]='\0';
  aussortieren(alles, &zaler);
  printf(""x,y,q und X,Y,Q aussortiert: %s\n"",alles);
  dritteln(alles, zaler);
}"
"El Salman","Ali Heiderra",elsalman@campus.tu-berlin.de,Beendet,"27. Juni 2020  18:24","28. Juni 2020  17:40","23 Stunden 16 Minuten","13,64","Ein C-String ist ein Array von char-Variablen.",5,232,5,5,5,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 3; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: 2; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: -; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: 2; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: 1; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: -; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: 1; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: 0; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: -; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: 0; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: -; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 2; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: -; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: 0; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	int i=2;
	while(product!=1)
    {
        if(product%i==0)
        {
                *f1=product/i;
                break;
        }
        i++;
    }

}


int main(){
	long f1;
	long f2;
	long product;
	printf(""Please enter an Integer: "");
	scanf(""%ld"" ,&product);
	if (product == 1)
    {
       printf(""Possible Factors of 1 are 1 and 1.\n""); 
    }
    else
    {
    factorize(product, &f1, &f2 );
	f2=product/f1;
	printf(""Possible Factors of %ld are %ld and %ld.\n"" , product, f1, f2);
    }
	return 0;
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
  int z;
  for (int i=0; dest[i] != '\0'; ++i){
    z=i;
  }
  scanf(""%i"", &zahl);
  scanf(""%s"", src);
  int r;
  for (int i=0; src[i] != '\0'; ++i){
    r=i;
  }
  r++;
  if(zahl>r && r<=z++){zahl=r;
  for(int i=0; i<zahl; i++){
    dest[i]=src[i];
  }
}
  if(r>z){
    r=z;
    int v=z;
    for(int i=0; i<v+1; i++){
      dest[i]=src[i];
    }
  }else {
  for(int i=0; i<zahl; i++){
    dest[i]=src[i];
  }}
}


void umdrehen( char* str )
{
    int counter = 0;
    for (int i=0; str[i] != '\0'; i++)
    {
        counter ++;
    }
    char strtemp[counter+1];
    for(int i=0; i<counter; i++)
    {
        strtemp[i] = str[(counter -1 -i)];

    }
    for (int i=0; i < counter; i++)
    {
        str[i]=strtemp[i];
    }
}

int main( int argc, char* argv[] )
{
  int h=0;
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , h , argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",-
Rikert,"Kai Oliver",k.rikert@campus.tu-berlin.de,Beendet,"27. Juni 2020  19:16","28. Juni 2020  14:55","19 Stunden 38 Minuten","14,17","Nichts, da Programm nicht kompiliert.",5,5,232,"zeigefinger = (int*)((short*)zeigefinger - 4);",5,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 2(14); Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: 2; Teil 130: 1; Teil 131: 0; Teil 132: 0; Teil 133: 3(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: 200; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 4(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 5(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: 204; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 4(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 5(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: 208; Teil 195: %; Teil 196: %; Teil 197: %; Teil 198: %; Teil 199: 6(14); Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: -; Teil 206: -; Teil 207: -; Teil 208: -; Teil 209: -; Teil 210: 15; Teil 211: -; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long* f1, long* f2){
	*f1=product;
	*f2=1;
	for(int i =2; i<= (product/2); i++){
		if(product%i==0){
			*f1=(product/i);
			*f2=i;
			break;
		}
	}
}

int main (){
	long int zahl[3];
	printf(""Please enter an Integer: "");
	scanf(""%li"", &zahl[0]);
	factorize(zahl[0], &zahl[1], &zahl[2]);
	printf(""Possible Factors of %li are %li and %li.\n"", zahl[0], zahl[1], zahl[2]);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	int counter=0;
	for (int i=0; src[i] != '\0'; i++){
		counter++;
	}
	for(int i=0; i<zahl && i<10 && i<counter; i++){
		dest[i]=src[i];	
	}
}

void umdrehen( char* str )
{
  int counter=0;
  for(int i=0; str[i] != '\0';i++){
  	counter++;
  }
  char strtemp[counter+1];
  for(int i=0; i<counter;i++){
  	strtemp[i]=str[counter-1-i];
  }
  for(int i=0; i<counter; i++){
  	str[i]=strtemp[i];
  }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",-
Bodenmüller,Charlotte,c.bodenmueller@tu-berlin.de,Beendet,"27. Juni 2020  20:41","28. Juni 2020  01:09","4 Stunden 27 Minuten","19,95","Ein C-String ist ein Array von char-Variablen.",5,5,232,"Nichts, da Programm nicht kompiliert.",80,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: -; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
  for (unsigned int i = 2; i <= product; i++){
    if (!(product % i)){
      *f2 = i;
      *f1 = product / i;
      break;
    }
  }

}

int main(){
  long input = 0;
  long z1 = 0;
  long z2 = 0;

	printf(""Please enter an Integer: "");
  scanf(""%ld"", &input);

  if(0 == input){
    z1 = 1;
    z2 = 0;
  }
  else if (1 == input){
    z1 = 1;
    z2 = 1;
  }
  else
    factorize(input, &z1, &z2);

	printf(""Possible Factors of %ld are %ld and %ld.\n"", input, z1, z2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{

  for (unsigned int i = 0; i < zahl; i++){
    if (dest[i] == '\0' || src[i] == '\0')
      break;
    dest[i] = src[i];
  }
}

void umdrehen( char* str )
{
  unsigned int len = 0;
  for (char * ptr = str; * ptr != '\0'; ptr++){
    len++;
  }

  for (unsigned int i = 0; i < len/2; i++){
    char tmp = str[i];
    str[i] = str[len - i -1];
    str[len - i -1] = tmp;
  }
}

int main( int argc, char* argv[] )
{
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>

int main(int argc, char * argv[])
{
  //calc len
  unsigned int all_len = 0;
  for (unsigned int i = 1; i < argc; i++){
    for (char * ptr = argv[i]; *ptr != '\0'; ptr++)
      all_len++;
  }

  char long_str[all_len + 1];

  //combine str and del letters
  unsigned int tmp = 0;
  for (unsigned int i = 1; i < argc; i++){
    for (char * ptr = argv[i]; *ptr != '\0'; ptr++){
      if(*ptr == 'x' || *ptr == 'y' || *ptr == 'q' || *ptr == 'X' ||*ptr == 'Y' || *ptr == 'Q')
        continue;
      else{
        long_str[tmp] = *ptr;
        tmp++;
      }
    }
  }
  long_str[tmp] = '\0';

  //str of every third letter
  char third_chars[(tmp/3) + 1];
  unsigned int tmp2 = 0;
  for (unsigned int i = 0; long_str[i] != '\0'; i++){
    if (!(i%3)){
      third_chars[tmp2] = long_str[i];
      tmp2++;
    }
  }
  third_chars[tmp2] = '\0';




  printf(""x,y,q und X,Y,Q aussortiert: %s\n"", long_str);
  printf(""Der neue String lautet: %s\n"", third_chars);

}"
Lenz,"Leonhard Frederik",l.lenz@campus.tu-berlin.de,Beendet,"28. Juni 2020  13:08","28. Juni 2020  16:38","3 Stunden 30 Minuten","13,10","Ein C-String ist ein Array von char-Variablen.","char *daumen = (char*)zeigefinger - 2;
zeigefinger = (int*)daumen;",5,5,80,5,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 11; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 12; Teil 57: %; Teil 58: %; Teil 59: 1; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 11; Teil 68: 208; Teil 69: %; Teil 70: %; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 12; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: 0; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: 112; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 13; Teil 101: -; Teil 102: %; Teil 103: %; Teil 104: %; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 2(14); Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: 2; Teil 119: 1; Teil 120: 0; Teil 121: 0; Teil 122: 3(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: 116; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 4(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 224; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 232; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 5(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
    int r = 2;
    while (r < product){
        if ((product % r) == 0){
            *f1 = product / r;
            *f2 = r;
            break;
        }
        else {
        r++;
        }
    }
}

int main(){
    int in = 0;
    printf(""Please enter an Integer: "");
    scanf(""%i"", &in);
    long l1 = in;
    long l2 = 1;
    long* p1 = &l1;
    long* p2 = &l2;
    factorize(in, p1, p2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"",(long)in,l1,l2);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
    if(zahl > 10) zahl = 10;
    for(int i = 0; i <zahl;i++){
        dest[i] = src[i];
    }
}

void umdrehen( char* str )
{
    int l = 0;
    while(str[l] != '\0'){
        l++;
    }
    l--;
    char t;
    int s = 0;
    while(s < l){
        t = str[s];
        str[s] = str[l];
        str[l] = t;
        s++;
        l--;
    }
}

int main( int argc, char* argv[] )
{
    if (argc > 11) argc = 11;
    char test[11]= ""0123456789"";
    printf( ""Das Original ist: %s \n"", test );
    ersetzen( test , atoi(argv[1]), argv[2] );
    printf( ""Ersetzt : %s \n"", test );
    umdrehen( test );
    printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main(int argc, char* argv[]){
    int len = 0;
    while(argv[len] != NULL) len++;
    
    char str[30];
    
    strcpy(str, argv[1]);
    for(int i = 2; i < len; i++){
        strcat(str, argv[i]);
    }
    
    char clearstr[30];
    
    int i = 0;
    int w = 0;
    while(str[i] != '\0'){
        switch(str[i]){
            case 'x':
            case 'y':
            case 'q':
            case 'X':
            case 'Y':
            case 'Q':
                i++;
            default:
                clearstr[w] = str[i];
                w++;
                i++;
        }
    clearstr[w] = '\0';
    }
    
    char dristr[15];
    
    i = 0;
    int o = 0;
    
    while(i < w){
        dristr[o] = clearstr[i];
        i+=3;
        o++;
    }
    dristr[o] = '\0';
    
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"",clearstr);
    printf(""Der neue String lautet: %s\n"",dristr);
}"
Min,Seokhong,s.min@campus.tu-berlin.de,Beendet,"28. Juni 2020  14:29","28. Juni 2020  23:26","8 Stunden 56 Minuten","13,44",232,5,80,5,5,5,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 11; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 12; Teil 57: %; Teil 58: %; Teil 59: 1; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 11; Teil 68: 208; Teil 69: %; Teil 70: %; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 12; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: 0; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: 212; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 13; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: %; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 2(14); Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: 2; Teil 119: 1; Teil 120: 0; Teil 121: 0; Teil 122: 3(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: 200; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 4(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 204; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 5(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: %; Teil 213: %; Teil 214: %; Teil 215: %; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long* f1, long* f2)
{
	if (product == 1) {
		*f1 = 1;
		*f2 = 1;
	}
	else
	{
		for (int i = 2; i <= product; i++)
		{
			if (product % i == 0)
			{
				*f2 = i;
				*f1 = product / i;
				i = product;
			}
		}
	}
}

int main() {
	long num =0;
	long fak1=0;
	long fak2=0;

	printf(""Please enter an Integer: "");
	scanf(""%ld"", &num);
	factorize(num, &fak1, &fak2);

	printf(""Possible Factors of %ld are %ld and %ld.\n"", num, fak1, fak2);
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
	for (int i = 0; i < zahl && dest[i] != '\0' && src[i] != '\0'; i++)
	{
		dest[i] = src[i];
	}
}

void umdrehen(char* str)
{
	int count = 0;

	for (int i = 0; str[i] != 0; i++)
	{
		count++;
	}

	for (int t = 0; t <= (count - 1) / 2; t++)
	{
		char tmp;
		tmp = str[t];
		str[t] = str[(count-1) - t];
		str[(count-1) - t] = tmp;
	}
}

int main(int argc, char* argv[])
{
	char test[11] = ""0123456789"";
	printf(""Das Original ist: %s \n"", test);
	ersetzen(test, atoi(argv[1]), argv[2]);
	printf(""Ersetzt : %s \n"", test);
	umdrehen(test);
	printf(""Rückwärts : %s \n"", test);
}","#include <stdio.h>

void dritte(char* str, int* zahl) {
    for (int j = 0; str[j] != '\0'; j++) {
        
        if ((*zahl % 3) == 0) {
            printf(""%c"", str[j]);
        }
        *zahl+= 1;
    }
}


void Eliminate(char* str) {
    for (; *str != '\0'; str++)
    {
        if (*str == 'x' || *str == 'y' || *str == 'q' ||
            *str == 'X' || *str == 'Y' || *str == 'Q')
        {
            *str = *(str + 1);
            str--;
        }
    }
}

int main(int argc, char* argv[])
{
    printf(""x,y,q und X,Y,Q aussortiert: "");
    for (int i = 1; i < argc; i++) {
        Eliminate(argv[i]);
        printf(""%s"", argv[i]);
    }
    printf(""\n"");

    printf(""Der neue String lautet: "");

    int count = 0;
    for (int i = 1; i<argc; i++) {
        dritte(argv[i], &count);
    }
}"
Köhler,Birgit,birgit.koehler@campus.tu-berlin.de,Beendet,"28. Juni 2020  14:35","28. Juni 2020  23:56","9 Stunden 20 Minuten","20,00",5,"zeigefinger = (int*)((short*)zeigefinger - 4);",232,5,80,"Ein C-String ist ein Array von char-Variablen.","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	//wenn eingabe == 0, eingabe == 1 oder eingabe ^= primzahl	=> Rückgabe von eingabe und 1
	if(product == 0 || product == 1)
	{
		*f1 = product;
		*f2 = 1;
	}
	//falls das nicht zutrifft:	bis eingabe/2	für jede Zahl	eingabe % x == 0 überprüfen	und dann	eingabe/x, x zurückgeben
	else {
		for(int i = 2; i <= product/2; i++)
		{
			if(product % i == 0)
			{
				*f1 = product/i;
				*f2 = i;
				return;
			}
		}
	}
	//falls der Fall bis eingabe/2 nicht eingetreten ist: Primzahl	und darum	eingabe, 1 zurückgeben
	*f1 = product;
	*f2 = 1;
}

int main()
{
	long eingabe;
	printf(""Please enter an Integer: "");
	scanf(""%li"", &eingabe);
	
	long faktor1 = eingabe;
	long faktor2 = 1;
	
	factorize(eingabe, &faktor1, &faktor2);
	
	printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, faktor1, faktor2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  	int aktuelleBuchstabenposition = 0;
	for (char* p = src; (aktuelleBuchstabenposition < zahl) && (dest[aktuelleBuchstabenposition] != '\0') && (*p != '\0'); p++)
	{
		dest[aktuelleBuchstabenposition] = src[aktuelleBuchstabenposition];
		aktuelleBuchstabenposition++;
	}
}

void umdrehen( char* str )
{
  	int laenge = 1;
	for(char* q = str; *q != '\0'; q++)
			laenge++;
	
	char temp[laenge];
	int count = laenge - 2;

	for(char* r = str; count >= 0; r++)
	{
		temp[count] = *r;
		count--;
	}
	ersetzen(str, laenge - 1, temp);
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

//String-Laenge bestimmen
int stringLaenge(char* string)
{
	int laenge = 0;
	for(char* a = string; *a != '\0'; a++)
		laenge++;
	return laenge;
}

//String kopieren
void kopieren(char* ziel, char* quelle)
{
	int i = 0;
	for(char* p = quelle; *p != '\0'; p++)
	{
		ziel[i] = *p;
		i++;
	}
}

//Array mit '\0' füllen
void fuellen(char* array, int zahl)
{
	for(int i = 0; i < zahl; i++)
		array[i] = '\0';
}

//'x', 'y', 'q', 'X', 'Y', 'Q' aussortieren
void aussortieren (char* aussortierterString, char* originalString)
{
	int counterSortiert = 0;
	for(char* x = originalString; *x != '\0'; x++)
	{
		if(*x != 'x' && *x != 'y' && *x != 'q' && *x != 'X' && *x != 'Y' && *x != 'Q')
		{
			aussortierterString[counterSortiert] = *x;
			counterSortiert++;
		}
	}
}


//jedes 3. Zeichen in einen neuen String kopieren
void zeichenKopieren(char* neuerString, char* alterString)
{
	int counterAlt = 0;
	int counterNeu = 0;
	for(char* p = alterString; *p != '\0'; p++)
	{
		if (counterAlt % 3 == 0)
		{
			neuerString[counterNeu] = *p;
			counterNeu++;
		}	
		counterAlt++;
	}
}

int main (int argc, char* argv[])
{
	
	//Verarbeitung der eingegebenen Zeichenketten
	int laenge = 0;
	for(int i = 1; i < argc; i++)
		laenge += stringLaenge(argv[i]);

	char original [laenge + 1];
	fuellen(original, laenge + 1);
	
	int index = 0;
	for(int j = 1; j < argc; j++)
	{
		kopieren(&original[index], argv[j]);
		index += stringLaenge(argv[j]);
	}
		
	char aussortiert[laenge + 1];
	fuellen(aussortiert, laenge + 1);
	
	aussortieren(aussortiert, original);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", aussortiert);

	char finalerString[laenge + 1];
	fuellen(finalerString, laenge + 1);
	
	zeichenKopieren(finalerString, aussortiert);
	printf(""Der neue String lautet: %s\n"", finalerString);
}"
Kühnel,"Paul Kurt",p.kuehnel@campus.tu-berlin.de,Beendet,"28. Juni 2020  14:41","28. Juni 2020  23:36","8 Stunden 54 Minuten","16,00","Ein C-String ist ein Array von char-Variablen.",5,"Nichts, da Programm nicht kompiliert.",5,232,"zeigefinger = (int*)((short*)zeigefinger - 4);","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	// Your factorization
}

int main(){
	printf(""Please enter an Integer: "");
	printf(""Possible Factors of %ld are %ld and %ld.\n"");
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src) {  
	int i = 0;
	while(i<zahl && *(src+i)!='\0' && *(dest+i)!='\0') {
		*(dest+i) = *(src+i);
		i++;
	} 
}

void umdrehen( char* str ) {
	// get length of the string
	int len_s = 0;
	while (*(str+len_s)!='\0') len_s++;
	// save reversed str in other string
	char other[len_s+1];
	for (int i=0; i<len_s; i++) {
		//printf(""richtig: %c --- reverse: %c\n"", *(str+i), *(str+(len_s-i-1)));
		other[i] = *(str+(len_s-i-1));
	}
	other[len_s+1]='\0';
  	//printf( ""Rückwärts (other) : %s \n"", other);
	// overwrite the original
	for (int j=0; j<len_s; j++) *(str+j) = other[j];
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>

typedef char* String; 

// function returns the lenght of a given string
int strLen(String s) {
	int len = 0;
	while (s[len] != '\0') len++;
	return len;
}


// function to concatenate two given strings
// returns the address of the concatenated string
void strConcat(String s1, int len_s1, String s2, int len_s2, String concat_s) {

	int i = 0;
	while(1) { 
		if (i < len_s1) concat_s[i]          = s1[i];
		if (i < len_s2) {
			concat_s[len_s1 + i] = s2[i];
			concat_s[len_s1 + i + 1] = '\0';
		}
		else if (i >= len_s1) break;
		i++;
	}
}


void remove_all_xyq(String s, int len_s) {
	int j = 0;
	for (int i=0; i<len_s; i++) {
		if (s[i]!='x' && s[i]!='y' && s[i]!='q' && s[i]!='X' && s[i]!='Y' && s[i]!='Q'){
			s[j] = s[i];
			j++;
		}
		else s[i]='\0';
	}
	// fill the rest of the string with '\0' to clean it
	while(j<len_s) {
		s[j]='\0';
		j++;
	}
}



int main(int argc, char* argv[]) {

	if (argc < 1) {
		return 0;
	}
	
	// calculate the length of the resulting string
	int len_all_args = 0;
	for (int i=1; i < argc; i++) {
		len_all_args += strLen(argv[i]);
	}
	// create new (empty) concatenated string with combined length:	
	char concat_s[len_all_args+1];
	concat_s[0] = '\0';
	
	// go through all args and concatenate them
	for (int i=1; i < argc; i++) {
		int len_s1 = strLen(concat_s);
		int len_s2 = strLen(argv[i]);
		//printf(""Länge %s ist: %i\nLänge %s ist: %i\n"", concat_s, len_s1, argv[i], len_s2);
		strConcat(concat_s, len_s1, argv[i], len_s2, concat_s);
		//printf(""The concatenated String is: %s\n"", concat_s);
	}
	//printf(""The concatenated String is: %s\n"", concat_s);
	remove_all_xyq(concat_s, len_all_args);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", concat_s);
	// use only every 3rd sign for printout:
	int len_s = strLen(concat_s);
	// dont need the whole length
	len_s /= 2;
	len_s += 3;
	char printout_string[len_s];
	int i = 0;
	int j = 0;
	while(i < strLen(concat_s)) {
		printout_string[j] = concat_s[i];
		j++;
		printout_string[j] = '\0'; 
		i += 3;
	}
	//printf(""Resulting String is: %s\n"", printout_string);
	while(j < len_s) {
		printout_string[j]='\0';
		j++;
		//printf(""i: %i j: %i und String %s\n"", i, j, printout_string);	
	}	
	printf(""Der neue String lautet: %s\n"", printout_string);
	
	return 0;
}"
Macheleidt,"Maria Eva",maria.e.macheleidt@campus.tu-berlin.de,Beendet,"28. Juni 2020  15:10","28. Juni 2020  23:59","8 Stunden 48 Minuten","9,15",5,5,5,"zeigefinger = (int*)((short*)zeigefinger - 4);","Ein C-String ist ein Array von char-Variablen.",23,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: -; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: %; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: 201; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: 202; Teil 91: %; Teil 92: %; Teil 93: 0; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: %; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: 0; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: -; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 2; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: 1; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

int CheckPrime(long Number)
{
    for (int i = 2; i <= Number - 1; i++)
    {
        
        if (Number % i == 0) return 0;
    }
    return 1;
}

void factorize(long product, long *f1, long *f2)
{
    if (product == 1 || CheckPrime(product) || product == 0)
    {
        *f1 = product;
        *f2 = 1;
    } else if (product % 2 == 0)
            {
                *f1 = product/2;
                *f2 = 2;
            } else if (product % 3 == 0)
                    {
                        *f1 = product/3;
                        *f2 = 3;
                    } else if (product % 5 == 0)
                        {
                            *f1 = product/5;
                            *f2 = 5;
                        } else if (product % 7 == 0)
                        {
                            *f1 = product/7;
                            *f2 = 7;
                        }
}

int main(){
	long product;
    long f1 = 0;
    long f2 = 0;
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &product);
    factorize(product, &f1, &f2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", product, f1, f2);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{printf(""scr: %s, zahl: %i\n"", src, zahl);
    for (int i = 0; i <= sizeof(dest) + 1; i++)
        if (i <= zahl -1 && src[i] != '\0') dest[i] = src[i];
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",-
"Ibrahimkhil Nek",Armaan,a.ibrahimkhilnek@tu-berlin.de,Beendet,"28. Juni 2020  15:11","28. Juni 2020  23:39","8 Stunden 27 Minuten","14,91",5,"Nichts, da Programm nicht kompiliert.",5,"zeigefinger = (int*)((short*)zeigefinger - 4);","Ein C-String ist ein Array von char-Variablen.",80,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: -; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product,long *f1,long *f2)
{
	if(product==1){
		*f1=1;
		*f2=1;
	}
	else {
	  *f2=2; 
      while(product%(*f2)!=0)
	{
  	  *f2=*f2+1;
     }     
    *f1 = product/(*f2);
    }
}

int main(){
	long Eingabe;
	long  p2;
	long  p1;	
	printf(""Please enter an Integer: "");
	scanf(""%ld"",&Eingabe);
	factorize(Eingabe,&p1,&p2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",Eingabe,p1,p2);
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)// dest= test
{  
  int length = 0;
  while(dest[length]!='\0'){
      length++;	
  }
  
  int size = 0;
  while(src[size]!='\0'){
      size++;	
  }
  for(int i=0; i<zahl&&i<length&&i<size;i++)
  {
  	dest[i]= src[i];
  }
  dest[length]='\0';
}

void umdrehen( char* str )
{
	int a=0;
	while(str[a]!='\0'){
		a++;
	}
	for(int b=0;b<(a/2);b++){
    	char x = str[b];
		str[b] = str[a-1-b];
		str[a-1-b] = x;		
	}
}


int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Clermont,"Vincent Mario",clermont@campus.tu-berlin.de,Beendet,"28. Juni 2020  15:28","28. Juni 2020  23:07","7 Stunden 39 Minuten","13,71",5,80,5,232,5,5,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: %; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: 204; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: 208; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: 212; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: -; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: 2; Teil 152: 1; Teil 153: 0; Teil 154: 0; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: 208; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: %; Teil 196: %; Teil 197: %; Teil 198: %; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: -; Teil 207: -; Teil 208: -; Teil 209: -; Teil 210: 15; Teil 211: %; Teil 212: %; Teil 213: %; Teil 214: %; Teil 215: %; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long* f1, long* f2)
{	
	if (product == 1) {
		*f1 = 1;
		*f2 = 1;
	}
	for (int i = 2; i <= product; i++) {
		if (product % i == 0) {
			*f2 = i;
			*f1 = product / i;
			break;
		}
		else {
			*f1 = product;
			*f2 = 1;
		}
	}
	// Your factorization
}

int main() {
	long num, f1, f2;
	long* p_f1 = &f1;
	long* p_f2 = &f2;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &num);
	factorize(num, p_f1, p_f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", num, f1, f2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    int i = 0;
    while(i < zahl){
        if(src[i] == '\0') break;
        if(dest[i] == '\0') break;
        
        dest[i] = src[i];
        i++;
    }
    
}

void umdrehen( char* str )
{
    unsigned int size = 0;
    for(int i = 0; str[i] != '\0'; i++) size++;
    
    for(int i = 0; i < size / 2; i++){
        int tempc = str[i];
        str[i] = str[size - i - 1];
        str[size - i -1] = tempc;
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <string.h>

int main(int argc, char *argv[])
{
    char str[50];
    char strf[50];
    char strf3[30];
    for(int i = 2; i < argc; i++){
        strcat(argv[1], argv[i]);
    }
    
    strcpy(str, argv[1]);
    
    int index = 0;
    
    for(int i = 0; i < strlen(str); i++){
        
        if (str[i] == 'x' || str[i] == 'y' || str[i] == 'z' || str[i] == 'X' || str[i] == 'Y' || str[i] == 'Z'){
            continue;
        }
        else {
            strf[index] = str[i];
            index++;
        }
        
    }
    
    index = 0;
    for(int i = 0; strf[i+3] != '\0'; i+=3){
        strf3[index] = strf[i];
        index++;
    }
    
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"",strf);
    printf(""Der neue String lautet: %s"", strf3);
    
    return 0;
}"
"Omar Abbas",Mohammad,omarabbas@campus.tu-berlin.de,Beendet,"28. Juni 2020  15:47","28. Juni 2020  23:02","7 Stunden 14 Minuten","16,45","zeigefinger = (int*)((short*)zeigefinger - 4);",232,80,5,"Nichts, da Programm nicht kompiliert.",5,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: %; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: %; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: 204; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: %; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: 208; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: %; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: 212; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: -; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 3; Teil 141: 2; Teil 142: 1; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 208; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: 216; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>
int isprime(long product){
    int  i, flag = 0;
    for (i = 2; i <= product / 2; i++) {

        
        if (product % i == 0) {
            flag = 1;
            break;
        }
    }

    if (product == 1) {
        return 1;
    }
    else {
        if (flag == 0)
            return 1;
        else
            return 0;
    }

    return 0;
}
        
    


void factorize(long product, long *f1, long *f2){
    if(isprime(product)==1){
        *f1=product;
        *f2=1;
    

    }
    else{

        
        for (int i = 2; i <= product / 2; i++) {
            for (int j=2;i<= product / 2;i++){
                if(i*j==product){
                    *f1=i;
                    *f2=j;
                }
            }
         
            
            
            
        }
        
    }
}


int main(){
    long f1=0;
    long f2=0;
    long product=0;
	printf(""Please enter an Integer: "");
	scanf(""%ld"",&product);
	factorize(product,&f1,&f2);
	
	printf(""Possible Factors of %ld are %ld and %ld.\n"",product,f1,f2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  int i;
   for (i=0;src[i]!='\0'&& dest[i]!='\0' && i<zahl;i++){
       dest[i]=src[i];
   }
  
}

void umdrehen( char* str )
  
{ 
    int summe=0;
    for (int i=0;str[i]!='\0';i++){
        summe++;
    
    
}
  
  char arr[summe];
  for (int i=0; i<summe;i++){
      arr[i]=str[i];
      
  }
    
    
    int n=summe;
    for (int i=0;i<summe;i++){
        
     
     str[i]=arr[n-1];
     n--;
     
     
     
     
      
     
     
  }
 
  
}

int main( int argc, char* argv[] )
{ 
  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>

int main( int argc, char* argv[] ){

int a=0;
    for (int i=1;i<argc;i++){
        for (int j=0;argv[i][j]!='\0';j++){
            a++;
        }
    }



    char arr[a];
    int n=0;
    for (int i=1;i<argc;i++){
        for (int j=0;argv[i][j]!='\0';j++){
            if (argv[i][j]!='x'&& argv[i][j]!='y' && argv[i][j]!='q'&& argv[i][j]!='X' && argv[i][j]!='Y' && argv[i][j]!='Q' ){
            arr[n]=argv[i][j];
            n++;
            }

}
}
    arr[n]='\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"",arr);
    int q=(n/3);
    char asfg[q];
    int l=0;
    for(int i=0; arr[i]!='\0'&& i<n ;i+=3){        
    asfg[l]=arr[i];
    l++;

}
  asfg[l]='\0';
  printf(""Der neue String lautet: %s\n"",asfg);
  return 0;
  }"
"Li Peng",Bonnie,bonnie.lipeng@campus.tu-berlin.de,Beendet,"28. Juni 2020  15:52","28. Juni 2020  23:58","8 Stunden 6 Minuten","4,48",5,5,"*zeigefinger = leute;","Ein C-String ist ein Array von char-Variablen.","Nichts, da Programm nicht kompiliert.",232,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 11; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 12; Teil 57: %; Teil 58: %; Teil 59: 1; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 11; Teil 68: 208; Teil 69: %; Teil 70: %; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 12; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: 0; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: 212; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 13; Teil 101: -; Teil 102: %; Teil 103: %; Teil 104: %; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: (2)14; Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: 2; Teil 119: 1; Teil 120: 0; Teil 121: 0; Teil 122: (3)14; Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: 200; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: (4)14; Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: (3)14; Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 204; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: (4)14; Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: (3)14; Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 212; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: (5)14; Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: (6)14; Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	// Your factorization
	if (product == 0) {
	    *f1 = 0;
	    *f2 = 0;
	    return;
	} else if (product == 1) {
	    *f1 = 1;
	    *f2 = 1;
	    return;
	}
	
	if(product % 2 == 0) {
	        *f1 = product / 2;
	        *f2 = 2;
	        return;
	  } 
	 
	 if(product % 3 == 0) {
	            *f1 = product / 3;
	            *f2 = 3;
	            return;
	   } 
	           
	   if(product % 5 == 0) {
	                *f1 = product / 5;
	                *f2 = 5;
	                return;
	  }
	       
	  

}

int main(){
	printf(""Please enter an Integer: "");
	long eingabe = scanf(""%ld"", &eingabe);
	long z1 = 0;
	long z2 = 0;
	long *f1 = &z1;
	long *f2 = &z2;
	factorize(eingabe, f1, f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, *f1, *f2);
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Bove,Sinan,bove@campus.tu-berlin.de,Beendet,"28. Juni 2020  16:56","28. Juni 2020  22:33","5 Stunden 36 Minuten","8,49",23,"Nichts, da Programm nicht kompiliert.",5,"char *daumen = (char*)zeigefinger - 2;
zeigefinger = (int*)daumen;",5,5,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 0; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: %; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: 4; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: 8; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: 12; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: -; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 0; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: 8; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: %; Teil 213: %; Teil 214: %; Teil 215: %; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
    if(product == 0 || product == 1){
        *f1 = 1;
        *f2 = product;
        
    }else{
    int j = 2;
    int n = 1;
    while(n){
    if(product % j == 0){
        *f2 = j;
       *f1 = product/j;
        n = 0;
    } else{
        j++;
    }
    }
    
}
}

int main(){
int eingabe = 0;
printf(""Please enter an Integer: "");
scanf(""%i"", &eingabe);
    long f1 = 0;
    long f2 = 0;
    factorize(eingabe, &f1, &f2);
printf(""Possible Factors of %d are %ld and %ld.\n"",eingabe, f1,f2);
    return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
 void ersetzen(char* dest, int zahl, char* src)
{
   
    for(int i = 0; i< zahl; i++){
       
        if(dest[i] == '\0'){
            break;
            
        }
        if(src[i] == '\0'){
            break;
        }
        dest[i] = src[i];
    }
}

 void umdrehen( char* str )
{
    
    
int length = sizeof(str);

for(int j = 0; j < length; j++){
    if(str[length-j] == str[j]){
        break;
    };
    char a = str[j];
    char b = str[length-j];
    str[j] = b;
    str[length] = a;
}

  
} 

int main( int argc, char* argv[] )
{
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
 ersetzen( test , atoi(argv[1]), argv[2] );
 printf( ""Ersetzt : %s \n"", test );
 umdrehen(test);
 printf( ""Rückwärts : %s \n"", test );
}"
Collin,Elisa,elisa.collin@campus.tu-berlin.de,Beendet,"28. Juni 2020  19:19","28. Juni 2020  21:40","2 Stunden 20 Minuten","15,50",232,5,5,80,"Nichts, da Programm nicht kompiliert.",5,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
    *f1 = product;
    *f2 = 1;
    
    long divisor;
    int found = 0;
	for (divisor = 2; divisor < product / 2; ++divisor) {
	    if (product % divisor == 0) {
	        found = 1;
	        break;
	    }
	}
	
	if (found) {
	    *f1 = product / divisor;
	    *f2 = divisor;
	}
}

int main(){
	printf(""Please enter an Integer: "");
	long product;
	scanf(""%ld"", &product);
	long f1, f2;
	factorize(product, &f1, &f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, f1, f2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char **argv)
{
    size_t buf_size = 64;
    size_t i = 0;
    char *str = malloc(buf_size);

    for (size_t i_arg = 1; i_arg < argc; ++i_arg) {
        for (char *c = argv[i_arg]; *c; ++c) {
            if (
                *c == 'x' || *c == 'y' || *c == 'q' || *c == 'X' || *c == 'Y' ||
                *c == 'Q'
            )
                continue;

            str[i++] = *c;
            if (i == buf_size)
                str = realloc(str, buf_size *= 2);
        }
    }

    str[i] = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", str);

    char *new_str = malloc(i / 3 + 1);
    size_t j;

    for (j = 0; j <= i / 3; ++j)
        new_str[j] = str[j * 3];
    new_str[j] = '\0';

    printf(""Der neue String lautet: %s\n"", new_str);

    free(new_str);
    free(str);
}","#include <stdio.h>
#include <stdlib.h>
 
size_t my_strlen(const char *str) {
    size_t ret = 0;
    for ( ; str[ret]; ++ret);
    return ret;
}
 
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0; i < zahl && *src && *dest; ++i, ++src, ++dest)
        *dest = *src;
}

void umdrehen( char* str )
{
    size_t len = my_strlen(str);
    
    for (size_t i = 0; i < len / 2; ++i) {
        char tmp = str[i];
        str[i] = str[len - i - 1];
        str[len - i - 1] = tmp;
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Hua,Zijian,hua@campus.tu-berlin.de,Beendet,"28. Juni 2020  22:39","28. Juni 2020  23:36","56 Minuten 55 Sekunden","14,25",5,5,80,5,5,232,"Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: -; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: %; Teil 213: %; Teil 214: %; Teil 215: %; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	int b=0;int c;
    for(long i=2;i<product;i++){
    if(product%i==0){
        *f2=i;
        c=product/i;
        *f1=c;
        b=1;
        break;
    }
        
}
    if(b==0)
    {
        *f1=1;
        *f2=product;
    }
	
	
	// Your factorization
}

int main(){
long i;long k;long j;
    printf(""Please enter an Integer: "");
    scanf(""%ld"",&i);
    factorize(i,&k,&j);
    printf(""Possible Factors of %ld are %ld and %ld.\n"",i,k,j);
    return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  int len=0;
   while (dest[len++]);
   len--;
    int a=0;
    while(src[a++]);
    a--;
    if (zahl>a)
        zahl=a;
    if(len<=zahl)
        zahl=len;
    for(int i=0;i<zahl;i++)
    {
        dest[i]=src[i];
    }
  
}

void umdrehen( char* str )
{
  int len=0;
  while (str[len++]);
  len--;
  int min = 0;
  int max = len - 1;
  while (min<max)
  {char temp = str[min];
      str[min] = str[max];
      str[max] = temp;
      min++;
      max--;
  }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Lotus,"John Action",john.lotus@campus.tu-berlin.de,Beendet,"28. Juni 2020  23:34","28. Juni 2020  23:34","10 Sekunden","0,00",-,-,-,-,-,-,"Teil 1: ; Teil 2: ; Teil 3: ; Teil 4: ; Teil 5: ; Teil 6: ; Teil 7: ; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: ; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: ; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: ; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: ; Teil 26: ; Teil 27: ; Teil 28: ; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: ; Teil 35: ; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: ; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: ; Teil 45: ; Teil 46: ; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: ; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: ; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: ; Teil 60: ; Teil 61: ; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: ; Teil 66: ; Teil 67: ; Teil 68: ; Teil 69: ; Teil 70: ; Teil 71: ; Teil 72: ; Teil 73: ; Teil 74: ; Teil 75: ; Teil 76: ; Teil 77: ; Teil 78: ; Teil 79: ; Teil 80: ; Teil 81: ; Teil 82: ; Teil 83: ; Teil 84: ; Teil 85: ; Teil 86: ; Teil 87: ; Teil 88: ; Teil 89: ; Teil 90: ; Teil 91: ; Teil 92: ; Teil 93: ; Teil 94: ; Teil 95: ; Teil 96: ; Teil 97: ; Teil 98: ; Teil 99: ; Teil 100: ; Teil 101: ; Teil 102: ; Teil 103: ; Teil 104: ; Teil 105: ; Teil 106: ; Teil 107: ; Teil 108: ; Teil 109: ; Teil 110: ; Teil 111: ; Teil 112: ; Teil 113: ; Teil 114: ; Teil 115: ; Teil 116: ; Teil 117: ; Teil 118: ; Teil 119: ; Teil 120: ; Teil 121: ; Teil 122: ; Teil 123: ; Teil 124: ; Teil 125: ; Teil 126: ; Teil 127: ; Teil 128: ; Teil 129: ; Teil 130: ; Teil 131: ; Teil 132: ; Teil 133: ; Teil 134: ; Teil 135: ; Teil 136: ; Teil 137: ; Teil 138: ; Teil 139: ; Teil 140: ; Teil 141: ; Teil 142: ; Teil 143: ; Teil 144: ; Teil 145: ; Teil 146: ; Teil 147: ; Teil 148: ; Teil 149: ; Teil 150: ; Teil 151: ; Teil 152: ; Teil 153: ; Teil 154: ; Teil 155: ; Teil 156: ; Teil 157: ; Teil 158: ; Teil 159: ; Teil 160: ; Teil 161: ; Teil 162: ; Teil 163: ; Teil 164: ; Teil 165: ; Teil 166: ; Teil 167: ; Teil 168: ; Teil 169: ; Teil 170: ; Teil 171: ; Teil 172: ; Teil 173: ; Teil 174: ; Teil 175: ; Teil 176: ; Teil 177: ; Teil 178: ; Teil 179: ; Teil 180: ; Teil 181: ; Teil 182: ; Teil 183: ; Teil 184: ; Teil 185: ; Teil 186: ; Teil 187: ; Teil 188: ; Teil 189: ; Teil 190: ; Teil 191: ; Teil 192: ; Teil 193: ; Teil 194: ; Teil 195: ; Teil 196: ; Teil 197: ; Teil 198: ; Teil 199: ; Teil 200: ; Teil 201: ; Teil 202: ; Teil 203: ; Teil 204: ; Teil 205: ; Teil 206: ; Teil 207: ; Teil 208: ; Teil 209: ; Teil 210: ; Teil 211: ; Teil 212: ; Teil 213: ; Teil 214: ; Teil 215: ; Teil 216: ; Teil 217: ; Teil 218: ; Teil 219: ; Teil 220:",-,-,-
