Nachname,Vorname,Antwort 8,Antwort 9
Name_79,VName_79,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	if ('a' <= *p_char && *p_char <= 'z'){
	    if(shift > 6){
		 	shift = shift - 26;
		 	}
		*p_char = *p_char + shift;
		
		if (*p_char > 'z'){
			*p_char = *p_char - 26;
		}
		
		else if (*p_char < 'a'){
			*p_char = *p_char + 26;
		}
	}		
	
	else if ('A' <= *p_char && *p_char <= 'Z'){
		*p_char = *p_char + shift;
		
		if (*p_char > 'Z'){
			*p_char = *p_char - 26;
		}
		
		else if (*p_char < 'A'){
			*p_char = *p_char + 26;
		}
	}		
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(int i = 0; i < maxlength; i++)
	shiftChar(&str[i], shift);
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_73,VName_73,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
	int* paeckchen = paeckchenGewicht;
	for (int i = 0; i < 5; i++) {
		if (*paeckchen == 0) {
			*paeckchen = artikelGewicht[i];
		} else if (*paeckchen + artikelGewicht[i] < 10) {
			*paeckchen += artikelGewicht[i];
		} else {
			paeckchen += 1;
			*paeckchen += artikelGewicht[i];
		}
	}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
	int intKosten = 0;
	int aktuelleKosten = 0;
	for (int i = 0; i < 5; i++) {
		printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"",i+1, paeckchenGewicht[i]);
		if (paeckchenGewicht[i] == 0) {
			aktuelleKosten = 0;
		} else if (paeckchenGewicht[i] <= 10) {
			aktuelleKosten += 300;
		} else {
			aktuelleKosten += 300 + 45 * (paeckchenGewicht[i] - 10);
		}
		printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",i+1, (double) aktuelleKosten / 100);
		intKosten += aktuelleKosten;
		aktuelleKosten = 0;
	}
	return ((double) intKosten)/100;
	
}



int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	if ('A' <= *p_char && *p_char  <= 'Z') {
		*p_char = (((*p_char - 'A' + shift) % 26 ) + 26) % 26 + 'A';
	} else if ('a' <= *p_char && *p_char <= 'z') {
		*p_char = (((*p_char - 'a' + shift) % 26 ) + 26) % 26 + 'a';
	}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for (int i = 0; i < maxlength; i++) {
		shiftChar(str + i, shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_74,VName_74,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


  int j =0;
    for (int i=0; i<5; i++)
    {

        if (artikelGewicht[i]<=10)
        {
            if ((artikelGewicht[i]+paeckchenGewicht[j])<=10)
                paeckchenGewicht[j]+=artikelGewicht[i];
            else
                paeckchenGewicht[++j]=artikelGewicht[i];
        }
        else paeckchenGewicht[j++]=artikelGewicht[i];
    }

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


  double endkosten=0;
    double einzelnGewicht=0;

    for (int i=0; i<5; i++)
    {
        printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"",i+1,paeckchenGewicht[i]);
        if (paeckchenGewicht[i]<=10)
        {
            einzelnGewicht=3;

            printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",i+1,einzelnGewicht);
        }
        else if (paeckchenGewicht[i]>10)
        {
            einzelnGewicht=((paeckchenGewicht[i]-10)*(0.45))+3;

            printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",i+1,einzelnGewicht);
        }



        endkosten+=einzelnGewicht;

    }
    return endkosten;



}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift.
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    int temp ;
    // capital letter
    if(  *p_char >= 'A' && *p_char <= 'Z'){

        temp = *p_char + shift;
        if(temp >= 'A' && temp <= 'Z') *p_char = temp;
        else if (temp < 'A') *p_char = 91 - ('A' - (temp));
        else if (temp>'Z') *p_char=64 + (temp-'Z');
    }
    // small letter
    else if (*p_char >= 'a' && *p_char <= 'z') {
        temp = *p_char + shift;
        if(temp >= 'a' && temp <= 'z') *p_char = temp;
         else if (temp<'a') *p_char=123 - ('a'- temp);
        else if(temp>'z') *p_char=96+ (temp -'z');


// ... hier Code einfuegen ...
}
}
/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben.
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
 for (char i=0; i<maxlength;i++)
    {
        if (isalpha(str[i]))  shiftChar(str+i,shift);
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann.
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);

	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);

	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_83,VName_83,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int index = 0;
    for(int i = 0; i < 5; i++){
        if(i + index < 5){
        paeckchenGewicht[i] = artikelGewicht[i + index];
        for(int j = i + 1 + index; j < 5; j++){
            if(paeckchenGewicht[i] + artikelGewicht[j] < 10 ){
            paeckchenGewicht[i] += artikelGewicht[j];
            index++;
            }
            else{break;}
        }
        }
       else{break;}
        
    }


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double endkosten = 0;
    double kosten = 0;
    for(int i = 0; i < 5; i++){
       
       if(paeckchenGewicht[i] > 10){
           kosten = 3 + ((double) paeckchenGewicht[i]- 10.0) *0.45;
       }
       else{ 
           
           kosten = 3;
           
       } 
       endkosten += kosten;
       printf(""\nGewicht des %i. Paeckchens: %i Kilo\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, paeckchenGewicht[i], i+1, kosten);
    }
    return endkosten;

   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{ 
    if( 'a' <= *p_char && *p_char <= 'z' ) {
    if(*p_char + shift > 'z'){
       *p_char += shift - 26;
    }
    else if(*p_char + shift < 'a'){
        *p_char += shift + 26;
    }
    else {
        *p_char += shift;  
    }
    }
  else if('A' <= *p_char && *p_char <= 'Z'){
       if(*p_char + shift > 'Z'){
       *p_char += shift - 26;
       }
       else if(*p_char + shift < 'A'){
        *p_char += shift + 26;
       }
    else {
        *p_char += shift;  
    }   
  }
  // ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{      
    for(int i = 0; i < maxlength; i++){
    shiftChar(&(str[i]), shift);
    
    
	// ... hier Code einfuegen ...
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_89,VName_89,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
int output_pos = 0;
for (int i = 0; i < 5; i++) {
	if (artikelGewicht[i] >= 10) {
		if (paeckchenGewicht[output_pos] != 0)
			output_pos++;
		paeckchenGewicht[output_pos] = artikelGewicht[i];
		output_pos++;
	} else if (paeckchenGewicht[output_pos] + artikelGewicht[i] <= 10 ) {
		paeckchenGewicht[output_pos] += artikelGewicht[i];
		
	} else {
		output_pos++;
		paeckchenGewicht[output_pos] = artikelGewicht[i];
	}

 }
 }


double berechnePaketKosten( int paeckchenGewicht[] )
{
int i = 0;
double gesamt = 0.0;

 for (i=0; i<5; i++){
 if (paeckchenGewicht[i] == 0) {
 continue;
 }
 double preis = 0.0;
 printf(""Gewicht des %i. Paeckchens: %i Kilo\n"" , i+1, paeckchenGewicht[i]);
  if(paeckchenGewicht[i]<=10){
  	preis = 3.0;
  	printf(""Die Versandkosten ihres %i. Paeckchens betragen: 3.00 Euro\n\n"", i+1);
  }
  else {
  preis = ((paeckchenGewicht[i] - 10.0) * 0.45) + 3.0;
  printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n\n"", i+1, preis);
  }
  gesamt += preis;
 }  
 return gesamt;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	shift %= 26;
	if (shift < 0) {
		shift += 26;
	}

 if('a' <= *p_char && *p_char <= 'z'){
 int pos = *p_char - 'a' + shift;
 
 pos %= 26;
 *p_char = 'a' + pos;
 
 }
 else if ('A' <= *p_char && *p_char <= 'Z'){
 int pos = *p_char - 'A' + shift;
 pos %= 26;
 *p_char = 'A' + pos;
 }
 else{
 *p_char = *p_char;
 }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for (int i = 0; i < maxlength; i++) {
		shiftChar(&str[i], shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_100,VName_100,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    paeckchenGewicht[0] = artikelGewicht[0];
    int next = 0;
    int i;
    for(i=1; i<5; i++)
    {
        if(paeckchenGewicht[next] + artikelGewicht[i] > 10)
        {
            paeckchenGewicht[next+1]+= artikelGewicht[i];
            next +=1;
        }
        else
        {
            paeckchenGewicht[next] += artikelGewicht[i];
        }
    }

    

   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double Kosten = 0;
    double temp = 0;
    int i;
    for(i=0; i<5; i++)
    {
        temp = 0;
        if(paeckchenGewicht[i] > 0 && paeckchenGewicht[i] <= 10)
        {
            Kosten += 3;
            temp = 3;
            printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i+1,paeckchenGewicht[i]);
            printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1,temp);
        }
        if(paeckchenGewicht[i] > 10)
        {
            Kosten += 3 + (paeckchenGewicht[i] - 10)*0.45;
            temp = 3 + (paeckchenGewicht[i] - 10)*0.45;
            printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i+1,paeckchenGewicht[i]);
            printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1,temp); 
        }
    }
   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */
    return Kosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
	if('A' <= *p_char && *p_char <= 'Z')
	{
	    if(*p_char + shift <= 'Z' && *p_char + shift >= 'A')
	    {
	        *p_char += shift; 
	    }
	    else
	    {
	        if(shift>=0)
	        {
	            *p_char = (*p_char + shift) -('Z' - 'A') - 1;
	        }
	        else
	        {
	            *p_char = (*p_char + shift) +('Z' - 'A') + 1;
	        }
	    }
	}
	if('a' <= *p_char && *p_char <= 'z')
	{
	    if(*p_char + shift <= 'z' && *p_char + shift >= 'a')
	    {
	        *p_char += shift; 
	    }
	    else
	    {
	        if(shift>=0)
	        {
	            *p_char = (*p_char + shift) -('z' - 'a') - 1;
	        }
	        else
	        {
	            *p_char = (*p_char + shift) +('z' - 'a') + 1;
	        }
	    }
	}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    int i;
	for(i=0; i<maxlength; i++)
    {
        shiftChar(&str[i],shift);// ... hier Code einfuegen ...
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_97,VName_97,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
  int currentPacket = 0;
  paeckchenGewicht[0] = artikelGewicht[0];
  for (int i = 1; i < 5; i++) {
    if (paeckchenGewicht[currentPacket] + artikelGewicht[i] > 10) {
      currentPacket += 1;
    }
   paeckchenGewicht[currentPacket] += artikelGewicht[i];
  }
 for (int i = 0; i <= currentPacket; i++) {
   int* pPaeckchenGewicht = &paeckchenGewicht[i];
   *pPaeckchenGewicht = paeckchenGewicht[i];
 }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
  double preisPakete = 0;
  for (int i = 0; i < 5; i++) {
    double paketPreis;
    if (paeckchenGewicht[i] == 0){
        continue;
    }
    if (paeckchenGewicht[i] <= 10) {
      paketPreis = 3;
    }
    else{
      paketPreis = (paeckchenGewicht[i] - 10) * 0.45 + 3;
    }
    printf(""\nGewicht des %i. Paeckchens: %i Kilo\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, paeckchenGewicht[i], i+1, paketPreis);
    preisPakete += paketPreis;
  }
  return preisPakete;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"",
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);

   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift.
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	int asciiChar = *p_char;
	if (asciiChar >= (int)'a' && asciiChar <= (int)'z') {
    asciiChar = getNewAsciiChar(asciiChar, shift, (int)'a');
  }
	else if (asciiChar >= (int)'A' && asciiChar <= (int)'Z') {
    asciiChar = getNewAsciiChar(asciiChar, shift, (int)'A');
  }
	*p_char = asciiChar;
}

int getNewAsciiChar(int asciiChar, int shift, int smallestUnit){
	asciiChar = asciiChar - (smallestUnit- 27) + shift;
	asciiChar = asciiChar % 26;
	if (asciiChar) {
		asciiChar += smallestUnit - 1;
	}
	else{
		asciiChar = smallestUnit + 25;
	}
	return asciiChar;
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben.
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for (int i = 0; i < maxlength; i++){
		shiftChar(&str[i], shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann.
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);

	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);

	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_93,VName_93,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    paeckchenGewicht[0]=artikelGewicht[0];
    int j=0;
    for(int i=1;i<5;i++){
        if(paeckchenGewicht[j]+artikelGewicht[i]>10){
            paeckchenGewicht[j+1]=artikelGewicht[i];
            j+=1;
        }
        else{
            paeckchenGewicht[j]+=artikelGewicht[i];
        }
    }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double kosten=0;
    double endkosten=0;
    for(int i=0;i<5;i++){
        if(paeckchenGewicht[i]<=10){
            kosten=3;
        }
        else if(paeckchenGewicht[i]==0){
            break;
        }
        else{
            kosten=(float)3+((float)paeckchenGewicht[i]-10)*0.45;
        }
        printf(""\nGewicht des %i. Paeckchens: %i Kilo\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",i+1,paeckchenGewicht[i],i+1,kosten);
        endkosten+=kosten;
    }
    return(endkosten);
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void
shiftChar (char *p_char, int shift)
{
    int alpha1[26] = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'};
    int alpha2[26] = {'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'};
    int k=(*p_char==alpha2[17]);
    for(int i=0;i<26;i+=1){
        if(*p_char==alpha1[i]){
            *p_char=alpha1[(i+shift+26)%26];
            break;
        }
        else if(*p_char==alpha2[i]){
            *p_char=alpha2[(i+shift+26)%26];
            break;
        }
        else{
            
        }
    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
  void cipher (char str[], int shift, int maxlength) {
    for(int i=0;i<maxlength;i++){
        shiftChar(&str[i],shift);
    }
  }

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
  int main (){
    char str[50] = ""Froh zu sein bedarf es wenig"";	// Originaltext
    int shift = 5;
    printf (""Original: "");
    printf (""%s\n"", str);

    // Verschluesseln
    cipher (str, shift, 50);
    printf (""Verschluesselt: "");
    printf (""%s\n"", str);

    // Entschluesseln
    cipher (str, -shift, 50);
    printf (""Entschluesselt: "");
    printf (""%s\n"", str);
  }"
Name_75,VName_75,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
int c=0;
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
for (int i=0;i<5;i++){
    if (paeckchenGewicht[c]==0){
    paeckchenGewicht[c]+=artikelGewicht[i];
    }
    else if ((paeckchenGewicht[c]+artikelGewicht[i])>10){
        c++;
        paeckchenGewicht[c]+=artikelGewicht[i];
        
    }
    else {
        paeckchenGewicht[c]+=artikelGewicht[i];
    }
    
}

}
double counter;
double berechnePaketKosten( int paeckchenGewicht[] )
{

    
    counter=0;
    for(int i=0;i<5;i++){
        
        if(paeckchenGewicht[i]<=10){
            counter+=3;
            printf(""\nGewicht des %d. Paeckchens: %d Kilo\nDie Versandkosten ihres %d. Paeckchens betragen: 3.00 Euro\n"",i+1,(paeckchenGewicht[i]),i+1);
        }
        else if(paeckchenGewicht[i]==0){
        }
        else{
            counter+=((paeckchenGewicht[i]-10)*0.45)+3;
            printf(""\nGewicht des %d. Paeckchens: %d Kilo\nDie Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"",i+1,paeckchenGewicht[i],i+1,((paeckchenGewicht[i]-10)*0.45)+3);
        } 
    }
    return ""%.6f"",counter;
    


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    // ... hier Code einfuegen ...
    p_char[0]= p_char[0] + shift;
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_99,VName_99,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{

        int i = 0;
        for( int h = 0; h < 5 ; h++){
        if((paeckchenGewicht[i] + artikelGewicht[h]) >10 && paeckchenGewicht[i] !=0) i++;
	paeckchenGewicht[i] += artikelGewicht[h];
        if(paeckchenGewicht[i] > 10) i++;
	
	}
	

}

double berechnePaketKosten( int paeckchenGewicht[] )
{
   double endkosten;
   for(int i = 0; i < 5; i++){
   float Kosten;
   if(0 <= paeckchenGewicht[i] && paeckchenGewicht[i] <= 10) Kosten = 3; 
   if(paeckchenGewicht[i] > 10) Kosten =  3 + (paeckchenGewicht[i] - 10) * 0.45;
   printf(""\nGewicht des %i. Paeckchens: %i Kilo\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",i+1, paeckchenGewicht[i], i+1, Kosten);
   endkosten += Kosten;
   }
   return endkosten;

		

}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
     if(shift >= 0){
        if('a' <= *p_char && *p_char <= 'z'){
	if('a' <= (*p_char + shift) && (*p_char + shift) <= 'z') *p_char = *p_char + shift;
	else *p_char = *p_char - (26- shift);
	}
        if('A' <= *p_char && *p_char <= 'Z'){
	if('A' <= (*p_char + shift) && (*p_char + shift) <= 'Z') *p_char = *p_char + shift;
	else *p_char = *p_char - (26- shift);
	}
    }
    if(shift <= 0){
        if('a' <= *p_char && *p_char <= 'z'){
	if('a' <= (*p_char + shift) && (*p_char + shift) <= 'z') *p_char = *p_char + shift;
	else *p_char = *p_char + (26 + shift);
	}
        if('A' <= *p_char && *p_char <= 'Z'){
	if('A' <= (*p_char + shift) && (*p_char + shift) <= 'Z') *p_char = *p_char + shift;
	else *p_char = *p_char + (26 + shift);
	}

    }

}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for( int i = 0; i <= maxlength ; i++) shiftChar(&str[i], shift);
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_80,VName_80,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
	int index = 0;
	for (int i=0; i<5; i++) {
		if (paeckchenGewicht[index] == 0) {
			paeckchenGewicht[index] = artikelGewicht[i];
		} else {
			if (paeckchenGewicht[index] + artikelGewicht[i] <= 10) {
				paeckchenGewicht[index] += artikelGewicht[i];
			} else {
				index += 1;
				paeckchenGewicht[index] = artikelGewicht[i];
			}
		}
	}
   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{
	double kosten = 0;
	for (int i=0; i<5; i++) {
		double pkosten;
		if (paeckchenGewicht[i] <= 10 && paeckchenGewicht[i] > 0) {
			pkosten = 3;
		} else if (paeckchenGewicht[i] > 10) {
			pkosten = 3;
			pkosten += (paeckchenGewicht[i] - 10) * 0.45;
		} else {
			pkosten = 0;
		}
		printf(""Gewicht des %d. Paeckchens: %d Kilo\n"", i+1, paeckchenGewicht[i]);
		printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"", i+1, pkosten);
		kosten += pkosten;
	}
   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */
	return kosten;

}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
        if (*p_char > 64 && *p_char < 91) {
                *p_char = *p_char + shift;
                if (*p_char > 90) {
                        *p_char -= 26;
                } else if (*p_char < 65) {
                        *p_char += 26;
                }
        } else if (*p_char > 96 && *p_char < 123) {
                *p_char = *p_char + shift;
                if (*p_char > 122 || *p_char < 0) {
                        *p_char -= 26;
                } else if (*p_char < 97) {
                        *p_char += 26;
                }
        }
        // ... hier Code einfuegen ...
}



/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for (int i=0; i<maxlength; i++) {
		shiftChar(&str[i], shift);
	}
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_77,VName_77,"#include <stdio.h>
#include <stdlib.h>


void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
	int j=0;
	int sum=artikelGewicht[0];
	for(int i=0; i < 5; i++){
		if(i==4){
			paeckchenGewicht[j]=artikelGewicht[i];
		}

		if(artikelGewicht[i]==0) break;
		if(sum+artikelGewicht[i+1]>=10 ){

			paeckchenGewicht[j]=sum;
			j++;
			sum=artikelGewicht[i+1];
		}


		else {

			sum+=artikelGewicht[i+1];
		}


	}

}

double berechnePaketKosten( int paeckchenGewicht[] )
{
	double sum=0;
	for(int i=0; i < 5; i++){

		if(paeckchenGewicht[i]==0) break;

		if(paeckchenGewicht[i]<=10){
			printf(""\nGewicht des %d. Paeckchens: %d Kilo\n"",i+1,paeckchenGewicht[i]);
			printf(""Die Versandkosten ihres %d. Paeckchens betragen: 3.00 Euro\n"",i+1);
			sum+=3;
		}
		else{
			printf(""\nGewicht des %d. Paeckchens: %d Kilo\n"",i+1,paeckchenGewicht[i]);
			printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"",i+1,3+(paeckchenGewicht[i]-10)*0.45);
			sum+=3+(paeckchenGewicht[i]-10)*0.45;
		}
	}
	return sum;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{

	if(shift<0){
		shift=shift+26;
	}

	if((int)*p_char >=65 && (int)*p_char<91 ){
		if(shift+(int)*p_char>90)
			*p_char='A'+shift+(int)*p_char-91;
		else *p_char=*p_char+shift;
	}
	else {
		if(shift+(int)*p_char>122){
			*p_char='a'+shift+(int)*p_char-123;
		}
		else *p_char=*p_char+shift;
	}



}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben.
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(int i=0; i<maxlength; i++){
		if(str[i] =='\0') break;
		if(str[i] !=' ' && str[i] != '_')
			shiftChar(&str[i],shift);
	}
}



/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_76,VName_76,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_7,VName_7,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int * pointerPaeckchen[5];
    int * pointerArtikel[5];
    for(int i=0; i<5; i++){
        pointerPaeckchen[i] = &paeckchenGewicht[i];
    }
    
    int hilf = 0;
    int zaehler = 0;;
    int i = 0;
    while(i < 5){
        if(artikelGewicht[i] > 10){
            *pointerPaeckchen[zaehler] = artikelGewicht[i];
            zaehler++;
        }
        else{
            if((artikelGewicht[i]+hilf) <= 10){
                hilf = hilf + artikelGewicht[i];
                //*pointerPaeckchen[zaehler] = artikelGewicht[i];
                //zaehler++;
            } 
            else{
                *pointerPaeckchen[zaehler] = hilf;
                hilf = 0;
                zaehler++;
                *pointerPaeckchen[zaehler] = artikelGewicht[i];
                zaehler++;
            }
        }
        if(i==4 && hilf!=0){
            *pointerPaeckchen[zaehler] = artikelGewicht[i];
        }
        i++;
    }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double summe = 0;
    double preis;
    for(int i = 0; i<5; i++){
        if(paeckchenGewicht[i] > 0){
            if(paeckchenGewicht[i] <= 10){
                preis = 3;
                printf(""\nGewicht des %i. Paeckchens: %i Kilo\n""
                ""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, paeckchenGewicht[i], i+1, preis );
                summe = summe + preis;
            }
            else{
                preis = 3 + (paeckchenGewicht[i]-10)*0.45;
                printf(""\nGewicht des %i. Paeckchens: %i Kilo\n""
                ""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, paeckchenGewicht[i], i+1, preis );
                summe = summe + preis;
            }
        }
        else{
            break;
        }
    }
    return summe;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    int zahl = (int)*p_char;
    if(zahl >= 65 && zahl <= 90){
        zahl += shift;
        if(zahl > 90){
            zahl -= 26;
        }
        else if(zahl < 65){
            zahl += 26;
        }
    }
    else if(zahl >=97 && zahl<= 122){
        zahl += shift;
        if(zahl > 122){
            zahl -= 26;
        }
        else if(zahl < 97){
            zahl += 26;
        }
    }
    *p_char = (char)zahl;
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    for(int i = 0; i < maxlength; i++){
        char hilf = str[i]; 
        shiftChar(&hilf, shift);
        str[i] = hilf;
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_90,VName_90,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int tempG = artikelGewicht[0];
    int zpacket = 0;
    for (int i = 0; i <= 5; i++)
    {
        if ( ( tempG + artikelGewicht[i+1]) <= 10 )
        {
            tempG += artikelGewicht[i+1];
        }
        else
        {
            paeckchenGewicht[zpacket] = tempG;
            zpacket++;
            tempG = artikelGewicht[i+1];
        }
            
    }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double Versandkosten = 0;
    double endkosten = 0;
    
    for (int i = 0; i < 5; i++)
    {
        if ( !(paeckchenGewicht[i]==0) )
        { 
            if ( paeckchenGewicht[i] > 10 )
            {
                Versandkosten = ((paeckchenGewicht[i] - 10) * 0.45) + 3;
            }
            else
            {
                Versandkosten = 3;
            }
        
            printf(""\nGewicht des %i. Paeckchens: %i Kilo"",i+1,paeckchenGewicht[i]);
            endkosten += Versandkosten;
            printf(""\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",i+1,Versandkosten);
        }
    }
 return endkosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_91,VName_91,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_82,VName_82,"#include <stdio.h>
#include <stdlib.h>


void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
  int j=0;
  for(int i = 0; i<5; i++)
  {
    if(artikelGewicht[i]+artikelGewicht[i+1]<=10)
    {
      paeckchenGewicht[j]=artikelGewicht[i]+artikelGewicht[i+1];
      if(paeckchenGewicht[j]+artikelGewicht[i+2]<=10)
      {
        paeckchenGewicht[j]+=artikelGewicht[i+2];
        i++;
      }
      j++;i++;
    }else{
      paeckchenGewicht[j]=artikelGewicht[i];
      j++;
    }
  }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{ 
  double geld[5];
  for(int i = 0; i<5; i++)
  {
    printf(""\nGewicht des %i. Paeckchens: %i Kilo"",i+1,paeckchenGewicht[i]);
    if(paeckchenGewicht[i]>10)
    {
      geld[i]=((paeckchenGewicht[i]-10)*0.45)+3;
    } else geld[i]=3;   
    printf(""\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",i+1,geld[i]);
  }
  double geldGesamt = 0;
  for(int i=0; i<5;i++){
    geldGesamt+=geld[i];
  }
  return geldGesamt;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
  int cal = *p_char;
  while(shift<0){
    shift +=26;
  }
  if(cal<97)
  {
    cal=(((cal-65)+shift)%26)+65;
    *p_char=cal;
  }else{
    cal=(((cal-97)+shift)%26)+97;
    *p_char=cal;
  }

	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
  for(int i=0; i<maxlength;i++)
  {
    if(str[i]>=65&&str[i]<=90||str[i]>=97&&str[i]<=122)
    {
      shiftChar(&str[i],shift);
    }
  }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_78,VName_78,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   int tempGewicht = 0;
    int Gewicht = 0;
    int xounter = 0;

    for (int i = 0; i < 5; i++){    
        tempGewicht += artikelGewicht[i];
        if (tempGewicht <=10)
        {
            Gewicht = tempGewicht;
            xounter++;
        }else{
            break;
        }
        
    }
    if(xounter ==0){
        for (int i = 0; i < 5; i++)
    {    
        paeckchenGewicht[i] = artikelGewicht[i];
    }
    }
    else{
        paeckchenGewicht[0] = Gewicht;
        for (int i = 0; i < 5-xounter; i++)
            {    
        paeckchenGewicht[i+1] = artikelGewicht[xounter+i];
            }
    }

    
}


double berechnePaketKosten( int paeckchenGewicht[] )
{


double ALLpreis = 0.0;
float preis;

for (int i = 0; i < 5; i++)
{
    if(paeckchenGewicht[i] <=10 && paeckchenGewicht[i]!=0){
        ALLpreis+=3;
        printf(""\nGewicht des %i. Paeckchens: %i Kilo\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",(i+1),paeckchenGewicht[i],(i+1),3.00); 
    }if(paeckchenGewicht[i] >10 )
    {
       preis = 3 + (float)((paeckchenGewicht[i]-10)*45) /100;
       ALLpreis+=preis;
        printf(""\nGewicht des %i. Paeckchens: %i Kilo\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",(i+1),paeckchenGewicht[i],(i+1),preis);
    }
}


return ALLpreis;


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
		if ('A' <= * p_char && * p_char  <= 'Z'){
            if(* p_char + shift <= 'Z' && * p_char + shift >= 'A'){
                * p_char = * p_char + shift;
            }
            else
            {
                if(shift>=0){
                    * p_char = (* p_char + shift)-('Z'-'A')-1;
                }
                else{
                    * p_char = (* p_char + shift)+('Z'-'A')+1;
                }
            }
        }
        if ('a' <= * p_char && * p_char  <= 'z'){
            if(* p_char + shift <= 'z' && * p_char + shift >= 'a'){
                * p_char = * p_char + shift;
            }
            else
                if(shift>=0){
                    * p_char = (* p_char + shift)-('z'-'a')-1;
                }
                else{
                    * p_char = (* p_char + shift)+('z'-'a')+1;
                }
        }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for (int i = 0; i < maxlength; i++)
    {
        shiftChar(&str[i],shift);
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_96,VName_96,"#include <stdio.h>

#include <stdlib.h>




// Funktion veraendert paeckchenGewicht


void packePakete( int paeckchenGewicht[], int artikelGewicht[] )

{




// set up variables

int weight_limit = 10; 
int counter = 0;
int max_array_ix = 4;
int counter_1 = 0;

//  Set up array of pointers

int* p_paeckchenGewicht[max_array_ix + 1];
for(int v = 0; v <= max_array_ix; v++) p_paeckchenGewicht[v] = &paeckchenGewicht[v]; //richtig

//  

for(int i = 0; i<=max_array_ix; i++) //richtig
	{
	if(artikelGewicht[i] >= weight_limit)
		{
		*p_paeckchenGewicht[counter] = artikelGewicht[i]; //richtig 
		counter += 1; //richtig
		}
	else if(artikelGewicht[i] < weight_limit) // check artikel fits
		{
		counter_1 = i; // represents status of i
		while(*p_paeckchenGewicht[counter] + artikelGewicht[counter_1] <= 10)
			{						
			
			*p_paeckchenGewicht[counter] += artikelGewicht[counter_1];
			counter_1 += 1;
			}
			if(*p_paeckchenGewicht[counter] + artikelGewicht[counter_1] <= 10)
				{		
				counter += 1;
				i = counter_1; // updates status of i
    				}
			if(!(*p_paeckchenGewicht[counter] + artikelGewicht[counter_1] <= 10)) //Not
				{
				counter += 1;
				i = counter_1 - 1;
				}
		}
	}

}




double berechnePaketKosten( int paeckchenGewicht[] )

{


   

//  Set up variables and arrays

double summe_versand = 0;
int max_array_ix = 4;
int weight_limit = 10;
int* p_paeckchenGewicht[max_array_ix + 1];
double money[max_array_ix + 1];
int number_of_parcels = 1;

// assign pointervalues

for(int w = 0; w <= max_array_ix; w++) money[w] = 0.0;
for(int a = 0; a <= max_array_ix; a++) p_paeckchenGewicht[a] = &paeckchenGewicht[a];

//  printf execution
//  sum if *p_paeckchenGewicht > 0

for(int g = 0; g <= max_array_ix; g++)
	{
	if(*p_paeckchenGewicht[g] > 0)
		{
		if(*p_paeckchenGewicht[g] <= 10) 
			{
			summe_versand += 3.00;
			money[g] = 3.00;
			}
		else 
			{
			summe_versand += 3.00 + 0.45 * (double)(*p_paeckchenGewicht[g] - 10);
			money[g] = 3.00 + 0.45 * (double)(*p_paeckchenGewicht[g] - 10);
			}
		}
	} 	
for(int q = 0; q <= max_array_ix; q++)
	{
	if(*p_paeckchenGewicht[q] > 0)
		{
		printf(""\nGewicht des %i. Paeckchens: %i Kilo\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", number_of_parcels, *p_paeckchenGewicht[q], number_of_parcels, money[q] );
		number_of_parcels += 1;
		}
	}
return summe_versand;
}



int main () // nicht aendern!

{
   
int artikelGewicht[5];
 //set up array and following its values   
artikelGewicht[0] = 60;
   
artikelGewicht[1] = 57;
   
artikelGewicht[2] = 6;
   
artikelGewicht[3] = 9;
   
artikelGewicht[4] = 4;
   

// printf Aufruf

printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     
artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
artikelGewicht[3],artikelGewicht[4]);
   
   

//set up paeckchenGewicht array all being 0

int paeckchenGewicht[5] = {0,0,0,0,0};
   

// function call paeckchenGewicht()

packePakete( paeckchenGewicht, artikelGewicht );
   
   

// function call berechnePaketKosten()

double endkosten = berechnePaketKosten( paeckchenGewicht );
   

//printf aufruf

printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);

}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_88,VName_88,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int a = -1;
    
        for (int i = 0; i < 5; i++){
          if (paeckchenGewicht[a] + artikelGewicht[i] <= 10 && i != 0){
            
            
            paeckchenGewicht[a] += artikelGewicht[i];
            
            }
        else {
            a++;
            paeckchenGewicht[a] += artikelGewicht[i];
            
        }
       }
    
       
    return;
 

}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double kosten[5] = {0,0,0,0,0};
    for (int i = 0; i < 5; i++){
        if(paeckchenGewicht[i] <= 10){

            kosten[i] = 3.00;

        }
        else{
            kosten[i] = 3.00 + ((paeckchenGewicht[i] - 10) * 0.45);
        }
    }
    int b = 1;
    for (size_t i = 0; i < 5; i++){
       printf(""\nGewicht des %i. Paeckchens: %i Kilo\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", b, paeckchenGewicht[i], b, kosten[i]);
        b++;
    }
    
    double endpreis = 0;

    for (size_t i = 0; i < 5; i++)
    {
        endpreis += kosten[i];
    }
    
  return endpreis;


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	
   if (*p_char >= 'a' && *p_char <= 'z') {
        if((*p_char + shift) > 'z'){
            *p_char += (shift - 26);
            goto stop;
            }  
        if((*p_char + shift) < 'a'){
            *p_char += (shift + 26);
            goto stop;
            }       
        if(*p_char  + shift >= 'a' && *p_char + shift <= 'z'){
            *p_char += shift;
            goto stop;
            } 
    } 
    stop: ;
        
     /*   if((*p_char + shift) > 'z')  *p_char += (shift - 26);
        if((*p_char + shift) < 'a')  *p_char += (shift + 26); 
        if (*p_char + shift >= 'a' && *p_char + shift <= 'z') *p_char += shift;

    }*/
    if(*p_char >= 'A' && *p_char <= 'Z'){
        *p_char += shift;
        if(*p_char > 'Z')  *p_char -= 26;
        if(*p_char < 'A')  *p_char += 26;
    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for (char* p  = str; p < str + maxlength; p++){
        shiftChar(p, shift);
    }
    
    
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_102,VName_102,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
  if(*p_char>='A' && *p_char<='Z'){
    int i = (int)*p_char;
    i += shift;
    if(i<'A') i += 26;
    if(i>'Z') i -= 26;
    *p_char = (char)i;
  }
  if(*p_char>='a' && *p_char<='z'){
    int i = (int)*p_char;
    i += shift;
    if(i<'a') i += 26;
    if(i>'z') i -= 26;
    *p_char = (char)i;
  }}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
  for(char* p=str; p<str+maxlength; p++){
    shiftChar(p,shift);
  }}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_84,VName_84,"#include <stdio.h>
#include <stdlib.h>



void packePakete( int paeckchenGewicht[], int artikelGewicht[] ){
		int i = 0;
		for(int j = 0; i <5 ; j++){
		do{
		paeckchenGewicht[j] += artikelGewicht[i];	
		i++;
		} while (paeckchenGewicht[j] + artikelGewicht[i] < 10);}
	}


double berechnePaketKosten( int paeckchenGewicht[] ){

	double summe1 = 0.0;
		for(int i = 0; i <5 ; i++){
		printf(""Gewicht des %d. Paeckchens: %d Kilo\n"", i+1 , paeckchenGewicht[i]) ;
		double summe2 = 0.0;
		if(paeckchenGewicht[i] > 10)
			summe2 = 3.00 + (paeckchenGewicht[i]-10) * 0.45;
		else if(paeckchenGewicht[i] <= 10) 
			summe2 = 3.00;	
printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"" , i +1 , summe2 );
		summe1 += summe2;
		}
		return summe1;
}

int main () 
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>


void shiftChar(char* p_char, int shift){

	if((*p_char >= 'a' && *p_char <= 'z')){
		*p_char += shift;
		if(*p_char > 'z' || *p_char < 'a') { 
			if (shift > 0) 
		*p_char -= 26;	
			else if(shift <0 ) 
		*p_char += 26 ; 
		}		
	}
	else if ((*p_char >= 'A' && *p_char <= 'Z')){
		*p_char += shift;
		if(*p_char > 'Z' || *p_char < 'A') { 
			if (shift > 0) 
		*p_char -= 26;	
			else if(shift <0 ) 
		*p_char += 26 ; 
		}		
	}
}

void cipher(char str[], int shift, int maxlength){
	for(char* i = str ; i < str+maxlength ; i++  ) {
		shiftChar(i , shift);
	}
}

int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_81,VName_81,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
unsigned char gB = ('a' <= *p_char && *p_char <= 'z');
if(gB && (*p_char + shift) > 'z') {shift -= 26;
*p_char += shift;}
else if(gB && (*p_char +shift) < 'a') {shift +=26;
*p_char += shift;}
else if(gB)*p_char += shift;

unsigned char kB = ('A' <= *p_char && *p_char <= 'Z');
if(kB && (*p_char + shift) > 'Z') {shift -= 26;
*p_char += shift;}
else if(kB && (*p_char +shift) < 'A') {shift +=26;
*p_char += shift;}
else if(kB)*p_char += shift;	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
for(char* p_char = str; p_char<str +maxlength; p_char++){

shiftChar(p_char, shift);}	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_85,VName_85,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{	
	int j = 0;
	for(int i = 0; i<=4; ++i){
		if((artikelGewicht[i]+paeckchenGewicht[j]) < 10 || paeckchenGewicht[j] == 0 ){
			paeckchenGewicht[j] = paeckchenGewicht[j] + artikelGewicht[i];
		}else{
			++j;
			paeckchenGewicht[j] = paeckchenGewicht[j] + artikelGewicht[i];
		}
	}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{	int k = 0;
	double summe = 0;
	while(paeckchenGewicht[k] > 0 && k<=4){
		printf(""\nGewicht des %d. Paeckchens: %d Kilo\n"", k+1, paeckchenGewicht[k]);
		double preis;
		if(paeckchenGewicht[k] <= 10){
			preis = 3.00;
		}else{
			preis = 3+(paeckchenGewicht[k]-10)*0.45;
		}
		printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"", k+1, preis);
		summe += preis;
		++k;
	}
	return summe; 
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	if((*p_char >= 65 && *p_char <= 90)){
		if(*p_char + shift > 90){
			*p_char = 64 + (*p_char + shift -90);
		}else if(*p_char + shift < 65){
			*p_char = 91 + (*p_char + shift - 65);
		}else{
			*p_char += shift;
		}
	}else if((*p_char >= 97 && *p_char <= 122)){
		if(*p_char + shift > 122){
			*p_char = 96 + (*p_char + shift - 122);
		}else if(*p_char + shift < 97){
			*p_char = 123 + (*p_char + shift - 97);
		}else{
			*p_char += shift;
		}
	}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{	int k = 0;
	while(str[k] != '\0' && k<maxlength){
		shiftChar(&str[k], shift);
		++k;
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_95,VName_95,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{

int counter = 0;
    
    for (int i = 0; i < 5; i++) {
        // if weight sum less than 10, add the first number to second
        if (i < 4 && artikelGewicht[i]+artikelGewicht[i+1] <= 10) {
            int weight = artikelGewicht[i]+artikelGewicht[i+1];
            artikelGewicht[i+1] = weight;
        } 
        
        else if (i < 4 && artikelGewicht[i]+artikelGewicht[i+1] > 10) {
            paeckchenGewicht[counter] = artikelGewicht[i];
            counter++;
        }
        
        else{
            paeckchenGewicht[counter] = artikelGewicht[i];
            counter++;
        }
    }

}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double sum = 0;
    for (int i = 0; i < 5; i++) {
        if (paeckchenGewicht[i] <= 10) {
            double temp = 3;
            sum += temp;
            printf(""Gewicht des %d. Paeckchens: %d Kilo\n"", i+1, paeckchenGewicht[i]);
            printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"", i+1, temp);
        } else {
            int diff = paeckchenGewicht[i] - 10;
            double temp = 3 + diff*0.45;
            sum += temp;
            printf(""Gewicht des %d. Paeckchens: %d Kilo\n"", i+1, paeckchenGewicht[i]);
            printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"", i+1, temp);
        }
    }
    
    return sum;

}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
	int capital = 0;
    // it is a capital letter
    if (( * p_char >= 'A' ) && ( * p_char <= 'Z' )) {
        capital = 1;
    }
        
    // if it is capital change to small letter
    if (capital == 1) {
        * p_char -= 'A'-'a';
    }
        
    * p_char -= 'a';
    * p_char = ( * p_char + shift + 26 ) % 26;
    * p_char += 'a';
        
    // change back to capital letter
    if (capital == 1) {
        * p_char += 'A'-'a';
    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
	for (int i = 0; i < strlen(str); i++) {
        // only proceed char which are A-Z and a-z
        if ((str[i]>=65 && str[i]<=90)|| (str[i]>=97 && str[i]<=122) ) {
            char * pointer = &str[i];
            shiftChar(pointer, shift);
        }
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_86,VName_86,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
artikelGewicht[6] = 0;
int x = 0;
int y = 0;
for(int i=0; i < 6; i++)
    {
    if (y + artikelGewicht [i] > 10)
    {
        if (artikelGewicht[i] > 10 && y == 0)
        { paeckchenGewicht[x]=artikelGewicht[i];}
        else{paeckchenGewicht[x] = y;
    y = artikelGewicht[i];}
    x++;
    }
    else if( y + artikelGewicht [i] == 10)
    {
    paeckchenGewicht[x] = y + artikelGewicht[i];
    y = 0;
    x++;
    }
    else if (y + artikelGewicht[i] < 10)
    {
    y = y + artikelGewicht[i];
    }
    }
             

}

double berechnePaketKosten( int paeckchenGewicht[] )
{
   double k[5] = {3,3,3,3,3};
   int g = 0;
for(int i=0; i < 5; i++)
{
    g = paeckchenGewicht[i] - 10;
    while (g>0)
    {
        k[i]= k[i] + 0.45;
        g = g-1;
    }
}
    double s = 0;
for(int i=0; i < 5; i++)
{
    printf(""\nGewicht des %i. Paeckchens: %i Kilo"",i+1,paeckchenGewicht[i]);
    printf(""\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",i+1,k[i]);
    s = s + k[i];
}
return s;
}

int main () // nicht aendern!
{
 int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
        if(*p_char >= 'a' && *p_char <= 'z'){
            *p_char = *p_char + shift;
    if(*p_char > 'z'){
    *p_char = *p_char - 'z' + 'a' - 1;
    }
    }
    else if(*p_char >= 'A' && *p_char <= 'Z'){
    *p_char = *p_char + shift;
    if(*p_char > 'Z'){
    *p_char = *p_char - 'Z' + 'A' - 1;
    }
    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    int i;
    char *p_char;
    for(i=0;i<maxlength;i++)
    {
        *p_char = str[i];
       *p_char=(char)(*p_char);
        shiftChar (*p_char,shift);
        str[i]=(char)(*p_char);
        
    }
    return 1;
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_94,VName_94,"/******************************************************************************

                            Online C Compiler.
                Code, Compile, Run and Debug C program online.
Write your code in this editor and press ""Run"" button to compile and execute it.

*******************************************************************************/

#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    for (int i = 0; i < 5; ++i)
    {
        for (int j = i; j < 5; ++j)
        {
            if ((artikelGewicht[j] !=0)||(paeckchenGewicht[i]<10))
            {
                
                
                    if (((artikelGewicht[j] + paeckchenGewicht[i]) < 11)) 
                        {
                        paeckchenGewicht[i] += artikelGewicht[j]; 
                        artikelGewicht[j] = 0;
                        }
                    else
                        {
                        if (paeckchenGewicht[i]==0)
                        {
                        paeckchenGewicht[i] = artikelGewicht[j];
                        artikelGewicht[j] = 0;
                        break;
                        }
                        else break;
                        }
                
            }    
        }
        
    }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double endkosten;
    double zwischenkosten;
    for (int i = 0; i < 5; ++i)
        {
            if (paeckchenGewicht[i] < 11)
                {
                zwischenkosten = 3;
                endkosten += 3;
                printf(""\nGewicht des %i. Paeckchens: %i Kilo\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, paeckchenGewicht[i], i+1, zwischenkosten);
                }
            else
                {
                zwischenkosten = (3 + ((paeckchenGewicht[i] - 10) * 0.45));
                endkosten += (3 + ((paeckchenGewicht[i] - 10) * 0.45));
                printf(""\nGewicht des %i. Paeckchens: %i Kilo\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, paeckchenGewicht[i], i+1, zwischenkosten);
                }
        }   
        
    return endkosten;
}
int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    if(*p_char >= 'A' && *p_char <= 'Z')
        {
        if ((*p_char + shift) > 'Z')
        *p_char = *p_char + shift - 26;
        else
        {
        if ((*p_char +shift) < 'A')
        *p_char = *p_char + shift + 26;
        else
	    *p_char = *p_char + shift;
        }
        }
     if(*p_char >= 'a' && *p_char <= 'z')
        {
        if ((*p_char + shift) > 'z')
        *p_char = *p_char  - 26 + shift;
        else
        {
        if ((*p_char + shift) < 'a')
        *p_char = *p_char  + 26 + shift;
        else
	    *p_char = *p_char + shift;
        }
        }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for (int i=0; i<maxlength; ++i)
	{
	    shiftChar(str + i, shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_92,VName_92,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
	for(int i= 0;i<5;i++){
			if(artikelGewicht[i] >= 10){
				paeckchenGewicht[i] = paeckchenGewicht[i] + artikelGewicht[i];
				
			}
			else{
				paeckchenGewicht[i] += artikelGewicht[i];
				if((paeckchenGewicht[i]+artikelGewicht[i+1]) <= 10){
					paeckchenGewicht[i] = paeckchenGewicht[i]+artikelGewicht[i]+artikelGewicht[i+1];
					
				}
			}
	}
}		
		

double berechnePaketKosten( int paeckchenGewicht[] )
{
	double a = 0;
	double b[5];
	double c[5];
	for(int z=0;z<5;z++){
		b[z] = paeckchenGewicht[z];
	}
	for(int i=0;i<5;i++){
		
		if(paeckchenGewicht[i]>10){
			b[i] -= 10;
			a += ( b[i]*0.45)+3;
			c[i] = ( b[i]*0.45)+3;
		}
		else{ a+=3;
		c[i] = 3;}
	printf(""\nGewicht des %i. Paeckchens: %i Kilo\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",i+1,paeckchenGewicht[i],i+1,c[i]);
	}
	return a;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	if('a'<=*p_char && *p_char<='z'){
		if(*p_char+shift>'z'){
			*p_char = 'a' +(((*p_char+shift)-'z')-1);
		}
		else if(*p_char+shift<'a'){
			*p_char = 'z' +(((*p_char+shift)-'a')+1);
		}
		else{
			*p_char = *p_char + shift;
		}
	}
	if('A'<=*p_char && *p_char<='Z'){
		if(*p_char+shift>'Z'){
			*p_char = 'A' +(((*p_char+shift)-'Z')-1);
		}
		else if(*p_char+shift<'A'){
			*p_char = 'Z' +(((*p_char+shift)-'A')+1);
		}
		else{
			*p_char = *p_char + shift;
		}
	}
	
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(int i=0;i<maxlength;i++){
	shiftChar(&str[i], shift);}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig"";// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_87,VName_87,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
          for(int i = 0 ; i<5 ; i++) {
           	paeckchenGewicht[i]= artikelGewicht[i];
           	
		}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
            double summe=0;
                     for(int i = 0 ; i<5 ; i++) {
           	
           	printf(""\n\nGewicht des %i. Paeckchens: %i Kilo \n"" , i+1,paeckchenGewicht[i] );
		if (paeckchenGewicht[i]> 10){
			double b = 3+ ((paeckchenGewicht[i]-10) * 0.45);
			summe+=b ;
			printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"" , i+1,b );
		}
		else {
			double  u=3;
			summe+=u;
		        printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"" , i+1 , u );
		}
		}
                      
  return (summe) ;
   
  }


int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   	



   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

void shiftChar(char* p_char, int shift)
{
	if(( 'a'<=*p_char  ) && (*p_char <= 'z')){
	*p_char += shift ;
	if (*p_char > 'z' || *p_char < 'a'){
	if (shift > 0)
	*p_char-=26;
	else if (shift<0) 
	*p_char+=26;
	
	}
	}
	
		else if((*p_char>= 'A' ) && (*p_char <= 'Z')){
	*p_char = *p_char +shift ;
	if (*p_char > 'Z' || *p_char < 'A'){
	if (shift > 0)
	*p_char-=26;
	else if (shift<0) 
	*p_char+=26;
	
	}
	}
}

void cipher(char str[], int shift, int maxlength)
{
	
	
	for(char* i = str  ; i < str+maxlength ; i++ ) {
	shiftChar( i , shift);
	}
}

int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig"";  	
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	



	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	

	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_98,VName_98,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{   
    int current_index = 0;
    int currentWeight = 0;
    for (int i=0; i < 4; i++){
        currentWeight += artikelGewicht[i]; 
        if (currentWeight + artikelGewicht[i+1] > 10) {
            paeckchenGewicht[current_index] = currentWeight;
            current_index += 1;
            currentWeight = 0;
        } 
        if (i == 3) {
             paeckchenGewicht[current_index] = currentWeight + artikelGewicht[i+1];
        }
    }
    

}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double endkosten = 0;
    double kosten;
    for (int i = 0; i < 5; i++){
        if (0 < paeckchenGewicht[i]-10) {
            kosten = 3 + (paeckchenGewicht[i]-10)*0.45;
        } else {
            kosten = 3;
        }
        
        printf(""\nGewicht des %i. Paeckchens: %i Kilo\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1,paeckchenGewicht[i],i+1, kosten);
        endkosten += kosten;
    }

    return endkosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>


void shiftChar(char* p_char, int shift)
{
    if ((*p_char >= 'a' && *p_char <= 'z') || (*p_char >= 'A' && *p_char <= 'Z' )){
        *p_char += shift;
        if (*p_char > 'Z' || (*p_char > 'z' && *p_char < 'A')){
            *p_char -= ('z' - 'a'+1); 
        }
    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for (int i=0; i < maxlength; i++) {
		shiftChar(&str[i], shift);
	}
}


int main()
{
	
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	//Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_101,VName_101,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
