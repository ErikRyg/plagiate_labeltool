Nachname,Vorname,Antwort 8,Antwort 9
Name_460,VName_460,"#include <stdio.h>

void factorize(long product, long *factor1, long *factor2)
{
  if(product==0||product==1){
    *factor1=1;
    *factor2=product;
  } else{
    int a=0;
    for(long int h=product/2;(h>0)&&(a==0);h--){
      if(product%h==0){
        *factor1=h;
        *factor2=product/h;
        a=1;
      }
    }

  }
}

int main(){
  long int factor1;
  long int factor2;
  long int product;
	printf(""Please enter an Integer: "");
  scanf(""%ld"",&product);
  factorize(product,&factor1,&factor2);
	printf(""Possible Factors of %lu are %lu and %lu.\n"",product,factor1,factor2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  for (int i = 0; (i<zahl)&&(dest[i]!=0)&&(src[i]!=0); i++)
  {
    dest[i]=src[i];
  }
  
}

void umdrehen( char* str )
{
  int l;
  char puffer;
  for (l = 0; str[l]!=0; l++){}
  for (int i=0; i<l/2; i++){
    puffer=str[i];
    str[i]=str[l-i-1];
    str[l-i-1]=puffer;
  }
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_442,VName_442,"#include <stdio.h>

void factorize(long resultat, long *nummer1, long *nummer2)
{
    if(resultat == 0){
        *nummer1 = 1;
        *nummer2 = 0;
        return;
    }
    else if(resultat == 1){
        *nummer1 = 1;
        *nummer2 = 1;
        return;
    }
    *nummer1 = resultat / 2;
    while (resultat % *nummer1){
        *nummer1 -= 1;
    }
    *nummer2 = resultat / *nummer1;
}

int main(){
    printf(""Please enter an Integer: "");
    long resultat;
    scanf(""%ld"", &resultat);
    long nummer1, nummer2;
    factorize(resultat, &nummer1, &nummer2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
    int i = 0;
    while ((i < zahl) && (dest[i] != '\0') && (src[i] != '\0')){
        dest[i] = src[i];
        i++;
    }
}

void umdrehen( char* str )
{
    int i = 0;
    int len = 0;
    while(str[i] != '\0'){
        len += 1;
        i += 1;
    }
    int left = 0;
    int right = len - 1;
    while (left < right){
        char temp = str[left];
        str[left] = str[right];
        str[right] = temp;
        left++;
        right--;
    }
}

int main( int argc, char* argv[] )
{
    char test[11]= ""0123456789"";
    printf( ""Das Original ist: %s \n"", test );
    ersetzen( test , atoi(argv[1]), argv[2] );
    printf( ""Ersetzt : %s \n"", test );
    umdrehen( test );
    printf( ""Rückwärts : %s \n"", test);
}"
Name_432,VName_432,"#include<stdio.h>
#include<limits.h>
#include<string.h>

void factorize(long resultat, long *nummer1, long *nummer2){
	switch(resultat){
		case 0:
		case 1:
			*nummer1 = 1;
			*nummer2 = resultat;
			break;
		default:
			*nummer2 = 2;
			*nummer1 = resultat/2;
			long int temp = *nummer1;
			
			while ((*nummer2 * *nummer1 != resultat) && (*nummer2 < resultat)){
				*nummer2 = *nummer2+1;
				while((*nummer2 * temp != resultat) && temp > 2){
					temp--;
					if(*nummer2 * temp == resultat){
						*nummer1 = temp;
					}
				}
				if(*nummer2 == resultat){
					*nummer1 = 1;
				}
			}
			break;
	}
}

int main(){
	long resultat = 1, nummer1, nummer2;
	printf(""Please enter an Integer: "");
	scanf(""%lld"",&resultat);
	factorize(resultat, &nummer1, &nummer2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
	return 0;
	
	// long resultat = 66, nummer1, nummer2;
	// factorize(resultat, &nummer1, &nummer2);
	// printf(""resultat = %li; nummer1 = %li; nummer2 = %li\n"", resultat, nummer1, nummer2);
}","//gcc -x c HA09_F09.c -o HA09_F09 -Wall -Wextra -pedantic
/*
	Schreiben Sie eine Funktion void ersetzen(char* dest, int zahl, char* src)die den String src in den String dest kopiert (und dabei überschreibt), allerdings 
		nur maximal zahl Zeichen
		nur maximal bis zum Ende von dest
		nur maximal den gesamten String src
	Schreiben Sie eine Funktion void umdrehen( char* str ), die die übergebene Zeichenkette umdreht. Die Größe eines Strings ist variable, also müsst ihr diese zuerst ermitteln
	Legen Sie in main eine Testzeichenkette mit dem Inhalt ""0123456789"" an. Geben Sie diese auf der Konsole aus. Das Programm soll mit zwei Kommandozeilenparametern aufgerufen werden: die maximale Anzahl zu ersetzender Zeichen des Teststrings sowie der String, mit dem der Teststring überschrieben werden soll. Führt dementsprechend die Funktion ersetzen aus, gebt das Ergebnis aus, danach dann umdrehen, und gebt das Ergebnis erneut aus.
	Verwenden Sie keine Funktionen aus string.h !  Sonst gibt es keine Punkte auf die Aufgabe. Freiwillige Recherche (ohne Punkte): Welche Funktionen aus string.h wären hier nützlich gewesen und warum?
*/
#include<stdio.h>
#include<limits.h>
#include <stdlib.h>

int fnLength(char* cInput){
	int intLength = 0;
	
	while(cInput[intLength] != '\0') intLength++;
	
	return(intLength);
}

void ersetzen(char* dest, int zahl, char* src){
	int		i,
			intLength		= fnLength(dest),
			intLengthSRC	= fnLength(src);
	
	// printf(""Length of test string:\t%d\n"", intLength);
	// printf(""sizeof dest:\t%d\n"", sizeof(dest));
	// printf(""sizeof *dest:\t%d\n"", sizeof(*dest));
	// printf(""fnLength of dest:\t%d\n"", fnLength(dest));
	// printf(""Overwrite first (zahl) %d characters:\n"", zahl);
	for (i=0; i<intLength; i++){
		// printf(""dest[%d] == \'%c\'\n"", i, dest[i]);
		if((i<zahl) && (i < intLengthSRC)){
			dest[i] = src[i];
			// printf(""\tdest[%d] := \'%c\'\n"", i, dest[i]);
		}else{
			// % - no alteration
		}
	}
}

void umdrehen(char* str){
	// pprMachtSp
	
	int		i,
			intLength		= fnLength(str);
	char	c;
	
	// printf(""umdrehen: length:\t%d\n"", intLength);
	
	for (i=0;i<=(intLength-1)/2;i++){
		// printf(""i: %d"", i);
		// printf(""\tstr[i]: %c"", str[i]);
		// printf(""\tintLength-i-1: %d"", (intLength-i-1));
		// printf(""\tstr[intLength-i-1]: %c"", str[intLength-i-1]);
		// printf(""\n"");
		
		c = str[i];
		str[i] = str[intLength-i-1];
		str[intLength-i-1] = c;
	}
}

int main(int argc1, char* argv1[]){
	char test[11]= ""0123456789"";
	
	printf( ""Das Original ist: %s \n"", test);
	
	ersetzen(test , atoi(argv1[1]), argv1[2]);
	
	printf(""Ersetzt : %s \n"", test);
	
	umdrehen( test );
	
	printf( ""Rückwärts : %s \n"", test );
	
	return 0;
}

// void main(){
	// printf(""\nTest 1:\n"");
	// char* str[] = {""./[programm]"", ""40"", ""pprMachtSpassss""};
	// fnMain(2, str);
	
	// printf(""\nTest 2 Robin:\n"");
	// char str1[6] = ""Robin"";
	// printf(""%s\n"", str1);
	// umdrehen(str1);
	// printf(""%s\n"", str1);
	
	// printf(""\n\nTests 3 [0 2 3 4] \""ppr\"":\n"");
	// char* str3[] = {""./[programm]"", ""40"", ""ppr""};
	// fnMain(0, str3);
	// fnMain(2, str3);
	// fnMain(3, str3);
	// fnMain(4, str3);
	
	// printf(""\n\nTests 4 40\""pprMachtSpass\"":\n"");
	// char* str4[] = {""./[programm]"", ""40"", ""pprMachtSpass""};
	// fnMain(40, str4);
// }"
Name_434,VName_434,"#include <stdio.h>

void factorize(long ergebnis, long *zahl1, long *zahl2)
{
	if (ergebnis == 0 || ergebnis == 1) {
        *zahl1 = 1;
        *zahl2 = ergebnis;
    } else {
        long prod = ergebnis / 2;
        if (ergebnis % 2 != 0) {
            do {
                prod -= 1;
            } while (ergebnis % prod != 0);
        }
        *zahl1 = prod;
        *zahl2 = ergebnis / prod;
    }
}

int main(){
	printf(""Please enter an Integer: "");
    long ergebnis, zahl1, zahl2;
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis, &zahl1, &zahl2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", ergebnis, zahl1, zahl2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
 
int chooseMinOfTwo( int a, int b )
{
    if (a > b) return b;
    else return a;
}

int chooseMinOfThree( int a, int b, int c)
{
    int tmp = chooseMinOfTwo(a, b);
    return chooseMinOfTwo(tmp, c);
}

void ersetzen( char* dest, int zahl, char* src )
{  
    int len = chooseMinOfThree(strlen(dest), zahl, strlen(src));
    for (int i = 0; i < len; i++) {
        *dest = *src;
        dest++;
        src++;
    }
}

void umdrehen( char* str )
{
    int len = strlen(str);
    char tmp[len + 1];
    for (int i = 0; i < len; i++) {
        tmp[len - i - 1] = str[i];
    }
    for (int i = 0; i < len; i++) {
        str[i] = tmp[i];
    }
}

int main( int argc, char* argv[] )
{  
    char test[11]= ""0123456789"";
    printf( ""Das Original ist: %s \n"", test );
    ersetzen( test , atoi(argv[1]), argv[2] );
    printf( ""Ersetzt : %s \n"", test );
    umdrehen( test );
    printf( ""Rückwärts : %s \n"", test );
}"
Name_441,VName_441,"#include <stdio.h>
long factorize(long produkt, long *faktor1, long *faktor2)
{
    for (long i = 1; i<produkt; ++i){
    if(produkt % i == 0){
    *faktor1 = i;
    *faktor2 = (produkt / i);
}}
}

int main(){
    printf(""Please enter an Integer: "");
    long num;
    long faktor1 = 1;
    long faktor2 = 0;
    scanf(""%ld"", &num);
    factorize(num, &faktor1, &faktor2);
    printf(""Possible Factors of %li are %li and %li.\n"",num , faktor1, faktor2);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  dest = src;
}

void umdrehen( char* str )
{
  for(int length=0; str[length] != '\0';length++){
for (int i = 0; i < length/2; i++){
char temp = str[i];
str[i] = str[length-i];
str[length-i] = temp;
temp--;
}
}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_436,VName_436,"#include <stdio.h>

void factorize(long result, long *number1, long *number2){
	if(result == 0){
	    *number1 = 1;
	    *number2 = 0;
	}
	
	if(result == 1){
        *number1 = 1;
        *number2 = 1;
    }
	
	for(int i = 2; *number1 * *number2 != result; i++){
	    *number2 = i;
	    *number1 = result/(*number2);
	}

}

int main(){
	long result = 0;
	long number1 = 0;
	long number2 = 0;
	printf(""Please enter an Integer: "");
	scanf(""%ld"",&result);
	factorize(result, &number1, &number2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", result, number1, number2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src){  
    for (int i = 0; i <=zahl && dest[i] != '\0'; i++){
        dest[i] = src[i];
    }
}

void umdrehen( char* str ){
    int z = 0;
    for(int i = 1; str[i] != '\0'; i++){
        z = i;
    }
    char tmp[z];
    for(int i = 0; str[i] != '\0'; i++){
        tmp[i] = str[z-i];
    }
    for(int i = 0; str[i] != '\0'; i++){
        str[i]=tmp[i];
    }
}

int main( int argc, char* argv[] ){  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_76,VName_76,"#include <stdio.h>




void factorize(long product, long *factor1, long *factor2)
{
	
switch (product)
	{
		case 0 : *factor1 = 1; *factor2 = product; break;
		case 1 : *factor1 = 1; *factor2 = product; break;
		
		default : 

		if ( !(product % (product / 2))) { *factor1 = (product / 2); *factor2 = 2; break;}
		long zaehler = ((product - 1)/2);
		for (long try = zaehler; try > 0 ; try--)
		{

		if ( !(product%try)) 	{ *factor1 = try; *factor2 = product / try; break; } 
		
		} // Ende for -Schleife mit try als Zaehler
		
		 // Ende von default
	} // Ende von switch (product)

}

int main(){

	long product = 0;
	long factor1 = 0;
	long factor2 = 0;

	long* p_factor1 = &factor1;
	long* p_factor2 = &factor2;

	printf(""Please enter an Integer: "");
	scanf(""%ld"", &product);
	factorize(product, p_factor1, p_factor2);
	

	printf(""Possible Factors of %ld are %ld and %ld.\n"",product, factor1, factor2 );
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
 for (int n = 0; n < 11; n++){} 
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );

    
}"
Name_439,VName_439,"#include <stdio.h>
void factorize(long ergebnis, long *zahl1, long *zahl2)
{
long f1,f2;
//printf(""%ld\n"", ergebnis);
if((ergebnis == 0)||(ergebnis == 1))
{
f1 = 1;
f2 = ergebnis;
}
else
{
f1 = ergebnis/2;
while(ergebnis%f1 != 0 )
{
//printf(""f1 passt noch nicht : %i\n"",f1);
f1 = f1- 1;
}
f2 = ergebnis/f1;
}
//printf(""faktoren: %ld, %ld \n"",f1,f2);
*zahl1 = f1;
*zahl2 = f2;
}
int main(){
long eingabe;
printf(""Please enter an Integer: "");
scanf(""%ld"",&eingabe);
long z1,z2;
factorize(eingabe,&z1,&z2);
printf(""Possible Factors of %ld are %ld and %ld.\n"",eingabe,z1,z2);
return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_447,VName_447,"#include <stdio.h>
#include <stdlib.h>

void factorize(long ergebnis, long* zahl1, long* zahl2)
{
if(ergebnis == 0) {
        *zahl1 = 1;
        *zahl2 = ergebnis;
    } else if(ergebnis == 1) {
        *zahl1 = 1;
        *zahl2 = ergebnis;
    } else {
        for(int i = ergebnis/2; i > 0;i--) {
            if(ergebnis%i != 0) {
                continue;
            } else {
                *zahl1 = i;
                *zahl2 = ergebnis/i;
                break;
            }
        }
    }
}

int main(){
    long ergebnis = 0;
    long* zahl1;
    long* zahl2;
    zahl1 = (long*) malloc(sizeof(long));
    zahl2 = (long*) malloc(sizeof(long));

    printf(""Please enter an Integer: "");
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis,zahl1,zahl2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"",ergebnis, *zahl1, *zahl2);

    return 0;
}","#include <stdio.h>
#include <stdlib.h>

int getStringLength(char x[]) {
    int i = 0;
    while(x[i] != NULL) {
        i++;
    }
    return i;
}

void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0; i < zahl && i < getStringLength(src) && i < 10; ++i) {
        dest[i] = src[i];
    }
}

void umdrehen( char* str )
{
    int z = getStringLength(str);
    char x[z];
    for (int i = 0; i < z; ++i) {
        x[i] = str[i];
    }
    for (int i = z-1; i >= 0; --i) {
        str[(z-1)-i]=x[i];
    }

}

int main( int argc, char* argv[] )
{
    char test[11]= ""0123456789"";
    printf( ""Das Original ist: %s \n"", test );
    ersetzen( test , atoi(argv[1]), argv[2] );
    printf( ""Ersetzt : %s \n"", test );
    umdrehen(test);
    printf( ""Rückwärts : %s \n"", test );
}"
Name_91,VName_91,"#include <stdio.h>

void factorize(long ergebnis, long *zahl1, long *zahl2){
    long tmp= ergebnis;
    if(ergebnis == 0){
        *zahl1 = 1;
        *zahl2 = ergebnis;
    }
    else if(ergebnis == 1){
        *zahl1 = 1;
        *zahl2 = ergebnis;
    }
    else{
        tmp = ergebnis/2;
        while(ergebnis % tmp != 0){
            tmp = tmp - 1;
        }
        *zahl1 = tmp;
        *zahl2 = ergebnis/tmp;
    }
}

int main(){
	long ergebnis;
    long zahl1;
    long zahl2;
    long* p1 = &zahl1;
    long* p2 = &zahl2;
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis, p1, p2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", ergebnis, zahl1, zahl2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
 
void ersetzen(char* dest, int zahl, char* src){  
    int max = 0;
    int laengedest = strlen(dest);
    int laengesrc = strlen(src);
    if (zahl > laengedest){
        if (zahl > laengesrc) max = zahl;
        else if(zahl < laengesrc) max = laengesrc;
    }
    else if (laengedest > zahl){
        if (laengedest > laengesrc) max = laengedest;
        else if (laengedest < laengesrc) max = laengesrc;
    }

    for(int i = 0; i < max; i++){
        dest[i] = src[i];
    }
}

void umdrehen( char* str ){
    int laenge = strlen(str);
    for (int i = 0; i < laenge/2; i++){
        int tmp = str[i];
        str[i] = str[laenge - i -1];
        str[laenge - i - 1] = tmp;
    }
}

int main( int argc, char* argv[] ){  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_433,VName_433,"#include <stdio.h>

void factorize(long ergebnis, long *zahl1, long *zahl2)
{
	if(ergebnis==0||ergebnis==1){
		*zahl1=1;
		*zahl2=ergebnis;
	}
	else{
		*zahl1=ergebnis/2;
		while(ergebnis%*zahl1!=0)
		{*zahl1=*zahl1-1;}
	*zahl2 = ergebnis / *zahl1;
			
	}
}

int main(){
	long eingabe=0;
	long t1 =0;
	long t2 =0;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &eingabe);
	factorize(eingabe, &t1, &t2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, t1, t2);
	
	return 0;
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{  
  for(int i=0; i<zahl && *(dest+i) != '\0'  ; i++){
  *(dest+i) = *(src +i);
  }
}

void umdrehen( char* str )
{
  int n=0;
  for(int i =0; *(str+i) != '\0' ;i++){
  n++;}
  n--;
  
  for(int i=0; i<=n; i++){
  char tmp = *(str +i); 
  *(str + i) = *(str + n );
  *(str + n) = tmp;
    n--;
  }
  
}
int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_435,VName_435,"#include <stdio.h>

void factorize(long produkt, long *faktor1, long *faktor2)
{
    long var = produkt/2;
	switch (produkt){
        case 0:
            *faktor1 = 1;
            *faktor2= produkt; 
            break;
        case 1:
            *faktor1 = 1; 
            *faktor2 = produkt;
            break; 
        default:
            while (produkt%var != 0 ){ //produkt/ergebnis * ergebnis != produkt
                var -= 1;
            }
            *faktor1= var;
            *faktor2= produkt/var;
            break;       
    }
}

int main(){
    long a;
    long b;
    long pro; 
	printf(""Please enter an Integer: "");
    scanf(""%ld"",&pro);
    factorize (pro, &a, &b);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", pro,a, b );
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    for (int i = 0;(i<zahl && dest[i] != '\0'  ) && src[i] != '\0' ; i++){
        //printf(""%c"", dest[i]);
        dest[i] = src[i];
        //if (dest[i] == '\0' || src[i] == '\0' ){
           // break;
        //} else {
        //    dest[i] = src[i];
        //}
        
        
    }
  
}

void umdrehen( char* str )
{   //printf(""%s\n"", str);
    int i = 0; 
    while(str[i] != '\0'){
        i++;
    }
    i +=1;
    //printf(""%i \n"", i);
    for(int k = 0; k<(i-k-2); k++){
        //printf(""%c \n"", str[i-k-2]);
        char mem = str[k]; 
        str[k] = str[i-k-2];
        str[i-k-2] = mem;
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_450,VName_450,"#include <stdio.h>

void factorize(long result, long *number1, long *number2){
	if(result == 0){
	    *number1 = 1;
	    *number2 = 0;
	}
	
	
	if(result == 1){
        *number1 = 1;
        *number2 = 1;
    }
	
	
	for(int i = 2; *number1 * *number2 != result; i++){
	    *number2 = i;
	    *number1 = result/(*number2);
	}


}


int main(){
	long result = 0;
	long number1 = 0;
	long number2 = 0;
	printf(""Please enter an Integer: "");
	scanf(""%ld"",&result);
	factorize(result, &number1, &number2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", result, number1, number2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>




//void ersetzen(char* dest, int zahl, char* src)

void ersetzen(char* dest, int zahl, char* src){  
	for (int i = 0; i <=zahl && dest[i] != '\0'; i++){
		dest[i] = src[i];
	}
}

//void umdrehen( char* str )

void umdrehen( char* str ){
	int c = 0;
	for(int i = 1; str[i] != '\0'; i++){
		c = i;
	}
	char tmp[c];
	for(int i = 0; str[i] != '\0'; i++){
		tmp[i] = str[c-i];
	}
	for(int i = 0; str[i] != '\0'; i++){
		str[i]=tmp[i];
	}
}

//int main( int argc, char* argv[] )

int main( int argc, char* argv[] ){  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_451,VName_451,-,-
Name_454,VName_454,"#include <stdio.h>

void factorize(long produkt, long *faktor1, long *faktor2)
{
long faktor1
long faktor2

	// Your factorization
}

int main(){
	printf(""Please enter an Integer: "");
	scanf(""%ld"", produkt);
	printf(""Possible Factors of %ld are %ld and %ld.\n"");
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_449,VName_449,"#include <stdio.h>

void factorize(long product, long *factor1, long *factor2)
{	
	if (product<2){
		*factor1=1;
		*factor2=product;
	}
	else{
		*factor1=product/2;
		while (*factor1>1){
			if (product%*factor1!=0){
				*factor1=*factor1-1;
			}
			else{
				break;
			}
		}
		*factor2=product/ *factor1;
	}
}

int main(){
	long product;
	printf(""Please enter an Integer: "");
	scanf(""%ld"",&product);
	long a;
	long b;
	long *factor1=&a;
	long *factor2=&b;
	factorize(product, factor1, factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",product,a,b);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	int len;
    if (strlen(dest)>zahl){
		len=zahl;
	}
	else{
		len=strlen(dest);
	}
	if (len>strlen(src)){
		len=strlen(src);
	}
	for (int i=0; i<len; i++){
		dest[i]=src[i];
	}
}

void umdrehen( char* str )
{
	int len=strlen(str);
	char kop[len];
	strncpy(kop,str,len);
	for (int i=0; i<len;i++){
	  str[i]=kop[len-1-i];}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_440,VName_440,"#include <stdio.h>

void factorize(long product, long *factor1, long *factor2)
{
    int auxiliar=product/2;
    if(product==1)
    {
        *factor1=1;
        *factor2=1;
        return 0;
    }
    if (product==0)
    {
        *factor1=1;
        *factor2=product/ *factor1;
        return 0;
    }
    if(product%2==0)
    {
        *factor1=2;
        *factor2=product/ *factor1;
    }
    else
    {
        *factor1=2;
        while(product% *factor1!=0)
        {
            auxiliar=(auxiliar-1);
            *factor2=auxiliar;
            *factor1=product/ *factor2;
        }
    }

}

int main()
{
    long num, fac1=1, fac2=1;
    printf(""Please enter an Integer: "");
    scanf(""%d"",&num);
    factorize(num, &fac1, &fac2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", num, fac2, fac1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
    int i=0;
    while(dest[i]!='\0' && src[i]!='\0' && i<zahl){
    	dest[i]= src[i];
    	i++;
	}
}

void umdrehen( char* str )
{
	char aux[100];
	int n = 0;
	while(str[n]!='\0'){
		aux[n]='a';
		n++;
	}
	ersetzen(aux, n, str);
	for(int i = 0;i<n; i++){
		str[i]=aux[n-1-i];
	}
}

int main( int argc, char* argv[] )
{
    char test[11]= ""0123456789"";
    printf( ""Das Original ist: %s \n"", test );
    ersetzen( test, atoi(argv[1]), argv[2] );
    printf( ""Ersetzt : %s \n"", test );
    umdrehen( test );
    printf( ""Rückwärts : %s \n"", test );
}"
Name_445,VName_445,"#include <stdio.h>

void factorize(long ergebnis, long *zahl1, long *zahl2)
{ 
	if (ergebnis ==0){
		*zahl1 =1;
		*zahl2 = ergebnis;
		}
	else if (ergebnis==1){
		*zahl1= 1;
		*zahl2= ergebnis; 
		}
	else if (ergebnis % 2 ==0) {
		*zahl1 = ergebnis / 2;
		*zahl2 = 2; 
		}
	else {
		int a=0;
		a = ergebnis / 2;
		do {
			if (ergebnis % a ==0)
				break;
		else 
			a--;
		}while (ergebnis %a !=0);
		*zahl1 = a;
		*zahl2 = ergebnis/ *zahl1;
	}
}

int main(){
	long eingabe = 0;
	long zahl1 = 0;
	long zahl2 = 0;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &eingabe);
	factorize(eingabe, &zahl1, &zahl2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, zahl1, zahl2 );
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	int laengedest = 0;
	int laengesrc = 0;	
	for(int i = 0; dest[i] != '\0'; i++){
		laengedest +=1;
	}
	for(int i = 0; src[i] != '\0'; i++){
		laengesrc +=1;
	}
	if(laengedest < zahl) zahl = laengedest;
	if(laengesrc < zahl) zahl = laengesrc;
	else zahl = zahl;
	for(int i = 0; i <= zahl-1; i++){
	dest[i] = src[i];
	}
}

void umdrehen( char* str )
{
    int laenge = 0;
	for(int i = 0; str[i] != '\0'; i++){
		laenge += 1;
	}
	char tmp[laenge+1];
	for(int i = 0; i <= laenge; i++){
		tmp[i] = 0;
	}
	for(int i = 0; i <= laenge; i++){
		tmp [i] = str[laenge-(i+1)];
	}
	for(int i = 0; i < laenge; i++){
		str[i] = tmp[i];
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_54,VName_54,"#include <stdio.h>

void factorize(long product, long *factor1, long *factor2)
{
	if(product == 0){
		*factor1 = 1;
		*factor2 = product;
	}
	else if(product == 1){
		*factor1 = 1;
		*factor2 = product;
	}
	else if(product % 2 == 0){
			*factor1 = product / 2;
			*factor2 = (product / *factor1);
		}
	else{
		long z = product/2;
		do{
			if(product % z == 0)
				break;
			else 
				z = z - 1;
		}while(product % 2 != 0);
		*factor1 = z;
		*factor2 = product / *factor1;
		}
}

int main(){
	long product;
	long factor1;
	long factor2;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
	//printf(""%s \n"", dest);
	int max_lenght1 = 0;
	int max_lenght2 = 0;	
	for(int i = 0; dest[i] != '\0'; i++){
		max_lenght1 +=1;
	}
	for(int i = 0; src[i] != '\0'; i++){
		max_lenght2 +=1;
	}
	if(max_lenght1 < zahl) zahl = max_lenght1;
	
	if(max_lenght2 < zahl) zahl = max_lenght2;
	
	else zahl = zahl;
	for(int i = 0; i <= zahl-1; i++){
		dest[i] = src[i];
	}
	//printf(""%s \n"", dest);
}
void umdrehen( char* str )
{
	int max_lenght = 0;
	for(int i = 0; str[i] != '\0'; i++){
		max_lenght = max_lenght += 1;
	}
	//printf(""%i\n"", max_lenght);
	char tmp[max_lenght+1];
	for(int i = 0; i <= max_lenght; i++){
		tmp[i] = 0;
	}
	for(int i = 0; i <= max_lenght; i++){
		tmp [i] = str[max_lenght-1-i];
	}
	//printf(""%s \n"", tmp);
	for(int i = 0; i < max_lenght; i++){
		str[i] = tmp[i];
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_462,VName_462,"#include <stdio.h>
#include <stdlib.h>
 
void factorize(long ergebnis, long* zahl1, long* zahl2)
{
if(ergebnis == 1 || ergebnis == 0) {
        *zahl2 =ergebnis;
		*zahl1 =1;
        
    } 
	else 
	{
        for(int i = ergebnis/2; i > 0;i--) 
		{
            if(ergebnis%i == 0) 
			{
				*zahl1 = i;
                *zahl2 = ergebnis/i;
                break;
                
            } 
			else 
			{
               continue;
            }
        }
    }
}
 
int main()
{
    long ergebnis;
    long* zahl1;
    long* zahl2;
    zahl1 = (long*) malloc(sizeof(long));
    zahl2 = (long*) malloc(sizeof(long));
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &ergebnis);
    factorize(ergebnis,zahl1,zahl2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"",ergebnis, *zahl1, *zahl2);
 
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_468,VName_468,"#include <stdio.h>

void factorize(long ergebnis, long *zahl1, long *zahl2)
{
    *zahl1 = 1;
    *zahl2 = ergebnis;
	if (ergebnis == 0 || ergebnis == 1) {
	    return;
	} else {
	    for (long i = 2; i < ergebnis; ++i) {
	        if ((float)(ergebnis / i) == (float)ergebnis / (float)i) {
	            *zahl1 = ergebnis/i;
	            *zahl2 = i;
	            return;
	        }
	    }
	}
}

int main(){
	printf(""Please enter an Integer: "");
	long val;
	scanf(""%ld"", &val);
	long fac1, fac2;
	factorize(val, &fac1, &fac2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", val, fac1, fac2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  int strLenSrc = 0;
  for (char* cur = src; (*cur) != '\0'; cur++) strLenSrc++;
  
  int strLenDest = 0;
  for (char* cur = dest; (*cur) != '\0'; cur++) strLenDest++;
  
  if (zahl > strLenSrc) zahl = strLenSrc;
  if (zahl > strLenDest) zahl = strLenDest;
  
  for (int i = 0; i < zahl; ++i) 
      dest[i] = src[i];
  
  if (zahl != 0)
    dest[zahl] = '\0';
}

void umdrehen( char* str )
{
  int strLen = 0;
  for (char* cur = str; (*cur) != '\0'; cur++) strLen++;
  for (int i = 0; i < strLen/2; ++i) {
      char tmp = str[i];
      str[i] = str[strLen-i-1];
      str[strLen-i-1] = tmp;
  }
  if (strLen != 0)
    str[strLen] = '\0';
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_456,VName_456,"#include <stdio.h>

void factorize(long produkt, long *faktor1, long *faktor2)
{
	if(produkt==0 || produkt==1){
        *faktor1=1;
        *faktor2=produkt;
	}
	else {
        int zahl = produkt/2;
        while(produkt % zahl !=0) zahl-=1;
        *faktor1 = zahl;
        *faktor2 = produkt/zahl;
	}
}

int main(){
    long produkt;
    long faktor1;
    long faktor2;
	printf(""Please enter an Integer: "");
	scanf(""%ld"",&produkt);
    factorize (produkt, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",produkt,faktor1,faktor2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  int lenght1 =0;
  int lenght2 =0;
  for (int i =0; dest[i]!='\0'; i++)lenght1 +=1;
  for (int i =0; src[i]!='\0'; i++)lenght2 +=1;
  if (lenght1<zahl) zahl =lenght1;
  if (lenght2<zahl) zahl =lenght2;
  else zahl = zahl;
  for (int i=0; i<=zahl-1 ;i++){
    dest[i] = src[i];
  }
}

void umdrehen( char* str )
{
  int lenght =0;
    for (int i =0; str[i]!='\0'; i++)lenght +=1;
    char tmp[lenght+1];
    for (int i =0; i<=lenght; i++) tmp[i] = str[i];
    for (int i =0;i<=lenght ;i++){
        str[i] = tmp[lenght-1-i];
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_443,VName_443,"#include <stdio.h>

void factorize(long produkt, long *faktor1, long *faktor2)
{
	int j;
	if(produkt == 1){
		*faktor1 = produkt;
		*faktor2 = produkt;
		return 0;
	}
	if(produkt == 0){
		*faktor1 = 1;
		*faktor2 = produkt;
		return 0;
	}
	
	if(produkt % 2 == 0){
		*faktor1 = produkt/2;
		*faktor2 = 2; 
	}
	else{
			for(j = 2; j <= produkt; j++){	
			if((produkt % j) == 0){
				*faktor1 = (produkt/j);
				*faktor2 = j;
				return 0;
			}
		}
	}
			
}

int main(){
	long produkt;
	long faktor1 = 0;
	long faktor2 = 0;
	printf(""Please enter an Integer: "");
	scanf(""%ld"",&produkt);
	factorize(produkt, &faktor1, &faktor2);

	printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktor1, faktor2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>


 
void ersetzen(char* dest, int zahl, char* src)
{  
	if(zahl == 0) return; 
	
	int länge;
	for(int i = 0; dest[i] != '\0'; i++) länge++;
	
	for(int i = 0; i <= zahl && i<länge; i++){
		if(src[i] == '\0') return;
		dest[i] = src[i];
	}
}

void umdrehen( char* str )
{
	int länge;
	for(int i = 0; str[i] != '\0'; i++) länge++;
	
	char copy[länge];
	for(int i = 0; i<=länge; i++){
		copy[i] = str[i];
	}
	for(int i = 0; i<länge; i++){
		str[i] = copy[länge-1-i];
	}
}

int main( int argc, char* argv[] )
{  

  char test[11]= ""0123456789"";
  
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_437,VName_437,"#include <stdio.h>

void factorize(long resultat, long *nummer1, long *nummer2)
{
    long i;
	for(i=2; i< resultat; i++){
	    if(resultat%i==0){
	        *nummer2 = i;
	        *nummer1 = resultat/i;
	        break;
	    }
	    
	}
	if(i == resultat || resultat == 0){
	    *nummer1 = 1;
	    *nummer2 = resultat;
	}
	else if(resultat == 1){
	    *nummer1 = 1;
	    *nummer2 = 1;
	}
}

int main(){
    long resultat;
    long nummer1;
    long nummer2;
	printf(""Please enter an Integer: "");
	scanf(""%ld"",&resultat);
	factorize(resultat, &nummer1, &nummer2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    for(int i= 0; dest[i] != 0; i++){
        if(i < zahl && src[i] != 0){
            dest[i] = src[i];
        }
    }
}

void umdrehen( char* str )
{
    char temp[100] = """";
    int count = 0;
    
    for(int i= 0; str[i] != 0; i++){
       temp[i] = str[i];
       count++;
    }
    for(int i= 0; temp[i] != 0; i++){
       str[i] = temp[count-i-1];
    }
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_453,VName_453,"#include <stdio.h>
#include <stdlib.h>
 
void factorize(long product, long* factor1, long* factor2)
{
if(product == 0) {
        *factor1 = 1;
        *factor2 = product;
    } else if(product == 1) {
        *factor1 = 1;
        *factor2 = product;
    } else {
        for(int i = product/2; i > 0;i--) {
            if(product%i != 0) {
                continue;
            } else {
                *factor1 = i;
                *factor2 = product/i;
                break;
            }
        }
    }
}
 
int main(){
    long product = 0;
    long* factor1;
    long* factor2;
    factor1 = (long*) malloc(sizeof(long));
    factor2 = (long*) malloc(sizeof(long));
 
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &product);
    factorize(product,factor1,factor2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"",product, *factor1, *factor2);
 
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
int getStringLength(char x[]) {
    int i = 0;
    while(x[i] != NULL) {
        i++;
    }
    return i;
}
 
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0; i < zahl && i < getStringLength(src) && i < 10; ++i) {
        dest[i] = src[i];
    }
}
 
void umdrehen( char* str )
{
    int z = getStringLength(str);
    char x[z];
    for (int i = 0; i < z; ++i) {
        x[i] = str[i];
    }
    for (int i = z-1; i >= 0; --i) {
        str[(z-1)-i]=x[i];
    }
 
}
 
int main( int argc, char* argv[] )
{
    char test[11]= ""0123456789"";
    printf( ""Das Original ist: %s \n"", test );
    ersetzen( test , atoi(argv[1]), argv[2] );
    printf( ""Ersetzt : %s \n"", test );
    umdrehen(test);
    printf( ""Rückwärts : %s \n"", test );
}"
Name_438,VName_438,"#include <stdio.h>

void factorize(long produkt, long *faktor1, long *faktor2)
{
	if(produkt == 0){
		*faktor1 = 1;
		*faktor2 = produkt;
	}
	else if(produkt == 1){
		*faktor1 = 1;
		*faktor2 = produkt;
	}
	else{
		long vielfache = produkt/2;
		while(produkt%vielfache != 0){
			vielfache -= 1;
		}
		*faktor1 = vielfache;
		*faktor2 = produkt/vielfache;
	}
}

int main(){
	long produkt, f1, f2;
	long *faktor1 = &f1,*faktor2 = &f2;
	printf(""Please enter an Integer: "");
	scanf(""%li"",&produkt);
	factorize(produkt,faktor1,faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",produkt,*faktor1,*faktor2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_455,VName_455,"#include <stdio.h>

void factorize(long product, long *factor1, long *factor2){
	// Your factorization
	
	long teiler;
	
	if(product == 0 || product == 1){
		*factor1 = 1;
		*factor2 = product;
	}
	
	else {
		
		for(int i = 0; i < product; i++){
			
			 teiler = (product/2) - i;
			 //printf(""%li"",teiler);
			
			if(teiler * (product/teiler) == product){
				i = product;
			}
		}
		
		*factor1 = teiler;
		*factor2 = product/teiler;
		
	}
}

int main(){
	long factor1;
	long* fac1 = &factor1;
	long factor2;
	long* fac2 = &factor2;
	long eingabe = 0;
	printf(""Please enter an Integer: "");
	scanf(""%li"", &eingabe);
	factorize(eingabe, fac1, fac2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, factor1, factor2);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_466,VName_466,"#include <stdio.h>

void factorize(long produkt, long *faktor1, long *faktor2)
{
	// Your factorization printf();
	
	if (produkt == 0 || produkt == 1){
		*faktor1 = 1;
		*faktor2 = produkt;
	}
	else if (produkt%2 == 0){
		*faktor1 = (produkt/2);
		*faktor2 = 2;
	}
	
	else if (produkt%2 != 0){
		for (long i = (produkt/2); i != 0; i--){
			if (produkt%i == 0) {
				*faktor1 = i;
				*faktor2 = (produkt/i);
				break;
			}
		}	
	}
	
}

int main(){
	printf(""Please enter an Integer: "");
	long int zahl;
	scanf(""%li"", &zahl);
	long faktor1 = 0;
	long faktor2 = 0;
	factorize(zahl, &faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", zahl, faktor1, faktor2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
	unsigned int cOriginalD = 0;
	unsigned int cNeuS = 0;
	
	for (int i=0; dest[i] !=0; i++) {
		cOriginalD++ ;
	}
	for (int i=0; src[i] !=0; i++) {
		cNeuS++;
	}
	
	if(zahl <= cOriginalD && zahl <= cNeuS) {
		for (int i=0; i < zahl; i++){
			dest[i] = src[i];
		}
	}
	else if (cOriginalD <= cNeuS && cOriginalD < zahl) {
		for (int i=0; i < cOriginalD; i++){
			dest[i] = src[i];
		}
	}
	else{
		for (int i=0; i <= cNeuS; i++){
			dest[i] = src[i];
		}
	}
}


void umdrehen( char* str )
{
	int counterS = 0;
	
	for (int i=0; str[i] !='\0'; i++) {
		counterS++ ;
	}
	
	// temp array:
	char array[counterS];
	
	// umdrehen: 
	for (int i=0; i < counterS; i++ ){
		array[i] = str[i];
		
		if (i == counterS-1){
			for (int j=0; j < counterS; j++ ){
				str[j] = array[(counterS-1)-j];
			}
		}
		else continue;
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_458,VName_458,"#include <stdio.h>

void factorize(long ergebnis, long *zahl1, long *zahl2)
{
	int x = ergebnis/(*zahl1);
	if (x*(*zahl1)==ergebnis) {
	    int y = ergebnis/x;
	    return ergebnis, x, y;
	}
}

int main(){
	printf(""Please enter an Integer: "");
	int integer;
	int i=0;
	int zahl2=0;
	scanf(""%i"", integer);
	for (i=1; i<10; i++){
	    factorize(integer, i, (int) zahl2);
	}
	printf(""Possible Factors of %ld are %ld and %ld.\n"", integer, i, zahl2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  for (int i=0; src[i]!='\0' || dest[i]!='\0' || i != zahl; i++){
      dest[i] = src[i];
  }
  return dest;
}

void umdrehen( char* str )
{
    int copy[11];
  for (int i=0; str[i]!='\0'; i++){
      copy[i] = str[i];
  }
  for (int k=0; copy[k]!='\0'; k++){
      str[k] = copy[(strlen(copy)-k)];
  }
  return str;
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
 umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_452,VName_452,"#include <stdio.h>

void factorize(long resultat, long *nummer1, long *nummer2)
{
	if (resultat=0){
		*nummer1=1,*nummer2=resultat;}
	if (resultat=1){
		*nummer1=1,*nummer2=resultat;}
	int i=0;
	for (resultat;resultat-1;i++){
	}	// Your factorization
}

int main(){
	long resultat;
	long nummer1=25;
	long nummer2=2;
	printf(""Please enter an Integer: "");
	scanf(""%ld"",&resultat);

	
	printf(""Possible Factors of %ld are %ld and %ld.\n"", resultat, nummer1, nummer2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  for(;;){
  }
  
}

void umdrehen( char* str )
{
  for(;;){
  }
}

int main( int argc, char* argv[] )
{  
  char str[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", str );
  ersetzen( str , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", str );
  umdrehen( str );
  printf( ""Rückwärts : %s \n"", str );
}"
Name_457,VName_457,"#include <stdio.h>

void factorize(long resultat, long *nummer1, long *nummer2)
{
	// Your factorization
}

int main(){
	printf(""Please enter an Integer: "");
	printf(""Possible Factors of %ld are %ld and %ld.\n"");
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_464,VName_464,"#include <stdio.h>

void factorize(long produkt, long *faktor1, long *faktor2)
{
	// Your factorization
	if (produkt == 0 || produkt == 1)
    {
       *faktor1 = 1;
       *faktor2 = produkt;
       return;
    }

   long int halb = produkt / 2;

   while(produkt % halb != 0)
   {
       halb --;
   }

   *faktor1 = halb;
   *faktor2 = produkt / halb;
}

int main(){
	printf(""Please enter an Integer: "");
	// Zahl einlesen
	long  int zahl = 0;
	scanf(""%ld"", &zahl);

	// Define factors
	long int fak1, fak2;

	// call factorization function
	factorize(zahl, &fak1, &fak2);

	printf(""Possible Factors of %ld are %ld and %ld.\n"", zahl, fak1, fak2);
	return 0;

}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
    int i = 0;
    while(dest[i] != 0 && src[i] != 0 && zahl != 0)
    {
       dest[i] = src[i];
       zahl--;
       i++;
    }
}

void umdrehen( char* str )
{
    int len  = 0;
    while(str[len] != 0)
    {
       len++;
    }

    len += 1; // NULL

    char rev[len];
    rev[len-1] = 0; // NULL TERMINATION

    for(int i = 0; i < len-1; i++)
    {
       rev[i] = str[len-1-1-i];
    }
    for(int i = 0; i < len; i ++)
    {
        str[i] = rev[i];
    }
}

int main( int argc, char* argv[] )
{
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_459,VName_459,"#include <stdio.h>

void factorize(long product, long *factor1, long *factor2)
{

    if (product==0)
    {
        *factor1=1;
        *factor2= product;
    }
else if (product==1)
{
    *factor1=1;
    *factor2= product;
}
else
{

if (product%2==0)
{
    *factor1= product/2;
    *factor2= (product/(product/2));
}
else {

        int t=2;
        int p = product;
        do {t = (p/2)-1;
        p=t;}
while (product%t ==1);

    *factor1= t;
    *factor2= product/t;


}


}

}

int main(){
	long product;
	long factor1;
	long factor2;
	long factor[2];
	printf(""Please enter an Integer:"");
	scanf(""%ld"",&product);
    factorize (product,&factor1,&factor2);
	printf("" Possible Factors of %ld are %ld and %ld.\n"",product,factor1,factor2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <string>
 
void ersetzen(char* dest, int zahl, char* src)
{  
 strncopy(dest, src, zahl);
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_448,VName_448,"#include <stdio.h>

void factorize(long resultat, long *nummer1, long *nummer2)
{
	// Your factorization
}

int main(){
	printf(""Please enter an Integer: "");
	printf(""Possible Factors of %ld are %ld and %ld.\n"");
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_461,VName_461,"#include <stdio.h>

void factorize(long product, long *factor1, long *factor2)
{
    int auxiliar=product/2;
    if(product==1)
    {
        *factor1=1;
        *factor2=1;
        return ;
    }
    if (product==0)
    {
        *factor1=1;
        *factor2=product/ *factor1;
        return;
    }
    if(product%2==0)
    {
        *factor1=2;
        *factor2=product/ *factor1;
    }
    else
    {
        *factor1=2;
        while(product% *factor1!=0)
        {
            auxiliar=(auxiliar-1);
            *factor2=auxiliar;
            *factor1=product/ *factor2;
        }
    }

}

int main()
{
    long num, fac1=1, fac2=1;
    printf(""Please enter an Integer: "");
    scanf(""%d"",&num);
    factorize(num, &fac1, &fac2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", num, fac2, fac1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
    int i = 0;
    while(dest[i]!= NULL && src[i]!= NULL && i<zahl){
    	dest[i]= src[i];
    	i++;
	}
}

void umdrehen( char* str )
{
	char Sa[100];
	int j = 0;
	while(str[j] != NULL){
		Sa[j]=' ';
		j++;
	}
	ersetzen(Sa, j, str);
	for(int k = 0;k < j; k++){
		str[k]=Sa[j-k-1];
	}
}

int main( int argc, char* argv[] )
{
    char test[11]= ""0123456789"";
    printf( ""Das Original ist: %s \n"", test );
    ersetzen( test, atoi(argv[1]), argv[2] );
    printf( ""Ersetzt : %s \n"", test );
    umdrehen( test );
    printf( ""Rückwärts : %s \n"", test );
}"
Name_446,VName_446,"#include <stdio.h>

void factorize(long result, long *number1, long *number2){
	if(result == 0){
	    *number1 = 1;
	    *number2 = 0;
	}
	
	if(result == 1){
        *number1 = 1;
        *number2 = 1;
    }
	
	for(int i = 2; *number1 * *number2 != result; i++){
	    *number2 = i;
	    *number1 = result/(*number2);
	}

}

int main(){
	long result = 0;
	long number1 = 0;
	long number2 = 0;
	printf(""Please enter an Integer: "");
	scanf(""%ld"",&result);
	factorize(result, &number1, &number2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", result, number1, number2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src){  
    for (int i = 0; i <=zahl && dest[i] != '\0'; i++){
        dest[i] = src[i];
    }
}

void umdrehen( char* str ){
    int c = 0;
    for(int i = 1; str[i] != '\0'; i++){
        c = i;
    }
    char tmp[c];
    for(int i = 0; str[i] != '\0'; i++){
        tmp[i] = str[c-i];
    }
    for(int i = 0; str[i] != '\0'; i++){
        str[i]=tmp[i];
    }
}

int main( int argc, char* argv[] ){  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_444,VName_444,"#include <stdio.h>

void factorize(long produkt, long *faktor1, long *faktor2)
{
    if(produkt == 1 || produkt == 0){
        *faktor1 = 1;
        *faktor2 = produkt;
    }
    else{
        int i = 2;
        while (produkt % i != 0) {
            i++;
        }
        *faktor2 = i;
        *faktor1 = produkt / i;
        }
}

int main(){
    long produkt = 0;
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &produkt);
    long faktor1 = 0;
    long faktor2 = 0;
    factorize(produkt, &faktor1, &faktor2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktor1, faktor2);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_463,VName_463,"#include <stdio.h>

void factorize(long product, long *factor1, long *factor2)
{
	if (product == 0) {
		*factor1 = 1;
		*factor2 = product;
		return;
	}
	if (product == 1) {
		*factor1 = 1;  
		*factor2 = product;
		return;
	}
	for (long i = 2; i < product/2; ++i) {
		if (product % i == 0) {
			*factor2 = i;
			*factor1 = product/i;
			return;	
		}
	}

	// primzahl
	*factor1 = 1;
	*factor2 = product;
}

int main(){
	printf(""Please enter an Integer: "");
	long product;
	long factor1;
	long factor2;
	scanf (""%ld"", &product);
	factorize (product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_473,VName_473,"#include <stdio.h>

void factorize(long product, long *factor1, long *factor2)
{ 
     if(product == 0 || product == 1){
        *factor1 = 1;
	*factor2 = product;
     }
     else{
     
       long haelfte = product/2;
       
       while(1){
       
       if(product % haelfte == 0){
         break; 
       }
       else{
       haelfte = haelfte - 1;
       }
     }
       *factor1 = haelfte;
       *factor2 = product/haelfte; 
   }
     
	
}

int main(){
	printf(""Please enter an Integer: "");
	long product, factor1, factor2;
	scanf(""%ld"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product,factor1,factor2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  int size_source = 0;
  for(int i = 0; src[i] != '\0'; i++){
   size_source = size_source + 1;
   }
   
  int size_dest = 0;
  for(int i = 0; dest[i] != '\0'; i++){
   size_dest = size_dest + 1;
   } 
   
  int minimum = zahl;
  if(size_source <= minimum){
  minimum = size_source;
  } 
  
  if(size_dest <= minimum){
  minimum = size_dest;
  } 
  
  for(int i = 0; i<minimum; i++){
   dest[i] = src[i];
  }
}

void umdrehen( char* str )
{
  int size = 0;
  for(int i = 0; str[i] != '\0'; i++){
   size = size + 1;
   }
  for(int i = 0; i<size/2; i++){
  
   char c = str[i];
   str[i] = str[size - 1 - i];
   str[size - 1 -i] = c;
  } 
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_465,VName_465,"#include <stdio.h>

void factorize(long product, long *factor1, long *factor2)
{
		if(product == 0 || product == 1){
		*factor1 = 1;
		*factor2 = product;
		return 1;
	}
	long i = product/2;
	while(product%i != 0){
		i -= 1;
	}
	*factor1 = i;
	*factor2 = product/i;
}

int main(){
	long product = 0;
	long factor1 = 0;
	long factor2 = 0;
	printf(""Please enter an Integer: "");
	scanf(""%i"", &product);
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	int counter_src = 0;
	int counter_dest = 0;
	for(int i=0; src[i]!='\0'; i++){
		counter_src++;
	}
	for(int i=0; dest[i]!='\0'; i++){
		counter_dest++;
	}
	
	int max_zeichen = 0;
	if(zahl <= counter_dest && zahl <= counter_src)
		max_zeichen = zahl;
	if(counter_src <= counter_dest && counter_src <= zahl)
		max_zeichen = counter_src;
	 if(counter_dest <= counter_src && counter_dest <= zahl)
	 	max_zeichen = counter_dest;
	
	for(int i=0; i<max_zeichen; i++){
		dest[i] = src[i];
	}
}

void umdrehen( char* str )
{
	int counter = 0;
	for(int i=0; str[i]!='\0'; i++){
		counter++;
	}
	
	int zaehler = 0;
	char tmp[counter+1];		//'\0' am Ende berücksichtigen
	for(int i=counter; i>=0; i--){
		tmp[i] = str[zaehler];
		zaehler++;
	}
	
	for(int i=0; i<=counter; i++){
		str[i] = tmp[i];
	}
}

void umdrehen( char* str )
{
	int counter = 0;
	for(int i=0; str[i]!='\0'; i++){
		counter++;
	}
	
	int zaehler = 0;
	char tmp[counter+1];		//'\0' am Ende berücksichtigen
	for(int i=counter; i>=0; i--){
		tmp[i] = str[zaehler];
		zaehler++;
	}
	
	for(int i=0; i<=counter; i++){
		str[i] = tmp[i];
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_467,VName_467,"#include <stdio.h>

void factorize(long product, long *factor1, long *factor2)
{
	// Your factorization
        if (product == 0) {
          *factor1 = 1;
          *factor2 = 0;
        } else if (product == 1) {
          *factor1 = 1;
          *factor2 = 1;
        } else {
          long i = 2;
          while (1) {
             if (product %i == 0) {
                *factor1 = product / i;
                *factor2 = i;
                break;
             }
             i++;
         }
    }
}

int main(){
        long product, factor1, factor2;
	printf(""Please enter an Integer: "");
        scanf(""%ld"", &product);
        factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_469,VName_469,"#include <stdio.h>

void factorize(long ergebnis, long *zahl1, long *zahl2)
{
	// Your factorization
}

int main(){
	printf(""Please enter an Integer: "");
	printf(""Possible Factors of %ld are %ld and %ld.\n"");
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_470,VName_470,"#include <stdio.h>

void factorize(long product, long *factor1, long *factor2) {
  *factor1 = product;
  *factor2 = 1;
  if (*factor1 > 1) {
    ++*factor2;
    while (*factor1 % *factor2) {
      ++*factor2;
    }
    *factor1 /= *factor2;
  } else if (*factor1 == 0) {
    long temp = *factor1;
    *factor1 = *factor2;
    *factor2 = temp;
  }
}

int main() {
  printf(""Please enter an Integer: "");
  long input = 0L;
  scanf(""%ld"", &input);
  long f1 = 0L, f2 = 0L;
  factorize(input, &f1, &f2);
  printf(""Possible Factors of %ld are %ld and %ld.\n"", input, f1, f2);
  return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    int idx = 0, size = 0;
    char *temp = dest;
    while (*temp) { // size of string
        ++temp;
        ++size;
    }
    while (idx < size && idx < zahl) {
        dest[idx] = src[idx];
        ++idx;
    }
}

void umdrehen( char* str )
{
    char *temp = str;
    while (*temp) { // find end of string
        ++temp;
    }
    --temp;
    while (str < temp) {
        char c = *temp; // inline swap
        *temp = *str;
        *str = c;
        --temp;
        ++str;
    }
}

int main( int argc, char* argv[] )
{  
    char test[11]= ""0123456789"";
    printf( ""Das Original ist: %s \n"", test );
    ersetzen( test , atoi(argv[1]), argv[2] );
    printf( ""Ersetzt : %s \n"", test );
    umdrehen( test );
    printf( ""Rückwärts : %s \n"", test );
}"
Name_472,VName_472,"#include <stdio.h>

void factorize(long product, long *factor1, long *factor2)
{
	// Your factorization
}

int main(){
	printf(""Please enter an Integer: "");
	printf(""Possible Factors of %ld are %ld and %ld.\n"");
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_474,VName_474,"#include <stdio.h>

void factorize(long produkt, long *faktor1, long *faktor2)
{
	if(produkt == 0 || produkt == 1)
	{
		*faktor1 = 1; *faktor2 = produkt;
	}
	else
	{
		long teiler = produkt/2;
		for(teiler; produkt % teiler != 0;)
		{
			teiler--;
		}
		
		*faktor1 = teiler;
		*faktor2 = produkt/teiler;
	}
}

int main(){
	long produkt;
	
	long faktorEins;
	long faktorZwei;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &produkt);
	factorize(produkt, &faktorEins, &faktorZwei);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktorEins, faktorZwei);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	for(int i = 0; i < zahl; i++)
	{
		if(*dest != 0 && *src != 0)
		{
			*dest = *src;
			dest++;
			src++;
		}
		else
		{
			i = zahl;
		}
	}
}

void umdrehen( char* str )
{
	int lencnt = 0;
	char* lenpt = str;
	char* orgpt = str;
	
	for(;*lenpt != 0;  lenpt++)
	{
		lencnt++;
	}
	char auxString[lencnt + 1];
	lenpt = auxString;
	lenpt += lencnt;
	*lenpt = 0;
	lenpt--;
	
	for(int i = lencnt; i >= 0; i--)
	{
		*lenpt = *orgpt;
		lenpt--;
		orgpt++;
	}
	
	orgpt = str;
	lenpt = auxString;
	for(int i = lencnt; i > 0; i--)
	{
		*orgpt = *lenpt;
		lenpt++;
		orgpt++;
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Name_471,VName_471,"#include <stdio.h>

void factorize(long product, long *factor1, long *factor2)
{
	unsigned long div = product/2;
	
	if(product ==0 || product ==1){
	    *factor1 = 1;
	    *factor2 = product;
	    return;
	}
	
	
	while((product%div)!=0)
	div--;
	*factor1 = div;
	*factor2 = product/div;
	return;
}

int main(){
    long product =0, factor1=0, factor2=0;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &product);
	getchar();
	factorize(product, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    for (int i=0; i < zahl; i++)
    {
        if (dest[i] == '\0' || src[i] == '\0') break;
        dest[i] =src[i];
    }
  
}

void umdrehen( char* str )
{
    char tmp=0;
    int strlen= 0;
    for( ; str[strlen] !='\0'; strlen++ );
    for( int i= 0; i< strlen /2; i++)
    {
        tmp= str[i];
        str[i] = str[strlen-i-1];
        str[strlen-i-1] - tmp;
    }
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
