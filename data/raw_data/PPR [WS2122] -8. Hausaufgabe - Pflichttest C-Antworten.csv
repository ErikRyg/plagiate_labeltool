Nachname,Vorname,E-Mail-Adresse,Status,"Begonnen am",Beendet,"Verbrauchte Zeit","Bewertung/15,00","Antwort 1","Antwort 2","Antwort 3","Antwort 4","Antwort 5","Antwort 6","Antwort 7","Antwort 8","Antwort 9"
Junge,Theodor,t.junge@campus.tu-berlin.de,Beendet,"10. Dezember 2021  10:09","10. Dezember 2021  15:13","5 Stunden 3 Minuten","14,00","Der '*' Operator wird bei Pointer und Variablen für das Dereferenzieren verwendet

; Mit dem '*' Operator kann man auf den Inhalt von Adressen, die in Pointern gespeichert sind, zugreifen

; Mit dem '&' Operator kann man auf Adressen von Pointern und Variablen zugreifen

; Der '*' Operator wird bei Pointer und Variablen für das Referenzieren verwendet",Nein,"0, 1","pointer = &zahl;
pp = &pointer;
**pp = 42;","{3} {11} {26} {51} {208} {212} {216}","[[""16"",""undef"",""undef"",""undef"",""undef"",""undef"",""undef""],[""17"",""%"",""%"",""%"",""100"",""%"",""%""],[""18"",""%"",""%"",""%"",""%"",""10"",""%""],[""4(19)"",""1024"",""1028"",""%"",""%"",""%"",""%""],[""5(19)"",""%"",""%"",""%"",""%"",""%"",""%""],[""6(19)"",""%"",""%"",""%"",""%"",""%"",""%""],[""7(19)"",""%"",""%"",""100"",""%"",""%"",""%""],[""8(19)"",""%"",""%"",""%"",""10"",""%"",""%""],[""9(19)"",""%"",""%"",""%"",""%"",""100"",""%""],[""10(19)"",""%"",""%"",""%"",""%"",""%"",""%""],[""13(19)"",""%"",""%"",""%"",""%"",""%"",""%""],[""19"",""%"",""%"",""%"",""%"",""%"",""1""],[""20"",""%"",""%"",""%"",""%"",""%"",""%""],[""21"",""%"",""%"",""%"",""%"",""%"",""%""],[""22"",""%"",""%"",""%"",""%"",""%"",""%""],[""23"",""%"",""%"",""%"",""%"",""%"",""%""],[""24"",""%"",""%"",""%"",""%"",""%"",""%""],[""28"",""%"",""%"",""%"",""%"",""%"",""%""],[""29"",""%"",""%"",""%"",""%"",""%"",""%""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
   int* p_paeckchenGewicht = paeckchenGewicht;
   int j = 0;
   for (int i = 0; i<5; i++){
      if (artikelGewicht[i]<=10){
         int summe = artikelGewicht[i];
         while(summe <= 10){
            i+=1;
            if (summe + artikelGewicht[i] <= 10)
               summe += artikelGewicht[i];
            else{
               i-=1;
               break;}
         }
         p_paeckchenGewicht[j]=summe;
      }
      else
         p_paeckchenGewicht[j]=artikelGewicht[i];
      j += 1;
   }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
   int j = 1;
   double gesamtsumme = 0;
   for (int i=0; i < 5; i++){
      float euro = 3;
      if (paeckchenGewicht[i]>10)
         euro = 3+(paeckchenGewicht[i]-10)*0.45;
      if (paeckchenGewicht[i]!=0){
         printf(""Gewicht des %i. Paeckchens: %i Kilo \nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro \n\n"", j, paeckchenGewicht[i], j, euro);
         j += 1;
         gesamtsumme += euro;}
   }
   return(gesamtsumme);
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""Die Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    if (*p_char < 0x7b && *p_char >= 0x61){
    	if (shift > 5){
    			*p_char -=26;
				*p_char += shift;
				if (*p_char < 0x61)
					*p_char += 26;}
		else{
			*p_char += shift;
			if (*p_char >= 0x7b)
				*p_char -= 26;
			if (*p_char < 0x61)
				*p_char += 26;}
		}
	if (*p_char < 0x5b && *p_char >= 0x41){
		*p_char += shift;
		if (*p_char >= 0x5b)
			*p_char -= 26;
		if (*p_char < 0x41)
			*p_char += 26;
		}
	return;
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for (int i=0; i<maxlength; i++){
		char* p_char = &str[i];
		shiftChar(p_char, shift);
	}
	return;
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Swiontek,Chantal,c.swiontek@campus.tu-berlin.de,Beendet,"12. Dezember 2021  18:17","19. Dezember 2021  16:00","6 Tage 21 Stunden","7,60","0, 1",-,Nein,"0, 1","{3} {11} {26} {51} {208} {212} {216}","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"","""","""","""",""100"","""",""""],[""18"","""","""","""","""",""10"",""""],[""4(19)"",""1024"",""1028"","""","""","""",""""],[""5(19)"","""","""","""","""","""",""0""],[""6(19)"","""","""","""","""","""",""""],[""19"","""","""","""","""","""",""""],[""20"","""","""","""","""","""",""""],[""21"","""","""","""","""","""",""""],[""22"","""","""","""","""","""",""""],[""13(19)"","""","""","""","""","""",""""],["""","""","""","""","""","""",""""],["""","""","""","""","""","""",""""],["""","""","""","""","""","""",""""],["""","""","""","""","""","""",""""],["""","""","""","""","""","""",""""],["""","""","""","""","""","""",""""],["""","""","""","""","""","""",""""],["""","""","""","""","""","""",""""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Smith,"Alexander Mechielsen",a.smith@campus.tu-berlin.de,Beendet,"12. Dezember 2021  21:32","19. Dezember 2021  22:40","7 Tage 1 Stunde","14,50","pointer = &zahl;
pp = &pointer;
**pp = 42;",Nein,"0, 1","1, 0","{3} {11} {26} {51} {208} {212} {216}","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"","""","""","""",""100"","""",""""],[""18"","""","""","""","""",""10"",""""],[""4(19)"",""1024"",""1028"","""","""","""",""undef""],[""6(19)"","""","""","""","""","""",""""],[""7(19)"","""","""",""100"","""","""",""""],[""8(19)"","""","""","""",""10"","""",""""],[""9(19)"","""","""","""","""",""100"",""""],[""10(19)"","""","""","""","""","""",""""],[""11(19)"","""","""",""-"","""","""",""""],[""13(19)"",""-"",""-"","""","""","""",""""],[""19"","""","""","""","""","""",""1""],[""20"","""","""","""","""","""",""""],[""21"","""","""","""","""","""",""""],[""22"","""","""","""","""","""",""""],[""23"","""","""","""","""","""",""""],[""24"","""","""","""","""","""",""""],[""28"","""","""","""","""","""",""""],[""29"","""","""","""",""-"",""-"",""-""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int y = 0;
    for (int x = 0; x < 5; x++) {
        if (artikelGewicht[x] + artikelGewicht[x + 1] >= 10) {
            paeckchenGewicht[y] = artikelGewicht[x];
            y++;
        }
        else artikelGewicht[x+1] = artikelGewicht[x] + artikelGewicht[x+1];
    }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double costOfPackage[5];
    int packagenumber = 1;
    for (int x = 0; x < 5; x++) {
        if (paeckchenGewicht[x] <= 10 && paeckchenGewicht > 0) {
            costOfPackage[x] = 3.00;
            printf (""Gewicht des %d. Paeckchens: %d Kilo\nDie Versandkosten ihres %d. Paeckchens betragen: 3.00 Euro\n\n"", packagenumber, paeckchenGewicht[x], packagenumber);
            packagenumber++;
        }
        else {
            costOfPackage[x] = (paeckchenGewicht[x] - 10);
            costOfPackage[x] = (costOfPackage[x] * 45 / 100) + 3;
            printf (""Gewicht des %d. Paeckchens: %d Kilo\nDie Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n\n"", packagenumber, paeckchenGewicht[x], packagenumber, costOfPackage[x]);
            packagenumber++;
        }
    }
    double totalCost = costOfPackage[0] + costOfPackage[1] + costOfPackage[2] + costOfPackage[3] + costOfPackage[4];
    return totalCost;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{


    if (*p_char >= 'a' && *p_char <= 'z')
    {
        *p_char = 'a' + ((*p_char - 'a' + shift) + 26) % 26;
    }
    else if (*p_char >= 'A' && *p_char <= 'Z')
    {
        *p_char = 'A' + ((*p_char - 'A' + shift) + 26) % 26;
    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    for (int x = 0; x < maxlength; x++) {
        shiftChar(str+x, shift);
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Gülser,Bahar,b.guelser@campus.tu-berlin.de,Beendet,"13. Dezember 2021  00:03","19. Dezember 2021  23:59","6 Tage 23 Stunden","12,43","Der '&' Operator wird bei Pointer und Variablen für das Referenzieren verwendet

; Mit dem '&' Operator kann man auf Adressen von Pointern und Variablen zugreifen

; Der '*' Operator wird bei Pointer und Variablen für das Dereferenzieren verwendet

; Mit dem '*' Operator kann man auf den Inhalt von Adressen, die in Pointern gespeichert sind, zugreifen","1, 0","pointer = &zahl;
pp = &pointer;
**pp = 42;","0, 1","Es gibt untypisierte Pointer.; Man kann untypisierte Pointer inkrementieren, aber auch dekrementieren.; Man kann untypisierte Pointer nicht dereferenzieren.","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"",""-"",""-"",""-"",""100"",""-"",""-""],[""18"",""-"",""-"",""-"","""",""10"",""-""],[""6(19)"",""undef"",""undef"",""-"",""p_n1"",""p_n2"",""-""],[""7(19)"","""","""",""*p_n1"","""","""",""-""],[""8(19)"",""*p_n2"","""","""","""","""",""-""],[""9(19)"","""",""tmp"","""","""","""",""-""],[""10(19)"","""","""","""","""","""",""1""],[""11(19)"","""","""","""","""","""",""""],[""12(19)"","""","""","""","""","""",""2""],[""13(19)"","""","""","""","""","""",""""],[""21"",""100"",""10"",""10"",""10"",""100"",""2""],[""22"","""","""","""","""","""",""""],[""23"","""","""","""","""","""",""""],[""24"","""","""","""","""","""",""""],[""25"","""","""","""","""","""",""""],[""26"","""","""","""","""","""",""""],[""27"","""","""","""","""","""",""""],[""28"","""","""","""","""","""",""""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int *p1,*p2;
    p1 = &ersteZahl; p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
int packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{       int i =0;
		for( int i=0; i<5; ++i){
		  paeckchenGewicht[i] = artikelGewicht[i];
		}
		return paeckchenGewicht[i];
}

    double berechnePaketKosten( int paeckchenGewicht[] )
{
	
    double summe = 0;
    int i;
    double Preis = 0;
    for(i=0;i<5;++i){
        
        if(paeckchenGewicht[i] <= 10) Preis = 3.0;
        
        if (paeckchenGewicht[i] > 10){
            Preis = (paeckchenGewicht[i] - 10.0);
             
            Preis = Preis * 0.45;
            Preis = Preis + 3.0;
        }
        summe+=Preis;
        int index = i+1; 
	printf(""Gewicht des %d. Paeckchens: %d Kilo\nDie Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n\n"",index,paeckchenGewicht[i],index,Preis);
        
    }
    
	 return summe;
	}
        	
       
	
	



int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);

}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
 char shiftChar(char p_char, int shift)
{
    
	int s = p_char;
	if (65 <= p_char && p_char <= 90 ){
		
		s = p_char + shift;
		if (s > 'Z') s -= 26;
		if( s < 'A') s += 26;
	}
	else if ( 97 <= p_char && p_char <= 122){
		s = p_char + shift;
		if(s >'z') s -= 26;
		if(s < 'a') s += 26;
	}

		return s;
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for (int i =0; str[i] != '\0'; ++i){
		str[i] = shiftChar(str[i], shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
	char b;
	if(shiftChar(b,2)){printf(""d"");}
}"
Yeboah,"Andrea Kumih",a.yeboah@campus.tu-berlin.de,Beendet,"13. Dezember 2021  00:14","19. Dezember 2021  23:59","6 Tage 23 Stunden","7,55","Mit dem '&' Operator kann man auf Adressen von Pointern und Variablen zugreifen

; Der '&' Operator wird bei Pointer und Variablen für das Referenzieren verwendet

; Der '*' Operator wird bei Pointer und Variablen für das Dereferenzieren verwendet

; Mit dem '*' Operator kann man auf den Inhalt von Adressen, die in Pointern gespeichert sind, zugreifen","pp = &zahl;
pointer = &pp;
*pointer = 42;","1, 0",Nein,"{3} {11} {26} {51} {208} {212} {216}","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"","""","""","""",""100"","""",""""],[""18"","""","""","""","""",""10"",""""],[""4(19)"",""1024"",""1028"","""","""","""",""""],[""5(19)"","""","""","""","""","""",""""],[""6(19)"","""","""","""","""","""",""""],[""7(19)"","""","""",""1024"","""","""",""""],[""8(19)"",""1028"","""","""","""","""",""""],[""9(19)"","""",""1024"","""","""","""",""""],[""10(19)"","""","""","""","""","""",""""],[""13(19)"",""-"",""-"",""-"","""","""",""""],[""19"","""","""","""","""","""",""undef""],[""20"","""","""","""","""","""",""""],[""21"","""","""","""","""","""",""""],[""22"","""","""","""","""","""",""""],[""23"","""","""","""","""","""",""""],[""25"","""","""","""","""","""",""""],[""26"","""","""","""","""","""",""""],[""29"","""","""","""",""-"",""-"",""-""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int *p1 = &ersteZahl;
    int *p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Vu,"Phuong Anh",phuong-anh.vu@campus.tu-berlin.de,Beendet,"13. Dezember 2021  00:17","19. Dezember 2021  23:59","6 Tage 23 Stunden","14,50","0, 1","Der '&' Operator wird bei Pointer und Variablen für das Referenzieren verwendet

; Mit dem '*' Operator kann man auf den Inhalt von Adressen, die in Pointern gespeichert sind, zugreifen

; Mit dem '&' Operator kann man auf Adressen von Pointern und Variablen zugreifen

; Der '*' Operator wird bei Pointer und Variablen für das Dereferenzieren verwendet",Vielleicht,"pointer = &zahl;
pp = &pointer;
**pp = 42;","Man kann untypisierte Pointer nicht dereferenzieren.; Es gibt untypisierte Pointer.; Man kann untypisierte Pointer weder inkrementieren noch dekrementieren.","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"","""","""","""",""100"","""",""""],[""18"","""","""","""","""",""10"",""""],[""4(19)"",""1024"",""1028"","""","""","""",""""],[""5(19)"","""","""","""","""","""",""""],[""6(19)"","""","""","""","""","""",""""],[""7(19)"","""","""",""100"","""","""",""""],[""8(19)"","""","""","""",""10"","""",""""],[""9(19)"","""","""","""","""",""100"",""""],[""10(19)"","""","""","""","""","""",""""],[""13(19)"",""-"",""-"",""-"","""","""",""""],[""19"","""","""","""","""","""",""1""],[""20"","""","""","""","""","""",""""],[""21"","""","""","""","""","""",""""],[""22"","""","""","""","""","""",""""],[""23"","""","""","""","""","""",""""],[""24"","""","""","""","""","""",""""],[""28"","""","""","""","""","""",""""],[""29"","""","""","""",""-"",""-"",""-""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int *p1 = &ersteZahl;
    int *p2 = &zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int sum = 0;
	int paeckchen = 0;
	for (int i = 0; i<5; i++){
		if(sum == 0){
			sum = artikelGewicht[i];
		}
  		else if (sum+artikelGewicht[i] > 10){
    		paeckchen += 1;
    		sum = artikelGewicht[i];
   		}
  		else{
  			sum += artikelGewicht[i];
  		}
  	paeckchenGewicht[paeckchen] = sum;
  	}	

}

double berechnePaketKosten( int paeckchenGewicht[] )
{

    double price = 0;
	double paeckchenprice;
	for(int i = 0; i < 5; i++){
		if (paeckchenGewicht[i] <= 10){
			paeckchenprice = 3.0;
		}
		else{
			paeckchenprice = 3.0 + (paeckchenGewicht[i] - 10)*0.45;
		}
		price += paeckchenprice;
		printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i+1, paeckchenGewicht[i]);
		printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2lf Euro\n"", i+1, paeckchenprice);
	}
	return price;

}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	if('a' <= *p_char && *p_char <= 'z'){
		*p_char = 'a' + (*p_char+shift - 'a'+ 26)%26;
	}
    if('A' <= *p_char && *p_char <= 'Z'){
		*p_char = 'A' + (*p_char+shift - 'A'+ 26)%26;
	}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(int i = 0; i < maxlength; i++){
      shiftChar(&str[i], shift);
     }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
"Von Dobschütz","Henriette Marie",h.von-dobschuetz@campus.tu-berlin.de,Beendet,"13. Dezember 2021  11:01","19. Dezember 2021  23:59","6 Tage 12 Stunden","13,57",Vielleicht,"Mit dem '&' Operator kann man auf Adressen von Pointern und Variablen zugreifen

; Mit dem '*' Operator kann man auf den Inhalt von Adressen, die in Pointern gespeichert sind, zugreifen","pointer = &zahl;
pp = &pointer;
**pp = 42;","1, 0","{25} {11} {216} {51} {208} {212} {208}","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"","""","""","""",""100"","""",""""],[""18"","""","""","""","""",""10"",""""],[""4(19)"",""1024"",""1028"","""","""","""",""""],[""6(19)"","""","""","""","""","""",""""],[""7(19)"","""","""",""100"","""","""",""""],[""8(19)"","""","""","""",""10"","""",""""],[""9(19)"","""","""","""","""",""100"",""""],[""10(19)"","""","""","""","""","""",""""],[""11(19)"","""","""","""","""","""",""""],[""13(19)"",""-"",""-"","""","""","""",""""],[""19"","""","""","""","""","""",""1""],[""20"","""","""","""","""","""",""""],[""21"","""","""","""","""","""",""""],[""22"","""","""","""","""","""",""""],[""23"","""","""","""","""","""",""""],[""24"","""","""","""","""","""",""""],[""28"","""","""","""","""","""",""""],[""29"","""","""","""",""-"",""-"",""-""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
int max= 10;
int j=0;
int* p = &j;
for (int i=0; i<5; i++){
if(j<5){
	paeckchenGewicht[i]=artikelGewicht[j];
	*p+=1; 
if (j<5){
 while( paeckchenGewicht[i]+artikelGewicht[j]<=max){
 paeckchenGewicht[i]+=artikelGewicht[j];
  j++; 
  }
 }
 }
else paeckchenGewicht[i]=0;
}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
double summe=0;
unsigned int uebergewicht=0;
double einzelkosten[5]= {0,0,0,0,0};

for (int k=0; k<5; k++){
if (paeckchenGewicht[k]!=0) summe += 3;
einzelkosten[k]+=3;
if (paeckchenGewicht[k]>10){
 uebergewicht = (10-paeckchenGewicht[k])*(-1);
}
else 
 {uebergewicht=0;
	}
summe+= 0.45*uebergewicht;
einzelkosten[k]+= 0.45*uebergewicht;

}

for(unsigned int n=0; n<5;n++){
printf(""\nGewicht des %i. Paeckchens: %i Kilo\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", n+1, paeckchenGewicht[n], n+1, einzelkosten[n]);
}


return summe;
}


int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
if (64<*p_char&& *p_char<91){
   *p_char+=shift;
  if (*p_char>90) *p_char-=26;
  else if(*p_char<65) *p_char+=26;
 }
else if (96<*p_char&&*p_char<123){
  *p_char+=shift;
  if (*p_char>122||*p_char<21) *p_char-=26;
	else if (*p_char>22&&*p_char<97) *p_char+=26;
 }

}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
  for( int i=0; i<maxlength; i++){
	shiftChar(&str[i], shift);
  }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);

	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Yilmaz,Cem,cem.yilmaz.1@campus.tu-berlin.de,Beendet,"13. Dezember 2021  16:28","19. Dezember 2021  23:59","6 Tage 7 Stunden","7,38","pp = &zahl;
pointer = &pp;
**pointer = 42;",Nein,"0, 1","1, 0","Es gibt keine untypisierten Pointer.","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"","""","""",""%"",""100"",""%"",""%""],[""18"",""%"",""%"",""%"",""%"",""10"",""%""],[""4(19)"",""1024"",""1028"",""%"",""%"",""%"",""undef""],[""6(19)"",""%"",""%"",""%"",""%"",""%"",""%""],[""7(19)"",""%"",""%"",""100"",""%"",""%"",""%""],[""8(19)"",""%"",""%"",""%"",""%"",""100"",""%""],[""9(19)"",""%"",""%"",""%"",""%"",""%"",""%""],[""10(19)"",""%"",""%"",""1"",""1"",""1"",""%""],[""11(19)"",""%"",""%"",""%"",""%"",""%"",""%""],[""13(19)"",""%"",""%"",""%"",""%"",""%"",""%""],[""19"",""%"",""%"",""%"",""%"",""%"",""100,10""],[""20"",""%"",""%"",""%"",""%"",""%"",""%""],[""21"",""%"",""%"",""%"",""%"",""%"",""%""],[""22"",""%"",""%"",""%"",""%"",""%"",""%""],[""23"",""%"",""%"",""%"",""%"",""%"",""%""],[""24"",""%"",""%"",""%"",""%"",""%"",""%""],[""28"",""%"",""%"",""%"",""%"",""%"",""%""],[""29"",""%"",""%"",""%"",""%"",""%"",""%""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int* p1;
    p1=&ersteZahl;

    int zweiteZahl = 0;
    int* p2;
    p2= &zweiteZahl;



    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Jenik,Isabell,i.jenik@campus.tu-berlin.de,Beendet,"13. Dezember 2021  23:35","19. Dezember 2021  23:30","5 Tage 23 Stunden","8,72",Nein,"pointer = &zahl;
pp = &pointer;
**pp = 42;","0, 1","1, 0","Es gibt untypisierte Pointer.; Man kann untypisierte Pointer weder inkrementieren noch dekrementieren.; Man kann untypisierte Pointer nicht dereferenzieren.","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"","""","""","""",""100"","""",""""],[""18"","""","""","""","""",""10"",""""],[""4(19)"",""100"",""10"","""","""","""",""""],[""5(19)"","""","""","""","""","""",""""],[""6(19)"","""","""","""","""","""",""""],[""7(19)"","""","""",""100"","""","""",""""],[""8(19)"",""10"","""","""","""","""",""""],[""9(19)"","""",""100"","""","""","""",""""],[""10(19)"","""","""","""","""","""",""1""],[""13(19)"","""","""",""-"","""","""",""""],[""19"","""","""","""",""10"",""100"",""""],[""20"","""","""","""","""","""",""""],[""21"","""","""","""","""","""",""""],[""22"","""","""","""","""","""",""""],[""23"","""","""","""","""","""",""""],[""24"","""","""","""","""","""",""""],[""28"","""","""","""","""","""",""""],[""29"",""-"",""-"","""",""-"",""-"",""-""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
int a[5] = {0, 0, 0, 0, 0};
int b[5] = {1,2,3,5,10};
packePakete(a, b);
for(int i=0; i < 5; i++) printf(""%i\n"", a[i]);
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
int b[5] = {1,2,3,5,10};
printf(""%lf\n"", berechnePaketKosten(b));
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Franke,Alexander,alexander.franke@campus.tu-berlin.de,Beendet,"14. Dezember 2021  17:30","19. Dezember 2021  23:59","5 Tage 6 Stunden","5,05","1, 0",Nein,"0, 1","pointer = &zahl;
**pp = 42;
pp = &pointer;","{25} {54} {} {} {} {} {208}","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"","""","""","""",""100"","""",""""],[""18"","""","""","""","""",""10"",""""],[""4(19)"",""1024"",""1028"","""","""","""",""undef""],[""5(19)"","""","""","""","""","""",""""],[""6(19)"","""","""","""","""","""",""""],[""7(19)"","""","""",""100"","""","""",""""],[""8(19)"","""","""","""",""10"","""",""""],[""9(19)"","""","""","""","""",""100"",""""],[""10(19)"","""","""","""","""","""",""1""],[""13(19)"",""-"",""-"",""-"","""","""",""""],[""19"","""","""","""","""","""",""1""],[""20"","""","""","""","""","""",""""],[""21"","""","""","""","""","""",""""],[""22"","""","""","""","""","""",""""],[""23"","""","""","""","""","""",""""],[""24"","""","""","""","""","""",""""],[""28"","""","""","""","""","""",""""],[""29"","""","""","""",""-"",""-"",""-""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* ersteZahl;
    int* p2;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Schroeter,"Robert Daniel Berndt Leonard",r.schroeter@campus.tu-berlin.de,Beendet,"14. Dezember 2021  22:25","19. Dezember 2021  20:30","4 Tage 22 Stunden","10,30","Der '&' Operator wird bei Pointer und Variablen für das Referenzieren verwendet

; Mit dem '&' Operator kann man auf Adressen von Pointern und Variablen zugreifen

; Der '*' Operator wird bei Pointer und Variablen für das Dereferenzieren verwendet

; Mit dem '*' Operator kann man auf den Inhalt von Adressen, die in Pointern gespeichert sind, zugreifen","1, 0","0, 1","pointer = &zahl;
pp = &pointer;
**pp = 42;","Man kann untypisierte Pointer nicht dereferenzieren.; Man kann untypisierte Pointer inkrementieren, aber auch dekrementieren.; Es gibt untypisierte Pointer.","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"",""%"",""%"",""%"",""100"",""%"",""%""],[""18"",""%"",""%"",""%"",""%"",""10"",""%""],[""4(19)"",""1024"",""1028"",""%"",""%"",""%"",""%""],[""6(19)"",""%"",""%"",""%"",""%"",""%"",""%""],[""7(19)"",""%"",""%"",""100"",""%"",""%"",""%""],[""8(19)"",""%"",""%"",""%"",""10"",""%"",""%""],[""9(19)"",""%"",""%"",""%"",""%"",""100"",""%""],[""10(19)"",""%"",""%"",""%"",""%"",""%"",""1""],[""11(19)"",""%"",""%"",""-"",""%"",""%"",""%""],[""13(19)"",""-"",""-"",""%"",""%"",""%"",""%""],[""19"",""%"",""%"",""%"",""%"",""%"",""%""],[""20"",""%"",""%"",""%"",""%"",""%"",""%""],[""21"",""%"",""%"",""%"",""%"",""%"",""%""],[""22"",""%"",""%"",""%"",""%"",""%"",""%""],[""23"",""%"",""%"",""%"",""%"",""%"",""%""],[""24"",""%"",""%"",""%"",""%"",""%"",""%""],[""28"",""%"",""%"",""%"",""%"",""%"",""%""],[""29"",""%"",""%"",""%"",""-"",""-"",""-""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{	
	int i;
    for(i= 0; i < 5; i++) 
    {
        paeckchenGewicht[i] += artikelGewicht[i];
        if(artikelGewicht[i]<10)
        {            
            if(paeckchenGewicht[i]+ artikelGewicht[i+1] <= 10) {
                paeckchenGewicht[i+1] = paeckchenGewicht[i]; //+ artikelGewicht[i+1];
                paeckchenGewicht[i] = 0;               
	    }
							
        }
	else{
	    paeckchenGewicht[i] = artikelGewicht[i];
        }
		
    }
}
double berechnePaketKosten( int paeckchenGewicht[] )
{
    int i;
    double endsumme = 0;
    for(i = 0; i < 5; i++)
    {		
        printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i+1, paeckchenGewicht[i]);
        if (paeckchenGewicht[i] == 0) continue;
        if(paeckchenGewicht[i]<=10)
        {           		   				            
	    printf(""Die Versandkosten ihres %i. Paeckchens betragen: 3.00 Euro\n"", i+1);
	    endsumme = endsumme + 3;
        }
       else
        {
            double endgeld = paeckchenGewicht[i]*0.45-1.5;
	    endsumme = endsumme + endgeld;
	    printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, endgeld);
            endgeld = 0;
        }	
    }
	return endsumme;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 11;
   artikelGewicht[1] = 2;
   artikelGewicht[2] = 3;
   artikelGewicht[3] = 5;
   artikelGewicht[4] = 10;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Ereskovskyi,"Ulrike Anastasia",ereskovskyi@campus.tu-berlin.de,Beendet,"15. Dezember 2021  01:01","19. Dezember 2021  23:59","4 Tage 22 Stunden","10,97","pointer = &zahl;
pp = &pointer;
**pp = 42;","1, 0",Nein,"Mit dem '&' Operator kann man auf den Inhalt von Adressen, die in Pointern gespeichert sind, zugreifen

; Der '*' Operator wird bei Pointer und Variablen für das Dereferenzieren verwendet

; Der '&' Operator wird bei Pointer und Variablen für das Referenzieren verwendet

; Mit dem '*' Operator kann man auf Adressen von Pointern und Variablen zugreifen","{3} {11} {26} {51} {208} {212} {216}","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"","""","""","""",""100"","""",""""],[""18"","""","""","""","""",""10"",""""],[""4(19)"",""1024"",""1028"","""","""","""",""""],[""5(19)"","""","""","""","""","""",""""],[""6(19)"","""","""","""","""","""",""""],[""7(19)"","""","""",""100"","""","""",""""],[""8(19)"",""1028"","""","""","""","""",""""],[""9(19)"","""",""100"","""","""","""",""""],[""10(19)"","""","""","""","""","""",""""],[""13(19)"","""","""",""-"","""","""",""""],[""19"","""","""","""","""","""",""""],[""20"","""","""","""","""","""",""1""],[""21"","""","""","""","""","""",""""],[""22"","""","""","""","""","""",""""],[""23"","""","""","""","""","""",""""],[""24"","""","""","""","""","""",""""],[""28"","""","""","""","""","""",""""],[""29"",""-"",""-"","""",""-"",""-"",""-""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int *p1; p1 = &ersteZahl;
    int *p2; p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int counter = 0;
    int lastpackagekg = 0;
/* -----------------------------
hier muesst ihr implementieren
----------------------------- */
    for(int i = 0; i<5; i++)
    {
    if(artikelGewicht[i] >= 10)
    {
    paeckchenGewicht[counter] = artikelGewicht[i];
    counter = counter +1;
    }
    else if((lastpackagekg + artikelGewicht[i]) < 10)
    {
    paeckchenGewicht[counter] = artikelGewicht[i];
    lastpackagekg += artikelGewicht;
    counter = counter +1;
    }
    else
    {
    counter = counter +1;
    lastpackagekg = 0;
    paeckchenGewicht[i] = artikelGewicht[i];
    lastpackagekg += artikelGewicht[i];
    }
}

   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{
int kg = 0;
double preis = 0.00;
int counter = 0;
double gp = 0.00;
for(int i = 0; i<5; i++)
{
kg = paeckchenGewicht[i];
preis = 0;
if(kg != 0)
{
counter = counter +1;
if(kg<=10)
{
preis+= 3.00;
gp+=3.00;
}
else
{
int restkg = kg -10;
preis+=3.00;
gp += 3.00;
preis += 0.45 * restkg;
gp += 0.45*restkg;
}
}
printf(""\nGewicht des %d. Paeckchens: %d Kilo\n"", counter,
paeckchenGewicht[i]);
printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"",
counter, preis);
}
return gp;

   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Wang,Jiawei,jiawei.wang.2@campus.tu-berlin.de,Beendet,"15. Dezember 2021  08:09","17. Dezember 2021  23:07","2 Tage 14 Stunden","14,00","Mit dem '&' Operator kann man auf Adressen von Pointern und Variablen zugreifen

; Mit dem '*' Operator kann man auf den Inhalt von Adressen, die in Pointern gespeichert sind, zugreifen","1, 0","0, 1","pointer = &zahl;
pp = &pointer;
**pp = 42;","{3} {11} {26} {51} {208} {212} {216}","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"",""%"",""%"",""%"",""100"",""%"",""%""],[""18"",""%"",""%"",""%"",""%"",""10"",""%""],[""4(19)"",""1024"",""1028"",""%"",""%"",""%"",""%""],[""5(19)"",""%"",""%"",""%"",""%"",""%"",""%""],[""6(19)"",""%"",""%"",""%"",""%"",""%"",""%""],[""7(19)"",""%"",""%"",""100"",""%"",""%"",""%""],[""8(19)"",""%"",""%"",""%"",""10"",""%"",""%""],[""9(19)"",""%"",""%"",""%"",""%"",""100"",""%""],[""10(19)"",""%"",""%"",""%"",""%"",""%"",""%""],[""13(19)"",""-"",""-"",""-"",""%"",""%"",""%""],[""19"",""%"",""%"",""%"",""%"",""%"",""1""],[""20"",""%"",""%"",""%"",""%"",""%"",""%""],[""21"",""%"",""%"",""%"",""%"",""%"",""%""],[""22"",""%"",""%"",""%"",""%"",""%"",""%""],[""23"",""%"",""%"",""%"",""%"",""%"",""%""],[""24"",""%"",""%"",""%"",""%"",""%"",""%""],[""28"",""%"",""%"",""%"",""%"",""%"",""%""],[""29"",""%"",""%"",""%"",""-"",""-"",""-""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int *p1 = &ersteZahl;
    int *p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{
double sum = 0;
double price_einpacket;

for(int i=0;i<5;i++)
{
    if (paeckchenGewicht[i]<=10) price_einpacket = 3;
    else price_einpacket = 3 + 0.45*(paeckchenGewicht[i]-10);
    printf(""Gewicht des %d. Paeckchens: %d Kilo\n"",i+1,paeckchenGewicht[i]);
    printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"",i+1,price_einpacket);
    sum += price_einpacket;

}
return sum;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	if('A'<= *p_char && *p_char <='Z'){
            *p_char += shift;
    if('A'<= *p_char && *p_char <='Z'){
           *p_char = *p_char;
    }
      else if (shift>=0) *p_char = *p_char-26;
      else *p_char = *p_char+26;
}
    else if('a'<= *p_char && *p_char <='z'){
            *p_char += shift;
     if('a'<= *p_char && *p_char <='z'){
        *p_char = *p_char;
    }
    else if (shift>=0) *p_char = *p_char-26;
    else *p_char = *p_char+26;
     }
    else *p_char = *p_char;

    return *p_char;

}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
for (int i=0;i<maxlength;i++){
    shiftChar(&str[i],shift);

}
return 0;
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Hartmann,"Kaspar Lorenz",kaspar.l.hartmann@campus.tu-berlin.de,Beendet,"15. Dezember 2021  09:56","15. Dezember 2021  10:54","57 Minuten 41 Sekunden","6,80","1, 0","1, 0","Mit dem '&' Operator kann man auf Adressen von Pointern und Variablen zugreifen

; Mit dem '*' Operator kann man auf den Inhalt von Adressen, die in Pointern gespeichert sind, zugreifen",Nein,"Es gibt keine untypisierten Pointer.","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"",""%"",""%"",""%"",""100"",""%"",""%""],[""18"",""%"",""%"",""%"",""%"",""10"",""%""],[""4(19)"",""1024"",""1028"",""%"",""%"",""%"",""%""],[""6(19)"",""%"",""%"",""%"",""%"",""%"",""%""],[""7(19)"",""%"",""%"",""100"",""%"",""%"",""%""],[""8(19)"",""%"",""%"",""%"",""10"",""%"",""%""],[""9(19)"",""%"",""%"",""%"",""%"",""100"",""%""],[""10(19)"",""%"",""%"",""%"",""%"",""%"",""%""],[""11(19)"",""%"",""%"",""-"",""%"",""%"",""%""],[""13(19)"",""-"",""-"",""%"",""%"",""%"",""%""],[""19"",""%"",""%"",""%"",""%"",""%"",""1""],[""20"",""%"",""%"",""%"",""%"",""%"",""%""],[""21"",""%"",""%"",""%"",""%"",""%"",""%""],[""22"",""%"",""%"",""%"",""%"",""%"",""%""],[""23"",""%"",""%"",""%"",""%"",""%"",""%""],[""24"",""%"",""%"",""%"",""%"",""%"",""%""],[""28"",""%"",""%"",""%"",""%"",""%"",""%""],[""29"",""%"",""%"",""%"",""-"",""-"",""-""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{



}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Schneider,"Mark Daniel",mark.schneider@campus.tu-berlin.de,Beendet,"15. Dezember 2021  13:53","19. Dezember 2021  21:41","4 Tage 7 Stunden","10,80","1, 0",Nein,"Mit dem '*' Operator kann man auf den Inhalt von Adressen, die in Pointern gespeichert sind, zugreifen

; Mit dem '&' Operator kann man auf Adressen von Pointern und Variablen zugreifen

; Der '*' Operator wird bei Pointer und Variablen für das Dereferenzieren verwendet

; Der '&' Operator wird bei Pointer und Variablen für das Referenzieren verwendet","pointer = &zahl;
pp = &pointer;
**pp = 42;","int groesse = (int) ((long*) 200 - (long*) 100);

 -> // groesse = 12; int groesse = (int) ((long*) 376 - 32);

 -> // groesse = 120; char groesse = (char) ((int*) 324 - (int*) 124);

 -> // groesse = 50; long groesse = (long) ((char*) 400 - (int) 200);

 -> // groesse = 200; int groesse = (int) ((char*) 100 - 4 );

 -> // groesse = 96; int groesse = (int) ((long) 376 - (char) 32);

 -> // groesse = 344","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"","""","""","""",""100"","""",""""],[""18"","""","""","""","""",""10"",""""],[""4(19)"",""1024"",""1028"","""","""","""",""""],[""5(19)"","""","""","""","""","""",""""],[""6(19)"","""","""","""","""","""",""""],[""7(19)"","""","""",""100"","""","""",""""],[""8(19)"","""","""","""",""10"","""",""""],[""9(19)"","""","""","""","""",""100"",""""],[""10(19)"","""","""","""","""","""",""""],[""13(19)"",""-"",""-"",""-"","""","""",""""],[""19"","""","""","""","""","""",""1""],[""20"","""","""","""","""","""",""""],[""21"","""","""","""","""","""",""""],[""22"","""","""","""","""","""",""""],[""23"","""","""","""","""","""",""""],[""24"","""","""","""","""","""",""""],[""28"","""","""","""","""","""",""""],[""29"","""","""","""",""-"",""-"",""-""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	if( 'a' <= *p_char && *p_char <= 'z'){
	
		if(shift >= 0){
			for(int i = 0 ; i < shift ; i++){
				*p_char = *p_char + 1;
				if(*p_char == '{') *p_char = 'a';
			}
		}
		if(shift < 0){
			for(int i = 0 ; i > shift ; i--){
				*p_char = *p_char - 1;
				if(*p_char == '`') *p_char = 'z';
			}
		}
	}
	
	// BUCHSTABEN
	
	if( 'A' <= *p_char && *p_char <= 'Z'){
	
		if(shift >= 0){
			for(int i = 0 ; i < shift ; i++){
				*p_char = *p_char + 1;
				if(*p_char == '[') *p_char = 'a';
			}
		}
		if(shift < 0){
			for(int i = 0 ; i > shift ; i--){
				*p_char = *p_char - 1;
				if(*p_char == '@') *p_char = 'z';
			}
		}
	}
	
	

	
}
/* 
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(int i = 0; i<= maxlength; i++){
		shiftChar(&str[i], shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
"Al Habbal","Abdul Ghani",a.alhabbal@campus.tu-berlin.de,Beendet,"15. Dezember 2021  18:22","19. Dezember 2021  23:59","4 Tage 5 Stunden","11,30",Nein,"pointer = &zahl;
pp = &pointer;
**pp = 42;","1, 0","0, 1","{3} {11} {26} {51} {208} {212} {216}","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"","""","""","""",""100"","""",""""],[""18"","""","""","""","""",""10"",""""],[""4(19)"",""100"",""10"","""","""","""",""undef""],[""5(19)"","""","""","""","""","""",""""],[""6(19)"","""","""","""","""","""",""""],[""7(19)"","""","""",""100"","""","""",""""],[""8(19)"","""","""","""",""10"","""",""""],[""9(19)"","""","""","""","""",""100"",""""],[""10(19)"",""-"",""-"","""","""","""",""""],[""13(19)"","""","""",""-"","""","""",""""],[""19"",""1024"",""1028"","""","""","""",""1""],[""20"","""","""","""","""","""",""""],[""21"","""","""","""","""","""",""""],[""22"","""","""","""","""","""",""""],[""23"","""","""","""","""","""",""""],[""24"","""","""","""","""","""",""""],[""28"","""","""","""","""","""",""""],[""29"","""","""","""",""-"",""-"",""-""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    for(int i=0;i<5;i++)
    {
        int tmp = artikelGewicht[i];
        for(int j=0;j<5;j++)
        {
            if(paeckchenGewicht[j] == 0)
            {
                paeckchenGewicht[j] += tmp;
                break;
            }
            else if(paeckchenGewicht[j] + tmp <= 10 && artikelGewicht[i] + artikelGewicht[i-1] <= 10)
            {
                paeckchenGewicht[j] += tmp;
                break;
            }
        }
        //printf(""%i, %i, %i, %i, %i\n"",paeckchenGewicht[0],paeckchenGewicht[1],paeckchenGewicht[2],paeckchenGewicht[3],paeckchenGewicht[4]);
    }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double a = 0.00;
    double tmp = 0.00;
   for(int i=0; i < 5; i++)
    {
        tmp = 0.00;
    if (paeckchenGewicht[i] <= 10 && paeckchenGewicht[i] != 0)
        {
        tmp = 3.0;
        a += tmp;
        printf(""\nGewicht des %i. Paeckchens: %i Kilo\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, paeckchenGewicht[i], i+1, tmp);
        }
    else
        {
        tmp = 3.00 + (paeckchenGewicht[i] - 10)*0.45;
        a += tmp;
        printf(""\nGewicht des %i. Paeckchens: %i Kilo\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, paeckchenGewicht[i], i+1, tmp);
        }
    }
    return a;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Karabalik,Tugce,t.karabalik@campus.tu-berlin.de,Beendet,"15. Dezember 2021  20:36","19. Dezember 2021  23:59","4 Tage 3 Stunden","6,82","0, 1",Nein,"Mit dem '*' Operator kann man auf den Inhalt von Adressen, die in Pointern gespeichert sind, zugreifen

; Mit dem '&' Operator kann man auf Adressen von Pointern und Variablen zugreifen

; Der '*' Operator wird bei Pointer und Variablen für das Dereferenzieren verwendet

; Der '&' Operator wird bei Pointer und Variablen für das Referenzieren verwendet","pointer = &zahl;
pp = &pointer;
**pp = 42;","{212} {11} {51} {54} {208} {212} {216}","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"","""","""","""",""100"","""",""""],[""18"","""","""","""","""",""10"",""""],[""4(19)"",""1024"",""1028"","""","""","""",""""],[""5(19)"","""","""","""","""","""",""""],[""6(19)"","""","""","""","""","""",""""],[""7(19)"","""","""",""1024"","""","""",""""],[""8(19)"",""1028"","""",""\t\n8(19)\n"","""","""",""""],[""9(19)"","""",""1024"","""","""","""",""""],[""11(19)"","""","""",""\n\n\n\n\n\n\n"","""","""",""""],[""13(19)"",""-"",""-"",""-"","""","""",""""],[""19"","""","""","""","""","""",""undef""],[""20"","""","""","""","""","""",""""],[""21"","""","""","""","""","""",""""],[""22"","""","""","""","""","""",""""],[""23"","""","""","""","""","""",""""],[""25"","""","""","""","""","""",""""],[""26"","""","""","""","""","""",""""],[""29"","""","""","""",""-"",""-"",""-""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

void shiftChar(char* p_char, int shift)
{char letter;
char str[50];
int maxlength;

letter = str[maxlength];
    if (letter >= 'a' && letter <= 'z') {
        letter = letter + shift;
    if(letter > 'z'){
        letter = letter - 'z' + 'a' - 1;
    }
    str[maxlength] = letter;
    }
    else if(letter >= 'A' && letter <= 'Z'){
        letter = letter + shift;
    if(letter > 'Z'){
        letter = letter - 'Z' + 'A' - 1;
    }
    str[maxlength] = letter;
}
}

void cipher(char str[], int shift, int maxlength)
{char letter;
for (maxlength = 0; str[maxlength] != '\0'; ++maxlength){
letter = str[maxlength];
    if (letter >= 'a' && letter <= 'z') {
        letter = letter + shift;
    if(letter > 'z'){
        letter = letter - 'z' + 'a' - 1;
    }
    str[maxlength] = letter;
    }
    else if(letter >= 'A' && letter <= 'Z'){
        letter = letter + shift;
    if(letter > 'Z'){
        letter = letter - 'Z' + 'A' - 1;
    }
    str[maxlength] = letter;
}
}
}
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Dippold,"Veit Wilfried",v.dippold@campus.tu-berlin.de,Beendet,"16. Dezember 2021  08:40","17. Dezember 2021  16:13","1 Tag 7 Stunden","14,75","Der '*' Operator wird bei Pointer und Variablen für das Dereferenzieren verwendet

; Der '&' Operator wird bei Pointer und Variablen für das Referenzieren verwendet

; Mit dem '&' Operator kann man auf Adressen von Pointern und Variablen zugreifen

; Mit dem '*' Operator kann man auf den Inhalt von Adressen, die in Pointern gespeichert sind, zugreifen","1, 0",Nein,"pointer = &zahl;
pp = &pointer;
**pp = 42;","Man kann untypisierte Pointer nicht dereferenzieren.; Es gibt untypisierte Pointer.; Man kann untypisierte Pointer weder inkrementieren noch dekrementieren.","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"","""","""","""",""100"","""",""""],[""18"","""","""","""","""",""10"",""""],[""4(19)"",""1024"",""1028"","""","""","""",""""],[""5(19)"","""","""","""","""","""",""""],[""6(19)"","""","""","""","""","""",""""],[""7(19)"","""","""",""100"","""","""",""""],[""8(19)"","""","""","""",""10"","""",""""],[""9(19)"","""","""","""","""",""100"",""""],[""10(19)"","""","""",""-"","""","""",""""],[""13(19)"",""-"",""-"","""","""","""",""""],[""19"","""","""","""","""","""",""1""],[""20"","""","""","""","""","""",""""],[""21"","""","""","""","""","""",""""],[""22"","""","""","""","""","""",""""],[""23"","""","""","""","""","""",""""],[""24"","""","""","""","""","""",""""],[""28"","""","""","""","""","""",""""],[""29"","""","""","""",""-"",""-"",""-""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
   int j = 0;
   for (int i = 0; i < 5; i++){      
	while(1){
	  if (artikelGewicht[j] > 10){
	    if (j >=5) break;
	    paeckchenGewicht[i] = artikelGewicht[j];
	    j++;
	    break;
	  }	
	  if (artikelGewicht[j] <= 10){ 		
		if (j >=5) break;	
		if (paeckchenGewicht[i] + artikelGewicht[j] > 10) break;		
		paeckchenGewicht[i] += artikelGewicht[j];
		j++;  
	  }   	
	}
	
  }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
  double kosten = 0;
  for (int i = 0; i < 5; i++){
    double kp = 0;
    if (paeckchenGewicht[i] >= 0 && paeckchenGewicht[i] <= 10){ 
	kp = 3;
	printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i+1, paeckchenGewicht[i]);
	printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, kp);
	kosten += kp;
    }
    if (paeckchenGewicht[i] > 10) {
       printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i+1, paeckchenGewicht[i]);
       kp = 3;
       paeckchenGewicht[i] -= 10;
       while (1){
		if (paeckchenGewicht[i] <= 0) break;		
		kp = kp + 0.45;
		paeckchenGewicht[i] -= 1;
   }
       printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, kp);
       kosten = kosten + kp;
    }
  }
  return kosten;
}
int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
   if ('a' <= *p_char && *p_char <= 'z'){
      if (*p_char + shift > 'z') *p_char = *p_char + shift - ('z' - 'a' + 1);
      else if (*p_char + shift < 'a') *p_char = *p_char + shift + ('z' - 'a' + 1);
      else *p_char += shift;
   }   
   if ('A' <= *p_char && *p_char <= 'Z'){
      if (*p_char + shift > 'Z') *p_char = *p_char + shift - ('Z' - 'A' + 1);
      else if (*p_char + shift < 'A') *p_char = *p_char + shift + ('Z' - 'A' + 1);
      else *p_char += shift;
   }   
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
   for (char* p = str; p < str + maxlength; p++){
      shiftChar(p, shift);  
   }	
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Stellwag,Moritz,m.stellwag@campus.tu-berlin.de,Beendet,"16. Dezember 2021  11:24","19. Dezember 2021  23:59","3 Tage 12 Stunden","11,30","pointer = &zahl;
pp = &pointer;
**pp = 42;",Nein,"Mit dem '*' Operator kann man auf den Inhalt von Adressen, die in Pointern gespeichert sind, zugreifen

; Der '*' Operator wird bei Pointer und Variablen für das Dereferenzieren verwendet

; Der '&' Operator wird bei Pointer und Variablen für das Referenzieren verwendet","1, 0","int groesse = (int) ((long*) 200 - (long*) 100);

 -> // groesse = 12; int groesse = (int) ((long) 376 - (char) 32);

 -> // groesse = 344; int groesse = (int) ((long*) 376 - 32);

 -> // groesse = 120; int groesse = (int) ((char*) 100 - 4 );

 -> // groesse = 96; long groesse = (long) ((char*) 400 - (int) 200);

 -> // groesse = 200; char groesse = (char) ((int*) 324 - (int*) 124);

 -> // groesse = 50","[[""16"",""1024"",""1028"",""-"",""-"",""-"",""-""],[""17"","""","""","""",""100"","""",""""],[""18"","""","""","""","""",""10"",""""],[""4(19)\n"","""","""","""","""","""",""""],[""5(19)"","""","""","""","""","""",""""],[""6(19)"","""","""","""","""","""",""""],[""7(19)"","""","""",""100"","""","""",""""],[""8(19)"","""","""","""",""10"","""",""""],[""9(19)"","""","""","""","""",""100"",""""],[""10(19)"","""","""","""","""","""",""1""],[""13(19)"","""","""","""","""","""",""""],[""19"","""","""","""","""","""",""""],[""20"","""","""","""","""","""",""""],[""21"","""","""","""","""","""",""""],[""22"","""","""","""","""","""",""""],[""23"","""","""","""","""","""",""""],[""24"","""","""","""","""","""",""""],[""28"","""","""","""","""","""",""""],[""29"","""","""","""","""","""",""""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>

// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{ 
    int i = 0;
    int a = 0;
    // packePakete müsst ihr über die Artikel (Gewichte) iterieren. Jeder Artikel mit mehr als zehn kg bekommt ein eigenes, neues Paket
    for (i = 0; i < 5; i++){
        if (artikelGewicht[i] > 10){ //schwerer als 10 kg => neues päckchen
            // dann eigenes Päckchen
            paeckchenGewicht[a] = artikelGewicht[i];
            a++;
        }
        else { //ansonnsten
            if (paeckchenGewicht[a] + artikelGewicht[i] <= 10){ //wenn es noch reinpasst in  das aktuelle päckchen => tu rein
                paeckchenGewicht[a] = paeckchenGewicht[a] + artikelGewicht[i];
            }
            else { //ansonsten => neues päckchen damit auf 
                a++;
                paeckchenGewicht[a] = paeckchenGewicht[a] + artikelGewicht[i];
            }
            
            
            
        }
        
        
    }

}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    float Kosten[5] = {0,0,0,0,0};
    int KiloZuViel[5] = {0,0,0,0,0};
    double summe = 0;
    int a = 0;
    int b = 0;
    for (a = 0; a < 5; a++){
        //Kosten für Pakete <= 10 Kilo ist 3 Euro
        b = a + 1;
        if (paeckchenGewicht[a] != 0 && paeckchenGewicht[a] <= 10){
            Kosten[a] = 3.00;
    
        } 
        else {
            KiloZuViel[a] = paeckchenGewicht[a] - 10;
            Kosten[a] = KiloZuViel[a] * 0.45 + 3;
            
            }
            
            printf (""Gewicht des %d. Paeckchens: %d Kilo\n"", b, paeckchenGewicht[a]);
            printf (""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n\n"", b, Kosten[a]);
            
            
              summe += Kosten[a];  
            }
         

}
int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""Die Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>


void shiftChar(char* p_char, int shift)
{
 if ('A' <= *p_char >= 'z'){
     *p_char = *p_char + shift;
      
 }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	char a = 0;
	

    for (a = 0; a < maxlength; a++){
        
        char* p_char = &str[a];
       
            if ('A' <= *p_char >= 'z'){
            p_char = p_char + shift;
            str[a] = *p_char;
        
       

            } 
    }
}
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Krech,"Fabian Jonathan",f.krech@campus.tu-berlin.de,Beendet,"16. Dezember 2021  15:17","16. Dezember 2021  19:37","4 Stunden 19 Minuten","9,37","Mit dem '*' Operator kann man auf den Inhalt von Adressen, die in Pointern gespeichert sind, zugreifen

; Mit dem '*' Operator kann man auf Adressen von Pointern und Variablen zugreifen

; Der '*' Operator wird bei Pointer und Variablen für das Dereferenzieren verwendet

; Der '&' Operator wird bei Pointer und Variablen für das Referenzieren verwendet",Nein,"pointer = &zahl;
pp = &pointer;
**pp = 42;","0, 0",-,"[[""16"","""","""","""","""","""",""""],[""17"","""","""","""","""","""",""""],[""18"","""","""","""","""","""",""""],[""19"","""","""","""","""","""",""""],["""","""","""","""","""","""",""""],["""","""","""","""","""","""",""""],["""","""","""","""","""","""",""""],["""","""","""","""","""","""",""""],["""","""","""","""","""","""",""""],["""","""","""","""","""","""",""""],[""13(19)"","""","""","""","""","""",""""],["""","""","""","""","""","""",""""],["""","""","""","""","""","""",""""],["""","""","""","""","""","""",""""],["""","""","""","""","""","""",""""],["""","""","""","""","""","""",""""],["""","""","""","""","""","""",""""],["""","""","""","""","""","""",""""],["""","""","""","""","""","""",""""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int *p1 = &ersteZahl;
    int *p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <limits.h>

//Ersetzt ein zu löschendes Element mit INT_MIN und schiebt es an das Ende des Arrays
void remove_element(int array[], int index, int array_length)
{
   int i;
   for(i = index; i < array_length - 1; i++)
   {
        array[i] = array[i + 1]; 
   } 
   array[array_length-1] = INT_MIN;
}

// Funktion veraendert paeckchenGewicht
// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int j = 0;
   for(int i = 0; i < 5; i++)
   {
       if(i < 3 && artikelGewicht[i]+artikelGewicht[i+1]+artikelGewicht[i+2] <= 10)
       {
           paeckchenGewicht[j] = artikelGewicht[i]+artikelGewicht[i+1]+artikelGewicht[i+2];
           i = i + 2;
       }
       else if(i < 4 && artikelGewicht[i]+artikelGewicht[i+1] <= 10)
       {
           paeckchenGewicht[j] = artikelGewicht[i]+artikelGewicht[i+1];
           i++;
       }
       else
       {
           paeckchenGewicht[j] = artikelGewicht[i];
       }
       j++;
   }
    //for(int i = 0; i < 5; i++) printf(""%d: %d\n"",i,paeckchenGewicht[i]);
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double preis = 0.0;
    double uebergewicht = 0.0;
    for(int i = 0; i < 5; i++)
    {
        if(paeckchenGewicht[i] <= 10)
        {
            printf(""Gewicht des %d. Paeckchens: %d Kilo\n"",i+1,paeckchenGewicht[i]);
            printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n\n"",i+1,3.0);
            preis = preis + 3;
        }
        else
        {
            uebergewicht = paeckchenGewicht[i] - 10;
            preis = preis + 3 + (uebergewicht*0.45);
            printf(""Gewicht des %d. Paeckchens: %d Kilo\n"",i+1,paeckchenGewicht[i]);
            printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n\n"",i+1,3 + (uebergewicht*0.45));
        }
    }
    return preis;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""Die Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	if((*p_char <= 'z' && *p_char >= 'a'))
    {
        if((int)*p_char+shift < 'a')
        {
            *p_char = (char)((int)*p_char+shift+26);
        }
        else if((int)*p_char+shift > 'z')
        {
            *p_char = (char)((int)*p_char+shift-26);
        }
        else
        {
            *p_char = (char)((int)*p_char+shift);
        }
    }
    else if ((*p_char <= 'Z' && *p_char >= 'A'))
    {
       if((int)*p_char+shift < 'A')
        {
            *p_char = (char)((int)*p_char+shift+26);
        }
        else if((int)*p_char+shift > 'Z')
        {
            *p_char = (char)((int)*p_char+shift-26);
        }
        else
        {
            *p_char = (char)((int)*p_char+shift);
        } 
    }
    
    
    
    
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(int i = 0; i < maxlength; i++)
    {
        shiftChar(&str[i],shift);
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Eckardt,"Jan Hartmut",jan.h.eckardt@campus.tu-berlin.de,Beendet,"16. Dezember 2021  16:35","19. Dezember 2021  15:21","2 Tage 22 Stunden","8,88","pointer = &zahl;
pp = &pointer;
**pp = 42;","Mit dem '*' Operator kann man auf den Inhalt von Adressen, die in Pointern gespeichert sind, zugreifen

; Mit dem '&' Operator kann man auf Adressen von Pointern und Variablen zugreifen",Ja,"1, 0","Man kann untypisierte Pointer nicht dereferenzieren.","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"","""","""","""",""100"","""",""""],[""18"","""","""","""","""",""10"",""""],[""4(19)"","""","""","""",""1024"",""1028"",""undefinclude <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int *p1 = &ersteZahl;
    int *p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>


void shiftChar(char* p_char, int shift){
unsigned char gB = ('a' <= *p_char && *p_char <= 'z');
if(gB && (*p_char + shift) > 'z') {shift -= 26;
*p_char += shift;}
else if(gB && (*p_char +shift) < 'a') {shift +=26;
*p_char += shift;}
else if(gB)*p_char += shift;

unsigned char kB = ('A' <= *p_char && *p_char <= 'Z');
if(kB && (*p_char + shift) > 'Z') {shift -= 26;
*p_char += shift;}
else if(kB && (*p_char +shift) < 'A') {shift +=26;
*p_char += shift;}
else if(kB)*p_char += shift;

}
void cipher(char str[], int shift, int maxlenght){
for(char* p_char = str; p_char<str +maxlenght; p_char++){

shiftChar(p_char, shift);}
}

int main(){
char str[50] = ""Froh zu sein bedarf es wenig"";
int shift = 5;
printf(""Original: "");
printf(""%s\n"", str);

cipher(str, shift, 50);
printf(""Verschluesselt: "");
printf(""%s\n"", str);

cipher(str, -shift, 50);
printf(""Entschluesselt: "");
printf(""%s\n"", str);
}"
Pflantz,"Dennis Patrick",d.pflantz@campus.tu-berlin.de,Beendet,"16. Dezember 2021  17:32","19. Dezember 2021  23:05","3 Tage 5 Stunden","9,80","1, 0","Der '*' Operator wird bei Pointer und Variablen für das Dereferenzieren verwendet

; Mit dem '*' Operator kann man auf den Inhalt von Adressen, die in Pointern gespeichert sind, zugreifen

; Mit dem '&' Operator kann man auf Adressen von Pointern und Variablen zugreifen","0, 1","pointer = &zahl;
pp = &pointer;
**pp = 42;","Es gibt untypisierte Pointer.; Man kann untypisierte Pointer weder inkrementieren noch dekrementieren.","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"","""","""","""",""100"","""",""""],[""18"","""","""","""","""",""10"",""""],[""4(19)"",""1024"",""1028"","""","""","""",""""],[""5(19)"","""","""","""","""","""",""""],[""6(19)"","""","""","""","""","""",""""],[""7(19)"","""","""",""100"","""","""",""""],[""8(19)"","""","""","""",""10"","""",""""],[""9(19)"","""","""","""","""",""100"",""""],[""10(19)"","""","""","""","""","""",""""],[""13(19)"",""-"",""-"",""-"","""","""",""""],[""19"","""","""","""","""","""",""1""],[""20"","""","""","""","""","""",""""],[""21"","""","""","""","""","""",""""],[""22"","""","""","""","""","""",""""],[""23"","""","""","""","""","""",""""],[""24"","""","""","""","""","""",""""],[""28"","""","""","""","""","""",""""],[""29"","""","""","""",""-"",""-"",""-""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
  int i;
    int a[5];
    int b[5];
    packePakete(a, b);
    float preis = 3/10 * artikelGewicht[i];
    for(int i = 0; i < 10; i++) {
            printf(""%i\n"", a[i]);
    printf(""Gewicht des %i. Paeckchens: %i Kilo\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro"", i,artikelGewicht[i] , i, preis );



}

double berechnePaketKosten( int paeckchenGewicht[] )
{


int i;
    int a[5];
    int b[5];
    packePakete(a, b);
    float preis = 3/10 * artikelGewicht[i];
    for(int i = 0; i < 10; i++) {
            printf(""%i\n"", a[i]);
    printf(""Gewicht des %i. Paeckchens: %i Kilo\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro"", i,artikelGewicht[i] , i, preis );

}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Pham,"Thanh Nam",thanh.n.pham@campus.tu-berlin.de,Beendet,"16. Dezember 2021  17:46","19. Dezember 2021  23:59","3 Tage 6 Stunden","14,00","pointer = &zahl;
pp = &pointer;
**pp = 42;",Nein,"Mit dem '*' Operator kann man auf den Inhalt von Adressen, die in Pointern gespeichert sind, zugreifen

; Der '*' Operator wird bei Pointer und Variablen für das Dereferenzieren verwendet

; Mit dem '&' Operator kann man auf Adressen von Pointern und Variablen zugreifen

; Der '&' Operator wird bei Pointer und Variablen für das Referenzieren verwendet","0, 1","int groesse = (int) ((long*) 200 - (long*) 100);

 -> // groesse = 12; char groesse = (char) ((int*) 324 - (int*) 124);

 -> // groesse = 50; int groesse = (int) ((char*) 100 - 4 );

 -> // groesse = 96; int groesse = (int) ((long) 376 - (char) 32);

 -> // groesse = 344; int groesse = (int) ((long*) 376 - 32);

 -> // groesse = 120; long groesse = (long) ((char*) 400 - (int) 200);

 -> // groesse = 200","[[""16"",""undef"",""undef"",""undef"",""undef"",""undef"",""undef""],[""17"","""","""","""",""100"","""",""""],[""18"","""","""","""","""",""10"",""""],[""4(19)"",""1024"",""1028"","""","""","""",""""],[""5(19)"","""","""","""","""","""",""""],[""6(19)"","""","""","""","""","""",""""],[""7(19)"","""","""",""100"","""","""",""""],[""8(19)"","""","""","""",""10"","""",""""],[""9(19)"","""","""","""","""",""100"",""""],[""10(19)"","""","""","""","""","""",""""],[""13(19)"",""undef"",""undef"",""undef"","""","""",""""],[""19"","""","""","""","""","""",""1""],[""20"","""","""","""","""","""",""""],[""21"","""","""","""","""","""",""""],[""22"","""","""","""","""","""",""""],[""23"","""","""","""","""","""",""""],[""24"","""","""","""","""","""",""""],[""28"","""","""","""","""","""",""""],[""29"","""","""","""",""undef"",""undef"",""undef""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int paeckechenNr = 0;
    for(int i = 0; i < 5; i++){
        if(artikelGewicht[i] <= 10 && paeckchenGewicht[paeckechenNr] + artikelGewicht[i] <= 10){
            paeckchenGewicht[paeckechenNr] += artikelGewicht[i];
        }
        else if(paeckchenGewicht[paeckechenNr] == 0){
            paeckchenGewicht[paeckechenNr] += artikelGewicht[i];
        }
        else{
            paeckechenNr++;
            paeckchenGewicht[paeckechenNr] += artikelGewicht[i];
        }
    }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double sum = 0;
    double paeckchenPreis;
    for(int i = 0; i < 5; i++){
        paeckchenPreis = 0;
        if (paeckchenGewicht[i] != 0){
            paeckchenPreis += 3;
            printf(""\nGewicht des %d. Paeckchens: %d Kilo\n"", (i+1), paeckchenGewicht[i]);
        }
        if(paeckchenGewicht[i] > 10){
            paeckchenPreis += (paeckchenGewicht[i] - 10) * 0.45;
        }
        if(paeckchenPreis != 0){
            sum += paeckchenPreis;
            printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"", (i + 1), paeckchenPreis);
        }

    }
    return sum;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    if(*p_char >= 'a' && *p_char <= 'z'){
        if(*p_char + shift < 'a'){
            *p_char += 26 + shift;
        }
        else if(*p_char  + shift > 'z'){
            *p_char += -26  + shift;
        }
        else{
            *p_char += shift;
        }
    }
    else if(*p_char >= 'A' && *p_char <= 'Z'){
        *p_char += shift;
        if(*p_char < 'A'){
            *p_char += 26;
        }
        else if(*p_char > 'Z'){
            *p_char -= 26;
        }
    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben.
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    for(int i = 0; i < maxlength; i++){
        shiftChar(&str[i], shift);
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Steinkrauß,Timo,timo.steinkrauss@campus.tu-berlin.de,Beendet,"17. Dezember 2021  11:43","19. Dezember 2021  23:59","2 Tage 12 Stunden","6,05",Nein,"0, 1","1, 0","Der '&' Operator wird bei Pointer und Variablen für das Referenzieren verwendet

; Der '*' Operator wird bei Pointer und Variablen für das Dereferenzieren verwendet","{25} {54} {212} {216} {11} {208} {3}","[[""16"",""undef"",""undef"",""undef"",""-"",""-"",""-""],[""17"","""","""","""",""100"","""",""""],[""18"","""","""","""","""",""10"",""""],[""19"","""","""","""","""","""",""orderAndReturnBiggestIdx(&a, &b)""],[""7(19)"","""","""",""*p_n1"","""","""",""""],[""8(19)"",""*p_n2"","""","""","""","""",""""],[""9(19)"","""",""tmp"","""","""","""",""""],[""10(19)"","""","""","""","""","""",""""],[""11(19)"","""","""","""","""","""",""""],[""12(19)"","""","""","""","""","""",""""],[""13(19)"","""","""","""","""","""",""""],[""20"","""","""","""","""","""",""""],[""21"","""","""","""","""","""",""""],[""22"","""","""","""","""","""",""""],[""23"","""","""","""","""","""",""""],[""24"","""","""","""","""","""",""""],[""25"","""","""","""","""","""",""""],[""26"","""","""","""","""","""",""""],[""27"","""","""","""","""","""",""""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    switch (artikelGewicht)
        case 1:
        printf(""Gewicht des 1. Paeckchens: %d\n"", artikelGewicht[0]);
        break;
        
        case 2:
        printf(""Gewicht des 2. Paeckchens: %d\n"", artikelGewicht[1]);
        break;
        
        case 3:
        printf(""Gewicht des 3. Paeckchens: %d\n"", artikelGewicht[2]);
        break;
        
        case 4:
        printf(""Gewicht des 4. Paeckchens: %d\n"", artikelGewicht[3]);
        break;
        
        case 5:
        printf(""Gewicht des 5. Paeckchens: %d\n"", artikelGewicht[4]);
        default:

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Krappe,"Jakob Thomas",j.krappe@campus.tu-berlin.de,Beendet,"17. Dezember 2021  15:16","17. Dezember 2021  21:39","6 Stunden 22 Minuten","14,50","pointer = &zahl;
pp = &pointer;
**pp = 42;","Mit dem '*' Operator kann man auf den Inhalt von Adressen, die in Pointern gespeichert sind, zugreifen

; Der '&' Operator wird bei Pointer und Variablen für das Referenzieren verwendet

; Der '*' Operator wird bei Pointer und Variablen für das Dereferenzieren verwendet

; Mit dem '&' Operator kann man auf Adressen von Pointern und Variablen zugreifen",Nein,"1, 0","char groesse = (char) ((int*) 324 - (int*) 124);

 -> // groesse = 50; int groesse = (int) ((long) 376 - (char) 32);

 -> // groesse = 344; long groesse = (long) ((char*) 400 - (int) 200);

 -> // groesse = 200; int groesse = (int) ((char*) 100 - 4 );

 -> // groesse = 96; int groesse = (int) ((long*) 376 - 32);

 -> // groesse = 120; int groesse = (int) ((long*) 200 - (long*) 100);

 -> // groesse = 12","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"","""","""","""",""100"","""",""""],[""18"","""","""","""","""",""10"",""""],[""4(19)"",""1024"",""1028"","""","""","""",""""],[""6(19)"","""","""","""","""","""",""""],[""7(19)"","""","""",""100"","""","""",""""],[""8(19)"","""","""","""",""10"","""",""""],[""9(19)"","""","""","""","""",""100"",""""],[""10(19)"","""","""","""","""","""",""""],[""11(19)"","""","""",""-"","""","""",""""],[""13(19)"",""-"",""-"","""","""","""",""""],[""19"","""","""","""","""","""",""1""],[""20"","""","""","""","""","""",""""],[""21"","""","""","""","""","""",""""],[""22"","""","""","""","""","""",""""],[""23"","""","""","""","""","""",""""],[""24"","""","""","""","""","""",""""],[""28"","""","""","""","""","""",""""],[""29"","""","""","""",""-"",""-"",""-""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int e = 0;
    for(int i = 0; i < 5; i++){
        paeckchenGewicht[e] = artikelGewicht[i];
        while((paeckchenGewicht[e] + artikelGewicht[i + 1]) <= 10){
            paeckchenGewicht[e] += artikelGewicht[i + 1];
            i++;
        }
        e++;
    }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double endkosten = 0;
    int e = 1;
    for(int i = 0; i < 5; i++){
        if((paeckchenGewicht[i] <= 10) && (paeckchenGewicht[i] != 0)){
            endkosten += 3;
            printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", e, paeckchenGewicht[i]);
            printf(""Die Versandkosten ihres %i. Paeckchens betragen: 3.00 Euro\n"", e);
        }
        else if(paeckchenGewicht[i] > 10){
            double kosten = (3 + ((paeckchenGewicht[i] - 10) * 0.45));
            endkosten += kosten;
            printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", e, paeckchenGewicht[i]);
            printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", e, kosten);
        }
        e++;
    }
    return endkosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    if(shift >= 0){
        if('A' <= *p_char && *p_char <= ('Z' - shift)) *p_char = *p_char + shift;
	    else if(*p_char > ('Z' - shift) && *p_char <= 'Z') *p_char = *p_char - (26 - shift);
	    if('a' <= *p_char && *p_char <= ('z' - shift)) *p_char = *p_char + shift;
	    else if(*p_char > ('z' - shift) && *p_char <= 'z') *p_char = *p_char - (26 - shift);
    }
    else{
        if(('A' - shift) <= *p_char && *p_char <= 'Z') *p_char = *p_char + shift;
	    else if(*p_char < ('A' - shift) && *p_char >= 'A') *p_char = *p_char + (26 + shift);
	    if(('a' - shift) <= *p_char && *p_char <= 'z') *p_char = *p_char + shift;
	    else if(*p_char < ('a' - shift) && *p_char >= 'a') *p_char = *p_char + (26 + shift);
    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(int i = 0; i < maxlength; i++){
	    shiftChar(&str[i], shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Krause,"Lennart Andreas",lennart.krause@campus.tu-berlin.de,Beendet,"17. Dezember 2021  16:18","19. Dezember 2021  23:29","2 Tage 7 Stunden","14,00","pointer = &zahl;
pp = &pointer;
**pp = 42;",Nein,"Mit dem '&' Operator kann man auf Adressen von Pointern und Variablen zugreifen

; Der '*' Operator wird bei Pointer und Variablen für das Dereferenzieren verwendet

; Mit dem '*' Operator kann man auf den Inhalt von Adressen, die in Pointern gespeichert sind, zugreifen","1, 0","int groesse = (int) ((long*) 376 - 32);

 -> // groesse = 120; char groesse = (char) ((int*) 324 - (int*) 124);

 -> // groesse = 50; long groesse = (long) ((char*) 400 - (int) 200);

 -> // groesse = 200; int groesse = (int) ((char*) 100 - 4 );

 -> // groesse = 96; int groesse = (int) ((long) 376 - (char) 32);

 -> // groesse = 344; int groesse = (int) ((long*) 200 - (long*) 100);

 -> // groesse = 12","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"","""","""","""",""100"","""",""""],[""18"","""","""","""","""",""10"",""""],[""4(19)"",""100"",""10"","""","""","""",""""],[""5(19)"","""","""","""","""","""",""""],[""6(19)"","""","""","""","""","""",""""],[""7(19)"","""","""",""100"","""","""",""""],[""8(19)"",""10"","""","""","""","""",""""],[""9(19)"","""",""100"","""","""","""",""""],[""10(19)"","""","""","""","""","""",""""],[""13(19)"","""","""","""","""","""",""""],[""19"","""","""","""","""","""",""1""],[""20"","""","""","""","""","""",""""],[""21"","""","""","""","""","""",""""],[""22"","""","""","""","""","""",""""],[""23"","""","""","""","""","""",""""],[""24"","""","""","""","""","""",""""],[""28"","""","""","""","""","""",""""],[""29"","""","""","""","""","""",""""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[]){
	int paeckchen = 0;

	for(int i=0; i<5; i++){
		if (artikelGewicht[i] >= 10) {
			if (paeckchenGewicht[paeckchen] > 0){++paeckchen;}
			paeckchenGewicht[paeckchen] = artikelGewicht[i];
		} else {
			if ((paeckchenGewicht[paeckchen]+artikelGewicht[i]) <= 10) {
				paeckchenGewicht[paeckchen] += artikelGewicht[i];
			} else {
				++paeckchen;
				paeckchenGewicht[paeckchen] = artikelGewicht[i];
			}
		}
	}
}

double berechnePaketKosten( int paeckchenGewicht[] ){
	double preis;
	double summe = 0.0;
	for(int i=0; i<5; i++){
		preis = 0.0;
		if ((paeckchenGewicht[i] != 0)){
			if ((paeckchenGewicht[i] <= 10)){preis += 3;}
			else{
			preis += ((paeckchenGewicht[i] - 10) * 0.45);
			preis +=  3;
			}
		}
		printf(""\nGewicht des %d. Paeckchens: %i Kilo\n"", (i+1), paeckchenGewicht[i]);
		printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"", (i+1), preis);
		summe += preis;
	}
	return summe;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
double endkosten = berechnePaketKosten( paeckchenGewicht );
printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

void shiftChar(char* p_char, int shift) {
	
	if (((*p_char >= 'A') && (*p_char <= 'Z')) || ((*p_char >= 'a') && (*p_char <= 'z')) ) {
		if(shift > 0){
			if (*p_char < 'a') {
				if ((*p_char + shift) > 'Z'){
					*p_char = ((*p_char + shift) - (26));
				} 
				else {
					*p_char += shift;
				}
			}
			else {
				if ((*p_char + shift) > 'z'){
					*p_char = ((*p_char + shift) - (26));
				} 
				else {
					*p_char += shift;
				}
			}
		} 	else {
				if (*p_char < 'a') {
			if ((*p_char + shift) < 'A'){
				*p_char = ((*p_char + shift) + (26));
			} 
			else {
				*p_char += shift;
			}
		}
		else {
			if ((*p_char + shift) < 'a'){
				*p_char = ((*p_char + shift) + (26));
			} 
			else {
				*p_char += shift;
			}
		}
			}
		
	}

}
void cipher(char str[], int shift, int maxlength){
for(int i=0; i<maxlength; i++){
	shiftChar(&(str[i]), shift);
}
}

 int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Zell,Martha,m.zell@campus.tu-berlin.de,Beendet,"18. Dezember 2021  12:09","19. Dezember 2021  21:22","1 Tag 9 Stunden","14,75","0, 1",Nein,"1, 0","pointer = &zahl;
pp = &pointer;
**pp = 42;","{3} {11} {26} {51} {208} {212} {216}","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"","""","""","""",""100"","""",""""],[""18"","""","""","""","""",""10"",""""],[""4(19)"",""1024"",""1028"","""","""","""",""""],[""5(19)"","""","""","""","""","""",""""],[""6(19)"","""","""","""","""","""",""""],[""7(19)"","""","""",""100"","""","""",""""],[""8(19)"","""","""","""",""10"","""",""""],[""9(19)"","""","""","""","""",""100"",""""],[""10(19)"","""","""",""-"","""","""",""""],[""13(19)"",""-"",""-"","""","""","""",""""],[""19"","""","""","""","""","""",""1""],[""20"","""","""","""","""","""",""""],[""21"","""","""","""","""","""",""""],[""22"","""","""","""","""","""",""""],[""23"","""","""","""","""","""",""""],[""24"","""","""","""","""","""",""""],[""28"","""","""","""","""","""",""""],[""29"","""","""","""",""-"",""-"",""-""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int *ersteZahl, int *zweiteZahl)
{
    while (*ersteZahl != *zweiteZahl)
    {
        if (*ersteZahl < *zweiteZahl)
            *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
            *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int *p1 = &ersteZahl;
    int *p2 = &zweiteZahl;

    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf(""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>

// Funktion veraendert paeckchenGewicht
void packePakete(int paeckchenGewicht[], int artikelGewicht[])
{
    int paeckchenindex = 0;
    int artikelindex = 0;
    while (artikelindex < 5)
    {
        int aGewicht = artikelGewicht[artikelindex++];
        if (aGewicht + paeckchenGewicht[paeckchenindex] <= 10)
        {
            paeckchenGewicht[paeckchenindex] += aGewicht;
        }
        else
        {
            if (paeckchenGewicht[paeckchenindex] > 0)
            {
                paeckchenindex++;
            }

            paeckchenGewicht[paeckchenindex] += aGewicht;
        }
    }
}

double berechnePaketKosten(int paeckchenGewicht[])
{
    double gesamtsumme = 0;
    for (int i = 0; i < 5; i++)
    {
        double summe = 0;
        int gewicht = paeckchenGewicht[i];
        if (gewicht <= 10 && gewicht > 0)
        {
            summe += 3;
        }
        else if (gewicht > 10)
        {
            summe += 3;
            summe += (gewicht - 10) * 0.45;
        }
        printf(""Gewicht des %i. Paeckchens: %i Kilo\n"", i + 1, gewicht);
        printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2lf Euro\n\n"", i + 1, summe);
        gesamtsumme += summe;
    }
    return gesamtsumme;
}

int main() // nicht aendern!
{
    int artikelGewicht[5];
    artikelGewicht[0] = 60;
    artikelGewicht[1] = 57;
    artikelGewicht[2] = 6;
    artikelGewicht[3] = 9;
    artikelGewicht[4] = 4;
    printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"",
           artikelGewicht[0], artikelGewicht[1], artikelGewicht[2],
           artikelGewicht[3], artikelGewicht[4]);

    int paeckchenGewicht[5] = {0, 0, 0, 0, 0};
    packePakete(paeckchenGewicht, artikelGewicht);

    double endkosten = berechnePaketKosten(paeckchenGewicht);
    printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char *p_char, int shift)
{
    int c = *p_char;
    shift = (shift + 26) % 26;
    if (c >= 'A' && c <= 'Z')
        *p_char = (c - 'A' + shift) % 26 + 'A';
    if (c >= 'a' && c <= 'z')
        *p_char = (c - 'a' + shift) % 26 + 'a';
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    for (int i = 0; i < maxlength; i++)
    {
        shiftChar(str + i, shift);
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
    char str[50] = ""Froh zu sein bedarf es wenig""; // Originaltext
    int shift = 5;
    printf(""Original: "");
    printf(""%s\n"", str);

    // Verschluesseln
    cipher(str, shift, 50);
    printf(""Verschluesselt: "");
    printf(""%s\n"", str);

    // Entschluesseln
    cipher(str, -shift, 50);
    printf(""Entschluesselt: "");
    printf(""%s\n"", str);
}"
Hellbusch,Florian,f.hellbusch@campus.tu-berlin.de,Beendet,"18. Dezember 2021  12:11","19. Dezember 2021  23:59","1 Tag 11 Stunden","0,00",-,-,-,-,-,-,-,-,-
Schaefer,Anton,anton.schaefer@campus.tu-berlin.de,Beendet,"18. Dezember 2021  16:01","19. Dezember 2021  21:50","1 Tag 5 Stunden","8,80","1, 0","0, 1","Der '&' Operator wird bei Pointer und Variablen für das Referenzieren verwendet

; Der '*' Operator wird bei Pointer und Variablen für das Dereferenzieren verwendet

; Mit dem '&' Operator kann man auf Adressen von Pointern und Variablen zugreifen

; Mit dem '*' Operator kann man auf den Inhalt von Adressen, die in Pointern gespeichert sind, zugreifen","pointer = &zahl;
pp = &pointer;
**pp = 42;","char groesse = (char) ((int*) 324 - (int*) 124);

 -> // groesse = 50; int groesse = (int) ((long) 376 - (char) 32);

 -> // groesse = 344; long groesse = (long) ((char*) 400 - (int) 200);

 -> // groesse = 200; int groesse = (int) ((long*) 376 - 32);

 -> // groesse = 120; int groesse = (int) ((long*) 200 - (long*) 100);

 -> // groesse = 12; int groesse = (int) ((char*) 100 - 4 );

 -> // groesse = 96","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"","""","""","""",""100"","""",""""],[""18"","""","""","""","""",""10"",""""],[""4(19)"",""1024"",""1028"","""","""","""",""""],[""5(19)"","""","""","""","""","""",""""],[""6(19)"","""","""","""","""","""",""""],[""7(19)"","""","""",""100"","""","""",""""],[""8(19)"","""","""","""",""10"","""",""""],[""9(19)"","""","""","""","""",""100"",""""],[""10(19)"","""","""","""","""","""",""""],[""13(19)"",""-"",""-"",""-"","""","""",""""],[""19"","""","""","""","""","""",""1""],[""20"","""","""","""","""","""",""""],[""21"","""","""","""","""","""",""""],[""22"","""","""","""","""","""",""""],[""23"","""","""","""","""","""",""""],[""24"","""","""","""","""","""",""""],[""28"","""","""","""","""","""",""""],[""29"","""","""","""",""-"",""-"",""-""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    if(*p_char >='a' && *p_char<= 'z'){
        *p_char += shift;
        if(*p_char > 'z'){
            *p_char -= 26;
        }
        else if(*p_char < 'a'){
            *p_char += 26;
        } 
    }
    if(*p_char >= 'A' && *p_char <= 'Z'){
        *p_char += shift;
        if(*p_char > 'Z'){
            *p_char += 26;
        }
        else if(*p_char < 'A'){
            *p_char += 26;
        }
    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    for (int i = 0; i < maxlength; i++){
        shiftChar(&str[i], shift);
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Lange,"Etienne Georgi",e.lange.1@campus.tu-berlin.de,Beendet,"18. Dezember 2021  17:09","19. Dezember 2021  23:59","1 Tag 6 Stunden","11,27",Nein,"Mit dem '&' Operator kann man auf Adressen von Pointern und Variablen zugreifen","1, 0","0, 1","{3} {11} {26} {51} {54} {208} {26}","[[""16"",""undef"",""undef"",""undef"",""undef"",""undef"",""undefinclude <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1=&ersteZahl;
    int* p2=&zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int j = 0;
    for (int i = 0; i < 5; ++i) {
        paeckchenGewicht[j] += artikelGewicht[i];
        if(paeckchenGewicht[j]>=10)j+=1;
        else{
            if(paeckchenGewicht[j]+artikelGewicht[i+1]>10)j+=1;
            else;
        }}





}

double berechnePaketKosten( int paeckchenGewicht[] )
{

 double kosten[5];
    for (int i = 0; i < 5; ++i) {
        if(paeckchenGewicht[i]==0)kosten[i]=0;
        else if(paeckchenGewicht[i]<=10)kosten[i]=3;
        else kosten[i]=(paeckchenGewicht[i]-10)*0.45+3;
        printf(""Gewicht des %i. Paeckchens: %i Kilo\n"",i+1,paeckchenGewicht[i]);
        printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro"",i+1,kosten[i]);
        if(i<4)printf(""\n\n"");
        else printf(""\n"");
    }
    double gkosten = kosten[0]+kosten[1]+kosten[2]+kosten[3]+kosten[4];
    return gkosten;


}

int main () // nicht aendern!
{
    int artikelGewicht[5];
    artikelGewicht[0] = 60;
    artikelGewicht[1] = 57;
    artikelGewicht[2] = 6;
    artikelGewicht[3] = 9;
    artikelGewicht[4] = 4;
    printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"",
           artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
           artikelGewicht[3],artikelGewicht[4]);

    int paeckchenGewicht[5] = {0,0,0,0,0};
    packePakete( paeckchenGewicht, artikelGewicht );

    double endkosten = berechnePaketKosten( paeckchenGewicht );
    printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift.
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
char shiftChar(char* p_char, int shift)
{
    char vs;
    if((int)p_char>='A'&&(int)p_char<='Z'){
        if(p_char+shift>'Z'){vs=p_char+shift-26;}
        else if(p_char+shift<'A'){vs=p_char+shift+26;}
        else vs=p_char+shift;
    }
    else;
    if(p_char>='a'&&p_char<='z'){
        if(p_char+shift>'z'){vs=p_char+shift-26;}
        else if(p_char+shift<'a'){vs=p_char+shift+26;}
        else vs=p_char+shift;
    }
    else;

}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben.
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    for (int i = 0; i < maxlength; ++i) {
        str[i]=shiftChar(str[i],shift);
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann.
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
    char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
    int shift = 5;
    printf(""Original: "");
    printf(""%s\n"", str);

    // Verschluesseln
    cipher(str, shift, 50);
    printf(""Verschluesselt: "");
    printf(""%s\n"", str);

    // Entschluesseln
    cipher(str, -shift, 50);
    printf(""Entschluesselt: "");
    printf(""%s\n"", str);

}"
Webb,"Alexandra Virginia",webb@campus.tu-berlin.de,Beendet,"18. Dezember 2021  19:34","19. Dezember 2021  21:08","1 Tag 1 Stunde","8,30","1, 0","Mit dem '*' Operator kann man auf den Inhalt von Adressen, die in Pointern gespeichert sind, zugreifen

; Der '&' Operator wird bei Pointer und Variablen für das Referenzieren verwendet

; Der '*' Operator wird bei Pointer und Variablen für das Dereferenzieren verwendet","pointer = &zahl;
pp = &pointer;
**pp = 42;","0, 1","{3} {11} {26} {51} {208} {212} {216}","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"","""","""","""",""100"","""",""""],[""18"","""","""","""","""",""10"",""""],[""4(19)"",""1024"",""1028"","""","""","""",""""],[""5(19)"","""","""","""","""","""",""""],[""6(19)"","""","""","""","""","""",""""],[""7(19)"","""","""",""100"","""","""",""""],[""8(19)"","""","""","""",""10"","""",""""],[""9(19)"","""","""","""","""",""100"",""""],[""11(19)"","""","""",""-"","""","""",""""],[""13(19)"",""-"",""-"","""","""","""",""""],[""19"","""","""","""","""","""",""1""],[""20"","""","""","""","""","""",""""],[""21"","""","""","""","""","""",""""],[""22"","""","""","""","""","""",""""],[""23"","""","""","""","""","""",""""],[""24"","""","""","""","""","""",""""],[""28"","""","""","""","""","""",""""],[""29"","""","""","""",""-"",""-"",""-""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1= &ersteZahl;
    int* p2= &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Gross,"Nevio Noah Chaim",n.gross.1@campus.tu-berlin.de,Beendet,"18. Dezember 2021  22:13","19. Dezember 2021  23:58","1 Tag 1 Stunde","6,22","1, 0","Der '*' Operator wird bei Pointer und Variablen für das Dereferenzieren verwendet

; Mit dem '&' Operator kann man auf den Inhalt von Adressen, die in Pointern gespeichert sind, zugreifen","pp = &zahl;
pointer = &pp;
**pointer = 42;","0, 1",-,"[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"",""-"",""-"",""-"",""100"",""-"",""-""],[""18"",""-"",""-"",""-"","""",""10"",""-""],[""19"",""-"",""-"",""-"","""","""",""-""],[""3(19)"",""1024"",""1028"",""-"","""","""",""-""],[""4(19)"","""","""",""-"","""","""",""-""],[""5(19)"","""","""",""-"","""","""",""-""],[""6(19)"","""","""",""-"","""","""",""-""],[""11(19)"","""","""",""-"","""","""",""-""],[""12"","""","""",""-"","""","""",""2""],[""13(19)"","""","""",""-"","""","""",""""],[""20"","""","""",""-"","""","""",""""],[""21"","""","""",""-"","""","""",""""],[""25"","""","""",""-"","""","""",""""],[""26"","""","""",""-"","""","""",""""],[""27"","""","""",""-"","""","""",""""],[""28"","""","""",""-"","""","""",""""],[""29"","""","""",""-"","""","""",""""],["""","""","""","""","""","""",""""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    
    int *p1 = &ersteZahl;
    int *p2 = &zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int i;
    for(i = 0; i<5; i++){
        if(artikelGewicht[i] > 10){
            paeckchenGewicht[i] = arti
        }
    }

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Löffelmann,Lukas,l.loeffelmann@campus.tu-berlin.de,Beendet,"19. Dezember 2021  11:41","19. Dezember 2021  19:19","7 Stunden 37 Minuten","14,42",Nein,"1, 0","Mit dem '*' Operator kann man auf den Inhalt von Adressen, die in Pointern gespeichert sind, zugreifen

; Mit dem '&' Operator kann man auf Adressen von Pointern und Variablen zugreifen

; Der '*' Operator wird bei Pointer und Variablen für das Dereferenzieren verwendet","0, 1","Man kann untypisierte Pointer inkrementieren, aber auch dekrementieren.; Es gibt untypisierte Pointer.; Man kann untypisierte Pointer nicht dereferenzieren.","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"","""","""","""",""100"","""",""""],[""18"","""","""","""","""",""10"",""""],[""4(19)"","""","""","""","""","""",""""],[""5(19)"",""1024"",""1028"","""","""","""",""""],[""6(19)"","""","""","""","""","""",""""],[""7(19)"","""","""",""100"","""","""",""""],[""8(19)"","""","""","""",""10"","""",""""],[""9(19)"","""","""","""","""",""100"",""""],[""10(19)"","""","""","""","""","""",""""],[""13(19)"",""-"",""-"",""-"","""","""",""""],[""19"","""","""","""","""","""",""1""],[""20"","""","""","""","""","""",""""],[""21"","""","""","""","""","""",""""],[""22"","""","""","""","""","""",""""],[""23"","""","""","""","""","""",""""],[""24"","""","""","""","""","""",""""],[""28"","""","""","""","""","""",""""],[""29"","""","""","""",""-"",""-"",""-""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    
	int* p1 = &ersteZahl;
	int* p2 = &zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
	int sum = 0;
	int index = 0;
	for(int i = 0; i < 5; i++){
		if(artikelGewicht[i] >= 10){
			paeckchenGewicht[index] = artikelGewicht[i];
			index += 1;
		}
		else{
			
			while(1){
				if( sum + artikelGewicht[i] < 11){
				sum += artikelGewicht[i];
				i++;
				}
				else{
					i--;
				break;
				}
			}
			
			paeckchenGewicht[index] = sum;
			index += 1;
			sum = 0;

		}
	}

}

double berechnePaketKosten( int paeckchenGewicht[] )
{
	double summe = 0;
	double preis;
	
	for(int i = 0; i < 5; i++){
		printf(""\nGewicht des %d. Paeckchens: %d Kilo"", i+1, paeckchenGewicht[i] );
		if(paeckchenGewicht[i] <= 10 && paeckchenGewicht[i] != 0){
			preis = 3.0d;
			summe += preis;
			printf(""\nDie Versandkosten ihres %d. Paeckchens betragen: %.2lf Euro\n"", i+1, preis);

		}
		else if (paeckchenGewicht[i] > 10){
			preis = 3.0d + (paeckchenGewicht[i] - 10) * 0.45d;
			summe+= preis;
			printf(""\nDie Versandkosten ihres %d. Paeckchens betragen: %.2lf Euro\n"", i+1, preis);

		}
	}
	return summe;

}


int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	int basis;
	int asciiNumber = (int)*p_char;

	if(asciiNumber < 123 && asciiNumber > 96){
		basis = 96;
	}
	
	else if(asciiNumber < 91 && asciiNumber > 64){
		basis = 64;
	}
	
	else{
		return;
		}
	
	asciiNumber -= basis;
	asciiNumber += shift;
	
	if(asciiNumber > 26){
			asciiNumber -= 26;
	}
	
	else if(asciiNumber < 1){
		asciiNumber += 26;
	}
	
	asciiNumber += basis;
	*p_char = (char)asciiNumber;
	
	
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(int i = 0; i < maxlength; i++){
		shiftChar(&str[i], shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Hahnen,"Leo Ole",l.hahnen@campus.tu-berlin.de,Beendet,"19. Dezember 2021  13:53","19. Dezember 2021  22:48","8 Stunden 54 Minuten","5,55","1, 0","0, 1",Nein,"pointer = &zahl;
**pp = 42;
pp = &pointer;","long groesse = (long) ((char*) 400 - (int) 200);

 -> // groesse = 200; int groesse = (int) ((char*) 100 - 4 );

 -> // groesse = 96; int groesse = (int) ((long*) 200 - (long*) 100);

 -> // groesse = 200; int groesse = (int) ((long) 376 - (char) 32);

 -> // groesse = 344; int groesse = (int) ((long*) 376 - 32);

 -> // groesse = 344; char groesse = (char) ((int*) 324 - (int*) 124);

 -> // groesse = 200","[[""16"","""","""","""","""","""",""""],[""17"","""","""","""",""100"","""",""""],[""18"","""","""","""","""",""10"",""""],[""19"","""","""","""","""","""",""""],[""20"","""","""","""","""","""",""""],[""21"","""","""","""","""","""",""""],[""22"","""","""","""","""","""",""""],[""23"","""","""","""","""","""",""""],[""24"","""","""","""","""","""",""""],[""25"","""","""","""","""","""",""""],[""13(19)"","""","""","""","""","""",""""],["""","""","""","""","""","""",""""],["""","""","""","""","""","""",""""],["""","""","""","""","""","""",""""],["""","""","""","""","""","""",""""],["""","""","""","""","""","""",""""],["""","""","""","""","""","""",""""],["""","""","""","""","""","""",""""],["""","""","""","""","""","""",""""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int *p1;
    p1 = &ersteZahl;
    int *p2;
    p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Yilmaz,"Saffet Sercan",s.yilmaz.1@campus.tu-berlin.de,Beendet,"19. Dezember 2021  14:20","19. Dezember 2021  23:59","9 Stunden 38 Minuten","9,22","1, 0","0, 1","Mit dem '&' Operator kann man auf Adressen von Pointern und Variablen zugreifen

; Mit dem '*' Operator kann man auf den Inhalt von Adressen, die in Pointern gespeichert sind, zugreifen

; Der '&' Operator wird bei Pointer und Variablen für das Referenzieren verwendet","pointer = &zahl;
pp = &pointer;
**pp = 42;","{3} {11} {26} {51} {208} {212} {216}","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"","""","""","""",""100"","""",""""],[""18"","""","""","""","""",""10"",""""],[""4(19)"",""1024"",""1028"","""","""","""",""""],[""5(19)"","""","""","""","""","""",""""],[""6(19)"","""","""","""","""","""",""""],[""7(19)"","""","""",""100"","""","""",""""],[""8(19)"",""1028"","""","""",""10"","""",""""],[""9(19)"","""",""1024"","""","""",""100"",""""],[""10(19)"","""","""","""","""","""",""""],[""13(19)"",""-"",""-"",""-"","""","""",""""],[""19"","""","""","""","""","""",""1""],[""20"","""","""","""","""","""",""""],[""21"","""","""","""","""","""",""""],[""22"","""","""","""","""","""",""""],[""23"","""","""","""","""","""",""""],[""24"","""","""","""","""","""",""""],[""28"","""","""","""","""","""",""""],[""29"","""","""","""",""-"",""-"",""-""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{

for (int j=0; j<=4;){
    for (int i=0; j<=4 || i<=4; i++){

        paeckchenGewicht[j] = paeckchenGewicht[j] + artikelGewicht[i];


        if(paeckchenGewicht[j] == 10) j++;
        if(paeckchenGewicht[j] < 10);
        if(paeckchenGewicht[j] >= 10){
            paeckchenGewicht[j] = paeckchenGewicht[j] - artikelGewicht[i];
            j++;
            i--;
        if (i == 4)break;
        }

    }

}

}

double berechnePaketKosten( int paeckchenGewicht[] )
{

  double paeckchenPreis[5];

for (int j=0; j<=4;j++){
     paeckchenPreis[j] =  3 + (0.45 * (paeckchenGewicht[j] - 10 ));

}
return paeckchenPreis[5];

}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Kulanathan,Keerthithan,k.kulanathan@campus.tu-berlin.de,Beendet,"19. Dezember 2021  14:26","19. Dezember 2021  23:48","9 Stunden 21 Minuten","10,55","1, 0",Nein,"pp = &zahl;
pointer = &pp;
**pointer = 42;","Mit dem '*' Operator kann man auf den Inhalt von Adressen, die in Pointern gespeichert sind, zugreifen

; Mit dem '&' Operator kann man auf Adressen von Pointern und Variablen zugreifen

; Der '*' Operator wird bei Pointer und Variablen für das Dereferenzieren verwendet","Man kann untypisierte Pointer nicht dereferenzieren.; Es gibt untypisierte Pointer.; Man kann untypisierte Pointer weder inkrementieren noch dekrementieren.","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"","""","""","""",""100"","""",""""],[""18"","""","""","""","""",""10"",""""],[""4(19)"",""1024"",""1028"","""","""","""",""undef""],[""5(19)"","""","""","""","""","""",""""],[""6(19)"","""","""","""","""","""",""""],[""7(19)"","""","""",""100"","""","""",""""],[""8(19)"","""","""","""",""10"","""",""""],[""10(19)"","""","""","""","""",""5\n100"",""""],[""11(19)"","""","""","""","""","""",""""],[""13(19)"",""-"",""-"",""-"","""","""",""""],[""19"","""","""","""","""","""",""1""],[""20"","""","""","""","""","""",""""],[""21"","""","""","""","""","""",""""],[""22"","""","""","""","""","""",""""],[""23"","""","""","""","""","""",""""],[""24"","""","""","""","""","""",""""],[""28"","""","""","""","""","""",""""],[""29"",""-"",""-"","""","""","""",""-""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    
 for( int i = 0; i<5; i++) 
 {
     if (artikelGewicht[i] >= 10); 
     { 
     paeckchenGewicht[i] = artikelGewicht[i];
     
      if ( artikelGewicht[i] <= 10) {
        paeckchenGewicht[i] = artikelGewicht[i]; } 
       
         if (artikelGewicht[i] + artikelGewicht[i+1] <= 10 ){
         paeckchenGewicht[i] = artikelGewicht[i]+ artikelGewicht[i+1];}
         
         if (artikelGewicht[i]+ artikelGewicht[i+1]+artikelGewicht[i+2]<=10){
         paeckchenGewicht[i] = artikelGewicht[i]+ artikelGewicht[i+1]+artikelGewicht[i+2];}
         
         if (artikelGewicht[i]+ artikelGewicht[i+1]+artikelGewicht[i+2]+artikelGewicht[i+3]<=10){
         paeckchenGewicht[i] = artikelGewicht[i]+ artikelGewicht[i+1]+artikelGewicht[i+2]
         +artikelGewicht[i+3];}
         
         if (artikelGewicht[i]+ artikelGewicht[i+1]+artikelGewicht[i+2]+artikelGewicht[i+3]
         +artikelGewicht[i+4]<=10){
         paeckchenGewicht[i] = artikelGewicht[i]+ artikelGewicht[i+1]+artikelGewicht[i+2]
         +artikelGewicht[i+3]+artikelGewicht[i+4];}
     }
         
     
     if ( artikelGewicht[i] = 0)
     { paeckchenGewicht[i] = 0; }
 }
 
 

}

double berechnePaketKosten( int paeckchenGewicht[] )
{
double PaketKosten[5];
for( int i = 0; i<5; i++){
if (paeckchenGewicht[i] > 10){ 
double Zusatzkosten;
double Zusatzgewicht;
Zusatzgewicht = paeckchenGewicht[i] - 10;
Zusatzkosten = Zusatzgewicht* 0.45; 
PaketKosten[i]= 3 + Zusatzkosten; 
}
else if (paeckchenGewicht[i] <= 10) {
PaketKosten[i]= 3; 
}
printf (""Gewicht des %x. Paeckchens: %d Kilo\n"", i+1, paeckchenGewicht[i]);
printf (""Die Versandkosten ihres %x. Paeckchens betragen %.2f Euro\n\n"", i+1, PaketKosten[i]);
}
double endkosten; 
endkosten= PaketKosten[0]+ PaketKosten[1]+ PaketKosten[2]+ PaketKosten[3] + 
PaketKosten[4]; 
return endkosten;


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>


void shiftChar(char* p_char , int shift)
{
	if (*p_char >= 65 && *p_char <= 90) 
	{
		*p_char += shift;
		
		if(*p_char > 'Z')
		{
			*p_char -= 26;
		}
		if(*p_char < 'A')
		{
			*p_char += 26;
		}
	}
	
	else if (*p_char >= 97 && *p_char <= 122)  
	{
		*p_char += shift;
		
		if(*p_char >'z')
		{
		    *p_char -= 26;
		}
		
		if(*p_char < 'a')
		{
			*p_char += 26;
		}
	}

}


void cipher(char str[], int shift, int maxlenght)
{
    if ( str[50] <= maxlenght){
	for(int i = 0; str[i] != '\0'; ++i)
	{
	    shiftChar(&str[i], shift);
	}
    }
}

int main(void)
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Krause,"Heiner Hans",heiner.h.krause@campus.tu-berlin.de,Beendet,"19. Dezember 2021  17:36","19. Dezember 2021  22:33","4 Stunden 57 Minuten","7,30","Mit dem '&' Operator kann man auf Adressen von Pointern und Variablen zugreifen

; Der '*' Operator wird bei Pointer und Variablen für das Dereferenzieren verwendet

; Mit dem '*' Operator kann man auf den Inhalt von Adressen, die in Pointern gespeichert sind, zugreifen","0, 1","pointer = &zahl;
pp = &pointer;
**pp = 42;","1, 0","{3} {11} {26} {51} {208} {212} {216}","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"","""","""","""",""100"","""",""""],[""18"","""","""","""","""",""10"",""""],[""4(19)"",""undef"",""undef"","""","""","""",""""],[""6(19)"","""","""","""","""","""",""""],[""7(19)"","""","""","""","""","""",""""],[""8(19)"","""","""","""","""","""",""""],[""9(19)"","""","""","""","""","""",""""],[""10(19)"","""","""","""","""","""",""""],[""12(19)"","""","""","""","""","""",""""],[""13(19)"","""","""","""","""","""",""""],[""19"","""","""","""","""","""",""""],[""21"","""","""","""","""","""",""""],[""23"","""","""","""","""","""",""""],[""24"","""","""","""","""","""",""""],[""26"","""","""","""","""","""",""""],[""27"","""","""","""","""","""",""""],[""28"","""","""","""","""","""",""""],[""29"","""","""","""","""","""",""""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int *p1=&ersteZahl;
    int *p2=&zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Vaidya,"Rudra Rakesh",rudra.vaidya@campus.tu-berlin.de,Beendet,"19. Dezember 2021  19:08","19. Dezember 2021  23:51","4 Stunden 42 Minuten","6,30","1, 0","0, 1",Nein,"pointer = &zahl;
**pp = 42;
pp = &pointer;","int groesse = (int) ((long) 376 - (char) 32);

 -> // groesse = 344; char groesse = (char) ((int*) 324 - (int*) 124);

 -> // groesse = 50; int groesse = (int) ((long*) 200 - (long*) 100);

 -> // groesse = 12; long groesse = (long) ((char*) 400 - (int) 200);

 -> // groesse = 200; int groesse = (int) ((long*) 376 - 32);

 -> // groesse = 120; int groesse = (int) ((char*) 100 - 4 );

 -> // groesse = 96","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"","""","""","""",""100"","""",""""],[""18"","""","""","""","""",""10"",""""],[""4(19)"","""","""","""","""","""",""undef""],[""5(19)"","""","""","""","""","""",""""],[""6(19)"","""","""","""","""","""",""""],[""7(19)"","""","""",""100"","""","""",""""],[""8(19)"",""10"","""","""","""","""",""""],[""9(19)"","""",""100"","""","""","""",""""],[""10(19)"","""","""","""","""","""",""""],[""13(19)"","""","""","""","""","""",""""],[""19"","""","""","""","""","""",""1""],[""20"","""","""","""","""","""",""""],[""21"","""","""","""","""","""",""""],[""22"","""","""","""","""","""",""""],[""23"","""","""","""","""","""",""""],[""24"","""","""","""","""","""",""""],[""28"","""","""","""","""","""",""""],[""29"","""","""","""","""","""",""""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Paterson,"Moritz Alexander",m.paterson@campus.tu-berlin.de,Beendet,"19. Dezember 2021  19:11","19. Dezember 2021  23:07","3 Stunden 56 Minuten","11,42","1, 0","0, 1","Der '&' Operator wird bei Pointer und Variablen für das Referenzieren verwendet

; Mit dem '&' Operator kann man auf Adressen von Pointern und Variablen zugreifen

; Der '*' Operator wird bei Pointer und Variablen für das Dereferenzieren verwendet

; Mit dem '*' Operator kann man auf den Inhalt von Adressen, die in Pointern gespeichert sind, zugreifen",Nein,"Man kann untypisierte Pointer inkrementieren, aber auch dekrementieren.; Man kann untypisierte Pointer nicht dereferenzieren.; Es gibt untypisierte Pointer.","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"",""-"",""-"",""-"",""100"",""-"",""-""],[""18"",""-"",""-"",""-"","""",""10"",""-""],[""4(19)"",""1024"",""1028"",""-"","""","""",""-""],[""5(19)"","""","""",""-"","""","""",""-""],[""6(19)"","""","""",""-"","""","""",""-""],[""7(19)"","""","""",""1024"","""","""",""-""],[""8(19)"",""1028"","""","""","""","""",""-""],[""9(19)"","""",""1024"","""","""","""",""-""],[""10(19)"","""","""","""","""","""",""1""],[""13(19)"","""","""","""","""","""",""""],[""20"",""undef"",""undef"",""undef"","""","""",""""],[""21"","""","""","""","""","""",""""],[""22"","""","""","""","""","""",""""],[""25"","""","""","""","""","""",""""],[""26"","""","""","""","""","""",""""],[""27"","""","""","""","""","""",""""],[""28"","""","""","""","""","""",""""],[""29"","""","""","""","""","""",""""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete(int paeckchenGewicht[],int artikelGewicht[] )
{
    int pi=0;
    int wt=0;
for (int i=0;i<5;i++){
    wt=artikelGewicht[i];
    while (artikelGewicht[i+1]+wt<=10 && i+1<5){
        wt+=artikelGewicht[i+1];
        i+=1;
    }
    paeckchenGewicht[pi]=wt;
    pi+=1;
}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double tmpcost = 0;
    double cost=0;
for (int i=0;i<5;i++){
    if (paeckchenGewicht[i]<=10){
        cost+=3;
        tmpcost=3;
    }
    else {
        cost+=(paeckchenGewicht[i]-10)*0.45+3;
        tmpcost=(paeckchenGewicht[i]-10)*0.45+3;
    }
    if (paeckchenGewicht>0){
    printf(""Gewicht des %i. Paeckchens: %i Kilo\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n\n"",i+1,paeckchenGewicht[i],i+1,tmpcost);
    }
}
return cost;
}
int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n\n"",
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);

   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );

   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""Die Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

void shiftChar(char* p_char, int shift)
{
    char val;
    if (*p_char>=65 && *p_char<=90){
        val=(shift+*p_char);
        if (val>90)val=64+(char)((int)val%90);
        if (val<65)val=91-(65-val);
        *p_char=val;
}
    if (*p_char>=97 && *p_char<=122){
        val=(shift+*p_char);
        if (val>122)val=96+(char)((int)val%122);
        if (val<97)val=123-(97-val);
        *p_char=val;
}
val=0;
}

void cipher(char str[], int shift, int maxlength)
{
for (int i;i<maxlength;i++){
    shiftChar(&str[i-1],shift);
}
}

int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig"";
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);

	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);

	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Sule,"Tanmay Amit",t.sule@campus.tu-berlin.de,Beendet,"19. Dezember 2021  19:26","19. Dezember 2021  23:58","4 Stunden 32 Minuten","9,37",Nein,"1, 0","0, 1","Der '&' Operator wird bei Pointer und Variablen für das Referenzieren verwendet

; Der '*' Operator wird bei Pointer und Variablen für das Dereferenzieren verwendet

; Mit dem '&' Operator kann man auf Adressen von Pointern und Variablen zugreifen

; Mit dem '*' Operator kann man auf den Inhalt von Adressen, die in Pointern gespeichert sind, zugreifen","{3} {11} {26} {51} {26} {51} {26}","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"","""","""","""",""100"","""",""""],[""18"","""","""","""","""",""10"",""""],[""4(19)"","""","""","""","""","""",""undef""],[""5(19)"","""","""","""","""","""",""""],[""6(19)"","""","""","""","""","""",""""],[""7(19)"","""","""",""100"","""","""",""""],[""8(19)"",""10"","""","""","""","""",""""],[""9(19)"","""",""100"","""","""","""",""""],[""10(19)"","""","""","""","""","""",""""],[""13(19)"","""","""","""","""","""",""""],[""19"","""","""","""","""","""",""1""],[""20"","""","""","""","""","""",""""],[""21"","""","""","""","""","""",""""],[""22"","""","""","""","""","""",""""],[""23"","""","""","""","""","""",""""],[""24"","""","""","""","""","""",""""],[""28"","""","""","""","""","""",""""],[""29"","""","""","""","""","""",""""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int *p1 = &ersteZahl;
    int *p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
int sum = 0;
int j = 0;
for(int i=0;i<5; i++){
	sum = artikelGewicht[i] + sum;
		if(sum>10){
			if (artikelGewicht[i]<10){
				sum = sum - artikelGewicht[i];
				paeckchenGewicht[j] = sum + paeckchenGewicht[j];
				j= j+1;
				sum = 0;
			}
			else{
				sum = artikelGewicht[i];
				paeckchenGewicht[j] = paeckchenGewicht[j] + sum ;
				j = j+1;
				sum = 0;
			}
		}
}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
double price;
double finalprice = 0.00;
for(int i=0; i<5; i++){
	if(paeckchenGewicht[i] == 0){
		price = 0.00;
	}
	else{
		if(paeckchenGewicht[i]<=10){
			price = 3.00;
		}
		else{
			int overweight = paeckchenGewicht[i] - 10;
			price = (0.45*overweight) + 3.00;
		}
	
	}
	printf(""\nGewicht des %d. Paeckchens: %d Kilo\n"", i+1, paeckchenGewicht[i]);
	printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"", i+1, price);
	finalprice = finalprice + price;
}
return finalprice;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Küster,"Lars Kilian",lars-kilian.kuester@campus.tu-berlin.de,Beendet,"19. Dezember 2021  20:07","19. Dezember 2021  23:58","3 Stunden 51 Minuten","8,80","0, 0","pointer = &zahl;
pp = &pointer;
**pp = 42;","Mit dem '*' Operator kann man auf den Inhalt von Adressen, die in Pointern gespeichert sind, zugreifen

; Mit dem '&' Operator kann man auf Adressen von Pointern und Variablen zugreifen",Nein,"Man kann untypisierte Pointer nicht dereferenzieren.; Man kann untypisierte Pointer weder inkrementieren noch dekrementieren.","[[""16"",""-"",""-"",""-"",""-"",""-"",""-""],[""17"","""","""","""",""100"","""",""""],[""18"","""","""","""","""",""10"",""""],[""4(19)"",""1024"",""1028"","""","""","""",""""],[""6(19)"","""","""","""","""","""",""""],[""7(19)"","""","""",""100"","""","""",""""],[""8(19)"","""","""","""",""10"","""",""""],[""9(19)"","""","""","""","""",""100"",""""],[""10(19)"","""","""","""","""","""",""1""],[""11(19)"","""","""",""-"","""","""",""""],[""13(19)"",""-"",""-"","""","""","""",""""],[""19"","""","""","""","""","""",""""],[""20"","""","""","""","""","""",""""],[""21"","""","""","""","""","""",""""],[""22"","""","""","""","""","""",""""],[""23"","""","""","""","""","""",""""],[""24"","""","""","""","""","""",""""],[""28"","""","""","""","""","""",""""],[""29"","""","""","""",""-"",""-"",""-""]]","#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    for(int i = 0; i < 5; i++){
        if( artikelGewicht[i] == 0){
            paeckchenGewicht[i] = 0;
        }
        if( artikelGewicht[i] >= 10 ){
            paeckchenGewicht[i] = atrikelGewicht[i];
        }
        for (int j = 0; j< 5; j++){
            if(paeckchenGewicht[i] + artikelGewicht[j] <= 10){
                paeckchenGewicht[i] = paeckchenGewicht[i] + artikelGwich [j];
            }
            else {
                paeckchenGewicht[i] = paeckchenGewicht[i];
            }
        }
    }
    printf(""Gewicht des 1. Paeckchens: %i Kilo\nDie Versandkosten ihres 1. Paeckchens betragen: 3.00 Euro"")
   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    for(int i = 0; i < 5; i++){
        double preis[5];
        if( paeckchenGewicht[i] != 0 ){
        double a = paeckchenGewicht[i] - 10;
        preis[i] = 3 + (0,46 * a);
        }
        else{
            preis[i] = 0;
        }
        printf(""Gewicht des 1. Paeckchens: %f\nDie Versandkosten ihres 1. Paeckchens betragen: %2f Euro\n"", paeckchenGewicht[0], preis[0] );
        printf(""Gewicht des 2. Paeckchens: %f\nDie Versandkosten ihres 2. Paeckchens betragen: %2f Euro\n"", paeckchenGewicht[1], preis[1] );
        printf(""Gewicht des 3. Paeckchens: %f\nDie Versandkosten ihres 3. Paeckchens betragen: %2f Euro\n"", paeckchenGewicht[2], preis[2] );
        printf(""Gewicht des 4. Paeckchens: %f\nDie Versandkosten ihres 4. Paeckchens betragen: %2f Euro\n"", paeckchenGewicht[3], preis[3] );
        printf(""Gewicht des 5. Paeckchens: %f\nDie Versandkosten ihres 5. Paeckchens betragen: %2f Euro\n"", paeckchenGewicht[4], preis[4] );
    }

   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    int array[50]
    p_char

	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
