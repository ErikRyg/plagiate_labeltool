Nachname,Vorname,Antwort 8,Antwort 9
Name_432,VName_432,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
	int	intParcelNum	= 0,
		intParcelWeight,
		intProductNum	= 0,
		intArrSize		= 5;//(sizeof artikelGewicht / sizeof *artikelGewicht);;
	
	while(intProductNum < intArrSize){
		intParcelWeight = 0;
		// printf(""intArrSize: %i product #%i (%i kg) parcel #%i parcelweight %i kg\n"", intArrSize, intProductNum, artikelGewicht[intProductNum], intParcelNum, intParcelWeight);
		
		if(artikelGewicht[intProductNum] >= 10){
			// printf(""Packing product #%i (%i kg) into parcel #%i\n"", intProductNum, artikelGewicht[intProductNum], intParcelNum);
			paeckchenGewicht[intParcelNum] += artikelGewicht[intProductNum];
			intProductNum++;
			intParcelNum++;
			intParcelWeight = 0;
		}else{
			while(intParcelWeight + artikelGewicht[intProductNum] <= 10 && intProductNum < intArrSize){
				// printf(""Packing product #%i (%i kg) into parcel #%i\n"", intProductNum, artikelGewicht[intProductNum], intParcelNum);
				paeckchenGewicht[intParcelNum] += artikelGewicht[intProductNum];
				intParcelWeight += artikelGewicht[intProductNum];
				intProductNum++;
			}
			// intParcelWeight = 0;
			intParcelNum++;
		}
	}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
	double fCost = 0.0;
	int intParcelNum, intParcelWeight;
	
	for (intParcelNum = 0; intParcelNum < 5; intParcelNum++){
		intParcelWeight = paeckchenGewicht[intParcelNum];
		printf(""Gewicht des %i. Paeckchens: %i Kilo\n"", intParcelNum+1, paeckchenGewicht[intParcelNum]);
		printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n\n"", intParcelNum+1, (intParcelWeight > 10 ? 3+(intParcelWeight-10)*.45 : 3));
		fCost += (intParcelWeight > 10 ? 3+(intParcelWeight-10)*.45 : 3);
		// printf(""fCost: %f\n"", fCost);
	}
	
	return fCost;
}

int main () // nicht aendern!
{
	int artikelGewicht[5] = {60, 57, 6, 9, 4};
	// int artikelGewicht[5] = {1, 2, 3, 5, 10};
	// artikelGewicht[0] = 60;
	// artikelGewicht[1] = 57;
	// artikelGewicht[2] = 6;
	// artikelGewicht[3] = 9;
	// artikelGewicht[4] = 4;
	printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
							artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
							artikelGewicht[3],artikelGewicht[4]);
	
	int paeckchenGewicht[5] = {0,0,0,0,0};
	packePakete( paeckchenGewicht, artikelGewicht );
	// printf(""\nPaketgewichte: %d, %d, %d, %d, %d.\n"", 
							// paeckchenGewicht[0],paeckchenGewicht[1],paeckchenGewicht[2],
							// paeckchenGewicht[3],paeckchenGewicht[4]);
	double endkosten = berechnePaketKosten( paeckchenGewicht );
	printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
	
	// int b[5] = {1,2,3,5,10};
	// printf(""%lf\n"", berechnePaketKosten(b));
}","#include <stdio.h>
#include <stdlib.h>
// #include <./tools.h>

// #include <>//Regular Expressions for shorter (aka harder to do maintenance on) code?


/*
	maxLength ren intMaxLength
	intShift	ren shift
*/

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert intShift uebergeben.
 * intShiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert intShift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int intShift){
	//A-Z:65-90;a-Z:97-122
	
	if((*p_char >= 65) && (*p_char <= 90)){//A-Z
		if(*p_char+intShift < 65){
			*p_char = *p_char + intShift + 26;
		}else if(*p_char+intShift > 90){
			*p_char = *p_char + intShift - 26;
		}else{
			*p_char = *p_char + intShift;
		}
	}else if((*p_char >= 97) && (*p_char <= 122)){//a-z
		if(*p_char+intShift < 97){
			*p_char = *p_char + intShift + 26;
		}else if(*p_char+intShift > 122){
			*p_char = *p_char + intShift - 26;
		}else{
			*p_char = *p_char + intShift;
		}
	}else{
		// % - characters outside of [A-Za-Z] are not to be changed
	}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge intMaxLength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die intShiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int intShift, int intMaxLength){
	for (int i=0;i<intMaxLength;i++){
		shiftChar(&str[i], intShift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main(){
	char str[] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	// char str[] = ""AZ   az""; 	// Originaltext
	// char str[] = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ   abcdefghijklmnopqrstuvwxyz""; 	// Originaltext
	int intArrMoepSize = (sizeof str / sizeof *str);
	int intShift = 5;
	// printf(""O: "");
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, intShift, intArrMoepSize);
	// printf(""V: "");
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -intShift, intArrMoepSize);
	// printf(""E: "");
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
	
	
	// char string[] = ""Dieser_Text_ist_geheim"";
	// cipher(string, -4, 22);
	// printf(""%s\n"", string);
	
	// char letter[] = ""b"";
	// shiftChar(letter, 2);
	// printf(""%c\n"", *letter);
}"
Name_433,VName_433,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int* paeckchenGewicht, int* artikelGewicht )
{
	for(int i =0; i<5; i++){
	*(paeckchenGewicht+i) = *(artikelGewicht+i);} 
	int c =0;
	for(int i=0;i<4; i++){
		
		if(*(paeckchenGewicht+i)+*(paeckchenGewicht+i+1)<=10)
		{ 
			*(paeckchenGewicht+i)=*(paeckchenGewicht+i)+*(paeckchenGewicht+i+1);
				for(int j=i+1;j<5;j++){
				*(paeckchenGewicht+j)=*(paeckchenGewicht+j+1);
				}
			*(paeckchenGewicht+4)=0; c++;
			 if(c+i<=5){i=i-1;}
		}
		   
	}	
	
}

double berechnePaketKosten( int* paeckchenGewicht)
{
	double preis=0.0;
	for(int i =0; i<5; i++){
		double b=0;
		if(*(paeckchenGewicht+i)==0){}
		else if(*(paeckchenGewicht+i)<=10){b+=3.0;}
		else{ 
			int a =*(paeckchenGewicht+i);
			b=3.0+(a-10)*0.45;
		}
	printf(""Gewicht des %i. Paeckchens: %d Kilo\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n\n"", i+1, *(paeckchenGewicht+i), i+1, b);
		
		preis+=b;
		
	}
	
	return preis;

}


int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{	
	char shi = (char)shift; 
	
	if(*p_char>64 && *p_char<91){
		if(*p_char+shi>90){shi=shi-26;}
		else if(*p_char+shi<65){shi=26+shi;}
	
	*p_char +=shi;
	}
	if(*p_char>96 && *p_char<123){
		if(*p_char+shi>122){shi=shi-26;}
		else if(*p_char+shi<97){shi=26+shi;} 
	
	*p_char +=shi;
	}
	
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char* str, int shift, int maxlength)
{	
	for(int i=0; i<maxlength; i++)
	{
		char letter = *(str+i);
		shiftChar(&letter, shift);
		
		*(str+i)=letter;
	} 
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_434,VName_434,"#include <stdio.h>
#include <stdlib.h>

double berechneEinzelnesPaketKosten( int gewicht )
{
    if (gewicht > 10) {
        gewicht -= 10;
        double x = gewicht * 0.45;
        return 3 + x;
    } else {
        return 3;
    }
}

// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int paketNr = 1;
    int paketGewicht = 0;
    int* paeckchenGewichtPtr = paeckchenGewicht;

    paketGewicht = artikelGewicht[0];
    for (int i = 1; i < 5; i++) {
        if (paketGewicht + artikelGewicht[i] > 10) {
            *paeckchenGewichtPtr = paketGewicht;
            paketNr++;
            paketGewicht = artikelGewicht[i];
            paeckchenGewichtPtr++;
        } else {
            paketGewicht += artikelGewicht[i];
        }
    }
    *paeckchenGewichtPtr = paketGewicht;
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double kosten;
    double endkosten = 0;
    for (int i = 0; i < 5; i++) {
        kosten = berechneEinzelnesPaketKosten(paeckchenGewicht[i]);
        printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i + 1, paeckchenGewicht[i]);
        printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i + 1, kosten);
        endkosten += kosten;
    }
    return endkosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    if (*p_char >= 'A' && *p_char <= 'Z') {
        if (shift >= 0) {
            for (int i = 0; i < abs(shift); i++) {
                *p_char += 1;
                if (*p_char > 'Z') {
                    *p_char = 'A';
                }
            }
        } else {
            for (int i = 0; i < abs(shift); i++) {
                *p_char -= 1;
                if (*p_char < 'A') {
                    *p_char = 'Z';
                }
            }
        }
    } else if (*p_char >= 'a' && *p_char <= 'z') {
        if (shift >= 0) {
            for (int i = 0; i < abs(shift); i++) {
                *p_char += 1;
                if (*p_char > 'z') {
                    *p_char = 'a';
                }
            }
        } else {
            for (int i = 0; i < abs(shift); i++) {
                *p_char -= 1;
                if (*p_char < 'a') {
                    *p_char = 'z';
                }
            }
        }
    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	char* p_str = str;
    for (int i = 0; i < maxlength; i++) {
        shiftChar(p_str, shift);
        p_str++;
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_435,VName_435,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{   int j = 0;
    for (int i=0; i<5; i++){
        if (artikelGewicht[j]>10){
            paeckchenGewicht[j]= artikelGewicht[j];
            j++;
        }
        else {
            int a=0;
            //int* p_a = &a; 
            while (a <= 10 && j<=4){
                a += artikelGewicht[j];
                j++; 
                //printf(""1.%d\n"",a);
                //printf(""2.%d\n"",j);
            }
            if ( a> 10){
                j--; 
                paeckchenGewicht[i] = a - artikelGewicht[j];
            } 
            else{
                paeckchenGewicht[i] = a;
            }
        if(j<= 4){
            continue; 
        } else {
            break; 
        } 
        

        }
    }


}

double berechnePaketKosten( int paeckchenGewicht[] )
{   double gesamtpreis= 0; 
    for (int i= 0; i<5; i++){
        double preis = 0; 
        if (paeckchenGewicht[i]>10){
            preis+= 3 + (paeckchenGewicht[i]-10)*0.45;
        } 
        if (paeckchenGewicht[i]<=10 && paeckchenGewicht[i] != 0) {
            preis += 3; 
        }
        printf(""Gewicht des %d. Paeckchens: %i  Kilo\n"", i+1, paeckchenGewicht[i]);
        printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n\n"", i+1, preis);
        gesamtpreis += preis;
    } 

    return gesamtpreis; 


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	if ( *p_char>= 'A' && *p_char<= 'Z'){
        *p_char += shift; 
        if (*p_char< 'A'){
            char a;
            a= ( 'A' -*p_char)-1;
            *p_char = 'Z' - a;
        }
        if (*p_char> 'Z' ){
            char a;
            a= (*p_char - 'Z')-1;
            *p_char = 'A'+ a;
        }
    }
    if (*p_char >= 'a' && *p_char <= 'z'){
        int b = *p_char; 
        if ((b + shift) > 64){
            b += shift;
            if (b< 'a'){
            char a;
            a= ( 'a'- b )-1;
            *p_char = 'z' - a; 
        }
        if (b> 'z'){
            char a;
            a= (b - 'z')-1;
            *p_char = 'a' + a; 
        }
        } else {
            *p_char += shift;
        }


    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    for(int i =0; i<maxlength; i++){ 
        shiftChar(&str[i], shift );
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 6;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);


}"
Name_436,VName_436,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_437,VName_437,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    shift = shift % 26;
	if(shift>=0){
	if(*p_char >= 'A' && *p_char <= 'Z'){
	    *p_char+=shift;
	    if(*p_char>'Z'){
	        *p_char-=26;
	    }
	}
	else if(*p_char >= 'a' && *p_char <= 'z'){
	    *p_char+=shift;
	    if(*p_char>'z' || *p_char<'a'){
	        *p_char-=26;
	    }
	}
    }
    else if(shift<0){
        if(*p_char >= 'A' && *p_char <= 'Z'){
	    *p_char+=shift;
	    if(*p_char<'A'){
	        *p_char+=26;
	    }
	}
	else if(*p_char >= 'a' && *p_char <= 'z'){
	    *p_char+=shift;
	    if(*p_char<'a'){
	        *p_char+=26;
	    }
	}
    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(int i=0;i<maxlength;i++){
	    shiftChar(&str[i], shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_438,VName_438,"#include <stdio.h>
    #include <stdlib.h>
    
    
    // Funktion veraendert paeckchenGewicht
    void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
    {
    
    
       /* -----------------------------
       hier muesst ihr implementieren
        ----------------------------- */
    
    }
    
    double berechnePaketKosten( int paeckchenGewicht[] )
    {
    
    
       /* -----------------------------
       hier muesst ihr implementieren
        ----------------------------- */
    
    
    }
    
    int main () // nicht aendern!
    {
       int artikelGewicht[5];
       artikelGewicht[0] = 60;
       artikelGewicht[1] = 57;
       artikelGewicht[2] = 6;
       artikelGewicht[3] = 9;
       artikelGewicht[4] = 4;
       printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                         artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                         artikelGewicht[3],artikelGewicht[4]);
       
       int paeckchenGewicht[5] = {0,0,0,0,0};
       packePakete( paeckchenGewicht, artikelGewicht );
       
       double endkosten = berechnePaketKosten( paeckchenGewicht );
       printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
    }","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift.
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
// uppercase ASCII-Zahlen: A = 65 - Z = 90
// lowercase ASCII-Zahlen: a = 97 - z = 122
/*
Mögliche Fälle:
1. Wird *p_char mit shift addiert, bleibt die ASCII-Zahl im vorgegebenen Wertebereich.
	Folge: Erhöhe den ASCII-Wert um shift.
2. Wird *p_char mit shift addiert, wird die ASCII-Zahl größer als der vorgegebene Maximalwert.
	Folge: Erhöhe den ASCII-Wert um shift und subtrahiere den Wert um 26.
3. Wird *p_char mit shift addiert, wird die ASCII-Zahl kleiner als der vorgegebene Minimalwert.
	Folge: Erhöhe den ASCII-Wert um shift und addiere den Wert um 26.
*/
	if((*p_char+shift >= 65 && *p_char+shift <= 90) ^ (*p_char+shift >= 97 && *p_char+shift <= 122)){
		*p_char += shift;
		}
	else if(*p_char+shift > 90 && *p_char < 97){
		*p_char+=(shift-26);
	}
	else if(*p_char+shift > 122){
		*p_char+=(shift-26);
	}
	else if(*p_char+shift > 65){
		*p_char+=(shift+26);
	}
	}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben.
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(int i = 0; i < maxlength; i++){
		char* p_char;
		p_char = &str[i];
		shiftChar(p_char, shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann.
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);

	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);

	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_439,VName_439,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_440,VName_440,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht



void packePakete(int paeckchenGewicht[], int artikelGewicht[])//(0,Pak)
{
    int indexA = 0;
    for(int i=0; i <5; i++)
    {
        if((paeckchenGewicht[indexA]+artikelGewicht[i]) <= 10)
        {
            paeckchenGewicht[indexA]+=artikelGewicht[i];
        }
        else
        {
            if(paeckchenGewicht[indexA]==0)
            {
                paeckchenGewicht[indexA]=artikelGewicht[i];
                indexA++;
            }
            else
            {
                indexA++;
                paeckchenGewicht[indexA]=artikelGewicht[i];
            }
        }
    }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    float pago=0, total=0;
    for(int i=0; i<5; i++)
    {
        pago=0;
        printf(""Gewicht des %i. Paeckchens: %i Kilo\n"",i+1,paeckchenGewicht[i]);
        if(paeckchenGewicht[i]<=10)
        {
            pago=3.0;
        }
        else
        {
            pago=3.0+((float)paeckchenGewicht[i]-10)*0.45;
        }
        printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",i+1,pago);
        total+=pago;
    }
    return total;

}

/*int main () // nicht aendern!
{
    int artikelGewicht[5];
    artikelGewicht[0] = 60;
    artikelGewicht[1] = 57;
    artikelGewicht[2] = 6;
    artikelGewicht[3] = 9;
    artikelGewicht[4] = 4;
    printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"",
           artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
           artikelGewicht[3],artikelGewicht[4]);

    int paeckchenGewicht[5] = {0,0,0,0,0};
    packePakete( paeckchenGewicht, artikelGewicht );

    double endkosten = berechnePaketKosten( paeckchenGewicht );
    printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}*/","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift.
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    if(*p_char>=65 && *p_char<=90)
    {
        while((*p_char+shift)>90)
		{
        	*p_char = *p_char-26;
		}
		while((*p_char+shift)<65)
		{
        	*p_char = *p_char+26;
		}
		*p_char += shift;
    }
    if(*p_char>=97 && *p_char<=122)
    {
        while((*p_char+shift)>122)
		{
        	*p_char = *p_char-26;
		}
		while((*p_char+shift)<97)
		{
        	*p_char = *p_char+26;
		}
		*p_char += shift;
    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben.
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    for(int i=0;i<maxlength;i++)
    {
        shiftChar(&str[i], shift);
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann.
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
    char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
    int shift = 5;
    printf(""Original: "");
    printf(""%s\n"", str);

    // Verschluesseln
    cipher(str, shift, 50);
    printf(""Verschluesselt: "");
    printf(""%s\n"", str);

    // Entschluesseln
    cipher(str, -shift, 50);
    printf(""Entschluesselt: "");
    printf(""%s\n"", str);
}"
Name_441,VName_441,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
int packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int i = 0;
    for( int i=0; i<5; ++i){
        paeckchenGewicht[i] = artikelGewicht[i];
    }
    return paeckchenGewicht[i];
}

double berechnePaketKosten( int paeckchenGewicht[] )
{

    double summe =0;
    int i;
    double Preis =0;
    for(i=0; i<5; ++i){
        if(paeckchenGewicht[i] <= 10) Preis = 3.0;
        
        if(paeckchenGewicht[i] > 10){
            Preis = (paeckchenGewicht[i] - 10.0);
            
            Preis = Preis * 0.45;
            Preis = Preis + 3.0; 
        }
        summe+=Preis;
        int index = i+1;
        printf(""Gewicht des %d. Paeckchens: %d Kilo\nDie Versandkosten ihres %d. Paeckchens betragen: %.2f Euro."",index ,paeckchenGewicht[i], index, summe);
    }
return summe;

}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift) {
      if ('A' <= *p_char && *p_char <= 'Z')  {
    *p_char += shift;
    if (*p_char > 'Z') *p_char -= 26;
    if (*p_char < 'A') *p_char += 26;
    }
    else if ('a' <= *p_char && *p_char <= 'z')  {
    if(*p_char+shift < 'a') shift += 26;
    if(*p_char+shift > 'z') shift -= 26;
    *p_char += shift;
}
    }

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength) {
        	for (int i =0; i<maxlength; ++i) shiftChar(&str[i],shift);
    }
/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main() {
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_442,VName_442,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
	int weight = 0;
	int current = 0;
	int package = 0;
	while( current < 4){
        int one = 0;
        int two = 0;
		weight += artikelGewicht[current];
        if (weight <= 10){
            one = 1;
        }
        if(weight + artikelGewicht[current + 1] <= 10){
            two = 1;
        }
		if(!one || !two){
			paeckchenGewicht[package] = weight;
			weight = 0;
			package += 1;
		}
		current += 1;
	}
	if(weight == 0){
		paeckchenGewicht[package] = artikelGewicht[4];
	} else{
		paeckchenGewicht[package + 1] = weight + artikelGewicht[4];
	}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double sum = 0;
    for (int i = 0; i < 5; i++){
        if(paeckchenGewicht[i] != 0){
            int over = ((paeckchenGewicht[i] - 10) > 0);
            double currentCost = 3 + over * (paeckchenGewicht[i] - 10)* 0.45;
            printf(""Gewicht des %d. Paeckchens: %d Kilo\n"", i + 1, paeckchenGewicht[i]);
            printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"", i + 1, currentCost);
            sum += currentCost;
        }
    }
    return sum;
}


int main () // nicht aendern!
{
    int artikelGewicht[5];
    artikelGewicht[0] = 60;
    artikelGewicht[1] = 57;
    artikelGewicht[2] = 6;
    artikelGewicht[3] = 9;
    artikelGewicht[4] = 4;
    printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"",
           artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
           artikelGewicht[3],artikelGewicht[4]);

    int paeckchenGewicht[5] = {0,0,0,0,0};
    packePakete( paeckchenGewicht, artikelGewicht );

    double endkosten = berechnePaketKosten( paeckchenGewicht );
    printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift.
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    if(*p_char >= 'a' && *p_char <= 'z'){
        if(*p_char + shift < 'a'){
            *p_char += shift;
            *p_char += 26;
        } else if(*p_char + shift > 'z'){
            *p_char += shift;
            *p_char -= 26;
        } else if (*p_char + shift < 0){
            *p_char -= 26;
            *p_char += shift;
        }else{
            *p_char += shift;
        }
    }else{
        *p_char += shift;
        if(*p_char < 'A'){
            *p_char += 26;
        } else if(*p_char > 'Z'){
            *p_char -= 26;
        }
    }

}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben.
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    int i = 0;
    while(i < maxlength && str[i] != '\0'){
        if ((str[i] >= 'a' && str[i] <= 'z') || (str[i] >= 'A' && str[i] <= 'Z')){
            shiftChar(&str[i], shift);
        }
        i += 1;
    }
    // ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann.
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
    char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
    int shift = 5;
    printf(""Original: "");
    printf(""%s\n"", str);

    // Verschluesseln
    cipher(str, shift, 50);
    printf(""Verschluesselt: "");
    printf(""%s\n"", str);

    // Entschluesseln
    cipher(str, -shift, 50);
    printf(""Entschluesselt: "");
    printf(""%s\n"", str);
}"
Name_443,VName_443,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
	for(int i = 0; i < 5; i++){
		if(artikelGewicht[i] > 10){
			paeckchenGewicht[i] = artikelGewicht[i];
		}
		else if (artikelGewicht[i] + artikelGewicht[i+1] <= 10){
				paeckchenGewicht[i] = artikelGewicht[i] + artikelGewicht[i+1];
				artikelGewicht[i+1] = 0;				
			if (paeckchenGewicht[i] + artikelGewicht[i+2] <= 10) {
					paeckchenGewicht[i] += artikelGewicht[i+2];
					artikelGewicht[i+2] = 0;
					}
					else break;
				}
			else {
			paeckchenGewicht[i] = artikelGewicht[i];
			}
	
	}


}

double berechnePaketKosten( int paeckchenGewicht[] )
{
	double PaketKosten[5] = {0,0,0,0,0};
	
	for(int i = 0; i < 5; i++){
		if(paeckchenGewicht[i] > 10){
			printf(""Gewicht des %i. Paeckchens: %i Kilo\n"", i+1, paeckchenGewicht[i]);
			PaketKosten[i] = (paeckchenGewicht[i] - 10)*0.45  + 3;
			printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n\n"", i+1, PaketKosten[i]);
		}
		else {
			printf(""Gewicht des %i. Paeckchens: %i Kilo\n"", i+1, paeckchenGewicht[i]);
			PaketKosten[i] = 3; 
			printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n\n"", i+1, PaketKosten[i]);
		}
	}
	
	double endkosten = PaketKosten[0] + PaketKosten[1] + PaketKosten[2] + PaketKosten[3] + PaketKosten[4];
	return endkosten;

}

int main () // nicht aendern!
{

   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{

	if(*p_char >= 'a' && *p_char <= 'z'){
		/*
		char c = *p_char - 'a';
		c += shift;
		c = c % 26;
		*p_char = c + 'a';
		*/
		*p_char += shift;
		if ( *p_char < 'a') *p_char = *p_char + 'z' - 'a' + 1;;
		if ( *p_char > 'z') *p_char = *p_char - 'z' + 'a' - 1;
	}
	if(*p_char >= 'A' && *p_char <= 'Z'){
		/*
		char c = *p_char - 'A';
		c += shift;
		c = c % 26;
		*p_char = c + 'A';
		*/


		*p_char += shift;
		if ( *p_char < 'A') *p_char = *p_char + 'Z' - 'A' + 1;
		if ( *p_char > 'Z') *p_char = *p_char - 'Z' + 'A' - 1;
		 
	}

}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
 for (int i = 0; i < maxlength; i++){
	 shiftChar( &str[i], shift);
 }
 
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_444,VName_444,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] ){
    for (int i = 0; i < 5; i++) {
        paeckchenGewicht[i] = artikelGewicht[i];
        int j = i + 1;
        while ((paeckchenGewicht[i] + artikelGewicht[j]) <= 10 && j < 5){
            paeckchenGewicht[i] += artikelGewicht[j];
            artikelGewicht[j] = 0;
            j++;
            }
        
    }
}


double berechnePaketKosten( int paeckchenGewicht[] ){
    double ek = 0;
    for (int i = 0; i < 5; i++) {
        double pk = 3;
        if (paeckchenGewicht[i] > 0) {
            if ( paeckchenGewicht[i] > 10) pk += 0.45 * (paeckchenGewicht[i] - 10);
            ek += pk;
            printf(""Gewicht des %d. Paeckchens: %d Kilo \nDie Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"", i+1, paeckchenGewicht[i], i+1, pk );
        }
    }
    return ek;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"",
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift.
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift){
    int value = *p_char;
    if ('A' <= value && value <= 'Z') {
        value += shift;
        if (!(value <= 'Z')) value -= ('Z' - 'A'+1) ;
        if (!('A' <= value)) value += ('Z' - 'A'+1) ;
    }
    else if ('a' <= value && value <= 'z') {
        value += shift;
        if (!(value <= 'z')) value -= ('z' - 'a'+1) ;
        if (!('a' <= value)) value += ('z' - 'a'+1) ;
    }
    *p_char = value;
}
/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben.
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength){
    for (int i = 0; i < maxlength; i++) {
        shiftChar(&str[i], shift);
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann.
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
    char str[50] = ""Froh zu sein bedarf es wenig"";     // Originaltext
    int shift = 5;
    printf(""Original: "");
    printf(""%s\n"", str);
    
    // Verschluesseln
    cipher(str, shift, 50);
    printf(""Verschluesselt: "");
    printf(""%s\n"", str);
    
    // Entschluesseln
    cipher(str, -shift, 50);
    printf(""Entschluesselt: "");
    printf(""%s\n"", str);
}"
Name_54,VName_54,"#include <stdio.h>

int main()
{
printf(""Artikelgewichte: 60, 57, 6, 9, 4.\n\n"");

printf(""Gewicht des 1. Paeckchens: 60 Kilo\n"");
printf(""Die Versandkosten ihres 1. Paeckchens betragen: 25.50 Euro\n\n"");

printf(""Gewicht des 2. Paeckchens: 57 Kilo\n"");
printf(""Die Versandkosten ihres 2. Paeckchens betragen: 24.15 Euro\n\n"");

printf(""Gewicht des 3. Paeckchens: 6 Kilo\n"");
printf(""Die Versandkosten ihres 3. Paeckchens betragen: 3.00 Euro\n\n"");

printf(""Gewicht des 4. Paeckchens: 9 Kilo\n"");
printf(""Die Versandkosten ihres 4. Paeckchens betragen: 3.00 Euro\n\n"");

printf(""Gewicht des 5. Paeckchens: 4 Kilo\n"");
printf(""Die Versandkosten ihres 5. Paeckchens betragen: 3.00 Euro\n\n"");

printf(""Die Gesamtsumme ihrer Paeckchen betraegt: 58.65 Euro."");
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift){
	if(*p_char >= 'A' && *p_char <= 'Z'){
		if(*p_char + shift >'Z'){
			*p_char = 'A' + shift - ('Z' - *p_char +1);
		} else if(*p_char + shift < 'A') {
			*p_char = 'Z' + shift -('A' - *p_char -1);
		} else {
			*p_char += shift;
		}
	}
	
	if(*p_char >='a' && *p_char <='z'){
		if(*p_char + shift >'z'){
			*p_char = 'a' + shift - ('z' - *p_char + 1);
	
		} else if(*p_char + shift < 'a') {
			*p_char = 'z' + shift -('a' - *p_char -1);
		} else {
			*p_char += shift;
		}
	}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength){
	
	for(int i=0; i < maxlength; i++)
		shiftChar(&str[i], shift);
}
/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_445,VName_445,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
for (int a=0; a<=4; a++){
	if (artikelGewicht[a] >= 10) {
		paeckchenGewicht[a] = artikelGewicht[a];
	}
	else if  ((a+1)<=4&& artikelGewicht[a+1] +artikelGewicht[a] <= 10) {
		paeckchenGewicht [a] = artikelGewicht[a+1] + artikelGewicht[a];
	}
	else if ((a-1)>0 && artikelGewicht[a-1] +artikelGewicht[a] <= 10) {
		paeckchenGewicht[a]= artikelGewicht[a-1] + artikelGewicht[a];
	}
	else {
		paeckchenGewicht[a] = artikelGewicht[a];
	}
}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
double endkosten= 0;
for (int i=1; i<=5; i++){
	double versandkosten=0;
	if (paeckchenGewicht[i-1]<=10) {
	versandkosten += 3.0;
	endkosten += versandkosten;
	printf(""\n"");
	printf(""Gewicht des %i. Paeckchens: %i Kilo \n"", i, paeckchenGewicht[i-1]);
	printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro \n "", i, versandkosten);
		}
	else if (paeckchenGewicht[i-1] >10){
	versandkosten = 3 + (paeckchenGewicht[i-1]-10)*0.45;
	endkosten += versandkosten;
	printf(""\n"");
	printf(""Gewicht des %i. Paeckchens: %i Kilo \n"", i, paeckchenGewicht[i-1]);
	printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro \n "", i, versandkosten);
	}
	}
return endkosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift){
	if(*p_char >='a' && *p_char <='z'){
		if(*p_char + shift >'z'){
			*p_char = 'a' + shift - ('z' - *p_char + 1);
		} 
		else if(*p_char + shift < 'a') {
			*p_char = 'z' + shift -('a' - *p_char -1);
		} 
		else {
			*p_char = *p_char + shift;
		}
	}
	else if(*p_char >= 'A' && *p_char <= 'Z'){
		if(*p_char + shift >'Z'){
			*p_char = 'A' + shift - ('Z' - *p_char +1);
		} 
		else if(*p_char + shift < 'A') {
			*p_char = 'Z' + shift -('A' - *p_char -1);
		} 
		else {
			*p_char = *p_char + shift;
		}
	}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength){
	int i = 0;
	while ( i< maxlength) {
		shiftChar(&str[i],shift);
		i ++;
	}
}
/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_446,VName_446,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    for(int i=0; i<=4; i++){
// if(artikelGewicht[i] <= 10){
            if(artikelGewicht[i]+artikelGewicht[i+1] <= 10){
                paeckchenGewicht[i] = artikelGewicht[i] + artikelGewicht[i+1];
            }
//}
        else{
            paeckchenGewicht[i] = artikelGewicht[i];
        }
    }


}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    float Packetkosten[5];
    float endkosten = 0;
    for(int i=0; i<=4; i++){
        if(paeckchenGewicht[i]>10){
            Packetkosten[i] = 3 + (paeckchenGewicht[i] - 10) * 0.45;
        }
        else{
            Packetkosten[i] = 3;
        }
        
        endkosten = endkosten + Packetkosten[i];
        
        printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i+1, paeckchenGewicht[i]);
        printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, Packetkosten[i]);
    }
    return endkosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_76,VName_76,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{

int paketnr = 0;
double paketkosten = 0;

for (int i=0; i < 5; i++){

if ( (paeckchenGewicht[paketnr] + artikelGewicht[i]) > 10)
{
		paketnr = paketnr + 1;
		paeckchenGewicht[paketnr] =  artikelGewicht[i];
		
	if (paeckchenGewicht[paketnr] < 10)
	{
	paketkosten = 3;
	}

	else
	{
	paketkosten = (3 + ((paeckchenGewicht[paketnr] - 10) * 0.45));
	}

		

		printf(""\nGewicht des %d. Paeckchens: %d Kilo"", paketnr, paeckchenGewicht[paketnr] );
		printf(""\nDie Versandkosten ihres %d. Paeckchen betragen: %.2f Euro\n"", paketnr, paketkosten);
}
else
{

	if ( (paeckchenGewicht[paketnr] + artikelGewicht[i]) < 11)
	{
		paeckchenGewicht[paketnr] = paeckchenGewicht[paketnr] + artikelGewicht[i];
	}
	else 
	{
		
		paketnr = paketnr + 1;
		paeckchenGewicht[paketnr] = paeckchenGewicht[paketnr] + artikelGewicht[i];
		
	}
	if (paeckchenGewicht[paketnr] < 10)
	{
	paketkosten = 3;
	}

	else
	{
	paketkosten = (3 + ((paeckchenGewicht[paketnr] - 10) * 0.45));
	}

	printf(""\nGewicht des %d. Paeckchens: %d Kilo"", paketnr, paeckchenGewicht[paketnr] );
	printf(""\nDie Versandkosten ihres %d. Paeckchen betragen: %.2f Euro\n"", paketnr, paketkosten);
}
}

}

double berechnePaketKosten( int paeckchenGewicht[] )
{
double porto = 0;

for ( int a = 0 ; a < 5 ; a++ )
{

if (paeckchenGewicht[a] < 10)
{
porto = porto + 3;
}

else
{
porto = porto + (3 + ((paeckchenGewicht[a] - 10) * 0.45));
}

}
  
return porto;

  


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_447,VName_447,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] ) {
    int z = 0;
    for (int i = 0; i < 5; ++i) {
        if(artikelGewicht[i] > 10) {
            //printf(""Arikelgewicht: %i - Iteration: %i \n"", artikelGewicht[i], i);
            paeckchenGewicht[z] += artikelGewicht[i];
            //printf(""Paketgewicht: %d - Iteration: %i\n"",paeckchenGewicht[z], i);
            z++;
        } else if (paeckchenGewicht[z]+artikelGewicht[i] <= 10) {
            //printf(""Arikelgewicht: %i - Iteration: %i \n"", artikelGewicht[i], i);
            paeckchenGewicht[z] += artikelGewicht[i];
            //printf(""Paketgewicht: %d - Iteration: %i\n"",paeckchenGewicht[z], i);
            if(paeckchenGewicht[z] + artikelGewicht[i+1] >= 10) {
                z++;
            }
        }
    }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double kosten = 0;
    for (int i = 0; i < 5; ++i) {
        if(paeckchenGewicht[i] > 10) {
            kosten += 3+(paeckchenGewicht[i]-10)*0.45;
            printf(""Gewicht des %i. Paeckchens: %d Kilo\n"",i+1, paeckchenGewicht[i]);
            printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n\n"",i+1 ,(3+(paeckchenGewicht[i]-10)*0.45));
        } else {
            printf(""\nGewicht des %i. Paeckchens: %d Kilo\n"",i+1, paeckchenGewicht[i]);
            printf(""Die Versandkosten ihres %i. Paeckchens betragen: 3.00 Euro\n"",i+1);
            kosten += 3;
        }
    }
    return  kosten;
}

int main () // nicht aendern!
{
    int artikelGewicht[5];
    artikelGewicht[0] = 60;
    artikelGewicht[1] = 57;
    artikelGewicht[2] = 6;
    artikelGewicht[3] = 9;
    artikelGewicht[4] = 4;
    printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n\n"",
           artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
           artikelGewicht[3],artikelGewicht[4]);

    int paeckchenGewicht[5] = {0,0,0,0,0};
    packePakete( paeckchenGewicht, artikelGewicht );

    double endkosten = berechnePaketKosten( paeckchenGewicht );
    printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift.
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */

char shiftChar(char* p_char, int shift)
{
    if(p_char > 64 && p_char < 91) {
        if (p_char + shift > 90){
            p_char = p_char + shift - 26;
        } else if (p_char + shift < 65) {
            p_char = p_char + shift + 26;
        } else {
            p_char += shift;
        }
    } else if (p_char > 96 && p_char < 123) {
        if (p_char + shift > 122){
                p_char = p_char + shift - 26;
        } else if (p_char + shift < 97) {
            p_char = p_char + shift + 26;
        } else {
            p_char += shift;
        }
    }
    return p_char;
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben.
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    for (int i = 0; i < maxlength; i++) {
        str[i] = shiftChar(str[i], shift);
    }
}



/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann.
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
    char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
    int shift = 5;
    printf(""Original: "");
    printf(""%s\n"", str);

    // Verschluesseln
    cipher(str, shift, 50);
    printf(""Verschluesselt: "");
    printf(""%s\n"", str);

    // Entschluesseln
    cipher(str, -shift, 50);
    printf(""Entschluesselt: "");
    printf(""%s\n"", str);
}"
Name_448,VName_448,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int paketzaeler = 0;
    for(int i = 0; i < 5; i++) {
        
        if (artikelGewicht[i] >= 10) {
            if (paeckchenGewicht[paketzaeler] == 0) {
                paeckchenGewicht[paketzaeler] = artikelGewicht[i];
            }
            else {
                paketzaeler += 1;
                paeckchenGewicht[paketzaeler] = artikelGewicht[i];
            }
        }
        
        if (artikelGewicht[i] < 10 && paeckchenGewicht[paketzaeler] + artikelGewicht[i] <= 10) {
            paeckchenGewicht[paketzaeler] += artikelGewicht[i];
        }
        
        else if (artikelGewicht[i] < 10 && paeckchenGewicht[paketzaeler] + artikelGewicht[i] > 10) {
            paketzaeler += 1;
            paeckchenGewicht[paketzaeler] += artikelGewicht[i];
        }
    }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double paketKosten = 0;
    double paeckchenKosten[5];
    for (int j = 0; j < 5; j++) {
        
        if (paeckchenGewicht[j] > 10) {
            paketKosten += 3 + (paeckchenGewicht[j] - 10)*0.45;
            paeckchenKosten[j] = 3 + (paeckchenGewicht[j] - 10)*0.45;
        }
        if (paeckchenGewicht[j] <= 10) {
            paketKosten += 3;
            paeckchenKosten[j] = 3;
        }
        printf(""\nGewicht des %d. Paeckchens: %d Kilo\n"", j+1, paeckchenGewicht[j]);
        printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"", j+1, paeckchenKosten[j]);
    }
    return paketKosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_449,VName_449,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
	int j=0;
    for(int i=0; i<=4; i++){
        if (artikelGewicht[i]>10){
			paeckchenGewicht[j]=artikelGewicht[i];
			j++;
		}
		else{
			if (artikelGewicht[i]+paeckchenGewicht[j]>10){
			j++;
			}
			paeckchenGewicht[j]+=artikelGewicht[i];
		}
		
    }


}

double berechnePaketKosten( int paeckchenGewicht[] )
{
	double tmp;
	double teuro;
	for(int i=0; i<=4; i++){
		if (paeckchenGewicht[i]==0){
			break;
		}
		if (paeckchenGewicht[i]>10){
			tmp=3+(paeckchenGewicht[i]-10)*0.45;
			printf(""Gewicht des %d. Paeckchens: %d Kilo\nDie Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n\n"", i+1, paeckchenGewicht[i], i+1, tmp);
			teuro+=tmp;
		}
		if (0<paeckchenGewicht[i] && paeckchenGewicht[i]<=10){
			tmp=3;
			printf(""Gewicht des %d. Paeckchens: %d Kilo\nDie Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n\n"", i+1, paeckchenGewicht[i], i+1, tmp);
			teuro+=tmp;
		}
	}
	return teuro;

}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	int p= (int) *p_char;
	int p_new;
	if (65<=p && p<=90){
		if ((p+shift)>90){
			p_new=p+shift-26;
		}
		else if ((p+shift)<65){
			p_new=p+shift+26;
		}
		else{
			p_new=p+shift;
		}
	}
	else if (97<=p && p<=122){
		if ((p+shift)>122){
			p_new=p+shift-26;
		}
		else if ((p+shift)<97){
			p_new=p+shift+26;
		}
		else{
			p_new=p+shift;
		}
	}
	else {
		p_new=p;
	}
	*p_char=(char) p_new;
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for (int i=0; i<maxlength; i++){
		char* p_char= &str[i];
		shiftChar(p_char, shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
		char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_450,VName_450,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_451,VName_451,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>

int main (void)
{

    int key = 3;
    int letter = 0;
    int letter2 = 0;

    key = key % 26; // Wir haben nur 26 verschiedene keys

    char c;
    while( (c = getchar()) != '\n')
    {
        c = tolower(c);
        letter = (int)c;
     
        if (letter == ' ')
        {
            letter2 = letter;
        }
        else if((letter + key) > 'z')
        {
            letter2 = letter + key - ('z' - 'a' + 1); //'z'-'a'+1 == 26 => kein Overflow mehr möglich, da key < 26
        }
        else
        {
             letter2 = letter + key;
        }
        c = (char)letter2;
        putchar (c);
    }
    putchar ('\n');
    return EXIT_SUCCESS;
}

}"
Name_452,VName_452,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_91,VName_91,"#include <stdio.h>
#include <stdlib.h>

void packePakete(int paeckchenGewicht[], int artikelGewicht[]){
    for (int i = 0; i<5; i++){
        paeckchenGewicht[i] = artikelGewicht[i];
    }
}

double berechnePaketKosten(int paeckchenGewicht[]){
    double summe = 0.00;
    double preis = 0.00;
    printf(""\n"");
    for(int i = 0; i<5; i++){
        if(paeckchenGewicht[i]>10){
            preis = 3.00 + (paeckchenGewicht[i] - 10)*0.45;
            summe = summe + preis;
            printf(""Gewicht des %i. Paeckchens: %i Kilo\n"",i+1,paeckchenGewicht[i]);
            printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",i+1,preis);
            printf(""\n"");
        }
        else if (0 < paeckchenGewicht[i] <= 10){
            summe = summe + 3.00;
            printf(""Gewicht des %i. Paeckchens: %i Kilo\n"",i+1,paeckchenGewicht[i]);
            printf(""Die Versandkosten ihres %i. Paeckchens betragen: 3.00 Euro\n"", i+1);
            printf(""\n"");
        }
    }
    return summe;
}

int main(){
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete(paeckchenGewicht, artikelGewicht);
   double endkosten = berechnePaketKosten(paeckchenGewicht);
   printf(""Die Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

void shiftChar(char* p_char, int shift){
    if ('a'<= *p_char && *p_char <= 'z'){
        if('a'> *p_char + shift){
            int tmp1 = 'a' - *p_char - shift;
            *p_char = 'z' - tmp1 +1;
        }        
        else if('a'<= *p_char + shift && *p_char + shift <= 'z'){
            *p_char = *p_char + shift;
        }
        else if(*p_char + shift > 'z'){
            int tmp2 = 'z' - *p_char - shift;
            *p_char = 'a' - tmp2 - 1;
        }
    }
    else if('A'<= *p_char && *p_char <= 'Z'){
        if('A'> *p_char + shift){
            int tmp3 = 'A' - *p_char - shift;
            *p_char = 'Z' - tmp3 +1;
        }        
        else if('A'<= *p_char + shift && *p_char + shift <= 'Z'){
            *p_char = *p_char + shift;
        }
        else if(*p_char + shift > 'Z'){
            int tmp4 = 'Z' - *p_char - shift;
            *p_char = 'A' - tmp4 -1;
        }
    }
}

void cipher(char str[], int shift, int maxlength){
    for(int i = 0; i<maxlength;i++){
        char* p_char = &str[i];
        shiftChar(p_char, shift);
    }
}

int main(){
	char str[50] = ""Froh zu sein bedarf es wenig"";
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_453,VName_453,"#include <stdio.h>
#include <stdlib.h>

// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
	for(int i=0; i<5; i++){
		if(artikelGewicht[i]>10) {
			paeckchenGewicht[i]=artikelGewicht[i];
		}
		else{
			if((artikelGewicht[i]+artikelGewicht[i+1])<=10){
				paeckchenGewicht[i]=artikelGewicht[i]+artikelGewicht[i+1];
			}
			else {
			paeckchenGewicht[i]=artikelGewicht[i];
			}
		}
	}
} 


double berechnePaketKosten( int paeckchenGewicht[] )
{
	double kosten = 0;

	for(int i=0; i<5; i++){
		if(paeckchenGewicht[i]<=10) {
			printf(""\nGewicht des %i. Paeckchens: %d Kilo\n"",i+1, paeckchenGewicht[i]);
            printf(""Die Versandkosten ihres %i. Paeckchens betragen: 3.00 Euro\n"",i+1);
			kosten += 3.0;
		}
		else { 
			kosten += 3.0 + ((paeckchenGewicht[i]-10)*0.45);
			printf(""Gewicht des %i. Paeckchens: %d Kilo\n"",i+1, paeckchenGewicht[i]);
            printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n\n"",i+1 ,(3+(paeckchenGewicht[i]-10)*0.45));
		}
	}	

return kosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

void shiftChar(char *p_char, int shift)
{
	if(*p_char >= 'A' && *p_char <= 'Z') {
        if (*p_char + shift > 'Z'){
            *p_char = *p_char + shift - 26;
        } else if (*p_char + shift < 'A') {
            *p_char = *p_char + shift + 26;
        } else {
            *p_char += shift;
        }
    } else if (*p_char >= 'a' && *p_char <= 'z') {
        if (*p_char + shift > 'z'){
                *p_char = *p_char + shift - 26;
        } else if (*p_char + shift < 'a') {
            *p_char = *p_char + shift + 26;
        } else {
            *p_char += shift;
        }
    }

}


void cipher(char str[], int shift, int maxlength)
{
	for(int i=0; i<=maxlength; i++){
		shiftChar(&str[i], shift);
	}
}


int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_454,VName_454,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_455,VName_455,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
for(int i=0; i<5; i++){
	if(artikelGewicht[i]>10) {
	paeckchenGewicht[i]=artikelGewicht[i];
	}
	else{
		if((artikelGewicht[i]+artikelGewicht[i+1])<=10){
			paeckchenGewicht[i]=artikelGewicht[i]+artikelGewicht[i+1];
		}
		else {
			paeckchenGewicht[i]=artikelGewicht[i];
		}
	}
	
}
}	
	


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */



double berechnePaketKosten( int paeckchenGewicht[] ){
	
	double kosten = 0;

	for(int i=0; i<5; i++){
		double zukosten;
		if(paeckchenGewicht[i]<=10) {
			zukosten = 3.0;
		}
		else { 
			zukosten = 3.0 + ((paeckchenGewicht[i]-10)*0.45);
		}
	printf( ""\nGewicht des %i. Paeckchens: %i Kilo\n"", i+1, paeckchenGewicht[i] );
	printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, zukosten);
	
		kosten += zukosten;
	}

	return kosten;
}

   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */




int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	if(*p_char >= 'A' && *p_char <= 'Z') {
        if (*p_char + shift > 'Z'){
            *p_char = *p_char + shift - 26;
        } else if (*p_char + shift < 'A') {
            *p_char = *p_char + shift + 26;
        } else {
            *p_char += shift;
        }
    } else if (*p_char >= 'a' && *p_char <= 'z') {
        if (*p_char + shift > 'z'){
                *p_char = *p_char + shift - 26;
        } else if (*p_char + shift < 'a') {
            *p_char = *p_char + shift + 26;
        } else {
            *p_char += shift;
        }
    }
	
	
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(int i = 0; i <= maxlength; i++){
		shiftChar(&str[i], shift);	
	}
	
	
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_456,VName_456,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    for (int i = 0; i < 5; i++){
        if(artikelGewicht[i]>=10){
            int p=0;
            while (paeckchenGewicht[p]!=0)p++;
            paeckchenGewicht[p]=artikelGewicht[i];
        }
        else{
            int q=0;
            while (paeckchenGewicht[q]+artikelGewicht[i]>=10)q++;
            paeckchenGewicht[q]+=artikelGewicht[i];
        }
    }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double kosten=0;
    double zwischenkosten;
    for (int i = 0; i < 5; i++){
        if (paeckchenGewicht[i]==0)continue;
        else if (paeckchenGewicht[i]<=10) {
                zwischenkosten = 3;
                kosten +=zwischenkosten;
        }
        else {
                zwischenkosten = (paeckchenGewicht[i]-10)*0.45+3;
                kosten += zwischenkosten;
        }
        printf(""\nGewicht des %i. Paeckchens: %i Kilo\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",i+1,paeckchenGewicht[i],i+1,zwischenkosten);
    }
    return kosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	if('a'<=*p_char && 'z'>=*p_char ){
        *p_char+=shift;
        if (*p_char<'a') *p_char+=26;
        if (*p_char>'z') *p_char-=26;
        else *p_char=*p_char;
	}
	else if ('A'<=*p_char && 'Z'>=*p_char){
        *p_char+=shift;
        if (*p_char<'A') *p_char+=26;
        if (*p_char>'Z') *p_char-=26;
        else *p_char=*p_char;
	}
    else *p_char=*p_char;
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for (int i=0;i<maxlength;i++){
        shiftChar(&str[i],shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_457,VName_457,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double summe = 0;
    for(int i = 0; i < 5; i++){
        summe += paeckchenGewicht[i];
    }
    return summe;

  


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    if('a' <= *p_char && *p_char <= 'z' || 'A'  <= *p_char && *p_char <= 'Z'){
        *p_char = *p_char + shift;
    }

}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	char* p_str;
    p_str = str;
    for(char* p_str = str; p_str < str + maxlength; p_str++){
         shiftChar(p_str, shift);
    }

}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_458,VName_458,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
for(int i=0; i>5; i++ ){
    if (artikelGewicht[i]>10) paeckchenGewicht[i] = artikelGewicht[i];
    else if ((artikelGewicht[i]+artikelGewicht[i+1])<10 ) paeckchenGewicht[i]=artkelGewicht[i]+artikelGewicht[i+1];
    else paeckchenGewicht[i] = artikelGewicht[i];
    int a[i]=paeckchenGewicht[i];
}
return paeckchenGewicht[];
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    int Kosten;
for(int k=0; k>5; k++){
    if (paeckchenGewicht[k]>=10) Kosten[k] = 3;
    else Kosten[k]=(paeckchenGewicht - 10)*0,45 + 3;
    int endkosten = Kosten[1] + Kosten[2] + Kosten[3] + Kosten[4] + Kosten[5];
    return endkosten;
}



}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	    if (""A"" <= p_char && p_char <= ""z""){
	        if (*p_char < ""Z"" && *p_char + shift > ""Z""){
	            int x = ""Z"" - shift;
	        *p_char = ""A"" + shift;
	        }
	        else if (*p_char < ""z"" && *p_char > ""a"" && *p_char + shift > ""z""){
	            int y = ""z"" - shift;
	        *p_char = ""a"" + shift;
	        }
	        else *p_char = *p_char + shift;
	int str = p_char;
	return str;
	    }
	    else return 0;
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for (int i = 0; i < 50; i++){
	    str[i] = shiftChar(str[i], shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_459,VName_459,"#include <stdio.h>
#include <stdlib.h>



// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
int i=0;


while( artikelGewicht [i]>10)
{paeckchenGewicht[i]= artikelGewicht[i];
i++;
}

while (artikelGewicht[i]<=10 && i+1<=4 && artikelGewicht[i] + artikelGewicht[i+1] >10)
{
paeckchenGewicht[i]= artikelGewicht[i];
paeckchenGewicht[4]= artikelGewicht[4];
i++;
}

while (artikelGewicht[i]<=10  && i+1<=4 && artikelGewicht[i] + artikelGewicht[i+1]<=10)
{paeckchenGewicht[i]= artikelGewicht[i] + artikelGewicht[i+1];
i++;
}




   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{
double paketkosten[]={0.00,0.00,0.00,0.00,0.00};
int i=0;
while (paeckchenGewicht[i]<=10)
{
paketkosten[i]=3.00;
i++;
}

while(paeckchenGewicht[i]>10)

{
paketkosten[i]= 3.00 + ((paeckchenGewicht[i]-10)*0,45);

i++;
}


printf(""\nGewicht des 1. Paeckchens: %d Kilo\n"", paeckchenGewicht[0]);
printf(""Die Versandkosten ihres 1. Paeckchens betragen: %f Euro "", paketkosten[0]);


printf(""\nGewicht des 2. Päckchens: %d Kilo\n"", paeckchenGewicht[1]);
printf(""Die Versandkosten ihres 2. Paeckchens betragen: %f Euro "", paketkosten[1]);

printf(""\nGewicht des 3. Paeckchens: %d Kilo\n"", paeckchenGewicht[2]);
printf(""Die Versandkosten ihres 3. Paeckchens betragen: %f Euro "", paketkosten[2]);

printf(""\nGewicht des 4. Paeckchens: %d Kilo\n"", paeckchenGewicht[3]);
printf(""Die Versandkosten ihres 4. Paeckchens betragen: %f Euro "", paketkosten[3]);

printf(""\nGewicht des 5. Paeckchens: %d Kilo\n"", paeckchenGewicht[4]);
printf(""Die Versandkosten ihres 5. Paeckchens betragen: %f Euro "", paketkosten[4]);


 double endkosten =(paketkosten[0] + paketkosten[1] + paketkosten[2] + paketkosten[3] +paketkosten[4]);
return endkosten;
   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"",
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);

   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );

   double endkosten = berechnePaketKosten( paeckchenGewicht );

printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_460,VName_460,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int paeckchen_nr=0;
    for(int artikel_nr=0; artikel_nr<5; artikel_nr++){
        paeckchenGewicht[paeckchen_nr]=artikelGewicht[artikel_nr];

        for(artikel_nr; (artikel_nr<5)&&(artikelGewicht[artikel_nr+1]+paeckchenGewicht[paeckchen_nr]<=10); artikel_nr++){
            paeckchenGewicht[paeckchen_nr]=paeckchenGewicht[paeckchen_nr]+artikelGewicht[artikel_nr+1];
        }
        paeckchen_nr++;
    }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double Kosten=0;
    double Kosten1;
    for(int i=0;i<5;i++){
        if(!paeckchenGewicht==0){
            if (paeckchenGewicht[i]<=10) Kosten1=3;
            else Kosten1 =3+0.45*(paeckchenGewicht[i]-10);
        }
        printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"",i+1,paeckchenGewicht[i]);
        printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",i+1,Kosten1);
        Kosten=Kosten+Kosten1;
    }
    return Kosten;
}


int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    int ascii_wert;
    int vorzeichen=0;
    if(*p_char>96&&*p_char<123){
        ascii_wert=*p_char+shift;
        if(ascii_wert>122) vorzeichen=-1;
        if(ascii_wert<97) vorzeichen=1;
        *p_char=(ascii_wert+vorzeichen*26);
    }
    if(*p_char>64&&*p_char<91){
        ascii_wert=*p_char+shift;
        if(ascii_wert>90) vorzeichen=-1;
        if(ascii_wert<65) vorzeichen=1;
        *p_char=(ascii_wert+vorzeichen*26);
    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    for(int i=0; i<maxlength; i++){
        shiftChar(&str[i], shift);
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */

int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_461,VName_461,"#include <stdio.h>
#include <stdlib.h>



void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int bolsa =0;
    for (int b = 0; b <= 4; b++)
    {
        if(paeckchenGewicht[bolsa]+artikelGewicht[b] <=10)
        {
            paeckchenGewicht[bolsa]=paeckchenGewicht[bolsa]+artikelGewicht[b];
        }
        else
        {
            if(paeckchenGewicht[bolsa]== 0)
            {
                paeckchenGewicht[bolsa]=artikelGewicht[b];
                bolsa++;
            }
            else
            {
                bolsa++;
                paeckchenGewicht[bolsa]=artikelGewicht[b];
            }
        }
    }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    float precio = 0;
    float total = 0;
    for (int b = 0; b <= 4; b++)
    {
        precio = 0;
        if(paeckchenGewicht[b]<=10)
        {
            precio = 3;
        }
        else
        {
            precio = 3+0.45*(paeckchenGewicht[b]-10);
        }
        total = total+precio;
        printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"",b+1,paeckchenGewicht[b]);
        printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",b+1,precio);
    }
    return total;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    if (*p_char>=65 &&*p_char<=90)
    {
        while (*p_char+shift>90)
        {
            *p_char-=26;
        }
        while (*p_char+shift<65)
        {
            *p_char+=26;
        }
        *p_char+=shift;

    }
    if (*p_char>=97 &&*p_char<=122)
    {
        while (*p_char+shift>122)
        {
            *p_char-=26;
        }
        while (*p_char+shift<97)
        {
            *p_char+=26;
        }
        *p_char+=shift;
    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    for (int c = 0; c<maxlength; c++)
    {
        shiftChar(&str[c],shift);
    }
	
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_462,VName_462,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
 int i = 0;
 int z = i;
 for(int i = 0; i<=5 ; i++)
 {
  if(z>=5)
  {
   break;
  }
 int a = 0;
 int w = 0;
 int x = i;
 if(artikelGewicht[z]>=10)
  {
   paeckchenGewicht[i]= artikelGewicht[z];
   z++;
   continue;
  }
 else
 {
  for(x = z; a + artikelGewicht[x]<= 10; x++)
  {
   a = a + artikelGewicht[x];
   w++;
  }
  paeckchenGewicht[i] = a;
  if(w>1)
   {
    z= i + w;
   }
  else
   {
    z++;
   }
   }
  }
}


double berechnePaketKosten( int paeckchenGewicht[] )
{
 double Paketkosten[5];
 int l = 0;
 do
  {
   if( paeckchenGewicht[l] > 10)
   {
    Paketkosten[l] = 3 +(paeckchenGewicht[l] -10)*0.45;
   }
   if( paeckchenGewicht[l] <= 10)
   {
    Paketkosten[l] = 3;
   }
   if(paeckchenGewicht[l] == 0)
   {
    Paketkosten[l] = 0;
   }
  l++;
  }
  while(l<5);
  double s = 0;
s = Paketkosten[0] + Paketkosten[1] + Paketkosten[2] + Paketkosten[3] + Paketkosten[4];
printf(""\nGewicht des 1. Paeckchens: %d Kilo\n"", paeckchenGewicht[0]);
printf(""Die Versandkosten ihres 1. Paeckchens betragen: %.2f Euro\n"", Paketkosten[0]);
printf(""\nGewicht des 2. Paeckchens: %d Kilo\n"", paeckchenGewicht[1]);
printf(""Die Versandkosten ihres 2. Paeckchens betragen: %.2f Euro\n"", Paketkosten[1]);
printf(""\nGewicht des 3. Paeckchens: %d Kilo\n"", paeckchenGewicht[2]);
printf(""Die Versandkosten ihres 3. Paeckchens betragen: %.2f Euro\n"", Paketkosten[2]);
printf(""\nGewicht des 4. Paeckchens: %d Kilo\n"", paeckchenGewicht[3]);
printf(""Die Versandkosten ihres 4. Paeckchens betragen: %.2f Euro\n"", Paketkosten[3]);
printf(""\nGewicht des 5. Paeckchens: %d Kilo\n"", paeckchenGewicht[4]);
printf(""Die Versandkosten ihres 5. Paeckchens betragen: %.2f Euro\n"", Paketkosten[4]);
return(s);


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	char Gross[26];
	char Klein[26];
	for( int i = 0; i<=25;i++)
	{
		Gross[i] = 'A' + i;
	}
	for( int f = 0; f<=25; f++)
	{
		Klein[f] = 'a' + f;
	}
	for( int c = 0; c<=25; c++)
	{
		if( *p_char == Gross[c])
		{
			if( c + shift > 25)
			{
				*p_char = Gross[c+shift-26];
				break;
			}
			else if( c + shift < 0)
			{
				if(shift>0)
				{
				*p_char = Gross[26-shift+c];
				}
				if (shift<0)
				{
				*p_char = Gross[26+shift+c];
				}
				break;
			}
			else
			{
				*p_char = Gross[c] + shift;
				break;
			}
		}
		else if( *p_char == Klein[c])
		{
			if(c + shift > 25)
			{
				*p_char = Klein[c+shift-26];
				break;
			}
			else if( c + shift < 0)
			{
				if(shift>0)
				{
				*p_char = Klein[26-shift+c];
				}
				if(shift<0)
				{
					*p_char = Klein[26+shift+c];
				}
				break;
			}
			else
			{
			*p_char = Klein[c + shift];
				break;
			}
		}
		else
		{
			continue;
		}
			
    	
}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(int i = 0; i < maxlength; i++)
	{
		shiftChar(&str[i], shift);
		
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_463,VName_463,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    shift = shift % 26;
    int shifted = *p_char + shift;

    if ('a' <= *p_char && *p_char <= 'z') {
        if (shifted > 'z') {
            *p_char = 'a' - 1 + shifted - 'z';
        } else if (shifted < 'a') {
            *p_char = 'z' + 1 + shifted - 'a';
        } else {
            *p_char = shifted;
        }
    }
    if ('A' <= *p_char && *p_char <= 'Z') {
        if (shifted > 'Z') {
            *p_char = 'A' - 1 + shifted - 'Z';
        } else if (shifted < 'A') {
            *p_char = 'Z' + 1 + shifted - 'A';
        } else {
            *p_char = shifted;
        }
    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    for (int i = 0; i < maxlength; ++i)
    {
        shiftChar(&str[i], shift);
    }

}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
    char str[50] = ""Froh zu sein bedarf es wenig"";  // Originaltext
    int shift = 5;
    printf(""Original: "");
    printf(""%s\n"", str);

    // Verschluesseln
    cipher(str, shift, 50);
    printf(""Verschluesselt: "");
    printf(""%s\n"", str);
    
    // Entschluesseln
    cipher(str, -shift, 50);
    printf(""Entschluesselt: "");
    printf(""%s\n"", str);
}"
Name_464,VName_464,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */
    int i_gepackt = 0;
    int paket = 0;
    // Iteriere über gewichte
    int i = 0;
    while (i < 5){
        int gew = artikelGewicht[i];
            // Fall gew > 10 packe eigenes paket
        if (gew > 10)
        {
            if (paket != 0)
            {
                paeckchenGewicht[i_gepackt] = paket;
                paket = 0;
                i_gepackt++;
                
            }
            paeckchenGewicht[i_gepackt] = gew;
            i_gepackt++;
            i++;
        }
        else 
        {
            // Falls noch platz genug packe ins paket und gehe zum nächsten
            if (paket + gew < 10)
            {
                paket += gew;
                i++;
            }
            // Falls kein platz mehr im Paket pake ins nächste
            else 
            {
                paeckchenGewicht[i_gepackt] = paket;
                paket = 0;
                i_gepackt++;
            }
        }
    }
    if (paket != 0)
    {
        paeckchenGewicht[i_gepackt] = paket; 
    }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */
    double preis = 0.0;
    double preisGesamt = 0.0;
    printf(""\n"");
    for (int i = 0; i < 5; i++)
    {
        int gew = paeckchenGewicht[i];
        printf(""Gewicht des %d. Paeckchens: %d Kilo\n"", i+1, gew);
        
        if (gew == 0)
        {
            continue;
        }
        if (gew < 10)
        {
            preis = 3.0;
        }
        else 
        {
            preis = 3.0 + 0.45 * (gew-10);
        }
        printf(""Die Versandkosten ihres %d. Paeckchens betragen: %1.2lf Euro\n"", i+1, preis);
        preisGesamt += preis;
        if(i < 4)
        {
            printf(""\n"");
        }
    }
    return preisGesamt;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
	// A-Z : 65-90 und a-z : 97-122
	unsigned char result = *p_char;

	// Grossbuchstabe
    if (*p_char >= 65 && *p_char <= 90)
    {
        result += shift; // Verschiebe
        // Overflows
        if(result > 90)
        {
            result -= 26; 
        }
        // Underflows
        else if(result < 65)
        {
            result += 26;
        }
    }
    // Kleinbuchstabe
    else if (*p_char <= 122 && *p_char >= 97)
    {
        result += shift; // Verschiebe
        // Overflows
        if(result > 122)
        {
            result -= 26;
        }
        // Underflows
        else if(result < 97)
        {
            result += 26;
        }
    }
    *p_char = result;
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
	for (int i = 0; i < maxlength; i++)
	{
	    shiftChar(&str[i], shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_465,VName_465,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int tmp = 0;    
    int *paket = paeckchenGewicht;
    for(int i=0; i<5; i++){
        if(artikelGewicht[i] > 10){
            *paket = artikelGewicht[i];
            paket++;      
        }else{
            if(tmp+artikelGewicht[i] > 10){
                *paket = tmp;
                paket++;                
                tmp = artikelGewicht[i];
            }else{
                tmp += artikelGewicht[i];
            }
        }
        if(i==4) *paket = tmp;
    }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double versandkostenGesamt = 0;
    for(int i=0; i<5; i++){
        double gewicht = paeckchenGewicht[i];
        if(gewicht < 0.000001){
            versandkostenGesamt += 0;
        }else{
            printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", (i+1), paeckchenGewicht[i]);
            if(gewicht <= 10){               
                double versandkosten = 3.00;                
                versandkostenGesamt += versandkosten;
                printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2lf Euro\n"", (i+1), versandkosten);
            }else{
                double versandkosten = 3.00+(gewicht-10)*0.45;                
                versandkostenGesamt += versandkosten;
                printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2lf Euro\n"", (i+1), versandkosten);
            } 
        }
    }
    return versandkostenGesamt;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    int letter = (int)*p_char;
    if(*p_char<='z' && *p_char>='a'){
        letter += shift;
        if(letter>122){
            int diff = letter-122;
            letter = 97+diff-1;
        }
        if(letter<97){
            int diff = 97-letter;
            letter = 122-diff+1;
        }
        *p_char = (char)letter;
    }
    if(*p_char<='Z' && *p_char>='A'){
        letter += shift;
        if(letter>90){
            int diff = letter-90;
            letter = 65+diff-1;
        }
        if(letter<65){
            int diff = 65-letter;
            letter = 90-diff+1;
        }
        *p_char = (char)letter;
    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    for(int i=0; i<maxlength; i++){
        int* pointer = &str[i];
        shiftChar(pointer, shift);
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_466,VName_466,"#include <stdio.h>
#include <stdlib.h>

// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
	int j=0;
	for (int i=0; i<5; i++){
		
		if (artikelGewicht[i] > 10){
			paeckchenGewicht[j] = artikelGewicht[i];
			j++;
		}
		else if (artikelGewicht[i] <= 10 && (artikelGewicht[i] + paeckchenGewicht[j])>10)
		{
			j++;
			paeckchenGewicht[j] = artikelGewicht[i];
		} 
		else if (artikelGewicht[i] <= 10 && (artikelGewicht[i]+paeckchenGewicht[j])<=10)
		{
			paeckchenGewicht[j] += artikelGewicht[i];
		} 
	}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
	double PaketKosten;
	double PaketKostenG;
	
	for(int i=0; i<5; i++)
	{
		if (paeckchenGewicht[i] > 10)
		{
			PaketKosten = 3.00 + ((double)paeckchenGewicht[i]-10.00)*0.45;
			PaketKostenG += PaketKosten;
			printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i+1, paeckchenGewicht[i]);
			printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", (i+1), PaketKosten);
		}	
		
		else if (paeckchenGewicht[i] <= 10){
			PaketKosten = 3.00;
			PaketKostenG += PaketKosten;
			printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i+1, paeckchenGewicht[i]);
			printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", (i+1), PaketKosten);
		}
	}
	return PaketKostenG;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
	if (shift>=0)
	{
		if ('a' <= *p_char && *p_char <= ('z'- shift)) *p_char = *p_char + shift;
		
		else if (*p_char > ('z'- shift)) 
		{
			*p_char = 'a' + (shift - ('z' - *p_char)-1);
		}
		else if ('A' <= *p_char && *p_char <= ('Z'- shift)) *p_char = *p_char +shift;
		
		else if (*p_char > ('Z'- shift)) {
			*p_char = 'A' + shift - ('Z' - *p_char) - 1;
		}
		else *p_char = *p_char;
	}
	else{
		if (('a' - shift) <= *p_char && *p_char <= ('z')) *p_char = *p_char + shift;
		
		else if (*p_char >= 'a' && *p_char < ('a'- shift)) 
		{
			*p_char = 'z' + (shift - ('a' - *p_char)+1);
		}
		else if (('A' - shift) <= *p_char && *p_char <= ('Z')) *p_char = *p_char +shift;
		
		else if (*p_char >= 'A' && *p_char < ('A'- shift)) {
			*p_char = 'Z' + (shift - ('A' - *p_char)+1);
		}
		else *p_char = *p_char;
	}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
	for (int i=0; i<maxlength; i++)
	{
		shiftChar(&str[i], shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_467,VName_467,-,-
Name_468,VName_468,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int index = 0;
    for (int i = 0; i < 5; ++i) {
        int currentWeight = paeckchenGewicht[index];
        if (artikelGewicht[i] + currentWeight <= 10) {
            paeckchenGewicht[index] += artikelGewicht[i];
        } else {
            if (currentWeight == 0) {
                paeckchenGewicht[index] = artikelGewicht[i];
                index++;
            } else {
                index++;
                paeckchenGewicht[index] = artikelGewicht[i];
            }
        }
    }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double price = 0;
    double prices[5];
    for (int i = 0; i < 5; ++i) {
        if (paeckchenGewicht[i] <= 10) prices[i] = 3.0;
        else prices[i] = 3.0 + ( (paeckchenGewicht[i]-10) * 0.45 );
        price += prices[i];
    }
    
    // print
    for (int i = 0; i < 5; ++i) {
        printf(""\nGewicht des %d. Paeckchens: %d Kilo\nDie Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"", i+1, paeckchenGewicht[i], i+1, prices[i]);
    }

    return price;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );

   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
	char c = *p_char;
	if (c >= 65 && c <= 90) {
	    // uppercase alpha
	    c += shift; // shift
	    
	    // check lower than 65
	    if (c < 65) {
	        c = 90 - (64 - c);
	    }
	    
	    // check higher than 90
	    if (c > 90) {
	        c = 65 + (c - 91);
	    }
	} else if (c >= 97 && c <= 122) {
	    // lowercase alpha
	    
	    // check if overflow
	    if (shift + c > 127) {
	        int pos = ((shift + (c-97))%26) + 97;
	        c = pos;
	    } else {
            c += shift; // shift
            
	        // check lower than 97
	        if (c < 97) {
	            c = 122 - (96 - c);
	        }
	        
            // check higher than 122
	        if (c > 122) {
	            c = 97 + (c - 123);
            }
	    }
	}
	
	*p_char = c;
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
	for (int i = 0; i < maxlength; ++i)
	    shiftChar(&str[i], shift);
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_469,VName_469,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_470,VName_470,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
  int i = 0, j = 0;
  for (; i < 5; ++i) {
    if (paeckchenGewicht[j] == 0) {
      paeckchenGewicht[j] = artikelGewicht[i];
    } else if (paeckchenGewicht[j] + artikelGewicht[i] <= 10) {
      paeckchenGewicht[j] += artikelGewicht[i];
    } else {
      paeckchenGewicht[++j] = artikelGewicht[i];
    }
  }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
  double sum = 0.0;
  for (int i = 0; i < 5; ++i) {
    double versand = 0.0;

    if (paeckchenGewicht[i] != 0)
      versand += 3.0;

    if (paeckchenGewicht[i] - 10 > 0)
      versand += ((double)paeckchenGewicht[i] - 10.0) * 0.45;

    printf(""\nGewicht des %d. Paeckchens: %d Kilo\n"", i + 1,
           paeckchenGewicht[i]);
    printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"",
           i + 1, versand);

    sum += versand;
  }
  return sum;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    int base = 'Z' - 'A' + 1;
    if (*p_char >= 'A' && *p_char <= 'Z') {
        int c = (int)(*p_char - 'A');
        int mod = (c + shift + base) % base;
        *p_char = (char)(mod + 'A');
    } else if (*p_char >= 'a' && *p_char <= 'z') {
        int c = (int)(*p_char - 'a');
        int mod = (c + shift + base) % base;
        *p_char = (char)(mod + 'a');
    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    for (int i = 0; i < maxlength; ++i) {
        if (str[i] == 0)
            break;

        shiftChar(str + i, shift);
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_471,VName_471,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paekchenGewicht[], int artikelGewicht[] )
{
    int paekchenIdx = 0;
    for (int j = 0; j < 5; j++)
    {
        if (artikelGewicht[j] > 10)
        {
            paekchenGewicht[paekchenIdx] = artikelGewicht[j];
            paekchenIdx++;
            continue;
            
        }
                if (paekchenGewicht[paekchenIdx] + artikelGewicht[j] > 10)
                {paekchenIdx++;}
                paekchenGewicht[paekchenIdx] += artikelGewicht[j];
        
    }
            
}




double berechnePaketKosten( int paekchenGewicht[] )
{
    double endkosten = 0;
    for (int i = 0; i < 5; i++)
    {
        double kosten = 0;
        if (paekchenGewicht[i] > 0)
        {
            printf(""\nGewicht des %d. Paeckchens: %d Kilo\n"", (i+1), paekchenGewicht[i]);
            if (paekchenGewicht[i] <= 10) kosten = 3.00;
            else kosten = (((paekchenGewicht[i]-10)*0.45) +3.00);
            endkosten += kosten;
            printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"", (i+1), kosten);
            
        }
    }


return endkosten;

}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	if ('A' <= *p_char && *p_char <= 'Z')
	{   
	    *p_char += shift;
	    if (*p_char > 'Z') *p_char -= 26;
	    if (*p_char < 'A') *p_char += 26;
	}
	else if ('a' <= *p_char && *p_char <= 'z')
	{
	    if(*p_char+shift < 'a') shift += 26;
	    if(*p_char+shift > 'z') shift -= 26;
	    *p_char += shift;
	}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for (int i = 0; i < maxlength; ++i) shiftChar(&str[i], shift);
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_472,VName_472,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_473,VName_473,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	shift = (shift + 26) % 26;
	if(*p_char >= 'a' && *p_char <= 'z'){
	
	*p_char -=97; 
	*p_char =(*p_char + shift) %26;
/*	if (*p_char < 97){
	*p_char +=26; 
	}*/
	*p_char +=97;
	} 
	else if (*p_char >= 'A' && *p_char <= 'Z'){
	
	*p_char -=65;
	*p_char =(*p_char + shift) %26;
	*p_char +=65;
	} 
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for (int i = 0; i<maxlength; ++i){
	
	shiftChar(&str[i], shift);
	
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_474,VName_474,"#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
	int* pP = paeckchenGewicht;
	int* pA = artikelGewicht;
	
	for(int i = 0; i < 5; i++)
	{
		if(*pP + *pA > 10)
		{
			if(*pP == 0)
			{
				*pP = *pA;
				pP++;
			}
			else
			{
				pP++;
				*pP = *pA;
			}
			
		}
		else
		{
			*pP += *pA;
		}
		
		if(pA < artikelGewicht + 5) pA++;
	}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
	double gesamtKosten = 0;
	
	for(int j = 0; j < 5; j++)
	{
		if(paeckchenGewicht[j] != 0)
		{
			printf(""\nGewicht des %i. Paeckchens: %d Kilo"", j+1, paeckchenGewicht[j]);
			if(paeckchenGewicht[j] <= 10)
			{
				gesamtKosten += 3.00;
				printf(""\nDie Versandkosten  ihres %i. Paeckchens betragen: 3.00 Euro\n"", j+1);
			}
			else
			{
				gesamtKosten += 3 + (paeckchenGewicht[j] - 10) * 0.45;
				printf(""\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", j+1, 3+((paeckchenGewicht[j] - 10) * 0.45));
			}
		}
	}
	return gesamtKosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
