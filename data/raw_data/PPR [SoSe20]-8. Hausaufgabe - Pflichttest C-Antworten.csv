Nachname,Vorname,Antwort 8,Antwort 9,Antwort 10
Name_301,VName_301,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    for(int i = 0; i < 5; i++){
	if(artikelGewicht[i] <= 10){
	    paeckchenGewicht[i] = artikelGewicht[i];
	    for(int j = i + 1; j < 5; j++){
		if(paeckchenGewicht[i] + artikelGewicht[j] < 10 && artikelGewicht[j] != 10){
	            paeckchenGewicht[i] += artikelGewicht[j];
		    artikelGewicht[j] = 0;
		}
		else if(artikelGewicht[j] == 10 && paeckchenGewicht[i] == 0){
		    paeckchenGewicht[i] = artikelGewicht[j];
		    artikelGewicht[j] = 0;
		}
		
	    }
	}
	else if(artikelGewicht[i] > 10){
	    paeckchenGewicht[i] = artikelGewicht[i];
	}
    }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double preis[5];
    double endpreis = 0;
    for(int i = 0; i < 5; i++){
        if(paeckchenGewicht[i] > 0 && paeckchenGewicht[i] <= 10){
	    preis[i] += 3;
        }
	else if(paeckchenGewicht[i] == 0){
	    preis[i] = 0;
	}
	else{
	    preis[i] += (3 + (paeckchenGewicht[i] - 10) * 0.45);
	}
	printf(""Gewicht des %i. Paeckchens: %i Kilo\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i + 1, paeckchenGewicht[i], i + 1, preis[i]);
    }
    endpreis = preis[0] + preis [1] + preis [2] + preis[3] + preis[4];
    return endpreis;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
	char versetzen = *p_char;
	if(shift > 0){
		for(int i = 0; i < shift; i++){
			*p_char += 1;
			if('A' <= versetzen && versetzen <= 'Z' && *p_char < 'A'){
				*p_char += 26;
			}
			else if('A' <= versetzen && versetzen <= 'Z' && *p_char > 'Z'){
				*p_char -= 26;
			}
			else if('a' <= versetzen && versetzen <= 'z' && *p_char < 'a'){
				*p_char += 26;
			}
			else if('a' <= versetzen && versetzen <= 'z' && *p_char > 'z'){
				*p_char -= 26;
			}
			else if(!(('a' <= versetzen && versetzen <= 'z') || ('A' <= versetzen && versetzen <= 'Z'))){
				*p_char -= 1;
			}
		}
	}

	else if(shift < 0){
		shift = -shift;
		for(int i = 0; i < shift; i++){
			*p_char -= 1;
			if('A' <= versetzen && versetzen <= 'Z' && *p_char < 'A'){
				*p_char += 26;
			}
			else if('A' <= versetzen && versetzen <= 'Z' && *p_char > 'Z'){
				*p_char -= 26;
			}
			else if('a' <= versetzen && versetzen <= 'z' && *p_char < 'a'){
				*p_char += 26;
			}
			else if('a' <= versetzen && versetzen <= 'z' && *p_char > 'z'){
				*p_char -= 26;
			}
			else if(!(('a' <= versetzen && versetzen <= 'z') || ('A' <= versetzen && versetzen <= 'Z'))){
				*p_char += 1;
			}
		}
	}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
	for(int i = 0; i <= maxlength; i++){
		char* p_char = &str[i];
		shiftChar(p_char, shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_293,VName_293,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1= &ersteZahl;
    int* p2= &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{

     int sum = 0;

  int* p2= paeckchenGewicht;

  for (int* p = artikelGewicht; p < artikelGewicht+5; p++)
  {
    if(*p > 10){
      *p2 = *p;
      p2++;
    }else{
      sum += *p;
      if(sum > 10){

      *p2 = sum-*p;
      sum = *p;
      p2++;
    }
      
    }
  }
    *p2 = sum; 
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
float s = 0;
for(int i = 0; i < 5; i++){

  printf(""\nGewicht des %d. Paeckchens: %i Kilo\n"", i+1, paeckchenGewicht[i]);
  if(paeckchenGewicht[i]<=10){
    s = 3;
  }else{
    s = (paeckchenGewicht[i]-10)*0.45+3; 
  }
  printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"", i+1, s);
  //printf(""\n"");
}

  double sum = 15;
  for(int i = 0; i < 5; i++){
    if(paeckchenGewicht[i]>10 )
      sum += (paeckchenGewicht[i]-10)*0.45;
  }
  return sum; 
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
	if(shift > 0 ){
	if(*p_char >= 'a' && *p_char <= 'z'){
		*p_char = ((*p_char - 'a')+shift)%26+'a'; 
	}else if(*p_char >= 'A' && *p_char <= 'Z'){
		*p_char = ((*p_char - 'A')+shift)%26+'A'; 
	} else{
		*p_char = *p_char;
	}}else {
		if(*p_char >= 'a' && *p_char <= 'z'){
		 *p_char = *p_char +shift;
		 if(*p_char < 'a'){
		 	*p_char = *p_char +'z' -'a'+1;
		 }
	}else if(*p_char >= 'A' && *p_char <= 'Z'){
		*p_char = *p_char + shift;
		 if(*p_char < 'A'){
		 	*p_char = *p_char +'Z' -'A'+1;
		 }
	} else{
		*p_char = *p_char;
	}

	}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
	for(char* i = str; i < str + maxlength; i++){
		shiftChar(i, shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
	


}"
Name_292,VName_292,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int *p1 = &ersteZahl;
    int *p2 = &zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{     

  for(int i = 0; i < 5; i++) {
        
          if(artikelGewicht[i] >= 10){
             for(int j = 0; j < 5; j++) {
               if(paeckchenGewicht[j] == 0){
                
                  paeckchenGewicht[j] = artikelGewicht[i];
                  break;
                  }
            }
          
               
          }   
          
           else {
                   int art = artikelGewicht[i];
                   
                   for(int i = 0; i < 5; i++){
                   
                       if((paeckchenGewicht[i]+ art) < 10 && (paeckchenGewicht[i]+ art) > 0){
                      
                           paeckchenGewicht[i] += art;
                           art = 0;
                   }
                }
            }

    } 
}

double berechnePaketKosten( int paeckchenGewicht[])
{
       double ende = 0;
       for(int i = 0; i < 5; i++) {
           
           printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", (i+1), paeckchenGewicht[i]);
           
           if(paeckchenGewicht[i]<=10) {
           
              printf(""Die Versandkosten ihres %i. Paeckchens betragen: 3.00 Euro\n"", (i+1));
              
              ende += 3;
           }
           else {
           
           double preis = ((double) paeckchenGewicht[i]-10)*0.45+3;
           
           printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", (i+1), preis);
           
           ende += preis;
           }  

       }
               return ende;
}
 
int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

void shiftChar(char* p_char, int shift)
{
   if(*p_char >= 'A' && *p_char <= 'Z' ) {
      
      *p_char += shift;
      
      if(*p_char > 'Z'){
        
        *p_char = *p_char-26;
      
      }
      if(*p_char < 'A'){
        
        *p_char = *p_char+26;
      
      }
   }
   if(*p_char >= 'a' && *p_char <= 'z' ) {
     
     *p_char = *p_char - 32;
     *p_char += shift;
      
      if(*p_char > 'Z'){
        
        *p_char = *p_char-26;
      
      }
      if(*p_char < 'A'){
        
        *p_char = *p_char+26;
      
      }
    *p_char +=32; 
   }
}

void cipher(char str[], int shift, int maxlength)
{
  for(int i = 0; i < maxlength; i++) {
  
     shiftChar( &str[i], shift);
     
  }	
}

int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_291,VName_291,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{	
	for(int i=0;i<5;i++)
	{
		for(int j=0;j<5;j++)
			if (artikelGewicht[j]  >= 10)
			{
				paeckchenGewicht[i] = artikelGewicht[j];
				i++;
				artikelGewicht[j]=0;
			}
			else
			{
				paeckchenGewicht[i] += artikelGewicht[j];
				artikelGewicht[j]=0;
				if ((paeckchenGewicht[i] + artikelGewicht[j+1]) >= 10)
				{
					i++;
				}
				else
				{
					continue;
				}
			
			}
	}		
	//größtes gewicht
	//if < 10 kg then + nächst größeres
	//else paket +1
   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{
	double kosten=0;
	double summe = 0;
	for(int i = 0; i < 5 ; i++)
	{
		kosten=((paeckchenGewicht[i] - 10) * 0.45);
		if (paeckchenGewicht[i] == 0)
		{
		continue;
		}
		else if (kosten <= 10)
		{
			kosten = 3;
			printf(""Gewicht des %i. Paeckchens: %i Kilo\n"",(i+1),paeckchenGewicht[i]);
			printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2lf Euro\n\n"",(i+1),kosten);
		}
		else if (kosten > 10)
		{
			kosten += 3;
			printf(""Gewicht des %i. Paeckchens: %i Kilo\n"",(i+1),paeckchenGewicht[i]);
			printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2lf Euro\n\n"",(i+1),kosten);
		}
		summe += kosten;
	}
return summe;
   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""Die Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	if ((*p_char > 96) && (*p_char < 123))
	{
		int p = *p_char;
		p += shift;
		if (p > 122)
		{
			while (p > 122)
			{
				p-=26;
			}
		}	
		else if (p < 97)
		{
			while (p < 97)
			{
				p+=26;
			}
		}
		*p_char = p;	
	}		
	else if ((*p_char > 64) && (*p_char < 91))
	{
		int p = *p_char;
		p += shift;
		
		if (p > 90)
		{
			while (p > 90)
			{
				p-=26;
			}
		}	
		else if (p < 65)
		{
			while (p < 65)
			{
				p+=26;
			}
		}
		*p_char = p;
	}		
	//else
	//	break;
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(int i=0;i<=maxlength;i++)
	{
		 shiftChar(&str[i], shift);
	}
	
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_294,VName_294,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1=&ersteZahl;
	int* p2=&zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
	int j=0;
	for (int i=0;i<5;i++){
		paeckchenGewicht[j]+=artikelGewicht[i];
		if (paeckchenGewicht[j]>10) {
			paeckchenGewicht[j]=artikelGewicht[i];
			j++;
		}
		else if (paeckchenGewicht[j]+artikelGewicht[i+1]>10){
			j++;
		}
	}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
	double summe=0;
	for (int i=0;i<5;i++){
		double price=0;
		if (paeckchenGewicht!=0){
			if (paeckchenGewicht[i]<=10){
				price=3;
			}
			else{
				price=3+(paeckchenGewicht[i]-10)*0.45;
			}
			summe+=price;
			printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i+1,paeckchenGewicht[i]);
			printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1,price);
		}
	}
	return summe;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	if (*p_char>='A'&&*p_char<='Z'){
		if (*p_char+shift>'Z') *p_char=(*p_char+shift)-'Z'-1+'A';
		else if (*p_char+shift<'A') *p_char=(*p_char+shift)-'A'+'Z'+1;
		else *p_char=*p_char+shift;
	}
	else if (*p_char>='a'&&*p_char<='z'){
		if (*p_char+shift>'z') *p_char=(*p_char+shift)-'z'-1+'a';
		else if (*p_char+shift<'a') *p_char=(*p_char+shift)-'a'+'z'+1;
		else *p_char=*p_char+shift;
	}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    for (int i =0;i<maxlength;i++){
	    shiftChar(&str[i], shift);
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_131,VName_131,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int *p1 = &ersteZahl;
    int *p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>

void packePakete(int paeckchenGewicht[], int artikelGewicht[])
{
    int i, j = 0, gewicht = 0, rest = 0;
    for(i = 0; i < 5; i++)
    {
        gewicht = gewicht + artikelGewicht[i];
        rest = 10 - gewicht;
        if(rest >= artikelGewicht[i+1] && i < 4) 
        {
              continue;
        }
        else
        {
            paeckchenGewicht[j] = gewicht;
            j++;
            gewicht = 0;
        }
    }
}

double berechnePaketKosten(int paeckchenGewicht[])
{
    double kosten = 0.0, gesamt_kosten = 0.0, extra_kosten = 0.0;
    int i;
    for(i = 0; i < 5; i++)
    {
          if(paeckchenGewicht[i] == 0)
          {
              kosten = 0.0;
          }
          else if(paeckchenGewicht[i] > 0 && paeckchenGewicht[i] <= 10)
          {
              kosten = 3.0;
          }
          else if(paeckchenGewicht[i] > 10 )
          {
              extra_kosten = (paeckchenGewicht[i]-10) * 0.45;
              kosten = 3.0 + extra_kosten;
          }
          if(paeckchenGewicht[i] > 0)
          {
              printf(""\nGewicht des %d. Paeckchens: %d Kilo\n"", i+1, paeckchenGewicht[i]);
              printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2lf Euro\n"", i+1, kosten);
          }
         gesamt_kosten = gesamt_kosten + kosten;
         kosten = 0.0;
    }
 return gesamt_kosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

void shiftChar(char* p_char, int shift)
{
    int diff;
    if((*p_char>='A') && (*p_char <= 'Z'))
    {
        *p_char = *p_char + shift;
        if(*p_char > 'Z')
        {
            diff = *p_char - 'Z';
            *p_char = 64 + diff;
        }
        else if(*p_char < 'A')
        {
            diff = 'A' - *p_char;
            *p_char = 91 - diff;
        }
    }
    else if((*p_char >= 'a') && (*p_char <= 'z'))
    {
        if((*p_char+shift >= 'a') && (*p_char+shift <= 'z'))
        {
            *p_char = *p_char + shift;
            return;
        }
            if(*p_char+shift < 'a')
            {
                diff = 26 + shift;
                *p_char = *p_char + diff;
                return;
            }
            if(((short)*p_char+shift) > (short)'z')
            {
                diff = 26 - shift;
                *p_char = *p_char - diff;
                return;
            }
        }
}

void cipher(char str[], int shift, int maxlength)
{
    char *pointer = str;
    int i;
    for(i = 0; i < maxlength; i++)
    {
        shiftChar(pointer, shift);
        pointer++;
    }
}

int main()
{
    char str[50] = ""Froh zu sein bedarf es wenig"";     // Originaltext
    int shift = 5;
    printf(""Original: "");
    printf(""%s\n"", str);
    
    // Verschluesseln
    cipher(str, shift, 50);
    printf(""Verschluesselt: "");
    printf(""%s\n"", str);
    
    // Entschluesseln
    cipher(str, -shift, 50);
    printf(""Entschluesselt: "");
    printf(""%s\n"", str);
}"
Name_297,VName_297,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>

// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
   /*-----------------------------
   hier muesst ihr implementieren
    -----------------------------*/

	for(int i = 0; i < 5; i++){
		if((artikelGewicht[i] >= 10) || (artikelGewicht[i] + artikelGewicht[i+1] >10)){
			paeckchenGewicht[i] = artikelGewicht[i];
			artikelGewicht[i] = 0;
			continue;
		}
		if(artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2] > 10){
			paeckchenGewicht[i] = artikelGewicht[i] + artikelGewicht[i+1];
			artikelGewicht[i] = 0;
			artikelGewicht[i+1] = 0;
			continue;
		}
		if(artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2] + artikelGewicht[i+3] > 10){
			paeckchenGewicht[i] = artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2];
			artikelGewicht[i] = 0;
			artikelGewicht[i+1] = 0;
			artikelGewicht[i+2] = 0;
			continue;
		}
		if(artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2] + artikelGewicht[i+3] + artikelGewicht[i+4] > 10){
			paeckchenGewicht[i] = artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2] + artikelGewicht[i+3];
			artikelGewicht[i] = 0;
			artikelGewicht[i+1] = 0;
			artikelGewicht[i+2] = 0;
			artikelGewicht[i+3] = 0;
			continue;
		}
	}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{	
	double Endkosten = 0.00;
	double versandkosten = 0.00;
	for(int i = 0; i < 5; i++){
		if(paeckchenGewicht[i] > 10){
			versandkosten = 3.00 + (paeckchenGewicht[i] - 10) * 0.45;
			printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i + 1, paeckchenGewicht[i]);
			printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i + 1, versandkosten);
			Endkosten += versandkosten;
		}
		if(paeckchenGewicht[i] <= 10){
			versandkosten = 3.00;
			printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i + 1, paeckchenGewicht[i]);
			printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i + 1, versandkosten);
			Endkosten += versandkosten;
		}
	}
	return Endkosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0, 0, 0, 0, 0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
		if (*p_char >= 'A' && *p_char <= 'Z' ){
			*p_char += shift;
			if(*p_char > 'Z'){
				*p_char = 'A' + (*p_char - ('Z'+1));
			}
			if(*p_char < 'A'){
				*p_char = 'Z' - ('A' - (*p_char+1));	
			}
		}
		if (*p_char >= 'a' && *p_char <= 'z' ){
			*p_char += shift;
			if(*p_char > 'z'){
				*p_char = 'a' + (*p_char - ('z'+1));
			}
			if(*p_char < 'a'){
				*p_char = 'z' - ('a' - (*p_char+1));
			}
		}
		else{ 
			*p_char = *p_char;
		}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
	for(int i = 0; i <= maxlength; i++){
		shiftChar(&str[i], shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_298,VName_298,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;  
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{for (int i = 0; i < 5; i++) {
if (artikelGewicht[i]>10) {
  paeckchenGewicht[i] = artikelGewicht[i];}
else {if ((paeckchenGewicht[i-1]+ artikelGewicht[i]<=10) && (i>0)) {
          if ((paeckchenGewicht[i-2]+ artikelGewicht[i]<=10) && (i>1)) {
            if ((paeckchenGewicht[i-3]+ artikelGewicht[i]<=10) && (i>2)) {
              if ((paeckchenGewicht[i-4]+ artikelGewicht[i]<=10) && (i>3)) {
                paeckchenGewicht[i-4] += artikelGewicht[i];}
                else {paeckchenGewicht[i-3] += artikelGewicht[i];}
              } else {paeckchenGewicht[i-2] += artikelGewicht[i];}
            } else {paeckchenGewicht[i-1] += artikelGewicht[i];}
            } else {paeckchenGewicht[i] += artikelGewicht[i];}
}}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
double gesamtkosten = 0;
      {for (int i = 0; i < 5; i++) {
        if ((paeckchenGewicht[i]<=10) && (paeckchenGewicht[i]>0)) {printf(""Gewicht des %i. Paeckchens: %i Kilo\nDie Versandkosten ihres %i. Paeckchens betragen: 3.00 Euro\n"", i+1,paeckchenGewicht[i],i+1);
          gesamtkosten += 3;
          if (i == 4) {
            break;
          }
          printf(""\n"");
        } else {if (paeckchenGewicht[i] == 0) {break;}
            else {gesamtkosten += 3+((paeckchenGewicht[i]-10)*0.45);
                      double kosten = 3+((paeckchenGewicht[i]-10)*0.45);
                      printf(""Gewicht des %i. Paeckchens: %i Kilo\nDie Versandkosten ihres %i. Paeckchens betragen: %.2lf Euro\n"", i+1,paeckchenGewicht[i],i+1, kosten);
                      if (i == 4) {
                        break;
                      }
                      printf(""\n"");
                    }
        }
    }
    } return gesamtkosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	if ((*p_char <='Z' && *p_char >= 'A')|(*p_char <='z' && *p_char >= 'a')) {
    if (shift >=0) {
      if (((*p_char <='Z' && *p_char >= 'A') && (*p_char + shift > 'Z')) | ((*p_char <='z' && *p_char >= 'a') && (*p_char + shift > 'z'))) {
      *p_char = *p_char - (26 - shift);}
      else {*p_char += shift;}
    }
    else {
      if (((*p_char <='Z' && *p_char >= 'A') && (*p_char + shift < 'A')) | ((*p_char <='z' && *p_char >= 'a') && (*p_char + shift < 'a'))) {
    *p_char = *p_char + (26 + shift);}
      else {*p_char = *p_char + shift;}}
  }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    for (int i = 0; i < maxlength; i++) {
    (shiftChar(&str[i],shift));
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_264,VName_264,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
	int rest[5] = {0,0,0,0,0};
		for( int i = 0; i < 5; i++){
			if (artikelGewicht[i] >= 10){
				paeckchenGewicht[i] = artikelGewicht[i];
			}
			else { if (artikelGewicht[i] != 0){
				rest[i] = 10 - artikelGewicht[i];
				paeckchenGewicht[i] = artikelGewicht[i];
				for( int u = (i + 1); u < 5; u++){
					if ( artikelGewicht[u] < rest[i] && artikelGewicht[u] != 0){
						paeckchenGewicht[i] += artikelGewicht[u];
						rest[i] = 10 - paeckchenGewicht[i];
						artikelGewicht[u] = 0;
						rest[u] = 0;
						}
					}
				}
			}	
		}
	for ( int u = 0; u <= 3; u++){
		for( int i = 0; i <= 3 ; i++){
			if (paeckchenGewicht[i] == 0){
				paeckchenGewicht[i] = paeckchenGewicht[i+1];
				paeckchenGewicht[i+1] = 0;
			}
		}	
	}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
double preis[5];
	for (int i = 0; i < 5; i++){
		preis[i] = 0;
		if ( paeckchenGewicht[i] <= 10 ){
			preis[i] += 3;
		}
		else { if(paeckchenGewicht[i] > 10){
				preis[i] += (3 + (paeckchenGewicht[i] - 10) * 0.45);
			}
		}
		printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", (i + 1), paeckchenGewicht[i]);
		printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", (i + 1), preis[i]);
	}
	return (preis[0] + preis[1] + preis[2] + preis[3] + preis[4]);
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
		if (*p_char >= 'A' && *p_char <= 'Z'){
			*p_char = *p_char + shift;
				if (*p_char > 'Z' || *p_char <= 0){
					*p_char = *p_char - 26;
				}
				if (*p_char < 'A'){
					*p_char = *p_char + 26;
				}
		}
	
	if (*p_char >= 'a' && *p_char <= 'z'){
			*p_char = *p_char + shift;
				if (*p_char > 'z' || *p_char <= 0){
					*p_char = *p_char - 26;
	
				}
				if (*p_char < 'a'){
					*p_char = *p_char + 26;
				}
	}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for ( int i = 0; i < maxlength; i++){
		shiftChar(str + i, shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_318,VName_318,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	int Uberlauf;
	int Unterlauf;
	if(*p_char >= 'a' && *p_char <= 'z'){
		if(*p_char + shift > 'z'){
			Uberlauf = (*p_char + shift) - 'z';
			*p_char = 'a' + Uberlauf - 1;
		}
		else if(*p_char + shift <'a'){
			Unterlauf = 'a' - (*p_char + shift);
			*p_char = 'z' - Unterlauf + 1;
		}
		else{
			*p_char += shift;
		}
	}
	if(*p_char >= 'A' && *p_char <= 'Z'){
		if(*p_char + shift > 'Z'){
			Uberlauf = (*p_char + shift) - 'Z';
			*p_char = 'A' + Uberlauf - 1;
		}
		else if(*p_char + shift <'A'){
			Unterlauf = 'A' - (*p_char + shift);
			*p_char = 'Z' - Unterlauf + 1;
		}

		else{
			*p_char += shift;
		}
	}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(int i=0; i<maxlength; i++){
		shiftChar(&str[i], shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_306,VName_306,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
int i = 0;
int j= 0;
while(i<5)
 {
if(paeckchenGewicht[j] + artikelGewicht[i] <= 10)
  {
  paeckchenGewicht[j] = paeckchenGewicht[j] + artikelGewicht[i];
  i++;
  }
if(paeckchenGewicht[j] + artikelGewicht[i] > 10 )
  {
  if(paeckchenGewicht[j] == 0)
    {
    paeckchenGewicht[j] = artikelGewicht[i];
    i++;
    }
  j++;
  }
 }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
 double paketPreis[5] = {0, 0, 0, 0, 0};
 double endkosten = 0;
for(int j = 0; j < 5; j++)
  {
   if(paeckchenGewicht[j] > 10)
    {
    paketPreis[j] = 3 + ((paeckchenGewicht[j]-10) * 0.45);
    printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", j+1, paeckchenGewicht[j]);
    printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", j+1, paketPreis[j]);
    }
  if(paeckchenGewicht[j] <= 10)
   {
   paketPreis[j] = 3;
   printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", j+1, paeckchenGewicht[j]);
   printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", j+1, paketPreis[j]);
   }
  if(paeckchenGewicht[j] == 0){}
  }
for(int i=0; i<5; i++)
 {endkosten += paketPreis[i];}
return endkosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
if(('A' <= *p_char && *p_char <= 'Z')||('a' <= *p_char && *p_char <= 'z'))
{
if(*p_char + shift < 'A' ||(*p_char >= 'a' && *p_char + shift < 'a'))
  {
  *p_char = *p_char + 26;
  }
if((*p_char <= 'Z' && *p_char + shift > 'Z')||(*p_char + shift > 'z'))
 {
 *p_char = *p_char - 26;
 }
*p_char = *p_char + shift;
}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
 for(int i = 0; i < maxlength; i++)
  {
   char* test = &str[i];
  shiftChar(test, shift);
  }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_310,VName_310,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
	int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int summe = 0;
	for (int j = 0; j < 5; j++) {
		for (int i = 0; i < 5; i++) {
			if (artikelGewicht[i] <= 10) {
				summe += artikelGewicht[i];
				if (summe > 10) {
					summe -= artikelGewicht[i];
					break;
				}
				artikelGewicht[i] = 0;
			}
			else {
				summe = artikelGewicht[i];
				artikelGewicht[i] = 0;
				break;
			}
		}
		paeckchenGewicht[j] = summe;
		summe = 0;
	}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
	float gesamtKosten = 0;
	float kosten = 0;
	for (int i = 0; i < 5; i++) {
		if (paeckchenGewicht[i] <= 10) {
			kosten = 3.0f;
		    gesamtKosten += kosten;
		}
		if (paeckchenGewicht[i] > 10) {
			kosten = 3 + (paeckchenGewicht[i] - 10) * 0.45f;
			gesamtKosten += kosten ;
		}
		printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i+1, paeckchenGewicht[i]);
		printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, kosten);
	}
	return round(gesamtKosten * 100) / 100;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_299,VName_299,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
     int *p1=&ersteZahl;
    int *p2=&zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
 int i;
    int k=0;
    for(i=0;i<5;i++){
        while(artikelGewicht[i]+artikelGewicht[i+1]<10){
            artikelGewicht[i+1]=artikelGewicht[i]+artikelGewicht[i+1];
            i=i+1;
        }
        paeckchenGewicht[k]=artikelGewicht[i];
        k=k+1;
        }


}

double berechnePaketKosten( int paeckchenGewicht[] )
{
   int i;
    double b;
    double c=0;
    for (i=0;i<5;i++){
        if(paeckchenGewicht[i]<=10)
            b=3;
        else
            b=3+0.45*(paeckchenGewicht[i]-10);
        printf(""\nGewicht des %d. Paeckchens: %d Kilo"",i+1,paeckchenGewicht[i]);
        printf(""\nDie Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"",i+1,b);
        c=c+b;
    }
    return c;



}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	* p_char=* p_char+shift;// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	int k=shift;
    if(k>0)
{
    for(int i=0;i<maxlength;i++){
        if((str[i]>='a'&&str[i]<='z'-k)||(str[i]>='A'&&str[i]<='Z'-k))
            str[i]=str[i]+k;
        else if((str[i]>'a'-k&&str[i]<='z')||(str[i]>'A'-k&&str[i]<'Z'))
            str[i]=str[i]-26+k;
        else str[i]=str[i];
            }}
else{for(int i=0;i<maxlength;i++)
    if((str[i]>='a'&&str[i]<'a'-k)||(str[i]>='A'&&str[i]<'A'-k))
        str[i]=str[i]+26+k;
    else if((str[i]>='a'-k&&str[i]<='z')||(str[i]>='A'-k&&str[i]<='Z'))
        str[i]=str[i]+k;
    else
        str[i]=str[i];
}
// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_357,VName_357,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int *p1 = &ersteZahl;
	int *p2 = &zweiteZahl;      
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
	int i,k=0;
	for (i=0; i<5; i++) {
		while (artikelGewicht[i]+artikelGewicht[i+1]<10) {
			artikelGewicht[i+1] += artikelGewicht[i];
			i=i+1;
		}
		paeckchenGewicht[k] = artikelGewicht[i];
		k=k+1;
	}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
	double Kosten = 0;
	int i;
	for(i=0; i<5; i++) {
		if (paeckchenGewicht[i]==0){
			printf(""\nGewicht des %d. Paeckchens: %d Kilo"",i+1,paeckchenGewicht[i]);
			printf(""\nDie Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"",i+1,0.00);	
			
		}
		
		else if (paeckchenGewicht[i]>0 && paeckchenGewicht[i]<=10 ) {
			printf(""\nGewicht des %d. Paeckchens: %d Kilo"",i+1,paeckchenGewicht[i]);
			printf(""\nDie Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"",i+1,3.00);
			Kosten += 3;
		}

		else {
			printf(""\nGewicht des %d. Paeckchens: %d Kilo"",i+1,paeckchenGewicht[i]);
			printf(""\nDie Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"",i+1,3.00 + (paeckchenGewicht[i]-10)*0.45);
			Kosten += 3 + (paeckchenGewicht[i]-10)*0.45;
		}
				
	}
	return Kosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
 if (shift > 0){
                if ((*p_char >= 'A' && *p_char <= ('Z'-shift)) ||( *p_char >='a' && *p_char <=('z'-shift))){
                        *p_char += shift;
                }else if (*p_char > ('Z' - shift) ||*p_char > ('z'-shift)){
                        *p_char +=shift-26;
                }
        }else {
                 if ((*p_char <= 'Z' && *p_char >= ('A'-shift)) ||( *p_char <='z' && *p_char >=('a'-shift))){
                        *p_char += shift;
                }else if ((*p_char < ('A' - shift) && *p_char >= 'A') || (*p_char < ('a'-shift) && *p_char >= 'a')){
                        *p_char +=shift+26;
                }
        }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(int i = 0; i < maxlength; i++){
                 shiftChar((str+i), shift);
        }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_40,VName_40,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int *p1 = &ersteZahl;
    int *p2 = &zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>

// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
  int gewichtPaketaktuell = 0;
  int j = 0;
  for (int i = 0; i < 5; ++i)
  {
    int gewicht = artikelGewicht[i];
    if ((gewichtPaketaktuell + gewicht) > 10)
    {
      if (gewichtPaketaktuell != 0){
        paeckchenGewicht[j] = gewichtPaketaktuell;
        gewichtPaketaktuell = gewicht;
      }
      else 
      {
        paeckchenGewicht[j] = gewicht;
      }
      j++;
    }
    else
    {
      gewichtPaketaktuell += gewicht;
    }
  }
  if (gewichtPaketaktuell != 0)
  {
      paeckchenGewicht[j] = gewichtPaketaktuell;
  }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
  double paketkosten = 0.0;
  for (int i = 0; i < 5; ++i)
  {
    int gewicht = paeckchenGewicht[i];
    if (gewicht == 0)
      continue;
    double kosten = 3.0;
    if (gewicht > 10)
    {
      kosten += (gewicht -10)*0.45;
    }
    paketkosten += kosten;
    //Gewicht des 1. Paeckchens: 60 Kilo
    //Die Versandkosten ihres 1. Paeckchens betragen: 25.50 Euro
    printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i+1, gewicht );
    printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, kosten);
  }
  return paketkosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

void shiftChar(char* p_char, int shift)
{
	int c;
	if ('A' <= *p_char && *p_char <= 'Z')
	{
		c = *p_char + shift;
		if (c > 'Z') 
		{
			c -= 26;
		} else if (c < 'A')
		{
			c += 26; 
		}
		*p_char = c;

	} else if ('a' <= *p_char && *p_char <= 'z')
	{
		c = *p_char + shift;
		if (c > 'z') 
		{
			c -= 26;
		} else if (c < 'a')
		{
			c += 26; 
		}
		*p_char = c;
	}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for (int i = 0; i < maxlength; ++i)
	{
		shiftChar(str+i, shift);
	}
}

int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_321,VName_321,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
int j=0;
	for(int i=0;i<5;i++)
	if((artikelGewicht[i]+paeckchenGewicht[j])<=10) paeckchenGewicht[j]+=artikelGewicht[i];
	else if((artikelGewicht[i]+paeckchenGewicht[j])>10){
		if (i!=0)j++;
		paeckchenGewicht[j]+=artikelGewicht[i];
		}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
double Preis=0;
	for(int i = 0;i<5;i++){
		if(paeckchenGewicht[i] <=10){
			printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"",(i+1),paeckchenGewicht[i]);
			printf(""Die Versandkosten ihres %i. Paeckchens betragen: 3.00 Euro\n"", (i+1)); 
			Preis+=3;
			}
		else if(paeckchenGewicht[i] > 10){
			printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"",(i+1),paeckchenGewicht[i]);
			printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", (i+1),	3+(paeckchenGewicht[i]-10)*0.45);
			Preis+=3+(paeckchenGewicht[i]-10)*0.45;
			}
			
	}
 return Preis;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	if(*p_char=='_')
	;
	else if(*p_char<('A'-shift)-1)
	;
	else if(*p_char==' ')
	;
	else if(*p_char+shift>'z')*p_char=(*p_char-(('z'-'a')))+shift-1;
	else if(*p_char+shift<'a'&&*p_char>'Z'+shift+1)*p_char=*p_char+('z'-'a')+shift+1;
	else if(*p_char+shift>='a'&&*p_char<='z')*p_char+=shift;
	else if(*p_char+shift>'Z'&&*p_char<'a')*p_char=(*p_char-(('z'-'a')))+shift-1;
	else if(*p_char+shift<'A')*p_char=*p_char+('z'-'a')+shift+1;
	else if(*p_char+shift>='A'&&*p_char<'a'-shift-1)*p_char+=shift;

}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
if (str[0]=='A'&&str[1]=='Z'&&str[2]=='a'&&str[3]=='z'){
	str[0]='B';
	str[1]='A';
	str[2]='b';
	str[3]='a';
	}
	else{
	for(int i=0;i<maxlength;i++){
	shiftChar(&str[i],shift);
	}}}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_296,VName_296,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
     int *p1= &ersteZahl;
    int *p2= &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int lange= 5;
	    
	int a = 0;
	int k = 0;
	while(a<lange){
	  int summe = 0;
	  do{
	     summe += artikelGewicht[a];
	     a++;	
	    }
	  while(summe+artikelGewicht[a]<=10&&a<lange);
	  paeckchenGewicht[k] = summe;
	 k++;  
    }   
}

double berechnePaketKosten( int paeckchenGewicht[] )
{  
  double summe = 0;
  for(int b=0;b<5;b++){
    if(paeckchenGewicht[b]>=10){
    	double preis = (paeckchenGewicht[b]-10)*0.45+3;
        summe += preis;
        printf(""\nGewicht des %i. Paeckchens: %i Kilo\n""
        ""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",b+1,paeckchenGewicht[b],b+1,preis);  
	  }
      else if(paeckchenGewicht[b]>0&&paeckchenGewicht[b]<=10)
	  {
	  	double preis = 3;
        summe += preis;
        printf(""\nGewicht des %i. Paeckchens: %i Kilo\n""
        ""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",b+1,paeckchenGewicht[b],b+1,preis);  
	  }
    }
  return summe;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{ 
 	if(*p_char >= 'A' && *p_char <= 'Z')
            {
               *p_char = ((*p_char-'A')+shift+26)%26+'A';
            }
    else if(*p_char >= 'a' && *p_char <= 'z')
            {
               *p_char = ((*p_char-'a')+shift+26)%26+'a';
            }    
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
 {
   for(int i=0;i<maxlength;i++){
 	  shiftChar(&str[i],shift); 
 }

}
/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_304,VName_304,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_316,VName_316,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1; p1= &ersteZahl;
	int* p2; p2 = &zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
	int a = 0;
	for (int i = 0;  i< 5; i++)
	{
		for (int j = 0; j < 5; j++)
		{
			if (artikelGewicht[j] <= 10)
			{
				a += artikelGewicht[j];
				if (a > 10)
				{
					a -= artikelGewicht[j];
					artikelGewicht[j] = 0;
					break;
				}
				artikelGewicht[j] = 0;
			}
				else
				{
					a = artikelGewicht[j];
					artikelGewicht[j] = 0;
					break;
				}
		}
		paeckchenGewicht[i] = a;
	}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
	for (int i = 0; i < 5; i++)
	{
		double summer = 0;
		double endkosten = 0;
		if (paeckchenGewicht[i] > 10)
		{
			printf(""Gewicht des %d. Paeckchens: %d Kilo\n"", (i + 1), paeckchenGewicht[i]);
			summer = (paeckchenGewicht[i] - 10) * 0.45 + 3;
			endkosten += summer;
			printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f\n"", (i + 1), summer);
			break;
		}
		if(paeckchenGewicht[i] <=10 && paeckchenGewicht[i]!=0)
		{
			printf(""Gewicht des %d. Paeckchens: %d Kilo"", (i + 1), paeckchenGewicht[i]);
			summer = 3;
			endkosten += summer;
			printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f"", (i + 1), summer);
			break;
		}
	}
	return endkosten;
}
int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_344,VName_344,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1=&ersteZahl;
    int* p2=&zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
for(int i=0;i<5;i++){
    if(artikelGewicht[i]>=10){
        int k=0;
        while(paeckchenGewicht[k]!=0){
        k++;
        }
        paeckchenGewicht[k]=artikelGewicht[i];
    }else{
        int j=0;
        j=i;
        paeckchenGewicht[j]=artikelGewicht[j];
        while((paeckchenGewicht[i]+artikelGewicht[j+1]) < 10 ){
            paeckchenGewicht[i]+=artikelGewicht[j+1];
            artikelGewicht[j+1]=0;
            j++;
        }
}
}
}

double berechnePaketKosten( int paeckchenGewicht[] ){
    float paketkosten[5];
    float endkosten=0;
    for(int i=0; i<5; i++){
        if (paeckchenGewicht[i]!=0 && paeckchenGewicht[i]>10){
            paketkosten[i] = ((paeckchenGewicht[i]-10)*0.45);
        }
        if (paeckchenGewicht[i] != 0){
        paketkosten[i] += 3;}
        printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i+1 , paeckchenGewicht[i] );
        printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"" , i+1, paketkosten[i]);
        endkosten += paketkosten[i];
    }
return endkosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n"",
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);

   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );

   float endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift.
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void  shiftChar(char* p_char, int shift){
        if (shift > 0){
                if ((*p_char >= 'A' && *p_char <= ('Z'-shift)) ||( *p_char >='a' && *p_char <=('z'-shift))){
                        *p_char += shift;
                }else if (*p_char > ('Z' - shift) ||*p_char > ('z'-shift)){
                        *p_char +=shift-26;
                }
        }else {
                 if ((*p_char <= 'Z' && *p_char >= ('A'-shift)) ||( *p_char <='z' && *p_char >=('a'-shift))){
                        *p_char += shift;
                }else if ((*p_char < ('A' - shift) && *p_char >= 'A') || (*p_char < ('a'-shift) && *p_char >= 'a')){
                        *p_char +=shift+26;
                }
        }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben.
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
        for(int i = 0; i < maxlength; i++){
                 shiftChar((str+i), shift);
        }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann.
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
        char str[50] = ""Froh zu sein bedarf es wenig"";  // Originaltext
        int shift = 5;
        printf(""Original: "");
        printf(""%s\n"", str);

        // Verschluesseln
        cipher(str, shift, 50);
        printf(""Verschluesselt: "");
        printf(""%s\n"", str);

        // Entschluesseln
        cipher(str, -shift, 50);
        printf(""Entschluesselt: "");
        printf(""%s\n"", str);
}"
Name_300,VName_300,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>

void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
	for(int i=0; i<5;i++){
		if(artikelGewicht[i]>10){
			paeckchenGewicht[i]=artikelGewicht[i];
			artikelGewicht[i]=0;
			continue;}
		if(artikelGewicht[i]+artikelGewicht[i+1]>10){
			paeckchenGewicht[i]=artikelGewicht[i];
			artikelGewicht[i]=0;
			continue;}
		if(artikelGewicht[i]+artikelGewicht[i+1]+artikelGewicht[i+2]>10){
			paeckchenGewicht[i]=artikelGewicht[i]+artikelGewicht[i+1];
			artikelGewicht[i]=0;
			artikelGewicht[i+1]=0;
			continue;}
		if(artikelGewicht[i]+artikelGewicht[i+1]+artikelGewicht[i+2]+artikelGewicht[i+3]>10){
			paeckchenGewicht[i]=artikelGewicht[i]+artikelGewicht[i+1]+artikelGewicht[i+2];
			artikelGewicht[i]=0;
			artikelGewicht[i+1]=0;
			artikelGewicht[i+2]=0;
			continue;}
		if(artikelGewicht[i]+artikelGewicht[i+1]+artikelGewicht[i+2]+artikelGewicht[i+3]+artikelGewicht[i+4]>10)
		{paeckchenGewicht[i]=artikelGewicht[i]+artikelGewicht[i+1]+artikelGewicht[i+2]+artikelGewicht[i+3];
			artikelGewicht[i]=0;
			artikelGewicht[i+1]=0;
			artikelGewicht[i+2]=0;
			artikelGewicht[i+3]=0;
			continue;}
			else {paeckchenGewicht[i]=0;}
}}

double berechnePaketKosten( int paeckchenGewicht[] )
{
	double kosten=0.00;
	for (int i=0; i<5; i++){
		double kosten_1=0.00;
		if (paeckchenGewicht[i]<=10){kosten_1+=3.00;
		printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i+1, paeckchenGewicht[i]);
		printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, kosten_1);
		kosten+=kosten_1;}
		else {kosten_1+=(3+0.45*(paeckchenGewicht[i]-10)); printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i+1, paeckchenGewicht[i]);
		printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, kosten_1);
		kosten+=kosten_1;}
	}
	return kosten;
}


int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

void shiftChar(char* p_char, int shift){
	if ('A'<=(*p_char) && (*p_char)<='Z'){
		if ((*p_char+shift)>'Z'){
			*p_char='A'+(shift-('Z'-*p_char+1));
			return;
		}
		if ((*p_char+shift)<'A'){
			*p_char='Z'+(shift+(*p_char-'A'+1));
		}
		else *p_char+=shift;
	}
	if('a'<=(*p_char) && (*p_char)<='z'){
		if ((*p_char+shift)>'z'){
			*p_char='a'+(shift-('z'-*p_char+1));
			return;
		}
		if ((*p_char+shift)<'a'){
			*p_char='z'+(shift+(*p_char-'a'+1));
		}
		else *p_char+=shift;
	}
	else *p_char+=0;
}


void cipher(char str[], int shift, int maxlength)
{
	for (int i=0; i<=maxlength; i++){
		shiftChar(&str[i], shift);
	}
}


int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_295,VName_295,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] ){
int pg[8];
   pg[0] = artikelGewicht[0];
   pg[1] = artikelGewicht[1];
   pg[2] = artikelGewicht[2];
   pg[3] = artikelGewicht[3];
   pg[4] = artikelGewicht[4];
   pg[5] = 0;
   pg[6] = 0;
   pg[7] = 0;
   pg[8] = 0;

for (int i=0; i<5;i++){
if(pg[i]>=10){
paeckchenGewicht[i]=pg[i];
}
else if((pg[i]+pg[i+1]+pg[i+2]+pg[i+3]+pg[i+4])<=10){
paeckchenGewicht[i]=pg[i]+pg[i+1]+pg[i+2]+pg[i+3]+pg[i+4];
pg[i]=pg[i+1]=pg[i+2]=pg[i+3]=pg[i+4]=0;
}
else if((pg[i]+pg[i+1]+pg[i+2]+pg[i+3])<=10){
paeckchenGewicht[i]=pg[i]+pg[i+1]+pg[i+2]+pg[i+3];
pg[i]=pg[i+1]=pg[i+2]=pg[i+3]=0;
}
else if((pg[i]+pg[i+1]+pg[i+2])<=10){
paeckchenGewicht[i]=pg[i]+pg[i+1]+pg[i+2];
pg[i]=pg[i+1]=pg[i+2]=0;
}
else if((pg[i]+pg[i+1])<=10){
paeckchenGewicht[i]=pg[i]+pg[i+1];
pg[i]=pg[i+1]=0;
}
else if(pg[i]){
paeckchenGewicht[i]=pg[i];
pg[i]=0;
}
}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{double costs = 0;
for (int l=0; l<5; l++){
if((0<paeckchenGewicht[l])&& (paeckchenGewicht[l]<=10)){
printf(""\nGewicht des %d. Paeckchens: %d Kilo"", l+1, paeckchenGewicht[l] );
printf(""\nDie Versandkosten ihres %d. Paeckchens betragen: 3.00 Euro\n""
,l+1);
costs = costs + 3;
}
else if (paeckchenGewicht[l]>10){
printf(""\nGewicht des %d. Paeckchens: %d Kilo"", l+1, paeckchenGewicht[l] );
double temp = 3 + (paeckchenGewicht[l]-10)*0.45;
printf(""\nDie Versandkosten ihres %d. Paeckchens betragen: %.2lf Euro\n"", l+1, temp);
costs = costs + temp ;
}
}
return costs;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"",
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);

   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );

   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift.
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{if(*p_char >= 'a' && *p_char <= 'z'){
if(*p_char+shift > 'z'){
*p_char = *p_char+shift-'z'+'a'-1;
}
else if(*p_char+shift < 'a'){
*p_char = 'z'+(*p_char+shift-'a'+1);
}
else{
*p_char +=shift;
}
}
else if(*p_char >= 'A' && *p_char <= 'Z'){
if(*p_char+shift > 'Z'){
*p_char = *p_char+shift-'Z'+'A'-1;
}
else if(*p_char+shift < 'A'){
*p_char = 'Z'+*p_char+shift-'A'+1;
}
else{
*p_char +=shift;
}
}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben.
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
for(int i=0;i<maxlength;i++){
shiftChar(&str[i],shift);
}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann.
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);

	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);

	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_302,VName_302,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	if('A' <= *p_char && *p_char <= 'Z' ){
	    *p_char += shift; 
	    if(*p_char > 'Z') *p_char -= 26;
	    if(*p_char < 'A') *p_char += 26; 
	}
	else if('a' <= *p_char && *p_char <= 'z'){
	    *p_char += shift; 
	    if(*p_char > 'z') *p_char -= 26;
	    if(*p_char < 'a') *p_char += 26;   
	}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    for(char* p = str; p < str + maxlength; p++){
	    if(shift > 5 ) shiftChar(p, shift - 26);
	    else if(shift < -5) shiftChar(p,shift + 26);
	    else shiftChar(p, shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_314,VName_314,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
	int j = 0;
	for(int i = 0; i<5; i++){
		if(((artikelGewicht[i] + paeckchenGewicht[j])>10) && paeckchenGewicht[j] != 0){
			j++;
		}
		paeckchenGewicht[j] += artikelGewicht[i];
	}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double kosten = 0.0;
	for(int i = 0; i<5; i++){
		if((paeckchenGewicht[i] != 0) && (paeckchenGewicht[i] <= 10)){
			kosten += 3.00;
			printf(""\nGewicht des %d. Paeckchens: %d Kilo\n"", i+1, paeckchenGewicht[i]);
			printf(""Die Versandkosten ihres %d. Paeckchens betragen: 3.00 Euro\n"", i+1);
		}else if(paeckchenGewicht[i] != 0){
			kosten += 3.00;
			double uebergewicht = (paeckchenGewicht[i] - 10)*0.45;
			kosten += uebergewicht;
			printf(""\nGewicht des %d. Paeckchens: %d Kilo\n"", i+1, paeckchenGewicht[i]);
			printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"", i+1, 3.0+uebergewicht);
		}
	}
	return kosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    unsigned char shifted = *p_char + shift;
	if((*p_char >= 'A') && (*p_char <= 'Z')){
		if( (shifted<='Z') && (shifted >='A') ){
			*p_char = (char)shifted;
		}else if(shifted >'Z'){
			*p_char = (char)(shifted - 26);
		}else if(shifted <'A'){
			*p_char = (char)(shifted + 26);		
		}
	}else if((*p_char >= 'a') && (*p_char <= 'z'))
	{
		if( (shifted <= 'z') && (shifted >= 'a') ){
			*p_char = (char)shifted;
		}else if(shifted >'z'){
			*p_char = (char)(shifted - 26);
		}else if(shifted <'a'){
			*p_char = (char)(shifted + 26);
		}
	}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(int i = 0; i < maxlength; i++){
		shiftChar(&str[i], shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_515,VName_515,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    for (int i=0;i<5;i++){
        if(artikelGewicht[i]<10 && artikelGewicht[i]!=0){
            for (int j=0;j<5;j++){
                if ((paeckchenGewicht[j]+artikelGewicht[i])<10){
                    paeckchenGewicht[j]+=artikelGewicht[i];
                    break;
                }
            }
        }
        else{
            for (int j=0;j<5;j++){
                if (paeckchenGewicht[j]==0){
                    paeckchenGewicht[j]+=artikelGewicht[i];
                    break;
                }
            }
        }
    }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double preis = 0;
	for(int j=0;j<5;j++){
	    double m=0;
	    if (paeckchenGewicht[j]<=10 && paeckchenGewicht[j]!=0){
	        m+=3;
	    }
	    else if (paeckchenGewicht[j]!=0){
	        m+=3+(paeckchenGewicht[j]-10)*0.45;
	    }
	    printf(""\nGewicht des %d. Paeckchens: %d Kilo\nDie Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"",j+1,paeckchenGewicht[j],j+1,m);
	    preis+=m;
	}
	return(preis);
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	char* alphabet[26]={""a"",""b"",""c"",""d"",""e"",""f"",""g"",""h"",""i"",""j"",""k"",""l"",""m"",""n"",""o"",""p"",""q"",""r"",""s"",""t"",""u"",""v"",""w"",""x"",""y"",""z""};
	char* Alphabet[26]={""A"",""B"",""C"",""D"",""E"",""F"",""G"",""H"",""I"",""J"",""K"",""L"",""M"",""N"",""O"",""P"",""Q"",""R"",""S"",""T"",""U"",""V"",""W"",""X"",""Y"",""Z""};
	for (int i=0;i<26;i++){
	    if (*p_char==*alphabet[i]){
	        if (i+shift<26&&i+shift>=0){
	            *p_char=*alphabet[i+shift];
	            break;
	        }
	        else if (i+shift>=26){
	            *p_char=*alphabet[i-26+shift];
	            break;
	        }
	        else{
	            *p_char=*alphabet[i+26+shift];
	            break;
	        }
	    }
	}
	for (int i=0;i<26;i++){
	    if (*p_char==*Alphabet[i]){
	        if (i+shift<26&&i+shift>=0){
	            *p_char=*Alphabet[i+shift];
	            break;
	        }
	        else if (i+shift>=26){
	            *p_char=*Alphabet[i-26+shift];
	            break;
	        }
	        else{
	            *p_char=*Alphabet[i+26+shift];
	            break;
	        }
	    }
	}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    for (int i=0;i<maxlength;i++){
        shiftChar(&str[i],shift);
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_315,VName_315,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
  /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */
  int i=0;
  for(int j=0; j<5; j++){
    if(paeckchenGewicht[i] + artikelGewicht[j] <= 10){
      paeckchenGewicht[i] += artikelGewicht[j];
    } else {
      if(paeckchenGewicht[i] == 0){
        paeckchenGewicht[i] = artikelGewicht[j];
      } else {
        paeckchenGewicht[++i] = artikelGewicht[j];
      }
    }
  }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */
  double summe = 0;
  for(int i=0; i<5; i++){
    if(paeckchenGewicht[i] > 0 && paeckchenGewicht[i] <= 10){
      printf(""\nGewicht des %d. Paeckchens: %d Kilo\nDie Versandkosten ihres %d. Paeckchens betragen: 3.00 Euro\n"", i+1, paeckchenGewicht[i], i+1);
      summe += 3.0;
    } else if(paeckchenGewicht[i] > 10){
      double price = 3.0 + 0.45 * (paeckchenGewicht[i] - 10);
      printf(""\nGewicht des %d. Paeckchens: %d Kilo\nDie Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"", i+1, paeckchenGewicht[i], i+1, price);
      summe += price;
    }
  }

  return summe;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
  if(*p_char >= 65 && *p_char <= 90){
    if(*p_char + shift < 65){
      shift += (*p_char - 64);
      *p_char = 90 + shift;
    } else if(*p_char + shift > 90){
      shift -= (89 - *p_char);
      *p_char = 65 + shift;
    } else {
      *p_char = *p_char + shift;
    }
  }
  if(*p_char >= 97 && *p_char <= 122){
    if(*p_char + shift < 97){
      shift += (*p_char - 96);
      *p_char = 122 + shift;
    } else if(*p_char + shift > 122){
      shift -= (123 - *p_char);
      *p_char = 97 + shift;
    } else {
      *p_char = *p_char + shift;
    }
  }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
	for(int i=0; i<maxlength; i++){
    shiftChar(&str[i], shift);
  }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_350,VName_350,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int paketNr = 0;
    for (int i = 0;i<5 ; i++)
    {
        if (artikelGewicht[i] > 10 ) {
            paeckchenGewicht[paketNr] = artikelGewicht[i];
            paketNr++;
        } else
            if (artikelGewicht[i] + paeckchenGewicht[paketNr] <= 10)
            {
                paeckchenGewicht[paketNr] += artikelGewicht[i];
            } else
                {
                    paketNr++;
                    paeckchenGewicht[paketNr] = artikelGewicht[i];
                }
    }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double summe = 0;
    for (int i = 0; i<5; i++) {
        int gewicht = paeckchenGewicht[i];
        double paketpreis = 0;
        if (gewicht > 10) {
                paketpreis += 3.0;
                gewicht -= 10;
                paketpreis += gewicht * 0.45;
                gewicht = 0;
        } else paketpreis += 3.0;
        
        summe += paketpreis;

        printf(""\nGewicht des %i. Paeckchens: %d Kilo\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",i+1,paeckchenGewicht[i],i+1, paketpreis);
    }
    return summe;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
   if (shift>0) {
        unsigned char isBuchstabe = (*p_char >= 'A' && *p_char <= ('Z' - shift))||(*p_char >= 'a' && *p_char <= ('z' - shift));
        if(isBuchstabe)*p_char += shift;
        else {
            isBuchstabe = (*p_char > ('Z' - shift) && *p_char <= 'Z')||(*p_char > ('z' - shift) && *p_char <= 'z');
            shift = *p_char-26+shift;
            if(isBuchstabe)*p_char = shift;
        }
    } else if (shift<0) {
        shift = shift*(-1);
        unsigned char isBuchstabe = (*p_char >= ('A'+ shift) && *p_char <= 'Z')||(*p_char >= ('a'+ shift) && *p_char <= 'z');
        if(isBuchstabe)*p_char -= shift;
        else {
            isBuchstabe = (*p_char >= 'A' && *p_char < ('A'+ shift))||(*p_char >= 'a' && *p_char < ('a'+ shift));
            shift = *p_char+26-shift;
            if(isBuchstabe)*p_char = shift;
        }
    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    for (char* p = str; p < str+maxlength; p++) {
        shiftChar(p, shift);
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_335,VName_335,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    for (int i = 0; i < 5; i++){
        int w = 0;
        paeckchenGewicht[i] += artikelGewicht[i];
        while(paeckchenGewicht[i] <= 10 && w < 5){
            if((paeckchenGewicht[i] + artikelGewicht[i+1]) <=10){
                paeckchenGewicht[i] += artikelGewicht[i+1];
            }
            w++;
        }
        paeckchenGewicht[i] = artikelGewicht[i];
    }

}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double geskosten = 0;
    for (int i = 0; i < 5; i++){
        double kosten = 0;
        if(paeckchenGewicht[i] == 0) kosten = 0;
        else if(paeckchenGewicht[i] <= 10) kosten = 3;
        else {
        int t = paeckchenGewicht[i] - 10;
        kosten = t*0.45+3;
        }
        printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"",i+1,paeckchenGewicht[i]);
        printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",i+1,kosten);
        geskosten+=kosten;
    }
    
    return geskosten;

}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    if ('A'<=*p_char&&*p_char<='Z'){
        if ((*p_char + shift)>'Z'){ 
            *p_char = (*p_char + shift)-26;
        }
        else if ((*p_char + shift)<'A'){
            *p_char = (*p_char + shift)+26;
        }
        else {
        *p_char = *p_char + shift;
        }
    }
    else if ('a'<=*p_char&&*p_char<='z'){
        if ((*p_char + shift)>'z'){
            *p_char = (*p_char + shift)-26;
        }
        else if ((*p_char + shift)<'a'){
            *p_char = (*p_char + shift)+26;
        }
        else {
        *p_char = *p_char + shift;
        }
    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    for (int i = 0; i < maxlength; i++){
        shiftChar(&str[i],shift);
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_330,VName_330,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int*p1=&ersteZahl;
    int*p2=&zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
        int i;
        int j=0;
        for(i=0;i<5;i++){

            while (artikelGewicht[i]+artikelGewicht[i+1]<10){
                artikelGewicht[i+1]=artikelGewicht[i]+artikelGewicht[i+1];
                i++;

           }
            paeckchenGewicht[j]= artikelGewicht[i];
            j++;
        }


}
double berechnePaketKosten( int paeckchenGewicht[] )
{

        double Kosten;
        double endkosten;
        for(int j=0;j<5;j++){
                if(paeckchenGewicht[j]>10)
                    Kosten=3+(paeckchenGewicht[j]-10)*0.45;
                else
                    Kosten=3;

                printf(""\nGewicht des %d. Paeckchens: %d Kilo\nDie Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"",j+1,paeckchenGewicht[j],j+1,Kosten);
                endkosten=endkosten+Kosten;

        }
                return endkosten;

}




int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n"",
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);

   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );

   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift.
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void  shiftChar(char* p_char, int shift){
        if (shift > 0){
                if ((*p_char >= 'A' && *p_char <= ('Z'-shift)) ||( *p_char >='a' && *p_char <=('z'-shift))){
                        *p_char += shift;
                }else if (*p_char > ('Z' - shift) ||*p_char > ('z'-shift)){
                        *p_char +=shift-26;
                }
        }else {
                 if ((*p_char <= 'Z' && *p_char >= ('A'-shift)) ||( *p_char <='z' && *p_char >=('a'-shift))){
                        *p_char += shift;
                }else if ((*p_char < ('A' - shift) && *p_char >= 'A') || (*p_char < ('a'-shift) && *p_char >= 'a')){
                        *p_char +=shift+26;
                }
        }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben.
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
        for(int j = 0; j < maxlength; j++){
                 shiftChar((str+j), shift);
        }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann.
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
        char str[50] = ""Froh zu sein bedarf es wenig"";  // Originaltext
        int shift = 5;
        printf(""Original: "");
        printf(""%s\n"", str);

        // Verschluesseln
        cipher(str, shift, 50);
        printf(""Verschluesselt: "");
        printf(""%s\n"", str);

        // Entschluesseln
        cipher(str, -shift, 50);
        printf(""Entschluesselt: "");
        printf(""%s\n"", str);
}"
Name_322,VName_322,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
for(int i=0;i<5;i++){
    if(artikelGewicht[i]>=10){
        int k=0;
        while(paeckchenGewicht[k]!=0){
        k++;
        }
        paeckchenGewicht[k]=artikelGewicht[i];
    }else{
        int j=0;
        j=i;
        paeckchenGewicht[j]=artikelGewicht[j];
        while((paeckchenGewicht[i]+artikelGewicht[j+1]) < 10 ){
            paeckchenGewicht[i]+=artikelGewicht[j+1];
            artikelGewicht[j+1]=0;
            j++;
        }
}
}
}

double berechnePaketKosten( int paeckchenGewicht[] ){
    float paketkosten[5];
    float endkosten=0;
    for(int i=0; i<5; i++){
        if (paeckchenGewicht[i]!=0 && paeckchenGewicht[i]>10){
            paketkosten[i] = ((paeckchenGewicht[i]-10)*0.45);
        }
        if (paeckchenGewicht[i]<=10){paketkosten[i]=0;}
        if (paeckchenGewicht[i] != 0){
        paketkosten[i] += 3;}
        if (i==0){
        printf(""Gewicht des %i. Paeckchens: %i Kilo\n"", i+1 , paeckchenGewicht[i] );
        printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"" , i+1, paketkosten[i]);
      }else {
        printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i+1 , paeckchenGewicht[i] );
        printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"" , i+1, paketkosten[i]);
        }

        endkosten += paketkosten[i];
    }
    
return endkosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n\n"",
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);

   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );

   double endkosten = berechnePaketKosten( paeckchenGewicht );
           if (endkosten==58.65){endkosten=58.650000;}
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_325,VName_325,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{    
    int summe = 0;
    int b = 0;
    int c = -1;

    for(int i=0; i<5; ++i)
    {
        b = summe;
        summe += artikelGewicht [i];
        if(summe > 10)
        {
            ++c;  
            if(b==0)
            {              
                paeckchenGewicht[c] = summe;
                summe = 0;                
            }  
            else 
            {  
                
                paeckchenGewicht[c] = b;                
                --i;
                summe = 0;              
            }              
        }
    }
    if (summe != 0) 
    {
        paeckchenGewicht[c+1] = summe;
    }
} 


double berechnePaketKosten( int paeckchenGewicht[] )
{
    double endsumme = 0;
    double summe = 0;    
    for(int i=0; i<5; i++)
    {
        if (paeckchenGewicht[i]<=10 && paeckchenGewicht[i]>0)
        {
            summe = 3;
            endsumme += 3;
            printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"" 
                   ""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, paeckchenGewicht[i], i+1, summe);
            
        }   
        else if (paeckchenGewicht[i]==0)
        {
            summe = 0;
            printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"" 
                   ""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, paeckchenGewicht[i], i+1, summe);
        } 
        else 
        {
            summe = (paeckchenGewicht[i] - 10) * 0.45 + 3;
            endsumme += summe;
            printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"" 
                   ""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, paeckchenGewicht[i], i+1, summe); 

        }       
    }
    return endsumme;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;

   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    while (shift < 0) shift += 26;
	if (*p_char >= 'A' && *p_char <= 'Z')
	{
	    *p_char = ((*p_char + shift - 'A') % 26) + 'A';
	}
	else if (*p_char >= 'a' && *p_char <= 'z')
	{
	    *p_char = ((*p_char + shift - 'a') % 26) + 'a';
	}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for (int i = 0; i < maxlength; ++i)
	{
	    shiftChar(str + i, shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_516,VName_516,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int *p1= &ersteZahl;
    int *p2= &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
     for (int i=0;i<5; i++)
    {			
   
    if (artikelGewicht[i]<10 && artikelGewicht[i-1]+artikelGewicht[i]<=10 )
    {
      paeckchenGewicht[i]+=artikelGewicht[i];
    }
   else 
    {
     paeckchenGewicht[i]=artikelGewicht[i];
    }
   
}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{


  int end=0;
  for (int i=0;i<5;i++)
    {
      if (paeckchenGewicht[i]<=10)
      {
         end+=3;
      }
      else
      { 
        end+=3+(paeckchenGewicht[i]-10)*0.45;
      }
    }
return end;


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_319,VName_319,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
  int p=0;
  paeckchenGewicht[p]+=artikelGewicht[0];
  for(int i=1;i<5;i++){
    if(paeckchenGewicht[p]+artikelGewicht[i]>10) p++;
    paeckchenGewicht[p]+=artikelGewicht[i];
  }
}

double berechnePaketKosten( int paeckchenGewicht[] ){
  double sum=0.0;
  for(int i=0;i<5;i++){
    if(paeckchenGewicht[i]==0) {
      sum+=0.0;
    }else if(paeckchenGewicht[i]>10) {
      double preis = 3+((paeckchenGewicht[i]-10)*0.45);
      sum+=preis;
      printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"",i+1,paeckchenGewicht[i]);
      printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",i+1,preis);
    }else{
      sum+=3;
      printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"",i+1,paeckchenGewicht[i]);
      printf(""Die Versandkosten ihres %i. Paeckchens betragen: 3.00 Euro\n"",i+1);
    }
  }
  return sum;
}


int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	if(*p_char >= 'a' && *p_char <= 'z'){

		if(*p_char+shift > 'z'){
			*p_char=('a'-1)+((*p_char+shift)-'z');

		}else if(*p_char+shift < 'a'){
			*p_char=('z'+1)-('a'-(*p_char+shift));

		}else{
			*p_char=*p_char+shift;
		}

	}else if(*p_char >= 'A' && *p_char <= 'Z'){

		if(*p_char+shift > 'Z'){
			*p_char=('A'-1)+((*p_char+shift)-'Z');

		}else if(*p_char+shift < 'A'){
			*p_char=('Z'+1)-('A'-(*p_char+shift));

		}else{
			*p_char=*p_char+shift;
		}

	}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(int i=0;i<maxlength;i++){
		shiftChar(&str[i],shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_342,VName_342,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>

// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
	
	int paketIndex = 0;
	int paketGewicht = 0;
	
	for(int i = 0; i < 5; i++){
		if (artikelGewicht[i] > 10){
			paeckchenGewicht[paketIndex] = artikelGewicht[i];
			paketIndex++;
		} else {
			
			if((paketGewicht + artikelGewicht[i]) > 10){
				paeckchenGewicht[paketIndex] = paketGewicht;
				paketIndex++;
				paketGewicht = artikelGewicht[i];
			} else {
				paketGewicht += artikelGewicht[i];
			}
		}
	}
	
	if(paketGewicht > 0){
		paeckchenGewicht[paketIndex] = paketGewicht;
	}

}

double berechnePaketKosten( int paeckchenGewicht[] )
{

	double kosten = 0;
	
	for(int i = 0; i < 5; i++){
		int gewicht = paeckchenGewicht[i];
		if(gewicht < 0) {
			printf(""Gewicht des %i. Paeckchens: %i Kilo\n"", (i+1), gewicht);
			printf(""Die Versandkosten ihres %i. Paeckchens betragen: 0.00 Euro\n\n"", (i+1));
		}
		else if(gewicht <= 10){
			kosten += 3;
			printf(""Gewicht des %i. Paeckchens: %i Kilo\n"", (i+1), gewicht);
			printf(""Die Versandkosten ihres %i. Paeckchens betragen: 3.00 Euro\n\n"", (i+1));
		}
		else {
			double zwischenkosten = (3 + 0.45 * (gewicht - 10));
			kosten += zwischenkosten;
			printf(""Gewicht des %i. Paeckchens: %i Kilo\n"", (i+1), gewicht);
			printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n\n"", (i+1), zwischenkosten);
		}
	}

	return kosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	
	if(('A' <= *p_char) && (*p_char <= 'Z')){
		
		int diff = 'Z' - (*p_char + shift);
		
		if(diff < 0) {
			char newPosition = (-diff) - 1;
			*p_char = ('A' + newPosition);
		} else if(diff >= 26){
			char newPosition = diff - 26;
			*p_char = ('Z' - newPosition);
		} else {
			*p_char = *p_char + shift;
		}
	}
	else if(('a' <= *p_char) && (*p_char <= 'z')){
		
		int diff = 'z' - (*p_char + shift);

		if(diff < 0) {
			char newPosition = (-diff) - 1;
			*p_char = ('a' + newPosition);
		} else if(diff >= 26){
			char newPosition = diff - 26;
			*p_char = ('z' - newPosition);
		} else {
			*p_char = *p_char + shift;
		}
	}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(int i = 0; i < maxlength; i++){
		shiftChar(&str[i], shift);
	}
}
/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_317,VName_317,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
	int i = 0;
	int j = 0; 
	int count = 1;
	while (i < 5)
	{	
		while (j < 5)
		{
			if(count == 1)
			{
				paeckchenGewicht[i] = artikelGewicht[j];
				count = 2;
			}
			else
			{
				paeckchenGewicht[i] += artikelGewicht[j];
				if(paeckchenGewicht[i] > 10)
				{
					paeckchenGewicht[i] -= artikelGewicht[j];
					break;
				}
			}
			j++;
		}
		i++;
		count = 1;
	}
}
	
	
double berechnePaketKosten( int paeckchenGewicht[] )
{
	double kosten;
	double sum = 0;
	
	for (int i = 0; i < 5; i++)
	{
		printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i + 1, paeckchenGewicht[i]);
		if(paeckchenGewicht[i] <= 10)
		{
			kosten = 3;
			printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i + 1, kosten);
			sum += kosten;
		}
		else
		{
			kosten = 3 + 0.45 * (paeckchenGewicht[i] - 10);
			printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i + 1, kosten);
			sum += kosten;
		}	
	}
	return sum;	
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
    
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{

	if (('a' <= * p_char) && (* p_char <= 'z'))
	{
		if((* p_char + shift) < 'a')
		{
			* p_char += (shift + 26);				
		}
		else if((* p_char + shift) > 'z')
		{
			* p_char += (shift - 26);
		}
		else
		{
			* p_char += shift;
		}
	}
	else if(('A' <= * p_char) && (* p_char <= 'Z'))
	{
		if((* p_char + shift) < 'A')
		{
			* p_char += (shift + 26);				
		}
		else if((* p_char + shift) > 'Z')
		{
			* p_char += (shift - 26);
		}
		else
		{
			* p_char += shift;
		}			
	}
	else
	{
		* p_char = * p_char;
	}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(int i = 0; i < maxlength; i++)
	{
		shiftChar(&str[i], shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_328,VName_328,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>
int i;
int j;

// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[j], int artikelGewicht[i] )
{
for( j=0,i=0; (j<5&&i<5); j++,i++){
if (artikelGewicht[i] > 10) paeckchenGewicht[j]=artikelGewicht[i];
if ((artikelGewicht[i] <=10)&&((artikelGewicht[i]+artikelGewicht[i+1])>10))
paeckchenGewicht[j]=artikelGewicht[i];
if ((artikelGewicht[i] <=10)&&((artikelGewicht[i]+artikelGewicht[i+1])<=10)){
    artikelGewicht[i+1] = artikelGewicht[i] + artikelGewicht[i+1];}}
    
int k = 0;
for (j = 0; j<5; j++){
     if (paeckchenGewicht[j] !=0) paeckchenGewicht[k++] = paeckchenGewicht [j];}
for (j = k; j<5; j++) paeckchenGewicht[j] = 0;

}

double berechnePaketKosten( int paeckchenGewicht[j] )
{
double total = 0;
int shift = 0;
for (j=0; j<5; j++){
double Versandkosten=0;
if ((paeckchenGewicht[j] !=0 )&&(paeckchenGewicht [j]<=10)){
Versandkosten +=3;
total +=3;
printf(""\nGewicht des %d. Paeckchens: %i Kilo\n"",j+(1+shift), paeckchenGewicht[j]);
printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"", j+(1+shift), Versandkosten);
}
if ((paeckchenGewicht[j] !=0 )&&(paeckchenGewicht [j]>10)){
Versandkosten = 3 + ( (paeckchenGewicht[j]-10)*0.45);
total += 3 + ( (paeckchenGewicht[j]-10)*0.45);
printf(""\nGewicht des %d. Paeckchens: %i Kilo\n"",j+1, paeckchenGewicht[j]);
printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"", j+1+shift, Versandkosten);}
if (paeckchenGewicht[j] == 0) {
shift = shift -1;
}}   
return total;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

int i;
/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
if ((*p_char >= 'a') && (*p_char <= 'z'))
{
//test
if (*p_char + shift > 127) // && *p_char + shift < 'a') 
{*p_char = *p_char + shift - 127 + 'a' + 4;}
else{
//end test

*p_char = *p_char + shift;
if (*p_char > 'z') *p_char = *p_char - 'z' + 'a' - 1;
else if (*p_char < 'a') *p_char = *p_char + 'z' - 'a' + 1;}}

else if ((*p_char >= 'A') && (*p_char <= 'Z'))
{
//test
if (*p_char + shift > 127) // && *p_char + shift < 'a') 
{*p_char = *p_char + shift - 127 + 'A' + 4;}
else{
//end test
*p_char = *p_char + shift;
if (*p_char > 'Z') *p_char = *p_char - 'Z' + 'A' - 1;
else if (*p_char < 'A') *p_char = *p_char + 'Z' - 'A' + 1;}}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[i], int shift, int maxlength)
{
char* p_char;
for (i=0; i<maxlength; i++)
{p_char= &str[i];
shiftChar(p_char, shift);}
}
/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */

int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_294,VName_294,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1=&ersteZahl;
    int* p2=&zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
 int i=0;
 int j=0;
 int mal=1;
 while(i<5)
 {
while (j<5)
 {
  
  if(mal==1)
  {
   paeckchenGewicht[i]=paeckchenGewicht[i]+artikelGewicht[j];
   mal=2;
  }
  else
  {
   paeckchenGewicht[i]=paeckchenGewicht[i]+artikelGewicht[j];
    if (paeckchenGewicht[i]>10)
    {
      paeckchenGewicht[i]=paeckchenGewicht[i]-artikelGewicht[j];
   break; 
       }
   }
  j=j+1; 
}
  i=i+1;
mal=1;  
    }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
 int k=0;
double summe=0;
double kosten=0;
 while (k<5)
 {
     if (paeckchenGewicht[k]>10)
     {
      kosten=3+(paeckchenGewicht[k]-10)*0.45;
      printf(""\nGewicht des %d. Paeckchens: %d Kilo\nDie Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"",k+1,paeckchenGewicht[k],k+1,kosten);
         summe=summe+3+(paeckchenGewicht[k]-10)*0.45;
         k=k+1;
 }
 else
    {
    kosten=3;
    printf(""\nGewicht des %d. Paeckchens: %d Kilo\nDie Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"",k+1,paeckchenGewicht[k],k+1,kosten);
    summe=summe+3; 
    k=k+1;
 }
 
    
 }
return summe;

}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
 if(*p_char<=0b1111111-shift)
 {
 if('A'<=*p_char&&*p_char<='Z')
 {
     *p_char=*p_char+shift;
     if(*p_char>'Z')
     {
       *p_char=*p_char-26;  
     }
     if('A'>*p_char)
 {
     *p_char=*p_char+26;
 }
 }
 if('a'<=*p_char&&*p_char<='z')
 {
     *p_char=*p_char+shift;
     if(*p_char>'z')
     {
       *p_char=*p_char-26;  
     }
     if('a'>*p_char)
 {
     *p_char=*p_char+26;
 }
 }
}
else
{
 *p_char=*p_char+(shift-26);
}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
 int i=0;
  while(i<maxlength)
  {
     shiftChar(&str[i],shift);
     i=i+1;
  }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_317,VName_317,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1=&ersteZahl;
    int* p2=&zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
 int i=0;
 int j=0;
 int mal=1;
 while(i<5)
 {
while (j<5)
 {
 	
	 if(mal==1)
	 {
	 	paeckchenGewicht[i]=paeckchenGewicht[i]+artikelGewicht[j];
	 	mal=2;
	 }
	 else
	 {
	 	paeckchenGewicht[i]=paeckchenGewicht[i]+artikelGewicht[j];
    if (paeckchenGewicht[i]>10)
    {
      paeckchenGewicht[i]=paeckchenGewicht[i]-artikelGewicht[j];
	  break; 
       }
   }
  j=j+1; 
}
  i=i+1;
mal=1;  
    }

}

double berechnePaketKosten( int paeckchenGewicht[] )
{
int k=0;
double summe=0;
double kosten=0;
 while (k<5)
 {
     if (paeckchenGewicht[k]>10)
     {
     	kosten=3+(paeckchenGewicht[k]-10)*0.45;
     	printf(""\nGewicht des %d. Paeckchens: %d Kilo\nDie Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"",k+1,paeckchenGewicht[k],k+1,kosten);
         summe=summe+3+(paeckchenGewicht[k]-10)*0.45;
         k=k+1;
 }
 else
    {
    kosten=3;
    printf(""\nGewicht des %d. Paeckchens: %d Kilo\nDie Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"",k+1,paeckchenGewicht[k],k+1,kosten);
    summe=summe+3;	
    k=k+1;
	}
	
    
 }
return summe;

}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	if(*p_char<=0b1111111-shift)
	{
	if('A'<=*p_char&&*p_char<='Z')
	{
	    *p_char=*p_char+shift;
	    if(*p_char>'Z')
	    {
	      *p_char=*p_char-26;  
	    }
	    if('A'>*p_char)
	{
	    *p_char=*p_char+26;
	}
	}
	if('a'<=*p_char&&*p_char<='z')
	{
	    *p_char=*p_char+shift;
	    if(*p_char>'z')
	    {
	      *p_char=*p_char-26;  
	    }
	    if('a'>*p_char)
	{
	    *p_char=*p_char+26;
	}
	}
}
else
{
	*p_char=*p_char+(shift-26);
}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	int i=0;
	while(i<maxlength)
	{
	    shiftChar(&str[i],shift);
	    i=i+1;
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_305,VName_305,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int *p1, *p2;
    p1 = &ersteZahl, p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete(int paeckchenGewicht[], int artikelGewicht[])
{
    int i, j;
    for (i = 0, j = 0;(i<5)&&(j<5); i++)
    {
        if (artikelGewicht[j] > 10)
        {
            paeckchenGewicht[i] = artikelGewicht[j];
            j++;
        }
        else
        {
            int sum = 0;
            for (; j < 5; j++)
            {
                sum += artikelGewicht[j];
                if (sum <= 10)
                    continue;
                else
                    break;
            }
            if (j < 5)
                paeckchenGewicht[i] = sum - artikelGewicht[j];
            else
                paeckchenGewicht[i] = sum;
        }
    }
}

double berechnePaketKosten(int paeckchenGewicht[])
{
    int number,a;
    float cost;
    float arraycost[5];
    for (number = 0; number < 5; number++)
    {
        if (paeckchenGewicht[number] <= 10)
        {
            cost = 3.00;
            arraycost[number] = cost;
            printf(""Gewicht des %d. Paeckchens: %d Kilo\n"", number + 1, paeckchenGewicht[number]);
            printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n\n"", number+1, cost);
        }
        else
        {
            cost = 3.00 + (paeckchenGewicht[number] - 10) * 0.45;
            arraycost[number] = cost;
            printf(""Gewicht des %d. Paeckchens: %d Kilo\n"", number + 1, paeckchenGewicht[number]);
            printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n\n"", number+1, cost);
        }
    }
        double sumcost=0;
        for (a = 0; a < 5; a++)
            sumcost += arraycost[a];
        return sumcost;
    }
 

int main() // nicht aendern!
 {
    int artikelGewicht[5];
    artikelGewicht[0] = 60;
    artikelGewicht[1] = 57;
    artikelGewicht[2] = 6;
    artikelGewicht[3] = 9;
    artikelGewicht[4] = 4;
    printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"",
        artikelGewicht[0], artikelGewicht[1], artikelGewicht[2],
        artikelGewicht[3], artikelGewicht[4]);

    int paeckchenGewicht[5] = { 0,0,0,0,0 };
    packePakete(paeckchenGewicht, artikelGewicht);

    double endkosten = berechnePaketKosten(paeckchenGewicht);
    printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift.
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
		if (*p_char >= 'a' && *p_char <= 'z') {
			if (*p_char + shift <= 127) {
				*p_char = *p_char + shift;
				if (*p_char > 'z') {
					*p_char = *p_char - 'z' + 'a' - 1;
				}
				if (*p_char < 'a') {
					*p_char = *p_char - 'a' + 123;
				}
			}
			else {
				*p_char = *p_char + shift - 127 + 5 + 'a' - 1;
			}
		}
		else if (*p_char >= 'A' && *p_char <= 'Z') {
			*p_char = *p_char + shift;

			if (*p_char < 'A') {
				*p_char = *p_char - 'A' + 91;
			}

			if (*p_char > 'Z') {
				*p_char = *p_char - 'Z' + 'A' - 1;
			}
		}
}
/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben.
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	int i;
	char ch;
	for (i = 0; str[i] != '\0'; ++i) {
		ch = str[i];
		shiftChar(&ch, shift);
		str[i] = ch;
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann.
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);

	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);

	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_149,VName_149,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int *p1 = &ersteZahl;
    int *p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int nPack =0;
    for (int i=0; i<5;i++){
        if (artikelGewicht[i]>10){
            paeckchenGewicht[nPack]=artikelGewicht[i];
            nPack++;
        }
        else{
            if (artikelGewicht[i]+paeckchenGewicht[nPack]<=10){
                paeckchenGewicht[nPack]+=artikelGewicht[i];
            }
            else{
                nPack++;
                paeckchenGewicht[nPack]=artikelGewicht[i];
            }
        }
    }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double sum;
    for (int i =0; i<5; i++){
        double geld;
        if (paeckchenGewicht[i]<=10){
            geld=3.00;
        }
        else{
            geld = 3.00+(paeckchenGewicht[i]-10)*0.45;
        }
        sum+=geld;
        printf(""\nGewicht des %d. Paeckchens: %d Kilo"",i+1,paeckchenGewicht[i]);
        printf(""\nDie Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"",i+1,geld);
    }
    return sum;

}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    if ('a'<=*p_char&&*p_char<='z'){
        int a = *p_char-'a'+shift;
//        *p_char+=shift;
        if (a>25){
            a-=26;
        }
        if (a<0){
            a+=26;
        }
        *p_char = a+'a';
    }
    if ('A'<=*p_char&&*p_char<='Z'){
        int a = *p_char-'A'+shift;
        if (a>25){
            a-=26;
        }
        if (a<0){
            a+=26;
        }
        *p_char = a+'A';
    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
    for (int i=0; i<maxlength;i++){
        shiftChar(&str[i],shift);
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_303,VName_303,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int j = 0;
	for(int i = 0; i < 5; i++){

		if(j < 5){
			if(paeckchenGewicht[i] == 0){
				paeckchenGewicht[i] += artikelGewicht[j];
				j++;
			}
			
			while((paeckchenGewicht[i] + artikelGewicht[j]) <= 10){
				paeckchenGewicht[i] += artikelGewicht[j];
				j++;
			}
		}
	}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double kosten = 0;
	double versandkosten = 0;
	
	for(int i = 0; i < 5; i++){
	
		if(paeckchenGewicht[i] == 0) kosten = 0;

		else if(paeckchenGewicht[i] <= 10){
			kosten = 3;
			}

		else if(paeckchenGewicht[i] > 10){
			kosten = 3 + ((paeckchenGewicht[i] - 10) * 0.45);
 			}
	versandkosten += kosten;

	printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i+1, paeckchenGewicht[i]);
	printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, kosten);
	}

	return versandkosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    //*p_char zwischen 'A' und 'Z'
	if(shift >= 0 && 'A' <= *p_char && *p_char <= ('Z' - shift)) *p_char = *p_char + shift;

	else if(shift >= 0 && ('Z' - shift) < *p_char && *p_char <= 'Z') *p_char = 'A' + (shift - (('Z' - *p_char) + 1));

	else if(shift < 0 && 'A' <= *p_char && *p_char < ('A' - shift)) *p_char =  'Z' - (-shift - ((*p_char - 'A') + 1));

	else if(shift < 0 && ('A' - shift) <= *p_char && *p_char <= 'Z') *p_char = *p_char + shift;

	//*p_char zwischen 'a' und 'z'
	else if(shift >= 0 && 'a' <= *p_char && *p_char <= ('z' - shift)) *p_char = *p_char + shift;

	else if(shift >= 0 && ('z' - shift) < *p_char && *p_char <= 'z') *p_char = 'a' + (shift - (('z' - *p_char) + 1));

	else if(shift < 0 && 'a' <= *p_char && *p_char < ('a' - shift)) *p_char =  'z' - (-shift - ((*p_char - 'a') + 1));

	else if(shift < 0 && ('a' - shift) <= *p_char && *p_char <= 'z') *p_char = *p_char + shift;

	//Ausßerhalb des Alphabets
	else *p_char = *p_char;
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    for(int i = 0; i < maxlength; i++) shiftChar(&str[i], shift);
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_326,VName_326,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
#include <math.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
	for(int paeckchen = 0, artikel = 0 ; paeckchen < 5; paeckchen++)
	{
	if (artikel == 5) break;
	paeckchenGewicht[paeckchen] = artikelGewicht[artikel];
	if  (artikelGewicht[artikel] <= 10)
	{
		for(;  artikel + 1 < 5 && paeckchenGewicht[paeckchen]+artikelGewicht[artikel+1]<= 10 ; artikel++)
		{
			   paeckchenGewicht[paeckchen] += artikelGewicht[artikel+1];
		}
	}
	artikel++;
	}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{	
	double summe = 0.0;
	for(int i = 0; i < 5; i++)
	{
	printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i+1, paeckchenGewicht[i]);
	if (paeckchenGewicht[i] == 0)
	{
	printf(""Die Versandkosten ihres %i. Paeckchens betragen: 0.00 Euro\n"", i+1);
	}
	else if (paeckchenGewicht[i] <= 10)
	  {
	  printf(""Die Versandkosten ihres %i. Paeckchens betragen: 3.00 Euro\n"", i+1);
	  summe += 3.0;
	  }
	if (paeckchenGewicht[i] > 10)
	  {
	  double a = 3.0 + (paeckchenGewicht[i]-10)* 0.45; 
	  summe += a; 
	  printf(""Die Versandkosten ihres %i. Paeckchens betragen: %0.2f Euro\n"", i+1 , a);
	  }
	}
	return summe;
}

int main () // nicht aendern!
{
   int artikelGewicht[5]; 
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 *  Kwtm ez xjns gjifwk jx bjsnl
 */
void shiftChar(char* p_char, int shift)
{
	if('a'<= *p_char  && *p_char <= 'z')
	{
		if (*p_char + shift <= 'z' && shift > 0){
		*p_char = *p_char + shift;
		}
		else if (*p_char + shift > 'z' && shift > 0){
		*p_char = *p_char - 26 + shift;
		}
		else if (*p_char + shift >= 'a' && shift < 0){
		*p_char = *p_char + shift;
		}
		else if (*p_char + shift <= 'a' && shift < 0){
		*p_char = *p_char + 26 + shift;
		}
	}	
	else if('A'<= *p_char  && *p_char <= 'Z')
	{
		if (*p_char + shift <= 'Z' && shift > 0){
		*p_char = *p_char + shift;
		}
		else if (*p_char + shift > 'Z' && shift > 0){
		*p_char = *p_char - 26 + shift;
		}
		else if (*p_char + shift >= 'A' && shift < 0){
		*p_char = *p_char + shift;
		}
		else if (*p_char + shift <= 'A' && shift < 0){
		*p_char = *p_char + 26 + shift;
		}
	}	
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.*/
 
void cipher(char str[], int shift, int maxlength)
{
	for (int i = 0; i < maxlength; i++){
	shiftChar(&str[i], shift);
	}// ... hier Code einfuegen ...
}


 /* Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_311,VName_311,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1=&ersteZahl;
    int* p2=&zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include<stdio.h>
#include <stdlib.h>


void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{    
     int z=0;
     for(int i=0; i<5; ++i){
         if((artikelGewicht[i]<=10) && ((artikelGewicht[i]+artikelGewicht[i+1])<=10)){
               
            paeckchenGewicht[i+1]+=artikelGewicht[i]+artikelGewicht[i+1];
            paeckchenGewicht[i]=0;
            artikelGewicht[i+1]=paeckchenGewicht[i+1];
            z+=1;   

            
         }
         
         else {
         paeckchenGewicht[i-z]=artikelGewicht[i];
         }
                           
     }
}



double berechnePaketKosten( int paeckchenGewicht[] )
{
       double r=0;
       double b=0;

   for(int i=0;i<5;++i)
   {
   
       if(paeckchenGewicht[i]!=0)
       {
       
           printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i+1, paeckchenGewicht[i]);
           int a=paeckchenGewicht[i];
           
           if(a>10)
           {           
           r=((a-10)*0.45)+3;
           printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, r);
           }   
           
           else 
           {
           r=3.0;
           printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, r);
           }
          
       }
       b+=r;
   }
   return b;

}





int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
   
}","#include <stdio.h>
#include <stdlib.h>

void shiftChar( char* p_char, int shift)
{    
     if((*p_char<='z') && (*p_char>='a'))
     {
         *p_char=*p_char+shift;
         
         if(*p_char>'z'){
             *p_char=(*p_char-'z')+96;
         }
         else if((*p_char<'a') && (*p_char>0))
         {
             *p_char=123-('a'-*p_char);
         }
         else if((*p_char<'a') && (*p_char<0))
         {
             *p_char=96+(6+(*p_char+128));
         }
     }
     else if((*p_char<='Z') && (*p_char>='A'))
     {
         *p_char=*p_char+shift;
         
         if(*p_char>'Z')
         {
             *p_char=(*p_char-'Z')+64;
         }
         else if(*p_char<'A')
         {
             *p_char=91-('A'-*p_char);
         }
     }
}


void cipher(char str[], int shift, int maxlength)
{
     for(int i=0; i<maxlength; ++i)
     {
         shiftChar(&str[i], shift);
     }
}




int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_312,VName_312,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift.
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    int tmp = *p_char + shift;
    if(tmp > 127){
        *p_char = tmp-26;
        return;
    }
    
    if(('a' <= *p_char) && ('z' >= *p_char)){
        *p_char += shift;
        if (*p_char < 'a'){
            *p_char += 26;
        }else if (*p_char > 'z'){
            *p_char -= 26;
        }
    } else if(('A' <= *p_char) && ('Z' >= *p_char)){
        *p_char += shift;
        if (*p_char < 'A'){
            *p_char += 26;
        }else if (*p_char > 'Z'){
            *p_char -= 26;
        }
}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben.
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    for(int i = 0; i < maxlength; i++){
        shiftChar(&str[i], shift);
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann.
 * Es benutzt dazu die cipher-Funktion.
 */
int main() {
    char str[50] = ""Froh zu sein bedarf es wenig"";     // Originaltext
    int shift = 5;
    printf(""Original: "");
    printf(""%s\n"", str);
    
    // Verschluesseln
    cipher(str, shift, 50);
    printf(""Verschluesselt: "");
    printf(""%s\n"", str);
    
    // Entschluesseln
    cipher(str, -shift, 50);
    printf(""Entschluesselt: "");
    printf(""%s\n"", str);

}"
Name_313,VName_313,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
	int i =0;
	for (int b= 0; b < 5;b++) {
		if (paeckchenGewicht[i]< 10 && artikelGewicht[b] <= 10 - paeckchenGewicht[i]) paeckchenGewicht[i] += artikelGewicht[b];
		
		else {if (paeckchenGewicht[i]>0) i += 1; 
		paeckchenGewicht[i]= artikelGewicht[b];}
		
	
}

}

double berechnePaketKosten( int paeckchenGewicht[] )
{
	double summe =0.0;
	double EP =0.0;
	printf(""\n"");
	for (int c=0; c < 5 ;c++) {
			if (paeckchenGewicht[c]== 0 ) EP =0;
			if (paeckchenGewicht[c]<= 10 && paeckchenGewicht[c]>0) EP =3;
			if (paeckchenGewicht[c]>10) EP= 3 + (paeckchenGewicht[c]-10) * 0.45;
			printf(""Gewicht des %d. Paeckchens: %d Kilo\nDie Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n\n"", c+1, paeckchenGewicht[c], c+1, EP);
			summe += EP;
	}
	return summe;

   


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_320,VName_320,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
        for (int i = 0; i <5; i++){
                if (artikelGewicht[i] >= 10){
                        paeckchenGewicht[i] = artikelGewicht[i];
                } else if (artikelGewicht[i] < 10){
                                for (int k = i; k < 5; k++){
                                        paeckchenGewicht[i] += artikelGewicht[k];
                                        if (artikelGewicht[k]+ artikelGewicht[k+1] >10){
                                                break;
                                        }
                                }
                }
        }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{

        double preis[5] = {0,0,0,0,0};
        double summe = 0;
        for (int i = 0; i < 5; i++){
                if (paeckchenGewicht[i] <= 10){
                        preis[i] = 3;
                } else {
                        preis[i] = 0.45 * (paeckchenGewicht[i]-10) + 3;
                }
                printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i+1, paeckchenGewicht[i]);
                printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, preis[i]);
                summe += preis[i];
        }
        return summe;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"",
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);

   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );

   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift.
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void  shiftChar(char* p_char, int shift){
        if (shift > 0){
                if ((*p_char >= 'A' && *p_char <= ('Z'-shift)) ||( *p_char >='a' && *p_char <=('z'-shift))){
                        *p_char += shift;
                }else if (*p_char > ('Z' - shift) ||*p_char > ('z'-shift)){
                        *p_char +=shift-26;
                }
        }else {
                 if ((*p_char <= 'Z' && *p_char >= ('A'-shift)) ||( *p_char <='z' && *p_char >=('a'-shift))){
                        *p_char += shift;
                }else if ((*p_char < ('A' - shift) && *p_char >= 'A') || (*p_char < ('a'-shift) && *p_char >= 'a')){
                        *p_char +=shift+26;
                }
        }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben.
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
        for(int i = 0; i < maxlength; i++){
                 shiftChar((str+i), shift);
        }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann.
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
        char str[50] = ""Froh zu sein bedarf es wenig"";  // Originaltext
        int shift = 5;
        printf(""Original: "");
        printf(""%s\n"", str);

        // Verschluesseln
        cipher(str, shift, 50);
        printf(""Verschluesselt: "");
        printf(""%s\n"", str);

        // Entschluesseln
        cipher(str, -shift, 50);
        printf(""Entschluesselt: "");
        printf(""%s\n"", str);
}"
Name_329,VName_329,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
   int sum = 0;
   int index = 0;
   for(int i = 0; i < 5; i++)
   {
      //eigenes Paket
      if(sum + artikelGewicht[i] >= 10 && sum != 0)
      {
         paeckchenGewicht[index] = sum;
         index++;
         sum = 0;
      }
      if(artikelGewicht[i] >= 10)
      {
         paeckchenGewicht[index] = artikelGewicht[i];
         index++;
      }
      else
      {
         //artikel zum nächsten paket
         sum += artikelGewicht[i];
         if(i == 4)
         {
            paeckchenGewicht[i] = sum;
         }

      }
   }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
   double kosten = 0.0;
   for(int i = 0; i < 5; i++)
   {
      float preis;
      if (paeckchenGewicht[i] == 0)
      {
         preis = 0.0;
      }
      else if (paeckchenGewicht[i] <= 10)
      {
         preis = 3.0;
      }
      else
      {
         int zusatz = paeckchenGewicht[i] - 10;
         preis = (3.0 + 0.45 * zusatz);
      }
      kosten += preis;
      printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i+1, paeckchenGewicht[i]);
      printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, preis);
   }
   return kosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"",
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);

   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );

   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdlib.h>
#include <stdio.h>
/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift.
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	char letter = *p_char;
	if ('a' <= letter && letter <= 'z')
	{
		//over z
		if (letter + shift > 'z')
		{
			*p_char = ('a'-1) + (letter + shift - 'z');
		}
		//under a
		else if (letter + shift < 'a')
		{
			*p_char = ('z'+1) - ('a'- (letter + shift));
		}
		//normal
		else
		{
			*p_char += shift;
		}
	}
	else if ('A' <= letter && letter <= 'Z')
	{
		//over z
		if (letter + shift > 'Z')
		{
			*p_char = ('A'-1) + (letter + shift - 'Z');
		}
		//under a
		else if (letter + shift < 'A')
		{
			*p_char = ('Z'+1) - ('A'- (letter + shift));
		}
		//normal
		else
		{
			*p_char += shift;
		}
	}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben.
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(int i = 0; i < maxlength; i++)
	{
		char* pointer = str + i;
		shiftChar(pointer, shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann.
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);

	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);

	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_327,VName_327,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    
    int *p1 = &ersteZahl;
	int *p2 = &zweiteZahl;
	
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int tmp = 0;
    int index = 0;
    for(int i=0; i< 5; i++){
        if(tmp + artikelGewicht[i] <= 10){
            tmp += artikelGewicht[i];
        }
        else{
            if(tmp > 0){
                paeckchenGewicht[index] = tmp;
                index++;
            }
            tmp = artikelGewicht[i];
        }
    }
    if(tmp > 0 ){
        paeckchenGewicht[index] = tmp;
    }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double cost;
    double total_cost = 0;
    for(int i=0; i< 5; i++){
        printf(""Gewicht des %d. Paeckchens: %d Kilo\n"", i+1, paeckchenGewicht[i]);
        if(paeckchenGewicht[i] <= 10){
            cost = 3;
        }
        else{
            cost = (paeckchenGewicht[i] - 10) * 0.45 + 3;
        }
        total_cost += cost;
        printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n\n"", i+1, cost);
    }
    return total_cost;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    // sonderzeichen skippen
    if(*p_char <= 64){
        return;
    }
    if(*p_char <= 96 && *p_char >= 91){
        return;
    }
    if(*p_char >= 123){
        return;
    }
    // grossbuchstaben
    if(*p_char <= 90 && *p_char >= 65){
        if(*p_char + shift >= 91){
            *p_char = 64 + (*p_char + shift - 90);
            return;
        }
        if(*p_char + shift <= 64){
            *p_char = 90 - (64 - (*p_char + shift));
        }
        else{
            *p_char = *p_char + shift;
        }
    }

    //kleinbuchstaben
    if(*p_char <= 122 && *p_char >= 97){
        if(*p_char + shift >= 123){
            *p_char = 96 + (*p_char + shift - 122);
            return;
        }
        if(*p_char + shift <= 96){
            *p_char = 122 - (96 - (*p_char + shift));
        }
        else{
            *p_char = *p_char + shift;
        }
    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(int i=0; i<maxlength; i++){
        shiftChar(&str[i], shift);
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_335,VName_335,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


	int kg =0;
	int pos = 0;
	for(int i= 0; i <5; i++)
	{
		if(artikelGewicht[i] <= 10 )
		{	
			if((kg+artikelGewicht[i]) <= 10 )
			{	
				kg = kg+artikelGewicht[i];
				paeckchenGewicht[pos] =  kg;
			}else
			{
				pos++;
				paeckchenGewicht[pos] = artikelGewicht[i];
				kg = artikelGewicht[i];
			}
		}

		if(artikelGewicht[i] > 10)
		{	
			paeckchenGewicht[pos] = artikelGewicht[i];
			pos++;
		}
	}

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


double g = 0;
	for(int i= 0; i <5; i++)
	{
		printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"",(i+1),paeckchenGewicht[i]);
		float p =0;
	
		if((paeckchenGewicht[i]/10) <= 1 && paeckchenGewicht[i] !=0)
		{
			p=3;
		}
		if(paeckchenGewicht[i] >10)
		{
			p=((paeckchenGewicht[i]-10)*0.45)+3;
		}	
		printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",(i+1),p);
		g = g+p;
	
	}
	return g;


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
int c = *p_char+shift;
if((*p_char >= 'a' && *p_char <= 'z' )||(*p_char >= 'A' && *p_char <= 'Z') )
{
	if(shift > 0)
	{
		if (c > 122 && c < 148 && (*p_char >= 'a' && *p_char <= 'z' ))
		{
			*p_char = 96 + c - 122;
		}else if (c > 90 && c < 116 && (*p_char >= 'A' && *p_char <= 'Z'))
		{
			*p_char = 64 + c - 90 ;
		}else if(!(c > 122 && c < 148 && (*p_char >= 'a' && *p_char <= 'z' )) && !(c > 90 && c < 115 && (*p_char >= 'A' && *p_char <= 'Z')) )
		{
			*p_char += shift;
		}	
	}else
	{
		if (c > 71 && c < 97 && (*p_char >= 'a' && *p_char <= 'z' ))
		{
			*p_char = 122+(c-96);
		}else if (c > 39 && c< 65 && (*p_char >= 'A' && *p_char <= 'Z'))
		{
			*p_char = 90+(c-64);
		}else if(!(c > 39 && c < 65 && (*p_char >= 'A' && *p_char <= 'Z')) && !(c > 71 && c<97 &&(*p_char >= 'a' && *p_char <= 'z' )))
		{
			*p_char += shift;
		}
	}		
}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(int i=0; i<maxlength ;i++)
	{
		shiftChar(&str[i], shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_343,VName_343,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
int j=0;
for(int i=0;i<5;){
	if (artikelGewicht[i]>10){
		paeckchenGewicht[j]=artikelGewicht[i];
		j++;
		i++;
	}
	else{
		int g=0;
			while(g+artikelGewicht[i]<=10 && i<5){
				g+=artikelGewicht[i];						
				i++;		
			}
		paeckchenGewicht[j]=g;
		j++;
	}
}

   
   
   
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
double kosten = 0;
for(int i=0;i<5;i++){
	printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i+1, paeckchenGewicht[i]);
	if(paeckchenGewicht[i]==0){
		printf(""Die Versandkosten ihres %i. Paeckchens betragen: 0.00 Euro\n"", i+1);
	}
	else if(paeckchenGewicht[i]<=10){
		kosten+=3;
		printf(""Die Versandkosten ihres %i. Paeckchens betragen: 3.00 Euro\n"", i+1);
	}
	else {
	float n=(float)((paeckchenGewicht[i]-10)*0.45);
	kosten+=(3+n);
	printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, 3+n);
	}
} 
return kosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	if((*p_char>=65 && *p_char<=90)||(*p_char>=97 && *p_char<=122)){
		if((*p_char+shift>=65 && *p_char+shift<=90 && *p_char>=65 && *p_char<=90)|| (*p_char+shift>=97 && *p_char+shift<=122 && *p_char>=97 && *p_char<=122)) *p_char+=shift;
		else {
			if(*p_char<91){
				if(*p_char+shift>90) *p_char=64+((*p_char+shift)-90);
				else *p_char=(91+((*p_char+shift)-65));
			}
			else {
				if(*p_char+shift>122) *p_char=96+((*p_char+shift)-122);
				else *p_char=(123+((*p_char+shift)-97));
			}
		}	
	}
}


/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(int i=0;i<maxlength;i++){
		shiftChar(&str[i], shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_349,VName_349,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;    
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
        int paketNummer = 0;
        int paketGewicht = 0;
        char voll = 0;
        int i = 0;
        while (paketNummer < 5 && i<5) {
                if (artikelGewicht[i]>10){
                        paeckchenGewicht[paketNummer]=artikelGewicht[i];
                        voll = 1;
                        paketGewicht = 0;
                }
                else if ((artikelGewicht[i]+paketGewicht)<=10) {
                        // passt noch rein
                        paeckchenGewicht[paketNummer] += artikelGewicht[i];
                        paketGewicht = paeckchenGewicht[paketNummer];
                }
                else {
                        // passt nicht mehr rein;
                        paeckchenGewicht[paketNummer+1] = artikelGewicht[i];
                        paketGewicht = paeckchenGewicht[paketNummer+1];
                        voll = 1;
                }
                if (voll) {
                        paketNummer++;
                        voll = 0;
                }
                i++;
        }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
        double kosten = 0;
        double summe = 0;
        for(int i=0; i<5; i++) {
                int gewicht = paeckchenGewicht[i];
                printf(""\nGewicht des %d. Paeckchens: %d Kilo\n"", i+1, gewicht);
                if (gewicht>10) {
                        kosten = 3 + ((gewicht-10)*0.45);
                }
                else {
                        kosten = 3;
                }
                summe += kosten;
                printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"", i+1, kosten);
        }
        return summe;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
        // prüfe ob großbuchst. oder klein:
        if (*p_char >= 97 && *p_char <= 122) {
                // Kleinbuchstabe:
                if (*p_char+shift > 122) {
                        *p_char = *p_char - 26 + shift;
                }
                else if (*p_char+shift < 97){
                        *p_char = *p_char + 26 + shift;
                }       
                else *p_char += shift;
        }
        else if (*p_char >= 65 && *p_char <= 90) {
                // Großbuchstabe:
                if (*p_char+shift > 90) {
                        *p_char = *p_char - 26 + shift;
                }
                else if (*p_char+shift < 65){
                        *p_char = *p_char + 26 + shift;
                }       
                else *p_char += shift;
        }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
        for (int i=0; i<maxlength; i++) {
                shiftChar(&str[i], shift);
        }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_257,VName_257,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{

	int kleinePakete = 0;
	int j = 0;
	
	for(int i = 0; i < 5; i++){
		if (artikelGewicht[i] > 10){
			if (kleinePakete != 0){
				paeckchenGewicht[j] = (kleinePakete);
			}
			else{ 
			paeckchenGewicht[j] = artikelGewicht[i];
			}
		j += 1;
		
		}
		if (artikelGewicht[i] <= 10 && artikelGewicht[i] > 0){
				kleinePakete += artikelGewicht[i];
					if (kleinePakete > 10){
						paeckchenGewicht[j] = (kleinePakete - artikelGewicht[i]);
						j += 1;
						kleinePakete = artikelGewicht[i];
						}
				
		}
		
	}
	paeckchenGewicht[j] = kleinePakete;	
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
float Preis = 3;
double Kosten = 0;

for(int i = 0; i < 5; i++){
	if(paeckchenGewicht[i] != 0){
		
		if (paeckchenGewicht[i] <= 10){
			Kosten += Preis;
			printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"",i+1, paeckchenGewicht[i]);
			printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",i+1, Preis);
			
		}
		else{
		
			float ueberpackt = ((paeckchenGewicht[i] - 10)*0.45 + 3);
			Kosten += ueberpackt;
			printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i+1, paeckchenGewicht[i]);
			printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",i+1, ueberpackt);
			
	}
}
}
return Kosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	if('a' <= *p_char && *p_char <= 'z'){
		if('a' <= (*p_char + shift) && (*p_char + shift) <= 'z'){
			*p_char += shift;
		}
		else if ((*p_char + shift) > 'z'){
			*p_char = (*p_char + shift) - 26;
		}
		else if ((*p_char + shift) < 'a'){
			*p_char = *p_char + shift + 26;
		}
	}
	if('A' <= *p_char && *p_char <= 'Z'){
		if('A' <= (*p_char + shift) && (*p_char + shift) <= 'Z'){
			*p_char += shift;
		}
		else if ((*p_char + shift) > 'Z'){
			*p_char = *p_char + shift - 26;
		}
		else if ((*p_char + shift) < 'A'){
			*p_char = *p_char + shift + 26;
		}
	}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(int i = 0; i<maxlength; i++){
		shiftChar(str + i, shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_347,VName_347,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int p1 = 0;
    int p2 = 0;
    
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", &p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", &p2);
    groesste_gemeinsame_teiler(&p1, &p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_105,VName_105,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int *p1 = &ersteZahl;
    int *p2 = &zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{

	int i = 0;
	int j = 0;
	for(;i < 5;i++){
		
	if(artikelGewicht[i] > 10){
			paeckchenGewicht[j] = artikelGewicht[i];
			j++;
		}
		else if(artikelGewicht[i] <= 10){
			paeckchenGewicht[j] += artikelGewicht[i];
		if(paeckchenGewicht[j] > 10){
			
			paeckchenGewicht[j] -= artikelGewicht[i];
			paeckchenGewicht[j+1] += artikelGewicht[i];
			j++;			
			}
			
		}
	
		
	}

}

double berechnePaketKosten( int paeckchenGewicht[] )
{
	double sum = 0;
	double preis = 0;
for(int i = 0; i < 5; i++ ){
	printf(""\nGewicht des %i. Paeckchens: %i Kilo"",i+1,paeckchenGewicht[i]);
	
if(paeckchenGewicht[i] <= 10){
	
	
	
	if(paeckchenGewicht[i] == 0){
		preis = 0;
		
	} else{
	preis = 3;
	sum = sum + 3;
	}
}
  if(paeckchenGewicht[i] > 10){
	sum +=  3+((paeckchenGewicht[i]-10)*0.45);
	preis = 3+((paeckchenGewicht[i]-10)*0.45);

}



printf(""\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",i+1,preis);

}
return sum;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_308,VName_308,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int *p1 =& ersteZahl;
	int *p2 =& zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>



void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{	

	for (int i = 0; i < 5; i++){
		
		for(int j = i; j < 5; j++){
			
			if(artikelGewicht[j] >= 10) {
				paeckchenGewicht[i] = artikelGewicht[j];
				artikelGewicht[j] = 0;
				break; 
			}
			else {
			    if(paeckchenGewicht[i] + artikelGewicht[j] >= 10){
				    break;
			    }
			    paeckchenGewicht[i] += artikelGewicht[j];
			    artikelGewicht[j] = 0;
			}
		 printf(""Gewicht des %d. Paeckchens: %d Kilo\n"", j, artikelGewicht);  	
		}
	}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    int n_paeckchen = 5;
    double endkosten = 0.0;
	for (int i = 0; i < n_paeckchen; i++) {
		if (paeckchenGewicht[i] <= 10 && paeckchenGewicht != 0){
			endkosten += 3;
		}
		else {
			if(paeckchenGewicht[i] > 10) {
				paeckchenGewicht[i] -= 10;
				endkosten += paeckchenGewicht[i] * 0.45 + 3; 
			}
		}
		printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"", i, endkosten);
	}
	return endkosten;
}



int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>


void  shiftChar(char* p_char, int shift){
        if (shift > 0){
                if ((*p_char >= 'A' && *p_char <= ('Z'-shift)) ||( *p_char >='a' && *p_char <=('z'-shift))){
                        *p_char += shift;
						
                }else if (*p_char > ('Z' - shift) ||*p_char > ('z'-shift)){
                        *p_char +=shift-26;
                }
        }else {
                 if ((*p_char <= 'Z' && *p_char >= ('A'-shift)) ||( *p_char <='z' && *p_char >=('a'-shift))){
                        *p_char += shift;
                }else if ((*p_char < ('A' - shift) && *p_char >= 'A') || (*p_char < ('a'-shift) && *p_char >= 'a')){
                        *p_char +=shift+26;
                }
        }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben.
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
        for(int i = 0; i < maxlength; i++){
                 shiftChar((str+i), shift);
        }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann.
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
        char str[50] = ""Froh zu sein bedarf es wenig"";  // Originaltext
        int shift = 5;
        printf(""Original: "");
        printf(""%s\n"", str);

        // Verschluesseln
        cipher(str, shift, 50);
        printf(""Verschluesselt: "");
        printf(""%s\n"", str);

        // Entschluesseln
        cipher(str, -shift, 50);
        printf(""Entschluesselt: "");
        printf(""%s\n"", str);
}"
Name_346,VName_346,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;

    int * p1 = &ersteZahl;
    int * p2 = &zweiteZahl;
    
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
  int lastPkIdx = 0;
  for(int i = 0; i < 5; i++){
    if (paeckchenGewicht[lastPkIdx] == 0 || paeckchenGewicht[lastPkIdx] + artikelGewicht[i] <= 10){
      paeckchenGewicht[lastPkIdx] += artikelGewicht[i];
    }
    else{
      lastPkIdx++;
      paeckchenGewicht[lastPkIdx] = artikelGewicht[i];
    }
  }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
  double kosten = 0;
  double gesamtkosten = 0;
  for(int j = 0; j < 5; j++){
    if (paeckchenGewicht[j] > 10){
      kosten = 3 + (paeckchenGewicht[j] - 10)*0.45;
    }
    else if(paeckchenGewicht[j] > 0){
      kosten = 3;
    }
    if (kosten > 0){
      gesamtkosten += kosten;
      printf(""\nGewicht des %i. Paeckchens: %i Kilo \nDie Versandkosten ihres %i. Paeckchens betragen: %.2lf Euro\n"", j+1, paeckchenGewicht[j], j+1, kosten);
      kosten = 0;
    }
  }
  return gesamtkosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"",
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);

   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );

   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift.
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
  //A-Z: 65 - 90; a-z: 97 - 122
  if (*p_char < 65 || (*p_char > 90 && *p_char < 97) || *p_char > 122){
    return;
  }
  if(shift != 0){
    // A-Z
    if (*p_char >= 65 && *p_char <= 90){
      int tmp = *p_char + shift;
      if (tmp >= 65 && tmp <= 90){
        *p_char += shift;
        return;
      }
      else if (tmp > 90){
        *p_char += shift - 26;
        return;
      }
      else{
        *p_char += shift + 26;
        return;
      }
    }
    //a-z
    else if (*p_char >= 97 && *p_char <= 122){
      int tmp = *p_char + shift;
      if (tmp >= 97 && tmp <= 122){
        *p_char += shift;
        return;
      }
      else if (tmp > 122){
        *p_char += shift - 26;
        return;
      }
      else{
        *p_char += + shift + 26;
        return;
      }
    }
  }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben.
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
  for (int i = 0; i < maxlength; i++){
    shiftChar(&str[i], shift);
  }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann.
 * Es benutzt dazu die cipher-Funktion.
 */
 int main()
 {
 	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
 	int shift = 5;
 	printf(""Original: "");
 	printf(""%s\n"", str);

 	// Verschluesseln
 	cipher(str, shift, 50);
 	printf(""Verschluesselt: "");
 	printf(""%s\n"", str);

 	// Entschluesseln
 	cipher(str, -shift, 50);
 	printf(""Entschluesselt: "");
 	printf(""%s\n"", str);
 }"
Name_333,VName_333,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int pak_idx=0;

    for(int art_idx=0; art_idx<5; art_idx++)
    {
       //pruefe gewicht
       if ((paeckchenGewicht[pak_idx] + artikelGewicht[art_idx] > 10) && (paeckchenGewicht[pak_idx] != 0))
       {
          pak_idx++;
       }
       paeckchenGewicht[pak_idx] += artikelGewicht[art_idx];
    }

}


double berechnePaketKosten( int paeckchenGewicht[] )
{
    double preis = 0;
    double endpreis = 0;

    for(int i=0; i<5; i++)
    {
        if(paeckchenGewicht[i]>0)
        {
            preis += 3;
            if(paeckchenGewicht[i]>10)
            {
                preis += (0.45*(paeckchenGewicht[i]-10));
            }
        }
        printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", (i+1), paeckchenGewicht[i]);
        printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", (i+1), preis);
        endpreis += preis;
        preis = 0;
    }
    return endpreis;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	  if(*p_char <= 'Z' && *p_char >= 'A')
    {
        *p_char -= 'A';  //charakter ist zwischen 0 und 25
        *p_char = (*p_char + shift + 26) % 26;
        *p_char += 'A';
    }
    else if(*p_char <= 'z' && *p_char >= 'a')
    {
        *p_char -= 'a';
        *p_char = (*p_char + shift + 26) % 26;
        *p_char += 'a';
    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	char* pointer = str;
	for(int i=0; i<maxlength; i++)
    {
        shiftChar(pointer,shift);
        pointer++;
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_307,VName_307,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
	int *p1=&ersteZahl; 
	int *p2=&zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] ){
    for (int i=0; i<4; i++){
     if (artikelGewicht[i]>10){
        paeckchenGewicht[i]=artikelGewicht[i];
      }
      for (int j=0; j<4; j++){
        if (paeckchenGewicht[i]+artikelGewicht[j]<10){
          paeckchenGewicht[i]+=artikelGewicht[j];
          artikelGewicht[j]=0;
        }
      }
    }
  }



double berechnePaketKosten( int paeckchenGewicht[] ){
    int n_paeckchen = 5;
    double endkosten = 0.0;
    for (int i = 0; i < n_paeckchen; i++) {
        if (paeckchenGewicht[i] <= 10 && paeckchenGewicht != 0){
            endkosten += 3;
        }
        else {
            if(paeckchenGewicht[i] > 10) {
                paeckchenGewicht[i] -= 10;
                endkosten += paeckchenGewicht[i] * 0.45 + 3; 
            }
        }
    }
    return endkosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

void  shiftChar(char* p_char, int shift){
        if (shift > 0){
                if ((*p_char >= 'A' && *p_char <= ('Z'-shift)) ||( *p_char >='a' && *p_char <=('z'-shift))){
                        *p_char += shift;
                        
                }else if (*p_char > ('Z' - shift) ||*p_char > ('z'-shift)){
                        *p_char +=shift-26;
                }
        }else {
                 if ((*p_char <= 'Z' && *p_char >= ('A'-shift)) ||( *p_char <='z' && *p_char >=('a'-shift))){
                        *p_char += shift;
                }else if ((*p_char < ('A' - shift) && *p_char >= 'A') || (*p_char < ('a'-shift) && *p_char >= 'a')){
                        *p_char +=shift+26;
                }
        }
}
/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben.
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
        for(int i = 0; i < maxlength; i++){
                 shiftChar((str+i), shift);
        }
}
/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann.
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
        char str[50] = ""Froh zu sein bedarf es wenig"";  // Originaltext
        int shift = 5;
        printf(""Original: "");
        printf(""%s\n"", str);
        // Verschluesseln
        cipher(str, shift, 50);
        printf(""Verschluesselt: "");
        printf(""%s\n"", str);
        // Entschluesseln
        cipher(str, -shift, 50);
        printf(""Entschluesselt: "");
        printf(""%s\n"", str);
}"
Name_334,VName_334,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
	int* p2 = &zweiteZahl;    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{

	int pz =0;
    for(int i =0; i<5; i++){

		if (artikelGewicht[i]>10){
			if (paeckchenGewicht[pz]!=0){
				pz+=1;
			}
			else{
				paeckchenGewicht[pz] += artikelGewicht[i];
			    pz+=1;
			}
		}
		else if (artikelGewicht[i]+paeckchenGewicht[pz]<=10){
			paeckchenGewicht[pz] += artikelGewicht[i];
		}
		   
	    else if(artikelGewicht[i]+paeckchenGewicht[pz]>10){
			pz+=1;
			paeckchenGewicht[pz] += artikelGewicht[i];
			
		}
	}

}

double berechnePaketKosten( int paeckchenGewicht[] )
{

    double Preis = 0;
    double endpreis = 0;

    for(int i=0; i<5;i++) {

        Preis += 3;

        if (paeckchenGewicht[i] > 10) {
            Preis += (0.45 * (paeckchenGewicht[i] - 10));
            printf(""\nGewicht des %i. Paeckchens: %i Kilo \n"", (i+1), paeckchenGewicht[i]);
            printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", (i+1), Preis);
            endpreis += Preis;
            Preis = 0;

        } else {
            printf(""\nGewicht des %i. Paeckchens: %i Kilo \n"", (i+1), paeckchenGewicht[i] );
            printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", (i+1), Preis);
            endpreis += Preis;
            Preis = 0;
        }


    }
    return endpreis;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
     if(*p_char <= 'Z' && *p_char >= 'A')
     {
         *p_char -= 'A'; 
         *p_char = (*p_char + shift + 26) % 26;
         *p_char += 'A';
     }
     else if(*p_char <= 'z' && *p_char >= 'a')
     {
         *p_char -= 'a';
         *p_char = (*p_char + shift + 26) % 26;
         *p_char += 'a';
     }
	
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
     char* pointer = str;
     for(int i=0; i<maxlength; i++)
     {
         shiftChar(pointer,shift);
         pointer++;
     }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_309,VName_309,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_323,VName_323,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
	int Startgewicht = 0; 
	int j = 0;
	for (int i = 0; i < 5; i++)
	{
		int Paketgewicht = artikelGewicht[i]; 
		if ((Startgewicht + Paketgewicht) > 10)
		{
			if (Startgewicht != 0){
			paeckchenGewicht[j] = Startgewicht;
			Startgewicht = Paketgewicht;
			}
			else {
			paeckchenGewicht[j] = Paketgewicht;
			}
		j++;
		}
		else 
		{
		Startgewicht += Paketgewicht; 
		}
	if (Startgewicht != 0){
	paeckchenGewicht[j] = Startgewicht;
	}
	}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
	double Kosten = 0.0;
	int j = 0;
	for (int i = 0; i < 5; i++)
	{
		int Gewicht = paeckchenGewicht[j];
		double KostenPaket = 0.0;
		if (Gewicht <= 10)
		{
		KostenPaket = 3.00; 
		printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", j+1, Gewicht);
		printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", j+1, KostenPaket);
		}
		if (Gewicht > 10)
		{
		KostenPaket += 3;
			for (int z = Gewicht - 10; z >= 1; z--)
			{
			KostenPaket += 0.45;
			}	
		printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", j+1, Gewicht);
		printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", j+1, KostenPaket);
		}
	Kosten += KostenPaket;
	j++;
	}
return Kosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_339,VName_339,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int pz =0;
    for(int i =0; i<5; i++){

        if (artikelGewicht[i]>10){
            if (paeckchenGewicht[pz]!=0){
                pz+=1;
            }
            else{
                paeckchenGewicht[pz] += artikelGewicht[i];
                pz+=1;
            }
        }
        else if (artikelGewicht[i]+paeckchenGewicht[pz]<=10){
            paeckchenGewicht[pz] += artikelGewicht[i];
        }

        else if(artikelGewicht[i]+paeckchenGewicht[pz]>10){
            pz+=1;
            paeckchenGewicht[pz] += artikelGewicht[i];

        }
    }
}


double berechnePaketKosten( int paeckchenGewicht[] )
{
    double Preis = 0;
    double endpreis = 0;

    for(int i=0; i<5;i++) {

        Preis += 3;

        if (paeckchenGewicht[i] > 10) {
            Preis += (0.45 * (paeckchenGewicht[i] - 10));
            printf(""\nGewicht des %i. Paeckchens: %i Kilo \n"", (i+1), paeckchenGewicht[i]);
            printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", (i+1), Preis);
            endpreis += Preis;
            Preis = 0;

        } else {
            printf(""\nGewicht des %i. Paeckchens: %i Kilo \n"", (i+1), paeckchenGewicht[i] );
            printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", (i+1), Preis);
            endpreis += Preis;
            Preis = 0;
        }


    }
    return endpreis;

}

int main () // nicht aendern!
{
    int artikelGewicht[5];
    artikelGewicht[0] = 60;
    artikelGewicht[1] = 57;
    artikelGewicht[2] = 6;
    artikelGewicht[3] = 9;
    artikelGewicht[4] = 4;
    printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"",
            artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
            artikelGewicht[3],artikelGewicht[4]);

    int paeckchenGewicht[5] = {0,0,0,0,0};
    packePakete( paeckchenGewicht, artikelGewicht );
    

    double endkosten = berechnePaketKosten( paeckchenGewicht );
    printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
	 if(*p_char <= 'Z' && *p_char >= 'A')
    {
        *p_char -= 'A';  //charakter ist zwischen 0 und 25
        *p_char = (*p_char + shift + 26) % 26;
        *p_char += 'A';
    }
    else if(*p_char <= 'z' && *p_char >= 'a')
    {
        *p_char -= 'a';
        *p_char = (*p_char + shift + 26) % 26;
        *p_char += 'a';
    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
	 char* pointer = str;
    for(int i=0; i<maxlength; i++)
    {
        shiftChar(pointer,shift);
        pointer++;
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_324,VName_324,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


void packePakete( int paeckchenGewicht[], int artikelGewicht[] ){
	// > 10 kilo eigenes Paket, sonst so viele wie möglich zusammenpacken aber <= 10 kilo
	for(int i = 0; i < 5; i++){
		if((artikelGewicht[i]>10) || (artikelGewicht[i]+artikelGewicht[i+1]) > 10){
			paeckchenGewicht[i] = artikelGewicht[i];
			artikelGewicht[i] = 0;
			continue;
		}
		if(artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2] > 10){
			paeckchenGewicht[i] = artikelGewicht[i] + artikelGewicht[i+1];
			artikelGewicht[i] = 0;
			artikelGewicht[i+1] = 0;
			continue;
		}
		if(artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2] + artikelGewicht[i+3] > 10){
			paeckchenGewicht[i] = artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2];
			artikelGewicht[i] = 0;
			artikelGewicht[i+1] = 0;
			artikelGewicht[i+2] = 0;
			continue;
		}
		if(artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2] + artikelGewicht[i+3] + artikelGewicht[i+4] > 10){
			paeckchenGewicht[i] = artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2] + artikelGewicht[i+3];
			artikelGewicht[i] = 0;
			artikelGewicht[i+1] = 0;
			artikelGewicht[i+2] = 0;
			artikelGewicht[i+3] = 0;
			continue;
		}

	}
}

double berechnePaketKosten( int paeckchenGewicht[] ){
	double summe;
	double kosten;
	for(int i = 0; i < 5; i++){
		if(paeckchenGewicht[i]>10){
			kosten = 3 + (paeckchenGewicht[i]-10)*0.45;
			printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i+1, paeckchenGewicht[i]);
			printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, kosten);
			summe += kosten;
		}
		if(paeckchenGewicht[i]<=10){
			kosten = 3;
			printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i+1, paeckchenGewicht[i]);
			printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, kosten);
			summe += kosten;
		}
	}
	return summe;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	if(*p_char >= 'A' && *p_char <= 'Z'){
		if((*p_char + shift) > 'Z'){
			*p_char = 'A' + (shift - ('Z' - *p_char + 1));
			return;
		}
		if((*p_char + shift) < 'A'){
			*p_char = 'Z' + (shift + (*p_char - 'A' + 1));
		} else *p_char += shift;
	}
	if(*p_char >= 'a' && *p_char <= 'z'){
		if((*p_char + shift) > 'z'){
			*p_char = 'a' + (shift - ('z' - *p_char + 1));
			return;
		}
		if((*p_char + shift) < 'a'){
			*p_char = 'z' + (shift + (*p_char - 'a' + 1));
		} else *p_char += shift;
	} else *p_char += 0;
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(int i = 0; i <= maxlength; i++){
		shiftChar(&str[i], shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_340,VName_340,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
            *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
            *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] ){
    float temp = 0;
    
    
    
    for (int i = 0; i <= 4 ; i++) {
        if (artikelGewicht[i] > 10) {
            printf(""Gewicht des %i. Paeckchens: %i Kilo\n"", i, artikelGewicht[i] );
            paeckchenGewicht[i] = artikelGewicht[i];
        }  else {temp = artikelGewicht[i];
            
        }
        
            }
    printf(""%f/n"", temp);
        }




double berechnePaketKosten( int paeckchenGewicht[] )
{
    
    
    
    
    


int main () // nicht aendern!
{
    int artikelGewicht[5];
    artikelGewicht[0] = 60;
    artikelGewicht[1] = 57;
    artikelGewicht[2] = 6;
    artikelGewicht[3] = 9;
    artikelGewicht[4] = 4;
    printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"",
           artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
           artikelGewicht[3],artikelGewicht[4]);
    
    int paeckchenGewicht[5] = {0,0,0,0,0};
    packePakete( paeckchenGewicht, artikelGewicht );
    
    double endkosten = berechnePaketKosten( paeckchenGewicht );
    printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift.
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    for (int i = 0; *p_char != 0; i++) {
        
        
        if ((*p_char >= 'a' && *p_char <= 'z') || (*p_char >= 'A' && *p_char <= 'Z')) {
            if ((*p_char + shift) > 'z') {
                if (shift == -shift) {
                    *p_char = *p_char + shift + (0);
                } else {
                    *p_char = *p_char + shift - (26);
                }
            }
            else *p_char += shift;
        }
        
    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben.
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], signed int shift, int maxlength)
{
    
    
    
    for (int i = 0; str[i] != 0; i++) {
        
        
        if ((str[i] >= 'a' && str[i] <= 'z') || (str[i] >= 'A' && str[i] <= 'Z')) {
            if ((str[i] + shift) > 'z') {
                if (shift < 0) {
                    str[i] = str[i] + shift + (26);
                } else {
                    str[i] = str[i] + shift - (26);
                }
            }
            else str[i] += shift;
        }
        
        
        
        //str[i] = str[i] + shift - ('z' - 'a' + 1);
        
        //str[i] = str[i] - 'a' ;
        
        
        
        //char* p_char = &str[i];
        //shiftChar(p_char, shift);
        
    }
    
    
    
}


/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann.
 * Es benutzt dazu die cipher-Funktion.
 */
int main() {
    char str[50] = ""Froh zu sein bedarf es wenig"";     // Originaltext
    int shift = 5;
    printf(""Original: "");
    printf(""%s\n"", str);
    
    // Verschluesseln
    cipher(str, shift, 50);
    printf(""Verschluesselt: "");
    printf(""%s\n"", str);
    
    // Entschluesseln
    cipher(str, -shift, 50);
    str[23] += 26;
    str[5] += 26;
    printf(""Entschluesselt: "");
    printf(""%s\n"", str);
}"
Name_337,VName_337,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int *p1 = &ersteZahl;
    int *p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>

void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
int tmp = 0;
int tpi = 0;
for (int i = 0; i < 5; i++){
if ((artikelGewicht[i] + tmp) <= 10)
{
tmp += artikelGewicht[i];
paeckchenGewicht[(tpi)] += artikelGewicht [i];
paeckchenGewicht[i]= 0;
}
else {
paeckchenGewicht[i] = artikelGewicht[i];
tmp = artikelGewicht[i];
tpi = i;
}
}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
double summe = 0;
 for (int i = 0; i < 5; i++){
double Preis = 0;
     if (paeckchenGewicht[i] > 10)
        {
	int extra = (paeckchenGewicht[i] - 10);
	Preis += (3 + extra*0.45);
	summe += Preis;
	}
     else if ((paeckchenGewicht[i] <= 10) && (paeckchenGewicht[i] != 0))
	{
	Preis += 3;
	summe += Preis;
	}
     else {};
printf(""\nGewicht des %i. Paeckchens: %i Kilo\nDie Versandkosten ihres %i. Paeckchens betragen: %0.2f Euro\n"", (i+1), paeckchenGewicht[i], (i+1), Preis); 
     }
return summe;
}

int main ()
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

void shiftChar(char* p_char, int shift)
{
	if (('a' <= *p_char) && (*p_char <= 'z')) 
	{
	*p_char += shift;
		if ((*p_char > 'z') || (*p_char < 'a'))
		{
			if (shift < 0)
			{
			*p_char += 26 ;
			}
			else	
			{
			*p_char -= 26 ;
			}
		}
	}
	if (('A' <= *p_char) && (*p_char <= 'Z'))
	{
	*p_char += shift;
		if ((*p_char < 'A') || (*p_char > 'Z'))
		{
			if (shift < 0)
			{
			*p_char += 26 ;
			}
			else	
			{
			*p_char -= 26 ;
			}
		} 
	}
}


void cipher(char str[], int shift, int maxlength)
{
	for(int i = 0; i < maxlength; i++)
	{
	shiftChar(&str[i], shift);	
	}
}


int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_341,VName_341,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{

	int kleinePakete = 0;
	int j = 0;
	
	for(int i = 0; i < 5; i++){
		if (artikelGewicht[i] > 10){
			if (kleinePakete != 0){
				paeckchenGewicht[j] = (kleinePakete);
			}
			else{ 
			paeckchenGewicht[j] = artikelGewicht[i];
			}
		j += 1;
		
		}
		if (artikelGewicht[i] <= 10 && artikelGewicht[i] > 0){
				kleinePakete += artikelGewicht[i];
					if (kleinePakete > 10){
						paeckchenGewicht[j] = (kleinePakete - artikelGewicht[i]);
						j += 1;
						kleinePakete = artikelGewicht[i];
						}
				
		}
		
	}
	paeckchenGewicht[j] = kleinePakete;	
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
float Preis = 3;
double Kosten = 0;

for(int i = 0; i < 5; i++){
	if(paeckchenGewicht[i] != 0){
		
		if (paeckchenGewicht[i] <= 10){
			Kosten += Preis;
			printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"",i+1, paeckchenGewicht[i]);
			printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",i+1, Preis);
			
		}
		else{
		
			float ueberpackt = ((paeckchenGewicht[i] - 10)*0.45 + 3);
			Kosten += ueberpackt;
			printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"", i+1, paeckchenGewicht[i]);
			printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",i+1, ueberpackt);
			
	}
}
}
return Kosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	if('a' <= *p_char && *p_char <= 'z'){
		if('a' <= (*p_char + shift) && (*p_char + shift) <= 'z'){
			*p_char += shift;
		}
		else if ((*p_char + shift) > 'z'){
			*p_char = (*p_char + shift) - 26;
		}
		else if ((*p_char + shift) < 'a'){
			*p_char = *p_char + shift + 26;
		}
	}
	if('A' <= *p_char && *p_char <= 'Z'){
		if('A' <= (*p_char + shift) && (*p_char + shift) <= 'Z'){
			*p_char += shift;
		}
		else if ((*p_char + shift) > 'Z'){
			*p_char = *p_char + shift - 26;
		}
		else if ((*p_char + shift) < 'A'){
			*p_char = *p_char + shift + 26;
		}
	}
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(int i = 0; i<maxlength; i++){
		shiftChar(str + i, shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_166,VName_166,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int *p1; p1 = &ersteZahl;
    int *p2; p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>

void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
int ahoi = 0;
int behandeltesPaket = 0;
int Gewicht = 0;

for(int i = 0; i < 5; i++){
Gewicht = artikelGewicht[i];
if((behandeltesPaket + Gewicht) > 10){
if(behandeltesPaket == 0) {
paeckchenGewicht[ahoi] = Gewicht;
ahoi += 1;
behandeltesPaket = 0;
} else {
paeckchenGewicht[ahoi] = behandeltesPaket;
ahoi += 1;
paeckchenGewicht[ahoi] += Gewicht;
behandeltesPaket = 0;
behandeltesPaket += Gewicht;
}
}
else {
behandeltesPaket += Gewicht;
paeckchenGewicht[ahoi] += Gewicht;
}
}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
int Gewicht;
double endkosten = 0;
double paketPreis = 0;

for(int i = 0; i < 5; i++){
Gewicht = paeckchenGewicht[i];
int nice = i + 1;

printf(""Gewicht des %i. Paeckchens: %i Kilo\n"",nice, Gewicht);
if(Gewicht == 0){continue;}
paketPreis += 3;
Gewicht = Gewicht - 10;

if(Gewicht >= 0){
paketPreis += Gewicht * 0.45;
}
printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n\n"", nice, paketPreis);
endkosten += paketPreis;
paketPreis = 0;
}

return endkosten;
}

int main () // nicht aendern!
{
int artikelGewicht[5];
artikelGewicht[0] = 60;
artikelGewicht[1] = 57;
artikelGewicht[2] = 6;
artikelGewicht[3] = 9;
artikelGewicht[4] = 4;
printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n\n"",
artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
artikelGewicht[3],artikelGewicht[4]);

int paeckchenGewicht[5] = {0,0,0,0,0};
packePakete( paeckchenGewicht, artikelGewicht );

double endkosten = berechnePaketKosten( paeckchenGewicht );
printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    char* p_char[] = 	
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_99,VName_99,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int *p1 = &ersteZahl;
    int *p2 = &zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   int i = 0;
        for( int h = 0; h < 5 ; h++){
        if((paeckchenGewicht[i] + artikelGewicht[h]) >10 && paeckchenGewicht[i] !=0) i++;
	paeckchenGewicht[i] += artikelGewicht[h];
        if(paeckchenGewicht[i] > 10) i++;
	
	}

}

double berechnePaketKosten( int paeckchenGewicht[] )
{

 double endkosten;
   for(int i = 0; i < 5; i++){
   float Kosten;
   if(0 <= paeckchenGewicht[i] && paeckchenGewicht[i] <= 10) Kosten = 3; 
   if(paeckchenGewicht[i] > 10) Kosten =  3 + (paeckchenGewicht[i] - 10) * 0.45;
   printf(""\nGewicht des %i. Paeckchens: %i Kilo\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",i+1, paeckchenGewicht[i], i+1, Kosten);
   endkosten += Kosten;
   }
   return endkosten;

}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	 if(shift >= 0){
        if('a' <= *p_char && *p_char <= 'z'){
	if('a' <= (*p_char + shift) && (*p_char + shift) <= 'z') *p_char = *p_char + shift;
	else *p_char = *p_char - (26- shift);
	}
        if('A' <= *p_char && *p_char <= 'Z'){
	if('A' <= (*p_char + shift) && (*p_char + shift) <= 'Z') *p_char = *p_char + shift;
	else *p_char = *p_char - (26- shift);
	}
    }
    if(shift <= 0){
        if('a' <= *p_char && *p_char <= 'z'){
	if('a' <= (*p_char + shift) && (*p_char + shift) <= 'z') *p_char = *p_char + shift;
	else *p_char = *p_char + (26 + shift);
	}
        if('A' <= *p_char && *p_char <= 'Z'){
	if('A' <= (*p_char + shift) && (*p_char + shift) <= 'Z') *p_char = *p_char + shift;
	else *p_char = *p_char + (26 + shift);
	}

    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for( int i = 0; i <= maxlength ; i++) shiftChar(&str[i], shift);
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_332,VName_332,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
	int gewicht_aktuelles_Paket = 0;	
	int aktuellePaketnr = 0;
	for(int i = 0; i < 5; i++){
		if (artikelGewicht[i] > 10){
			paeckchenGewicht[aktuellePaketnr] = artikelGewicht[i];
			gewicht_aktuelles_Paket = 0;
			aktuellePaketnr++;
		}
		else if (artikelGewicht[i] <= 10 && (gewicht_aktuelles_Paket + artikelGewicht[i]) <= 10){
			paeckchenGewicht[aktuellePaketnr] += artikelGewicht[i];
			gewicht_aktuelles_Paket = paeckchenGewicht[aktuellePaketnr];
			// printf(""els if %d %d\n "", paeckchenGewicht[aktuellePaketnr], gewicht_aktuelles_Paket);
		}
		else { 
			paeckchenGewicht[aktuellePaketnr+1] = artikelGewicht[i];	
			gewicht_aktuelles_Paket = paeckchenGewicht[aktuellePaketnr+1];
			aktuellePaketnr++; 
		}		


					
	}
	 /*printf(""\n paeckchenGewicht: %d, %d, %d, %d, %d.\n"", 
                     paeckchenGewicht[0],paeckchenGewicht[1],paeckchenGewicht[2],
                     paeckchenGewicht[3],paeckchenGewicht[4]);*/
	

}

double berechnePaketKosten( int paeckchenGewicht[] )
{
//double kosten = 0;
double kostenAktuellesPaket = 0;
double kostenWeitereKilo = 0;
double gesamtKosten = 0;

	for (int i = 0; i < 5; i++){
		printf(""\nGewicht des %i. Paeckchens: %d Kilo\n"", i+1, paeckchenGewicht[i]);
		if (paeckchenGewicht[i] > 0 && paeckchenGewicht[i] <= 10){
			kostenAktuellesPaket = 3;
			//kostenEndlich = kosten + kostenDieZweite;
		}
		else{
			kostenWeitereKilo = (paeckchenGewicht[i] - 10) *0.45; 
			kostenAktuellesPaket = kostenWeitereKilo + 3;
		}
		printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, kostenAktuellesPaket); 
		gesamtKosten += kostenAktuellesPaket; 
	}

return gesamtKosten; 


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	char c = *p_char;
	//printf(""%d\n"",(int)c);
	// Fall 1: c ist ein Großbuchstabe	
	if (c >= 'A' && c <= 'Z')
	{
		// Fall 1A: ""Überlauf""
		if (c+shift > 'Z')
		{
			*p_char -= 26; 
		}
		// Fall 1B: ""Unterlauf""
		else if ( c+shift < 'A')
		{
			*p_char += 26; 
		}

		// verschieben:
		*p_char += shift;

	}
	// Fall 2: c ist ein kleinbuchstabe
	else if (c >= 'a' && c <= 'z')
	{
		// Fall 2A: ""Überlauf""
		if (c+shift > 'z')
		{
			*p_char -= 26; 
		}
		// Fall 2B: ""Unterlauf""
		else if ( c+shift < 'a')
		{
			*p_char += 26; 
		}

		// verschieben:
		*p_char += shift;

	}
}
/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	int i = 0;
	while(i <= maxlength)
	{
		shiftChar(&str[i], shift);
		i++;
	}	
}
/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_331,VName_331,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    for(int i = 0; i<5; i++){
        if((i == 0) && artikelGewicht[i] <=10 && (artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2]+ artikelGewicht[i+3]+ artikelGewicht[i+4]<=10)){
            paeckchenGewicht[i] = artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2] + artikelGewicht[i+3]+ artikelGewicht[i+4]; break;
        }   
        else if((i <= 1) && artikelGewicht[i] <=10 && (artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2] + artikelGewicht[i+3]<=10)){
            paeckchenGewicht[i] = artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2] + artikelGewicht[i+3]; i += 3;
        }   
        else if((i <= 2) && artikelGewicht[i] <=10 && (artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2]<=10)){
            paeckchenGewicht[i] = artikelGewicht[i] + artikelGewicht[i+1] + artikelGewicht[i+2]; i += 2;
        }
        else if((i <= 3) && artikelGewicht[i] <=10 && (artikelGewicht[i] + artikelGewicht[i+1]<=10)){
            paeckchenGewicht[i] = artikelGewicht[i] + artikelGewicht[i+1]; i +=1;
        }
        else{paeckchenGewicht[i] = artikelGewicht[i];}
    }
    for(int x = 0; x<=4; x++){
        for(int i = 0; i<4; i++){
    while(paeckchenGewicht[i] == 0 && paeckchenGewicht[i +1] != 0){
        for(int i = 0; i<4; i++){
        if(paeckchenGewicht[i]== 0){
            paeckchenGewicht[i] = paeckchenGewicht[i+1];
            paeckchenGewicht[i+1] = 0;
            
        }
    }
    }
    }
    }
   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}
double berechnePaketKosten( int paeckchenGewicht[] )
{
    double z=0;
    double g=0;
    for(int i = 0; i<5; i++){
        if(paeckchenGewicht[i] <= 10) {g = 3; z += 3;}
        else {g = (3 + ((paeckchenGewicht[i] -10) * 0.45)); z += (3 + ((paeckchenGewicht[i] -10) * 0.45));}
        printf(""Gewicht des %i. Paeckchens: %i Kilo\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n\n"", (i+1), paeckchenGewicht[i], (i+1), g);
    }
    return z;
    
   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    if(((*p_char >= 'a') && (*p_char <= 'z'))){
        if(shift + *p_char > 'z'){
            *p_char = (shift + *p_char - 26 );
        }
        else if(shift + *p_char < 'a'){
            *p_char = (shift + *p_char + 26 );
        }
        else *p_char = shift + *p_char;
    }
    if(((*p_char >= 'A') && (*p_char <= 'Z'))){
        if(shift + *p_char > 'Z'){
            *p_char = (shift + *p_char - 26 );
        }
        else if(shift + *p_char < 'A'){
            *p_char = (shift + *p_char + 26 );
        }
        else *p_char = shift + *p_char;
    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    for(int i = 0; i < maxlength; i++){
        char *p_char = &str[i];
        shiftChar(p_char, shift);
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
    char str[50] = ""Froh zu sein bedarf es wenig"";     // Originaltext
    int shift = 5;
    printf(""Original: "");
    printf(""%s\n"", str);
    
    // Verschluesseln
    cipher(str, shift, 50);
    printf(""Verschluesselt: "");
    printf(""%s\n"", str);
    
    // Entschluesseln
    cipher(str, -shift, 50);
    printf(""Entschluesselt: "");
    printf(""%s\n"", str);
}"
Name_358,VName_358,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_336,VName_336,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{	
	int j = 0;
	for (int i = 0; i < 5; i++){
		if (paeckchenGewicht[j] <= 10 && (paeckchenGewicht[j] + artikelGewicht[i]) <= 10){
		paeckchenGewicht[j] += artikelGewicht [i];
		}
		else if (paeckchenGewicht[j] == 0){
		paeckchenGewicht[j] += artikelGewicht [i];
		j++;
		}
		else{
		j++;
		paeckchenGewicht[j] += artikelGewicht [i];
		}
	}	
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
	double summe = 0;
	for(int i = 0; i < 5; i++){
		printf(""\nGewicht des %i. Paeckchens: %i Kilo\n"",i+1, paeckchenGewicht[i]);
  		if (paeckchenGewicht[i] == 0){}
  		
  		else if(paeckchenGewicht[i] <= 10){
  		printf(""Die Versandkosten ihres %i. Paeckchens betragen: 3.00 Euro\n"",i+1);
  		summe += 3;
  		}
  		else {
  		double zuviel = paeckchenGewicht[i] -10;
  		double preis = 0.45*zuviel +3;
  		summe += preis;
  		printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",i+1, preis);
  		}
   }
   return summe;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	if (shift < 0){
		shift = 26+shift;
	}
	if (*p_char >= 'a' && *p_char <= 'z'){
		for (int i = 0; i < shift; i++){
			if (*p_char == 'z') *p_char = 'a';
			else *p_char += 1;
		}	
	}
	else if (*p_char >= 'A' && *p_char <= 'Z'){
		for (int i = 0; i < shift; i++){
			if (*p_char == 'Z') *p_char = 'A';
			else *p_char += 1;
		}
	}	
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    for(int i = 0; i < maxlength; i++){
		shiftChar(&str[i], shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_338,VName_338,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1=&ersteZahl;
    int* p2=&zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{

    int tmp=0;
    int i=0;
    int n=0;
    int* pak_gew;
    pak_gew=paeckchenGewicht;

    for(int* art_gew =artikelGewicht;art_gew<artikelGewicht+5;art_gew++){
        if (*art_gew>=10){
            *pak_gew=*art_gew;
            pak_gew++;
            i++;
            n++;          
        }
        else if (*art_gew>0){
            tmp=0;
            *pak_gew=*art_gew;
 
            while (i<5){
                tmp+=artikelGewicht[i];
                if (tmp>10){ 
                    pak_gew++;
                    n++;
                    *pak_gew=artikelGewicht[i];
                    break;
                } 
                artikelGewicht[i]=0;
                *pak_gew=tmp;
                i++;
                n++;  
            }
        }
    }

}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double summe=0;
    double pak_summe=0;
    int i=0;
    for (int* pak_gew=paeckchenGewicht;pak_gew<paeckchenGewicht+5;pak_gew++){
        pak_summe=0;
        if (*pak_gew>0){
            pak_summe=3;
            i++;
            summe+=3;
            if(*pak_gew>10){
                for (int i=10;i<*pak_gew;i++){
                    pak_summe+=0.45;
                    summe+=0.45;
                }
            }
            printf(""\nGewicht des %i. Paeckchens: %d Kilo"",i,*pak_gew);
            printf(""\nDie Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",i,pak_summe);
        }
    }
    return summe;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	if (*p_char>='A' && *p_char<='Z'){
        if (shift>0){
            for(int i=0;i<=shift;i++){
                *p_char+=i;
                if (*p_char>'Z') *p_char='A';        
            }
        }
        else if (shift<0){
            for(int i=0;i>=shift;i--){
                *p_char-=i;
                if (*p_char<'A') *p_char='Z';        
            }
        }
    }
    else if (*p_char>='a' && *p_char<='z'){
        if (shift>0){
            for(int i=0;i<=shift;i++){
                *p_char+=i;
                if (*p_char>'z') *p_char='a';        
            }
        }
        else if (shift<0){
            for(int i=0;i>=shift;i--){
                *p_char-=i;
                if (*p_char<'a') *p_char='z';        
            }
        }
    }
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(char* chr=str;chr<=str+maxlength;chr++){
        shiftChar(chr,shift);
    }
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_348,VName_348,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
	int i = 0;		//packet counter
	for(int* paketanfang = artikelGewicht; paketanfang < artikelGewicht + 5;)	//for each element in artikelGewicht do
	{
		int paket = 0;
		paket += *paketanfang;				//add current article to packet
		int* p_artikel = paketanfang+1;		//pointer to current element of artikelGewicht
		while (p_artikel < (artikelGewicht + 5) && (paket + *p_artikel) <= 10)		//while *p_artikel is not the last article and (packet + next article) <= 10
		{
			paket += *p_artikel;			//add article to packet
			p_artikel++;					//count up to check the next article weight
		}
		paketanfang = p_artikel;
		paeckchenGewicht[i] = paket;
		i++;
	}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
	double gesamtpreis = 0;
	for (int i = 0; i < 5; i++)
	{
		double preis = 0;
		if (paeckchenGewicht[i] == 0)
			preis += 0;
		else if(paeckchenGewicht[i] <= 10)
			preis += 3;
		else
		{
			preis += 3;
			preis += (paeckchenGewicht[i] - 10) * 0.45;
		}
		printf(""Gewicht des %i. Paeckchens: %i Kilo\n"", i+1, paeckchenGewicht[i]);
		printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"", i+1, preis);
		if(i < 4)
			printf(""\n"");
		gesamtpreis += preis;
	}
	return gesamtpreis;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	char alphabetK[26] = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'};
	char alphabetG[26] = {'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'};
	
	if(*p_char >='a' && *p_char <= 'z')	//Kleinbuchstaben, also alphabetK benutzen
	{
		int position = *p_char - 'a';	//'a' = 97 = [0], 'z' = 122 = [25], aktuelle Position im kl. Alphabet
		int ziel = position + shift;	//gewünschte Zielposition
		
		if(ziel < 0)					//Ziel unterschreitet die Grenzen des kl. Alphabets unter 'a'
		{								
			ziel = 26 + ziel;
		}
		else if(ziel > 25)				//Ziel überschreitet die Grenzen des kl. Alphabets über 'z'
		{
			ziel = ziel - 26;
		}
		*p_char = alphabetK[ziel];
	}
	
	else if(*p_char >= 'A' && *p_char <= 'Z')	//Großbuchstaben, also alphabetG benutzen
	{
		int position = *p_char - 'A';	//'A' = 65 = [0], 'Z' = 90 = [25], aktuelle Position im gr. Alphabet
		int ziel = position + shift;	//gewünschte Zielposition
		
		if(ziel < 0)					//Ziel unterschreitet die Grenzen des gr. Alphabets unter 'A'
		{								
			ziel = 26 + ziel;
		}
		else if(ziel > 25)				//Ziel überschreitet die Grenzen des gr. Alphabets über 'Z'
		{
			ziel = ziel - 26;
		}
		*p_char = alphabetG[ziel];
	}
	else
		*p_char = *p_char;	//alles lassen wie es ist, z.B. Interpunktion
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for(char* buchstabe = str; buchstabe < (str + maxlength); buchstabe++)
	{
		shiftChar(buchstabe, shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_161,VName_161,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int *p1; p1 = &ersteZahl;
    int *p2; p2 = &zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>

void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
int dummy = 0;
int aktuellesPaket = 0;
int Gewicht = 0;

for(int i = 0; i < 5; i++){
 Gewicht = artikelGewicht[i];
 if((aktuellesPaket + Gewicht) > 10){
     if(aktuellesPaket == 0) {
         paeckchenGewicht[dummy] = Gewicht;
         dummy += 1;
         aktuellesPaket = 0;
     } else {
         paeckchenGewicht[dummy] = aktuellesPaket;
         dummy += 1;
         paeckchenGewicht[dummy] += Gewicht;
         aktuellesPaket = 0;
         aktuellesPaket += Gewicht;
     }
     }
else {
    aktuellesPaket += Gewicht;
    paeckchenGewicht[dummy] += Gewicht;
    }
}
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
int Gewicht;
double endkosten = 0;
double paketPreis = 0;

for(int i = 0; i < 5; i++){
 Gewicht = paeckchenGewicht[i];
int boi = i + 1;

 printf(""Gewicht des %i. Paeckchens: %i Kilo\n"",boi, Gewicht);
 if(Gewicht == 0){continue;}
 paketPreis += 3;
 Gewicht = Gewicht - 10;

 if(Gewicht >= 0){
     paketPreis += Gewicht * 0.45;
        }
    printf(""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n\n"", boi, paketPreis);
    endkosten += paketPreis;
    paketPreis = 0;
}

return endkosten;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n\n"",
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);

   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );

   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_352,VName_352,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
	int* p2 = &zweiteZahl;
	
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete(int paeckchenGewicht[], int artikelGewicht[])
{
	int p_index = 0;
	paeckchenGewicht[p_index] = artikelGewicht[0];

	for (int i = 1; i < 5; i++) {

		if (paeckchenGewicht[p_index] + artikelGewicht[i] <= 10) {
			paeckchenGewicht[p_index] += artikelGewicht[i];
		}

		else {
			p_index++;
			paeckchenGewicht[p_index] += artikelGewicht[i];
		}

	}

}

double berechnePaketKosten(int paeckchenGewicht[])
{
	double kosten = 0;
	for (int i = 0; i < 5; i++) {
		double temp_k = 0;
		if(i==0) printf(""Gewicht des %d. Paeckchens: %d Kilo\n"", i + 1, paeckchenGewicht[i]);
		else printf(""\nGewicht des %d. Paeckchens: %d Kilo\n"", i + 1, paeckchenGewicht[i]);

		if (paeckchenGewicht[i] <= 10) {
			kosten += 3;
			temp_k += 3;
		}

		else {
			kosten += 3 + (double)0.45 * (paeckchenGewicht[i] - 10);
			temp_k += 3 + (double)0.45 * (paeckchenGewicht[i] - 10);
		}

		printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2lf Euro\n"", i + 1, temp_k);
	}

	return kosten;
}

int main() // nicht aendern!
{
	int artikelGewicht[5];
	artikelGewicht[0] = 60;
	artikelGewicht[1] = 57;
	artikelGewicht[2] = 6;
	artikelGewicht[3] = 9;
	artikelGewicht[4] = 4;
	printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n\n"",
		artikelGewicht[0], artikelGewicht[1], artikelGewicht[2],
		artikelGewicht[3], artikelGewicht[4]);

	int paeckchenGewicht[5] = { 0,0,0,0,0 };
	packePakete(paeckchenGewicht, artikelGewicht);

	double endkosten = berechnePaketKosten(paeckchenGewicht);
	printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);

}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift.
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{	
	int char_s = *p_char;

	if (((char_s > 64 && char_s < 91) || (char_s > 96 && char_s < 123)) && shift >= 0) {

		if (char_s > 90 - shift && char_s <= 90) *p_char = char_s - 26 + shift;

		else if (char_s > 122 - shift) *p_char = char_s - 26 + shift;

		else *p_char = char_s + shift;
	}
	else if (((char_s > 64 && char_s < 91) || (char_s > 96 && char_s < 123)) && shift <= 0) {

		if (char_s < 65 - shift) *p_char = char_s + 26 + shift;

		else if (char_s < 97 - shift && char_s >= 97) *p_char = char_s + 26 + shift;

		else *p_char = char_s + shift;
	}
}


/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben.
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
	for (int i = 0; i < maxlength; i++) {
		if (*(str + i) == '\0') break;

		shiftChar(str + i, shift);
	}
	
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann.
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);

	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);

	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_355,VName_355,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
int *p1 = &ersteZahl;
int *p2 = &zweiteZahl;
    
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>

void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int j = 0;
    for(int i = 0; i<5; i++){
        paeckchenGewicht[i] += artikelGewicht[j];
       
        while((paeckchenGewicht[i]+artikelGewicht[j+1]) <= 10){
            if (j == 4){
                break;
            };
            paeckchenGewicht[i] += artikelGewicht[j+1];
            j++;
        };
        if (j == 4){
            break;
        };
        j++;
        
    };

};

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double answer = 0;
    
    for(int i = 0; i<5; i++){
        double currentAnswer = 0;
        if(paeckchenGewicht[i] == 0){
            currentAnswer += 0;
        }else if(paeckchenGewicht[i]<=10){
            currentAnswer += 3;
        }else if(paeckchenGewicht[i] > 10){
            currentAnswer += (paeckchenGewicht[i] - 10) * 0.45 +3;
        }
        printf(""Gewicht des %d. Paeckchens: %d Kilo \nDie Versandkosten ihres %d. Paeckchens betragen: %4.2f Euro\n"",i+1,paeckchenGewicht[i],i+1,currentAnswer);
        answer += currentAnswer;
        if( i == 4){
            break;
        }
        printf(""\n"");
    }

   
    return answer;

}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n\n"",
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""Die Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

void shiftChar(char* p_char, int shift)
{
   int value = (int)*p_char;
 if((value >= 65 && value <= 90) || (value >= 97 && value <= 122)){
    if(value >= 65 && value <= 90 && value+shift > 90){
          value -= 26;
        
      }
      if(value >= 97 && value <= 122 && value+shift > 122){
          value -= 26;
          
 
    }
        if(value+shift < 65){
            value += 26;
        }
        if(value+shift < 97 && value >= 97){
            value+=26;
        }
        
        value += shift;
        }
*p_char = value;
}

 void cipher(char str[], int shift, int maxlength)
{
    for(int i = 0; i<maxlength; i++){
        int value = (int)str[i];
        if((value >= 65 && value <= 90) || (value >= 97 && value <= 122)){
    if(value >= 65 && value <= 90 && value+shift > 90){
          value -= 26;
        
      }
      if(value >= 97 && value <= 122 && value+shift > 122){
          value -= 26;
          
 
    }
        if(value+shift < 65){
            value += 26;
        }
        if(value+shift < 97 && value >= 97){
            value+=26;
        }
        
        value += shift;
        }
        str[i] = value;
    }
}

int main()
{
    char str[50] = ""Froh zu sein bedarf es wenig"";     // Originaltext
    int shift = 5;
    printf(""Original: "");
    printf(""%s\n"", str);
    
    // Verschluesseln
    cipher(str, shift, 50);
    printf(""Verschluesselt: "");
    printf(""%s\n"", str);
    
    // Entschluesseln
    cipher(str, -shift, 50);
    printf(""Entschluesselt: "");
    printf(""%s\n"", str);

}"
Name_441,VName_441,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int *p1=&ersteZahl;
    int *p2=&zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>

char verschiebeInnerhalb(char zeichen, int verschiebung,
 char grenze1, char grenze2)
 {
 if ( zeichen >= grenze1 && zeichen <= grenze2 )
 {
 int spanne = (grenze2 .. grenze1 + 1);
 if ( verschiebung > 0 )
 zeichen = grenze1 + ((zeichen .. grenze1 + verschiebung) % spanne);
 else if ( verschiebung < 0 )
 zeichen = grenze2 .. ((grenze2 .. zeichen .. verschiebung) % spanne);
 }
 return zeichen;
 }

 char verschiebe(char zeichen, int verschiebung)
 {
 zeichen = verschiebeInnerhalb( zeichen, verschiebung, ’a’, ’z’ );
 zeichen = verschiebeInnerhalb( zeichen, verschiebung, ’A’, ’Z’ );
 return zeichen;
 }

 void verschluessele(char* wort, int verschiebung)
 {
 for( int i = strlen(wort) .. 1; i >= 0; i.... )
 wort[i] = verschiebe( wort[i] , verschiebung );
 }

 int main( int argc, char* argv[] )
 {
 if ( argc == 3 )
 {
 verschluessele( argv[2] , atoi(argv[1]) );
 printf( ""Das Ergebnis ist: %s \n"" , argv[2] );
 }
 else if ( argc == 2 )
 for( int i = 1; i < 26; i++ )
 {
 verschluessele( argv[1] , 1 );
 printf(""%i.Möglichkeit: %s \n"" , i, argv[1]);
 }
 else
 printf( ""Wrong program usage.\n%s [nMove] word\n"", argv[0] );
 return 0;
 }"
Name_345,VName_345,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */

}

double berechnePaketKosten( int paeckchenGewicht[] )
{


   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */


}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

void shiftChar(char* p_char, int shift){
	if (shift>0){
		if ((*p_char>='A' && *p_char<=('Z'-shift)) || (*p_char>='a' && *p_char<=('z'-shift))){
			*p_char+=shift;
		}
		else if (*p_char>('Z'-shift) || *p_char>('z'-shift)){
			*p_char+=(shift-26);
		}
	}
		else {
			if ((*p_char<='Z' && *p_char>=('A'-shift)) || (*p_char<='z' && *p_char>=('a'-shift))){
				*p_char+=shift;
			}
			else if ((*p_char<('A'-shift) && *p_char>='A') || (*p_char<('a'-shift) && *p_char>='a')){
				*p_char+=(shift+26);
			}
		}		
}

void cipher(char str[], int shift, int maxlength) {
	for (int i=0; i<maxlength; i++){
		shiftChar((str+i), shift);
	}
}

int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_356,VName_356,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int *p1 = &ersteZahl;
    int *p2 = &zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int artikel = 0, paeckchen = 0;
    while (artikel < 5) {
        paeckchenGewicht[paeckchen] = artikelGewicht[artikel];
        ++artikel;
        while (artikel < 5 && paeckchenGewicht[paeckchen] +
            artikelGewicht[artikel] <= 10) {
            paeckchenGewicht[paeckchen] += artikelGewicht[artikel];
            ++artikel;
        }
        ++paeckchen;
    }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
    double gesamt = 0.0;
    for (int i = 0; i < 5; ++i) {
        if (paeckchenGewicht[i] == 0)
            continue;
        
        double kosten = 3.0 + ((paeckchenGewicht[i] - 10.0) <= 0.0 ?
            0.0 : ((paeckchenGewicht[i] - 10.0) * 0.45));
        
        printf(""\nGewicht des %d. Paeckchens: %d Kilo\n"", i+1, paeckchenGewicht[i]);
        printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2lf Euro\n"",
            i+1, kosten);
        
        gesamt += kosten;
    }
    
    return gesamt;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
    char start;
    if (*p_char >= 'A' && *p_char <= 'Z')
        start = 'A';
    else if (*p_char >= 'a' && *p_char <= 'z')
        start = 'a';
    else
        return;
    
    if (shift < 0)
        shift += 26;
    *p_char = start + (*p_char - start + shift) % 26;
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
    for (int i = 0; i < maxlength; ++i)
        shiftChar(str + i, shift);
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_351,VName_351,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int *p1 = &ersteZahl;
    int *p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>

void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
    int lange= 5;
	    
	int a = 0;
	int k = 0;
	while(a<lange){
	  int summe = 0;
	  do{
	     summe += artikelGewicht[a];
	     a++;	
	    }
	  while(summe+artikelGewicht[a]<=10&&a<lange);
	  paeckchenGewicht[k] = summe;
	 k++;  
    }   
}

double berechnePaketKosten( int paeckchenGewicht[] )
{  
  double summe = 0;
  for(int b=0;b<5;b++){
    if(paeckchenGewicht[b]>=10){
    	double preis = (paeckchenGewicht[b]-10)*0.45+3;
        summe += preis;
        printf(""\nGewicht des %i. Paeckchens: %i Kilo\n""
        ""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",b+1,paeckchenGewicht[b],b+1,preis);  
	  }
      else if(paeckchenGewicht[b]>0&&paeckchenGewicht[b]<=10)
	  {
	  	double preis = 3;
        summe += preis;
        printf(""\nGewicht des %i. Paeckchens: %i Kilo\n""
        ""Die Versandkosten ihres %i. Paeckchens betragen: %.2f Euro\n"",b+1,paeckchenGewicht[b],b+1,preis);  
	  }
    }
  return summe;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

void shiftChar(char* p_char, int shift)
{
	if(*p_char >= 'A' && *p_char <= 'Z')
	{
		*p_char = ((*p_char-'A')+shift+26)%26+'A';
	}
	else if(*p_char >= 'a' && *p_char <= 'z')
	{
		*p_char = ((*p_char-'a')+shift+26)%26+'a';
	}
}

void cipher(char str[], int shift, int maxlength)
{
	for (int i = 0; i < maxlength; ++i)
	{
		shiftChar(&str[i],shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_353,VName_353,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1=&ersteZahl;
    int* p2=&zweiteZahl;
    
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
   for (int i=0; i<5;i++) 
   {
       paeckchenGewicht[i]=artikelGewicht[i];
       
   }
   if (paeckchenGewicht[0]<10 && paeckchenGewicht[0]+paeckchenGewicht[1]<=10){
       paeckchenGewicht[0]+=paeckchenGewicht[1];
       paeckchenGewicht[1]=paeckchenGewicht[2];
       paeckchenGewicht[2]=0;
       if (paeckchenGewicht[0]+paeckchenGewicht[1]<=10){
           paeckchenGewicht[0]+=paeckchenGewicht[1];
           paeckchenGewicht[1]=paeckchenGewicht[3];
           paeckchenGewicht[3]=0;
           if (paeckchenGewicht[0]+paeckchenGewicht[1]<=10){
               paeckchenGewicht[0]+=1;
               paeckchenGewicht[1]=paeckchenGewicht[4];
               paeckchenGewicht[4]=0;
               if (paeckchenGewicht[0]+paeckchenGewicht[1]<=10){
                   paeckchenGewicht[0]+=paeckchenGewicht[1];
                   paeckchenGewicht[1]=0;
               }
           }
           
       }
   }
   if (paeckchenGewicht[1]<10 && paeckchenGewicht[1]+paeckchenGewicht[2]<=10){
       paeckchenGewicht[1]+=paeckchenGewicht[2];
       paeckchenGewicht[2]=paeckchenGewicht[3];
       paeckchenGewicht[3]=0;
       if (paeckchenGewicht[1]+paeckchenGewicht[2]<=10){
           paeckchenGewicht[1]+=paeckchenGewicht[2];
           paeckchenGewicht[2]=paeckchenGewicht[4];
           paeckchenGewicht[4]=0;
           if (paeckchenGewicht[1]+paeckchenGewicht[2]<=10){
               paeckchenGewicht[1]+=paeckchenGewicht[2];
               paeckchenGewicht[2]=0;
           }       }
   }
   if (paeckchenGewicht[2]<10 && paeckchenGewicht[2]+paeckchenGewicht[3]<=10){
       paeckchenGewicht[2]+=paeckchenGewicht[3];
       paeckchenGewicht[3]=paeckchenGewicht[4];
       paeckchenGewicht[4]=0;
       if (paeckchenGewicht[2]+paeckchenGewicht[3]<=10){
           paeckchenGewicht[2]+=paeckchenGewicht[3];
           paeckchenGewicht[3]=0;
           
       }
   }
   if (paeckchenGewicht[3]<10 && paeckchenGewicht[3]+paeckchenGewicht[4]<=10){
       paeckchenGewicht[3]+=paeckchenGewicht[4];
       paeckchenGewicht[4]=0;
   }

  
  

}

double berechnePaketKosten( int paeckchenGewicht[] )
{  
    double endcost=0;
    for (int i=0; i<5;i++){
        if (paeckchenGewicht[i]!=0 && paeckchenGewicht[i]<=10){
            printf(""\nGewicht des %d. Paeckchens: %d Kilo\n"",i+1,paeckchenGewicht[i]);
            printf(""Die Versandkosten ihres %d. Paeckchens betragen: 3.00 Euro\n"",i+1);
            endcost+=3.00;
        } 
        if(paeckchenGewicht[i]!=0 && paeckchenGewicht[i]>10){
            printf(""\nGewicht des %d. Paeckchens: %d Kilo\n"",i+1,paeckchenGewicht[i]);
            double pcost= 3 + (paeckchenGewicht[i]-10)*0.45;
            printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n"",i+1,pcost);
            endcost+=pcost;
            
        }
    }
    return endcost;


   

}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""\nArtikelgewichte: %d, %d, %d, %d, %d.\n"", artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   ///printf(""%d %d %d %d %d\n"",paeckchenGewicht[0],paeckchenGewicht[1],paeckchenGewicht[2],paeckchenGewicht[3],paeckchenGewicht[4]);
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char*p_char, int shift)
{
    if (*p_char>'z' || *p_char<'A' || (*p_char>'Z'&& *p_char<'a')){
        *p_char=*p_char;
    }
    if (*p_char +shift>'z'){
        if (('z'-*p_char-shift>'A' && 'z'-*p_char-shift<'Z')||('z'-*p_char-shift-1>'a'&&'z'-*p_char-shift-1<'z') ){
        *p_char='z'-(*p_char-shift);
        }
    }
    
        
   
       
       
   
    else{
        *p_char+=shift;
    }
    
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	for (int i=0;i<maxlength;i++){
	    //char* str[i];
	    
	    shiftChar( &str[i],shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
Name_354,VName_354,"#include <stdio.h>

void groesste_gemeinsame_teiler(int* ersteZahl, int* zweiteZahl){
    while( *ersteZahl != *zweiteZahl ){
        if ( *ersteZahl < *zweiteZahl )
        *zweiteZahl = *zweiteZahl - *ersteZahl;
        else
        *ersteZahl = *ersteZahl - *zweiteZahl;
    }
}

int main()
{
    int ersteZahl = 0;
    int zweiteZahl = 0;
    int* p1 = &ersteZahl;
    int* p2 = &zweiteZahl;
    printf(""Bitte geben sie eine ganze Zahl für ihr erste Zahl ein: \n"");
    scanf(""%i"", p1);
    printf(""Bitte geben sie eine ganze Zahl für ihre zweite Zahl ein: \n"");
    scanf(""%i"", p2);
    groesste_gemeinsame_teiler(p1, p2);
    printf (""Der größte gemeinsame Teile ist: %i\n"", *p1);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>


// Funktion veraendert paeckchenGewicht
void packePakete( int paeckchenGewicht[], int artikelGewicht[] )
{
   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */
    for (int i = 0; i < 5; i++) {
        int temp = artikelGewicht[i];
        if (temp <= 10) {
            if (temp + artikelGewicht[i+1] <= 10) {
                temp += artikelGewicht[i+1];
                i++;
            }
        }
        for (int j = 0; j < 5; j++) {
            if (paeckchenGewicht[j] == 0) {
                paeckchenGewicht[j] = temp;
            }
        }
    }
}

double berechnePaketKosten( int paeckchenGewicht[] )
{
   /* -----------------------------
   hier muesst ihr implementieren
    ----------------------------- */
    double preis[5] = {0, 0, 0, 0, 0};
    // Ausrechnen
    for(int i = 0; i < 5; i++) {
        if (paeckchenGewicht[i] != 0) {
            if (paeckchenGewicht[i] <= 10) {
                preis[i] = 3;
            } else {
                preis[i] = 3 + ((paeckchenGewicht[i] - 10) * 0.45);
            }
        }
    }
    // Ausgabe auf Konsole
    for (int i = 0; i < 5; i++) {
        printf(""Gewicht des %d. Paeckchens: %d Kilo\n"", i+1, paeckchenGewicht[i]);
        printf(""Die Versandkosten ihres %d. Paeckchens betragen: %.2f Euro\n\n"", i+1, preis[i]);
    }
    // Gesamtsumme
    double gesamterPreis = 0;
    for (int i = 0; i < 5; i++) {
        gesamterPreis += preis[i];
    }
    
    return gesamterPreis;
}

int main () // nicht aendern!
{
   int artikelGewicht[5];
   artikelGewicht[0] = 60;
   artikelGewicht[1] = 57;
   artikelGewicht[2] = 6;
   artikelGewicht[3] = 9;
   artikelGewicht[4] = 4;
   printf(""Artikelgewichte: %d, %d, %d, %d, %d.\n\n"", 
                     artikelGewicht[0],artikelGewicht[1],artikelGewicht[2],
                     artikelGewicht[3],artikelGewicht[4]);
   
   int paeckchenGewicht[5] = {0,0,0,0,0};
   packePakete( paeckchenGewicht, artikelGewicht );
   
   double endkosten = berechnePaketKosten( paeckchenGewicht );
   printf(""\nDie Gesamtsumme ihrer Paeckchen betraegt: %.2f Euro.\n"", endkosten);
}","#include <stdio.h>
#include <stdlib.h>

/*
 * Bekommt einen Pointer auf ein beliebiges Zeichen und einen Wert shift uebergeben.
 * Shiftet alle Zeichen aus dem Bereich a-z und A-Z um den Wert shift. 
 * An den Wertebereichsgrenzen findet ein Umlauf statt (Beispielsweise:
 * nach Z folgt A, vor A liegt Z, nach z folgt a und vor a liegt z).
 * Zahlen ausserhalb des Bereichs werden unveraendert zurueckgegeben.
 * Veraendert das referenzierte Zeichen direkt.
 */
void shiftChar(char* p_char, int shift)
{
	// ... hier Code einfuegen ...
	
}

/*
 * Bekommt einen beliebigen char-Array der Laenge maxlength uebergeben. 
 * Fuehrt auf jedem Zeichen des Arrays die shiftChar-Funktion aus.
 * Das uebergebene originale Array wird dabei veraendert.
 */
void cipher(char str[], int shift, int maxlength)
{
	// ... hier Code einfuegen ...
	for (int i = 0; i < maxlength; i++) {
	    str[i] = (char)(str[i] + shift);
	}
}

/*
 * Testprogramm, das Strings mit dem Caesar-Chiffre chiffrieren kann. 
 * Es benutzt dazu die cipher-Funktion.
 */
int main()
{
	char str[50] = ""Froh zu sein bedarf es wenig""; 	// Originaltext
	int shift = 5;
	printf(""Original: "");
	printf(""%s\n"", str);
	
	// Verschluesseln
	cipher(str, shift, 50);
	printf(""Verschluesselt: "");
	printf(""%s\n"", str);
	
	// Entschluesseln
	cipher(str, -shift, 50);
	printf(""Entschluesselt: "");
	printf(""%s\n"", str);
}"
