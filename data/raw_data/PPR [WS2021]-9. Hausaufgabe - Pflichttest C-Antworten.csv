Nachname,Vorname,E-Mail-Adresse,Status,"Begonnen am",Beendet,"Verbrauchte Zeit","Bewertung/20,00","Antwort 1","Antwort 2","Antwort 3","Antwort 4","Antwort 5","Antwort 6","Antwort 7","Antwort 8","Antwort 9","Antwort 10"
Schumann,"Jolanda Marietta",jolanda.schumann@campus.tu-berlin.de,Beendet,"15. Januar 2021  10:56","15. Januar 2021  17:56","6 Stunden 59 Minuten","19,12",5,"zeigefinger = (int*)((short*)zeigefinger - 4);",5,232,80,"{232} {236} {240} {246} {D} {a} {s} {\0} {i} {s} {t} {\0} {' '} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0} {a} {i} {s} {t} {' '} {e} {i} {n} {' '} {S} {t} {r} {i} {n} {g} {\0}","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 11; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 12; Teil 57: %; Teil 58: %; Teil 59: 1; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 11; Teil 68: 208; Teil 69: %; Teil 70: %; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 12; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: 0; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: 212; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 13; Teil 101: -; Teil 102: %; Teil 103: %; Teil 104: %; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 2(14); Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: 2; Teil 119: 1; Teil 120: 0; Teil 121: 0; Teil 122: 3(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: 200; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 4(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 208; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 216; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 5(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	long tmp = product/2;
	if (product == 0 || product ==  1)
	{
		*f1 = 1;
		*f2 = product;
	}
	else if(product % 2 == 0)
	{
		*f1 = product /2;
		*f2 = 2;
	}
	else 
	{
		while(product % tmp != 0)
		{
			tmp--;
		}
		*f1 = tmp;
		*f2 = product/tmp; 
	}
}

int main(){
	long product;
	long f1;
	long f2;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &product);
	factorize(product, &f1, &f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, f1, f2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  

  for(int i = 0; i < zahl; i++ )
  {
	  if(dest[i] == '\0' || src[i] == '\0')break;
	  dest[i] = src[i];
  }

}

void umdrehen( char* str )
{
  int z = 0;
  while(str[z] != '\0')
  {
	  z++;
  }
  char tmp[z+1]; 
  for(int i = 0; i < z+1; i++)
  {
	  tmp[i] = str[i];
  }
  for(int j = 0; j < z; j++)
  {
	  str[j] = tmp[z-1-j];
}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen(test);
  printf( ""Rückwärts : %s \n"", test );
}



/*
	Welche Funktionen aus string.h wären hier nützlich gewesen und warum?
	
	strcpy -- Beim ersetzen könnte die Eingabe leichter mit dem Test Array ersetzt werden.
		   -- Beim Umdrehen könnte die Duplizierungsvorgang schneller sein.	
	strlen -- Beim ersetzen wäre einfacher ein Endpunkt zu definieren.
	

*/","#include <stdio.h>

void aussortieren (char* string)
{
	for(int i = 0; string[i] != '\0'; i++)
	{
		if(string[i] == 'x' || string[i] == 'y' || string[i] == 'q' || string[i] == 'X' || string[i] == 'Y' || string[i] == 'Q' )
		{
			for(int k = i; string[k] != '\0'; k++)
			{
				string[k] = string[k+1];
			}
			i = i -1;
		}
	}
}

void zeichen3 (char* string)
{
	
	int z = 0;
	while(string[z] != '\0')
	{
	z++;
	}
	
	char tmp[z]; 


	for(int j = 0; j < z; j++)
	{
		if(j % 3 == 0)
		{
			tmp[j] = string[j];
		}
		else tmp[j] = 0;
	}
	
	int s =0;
	for(int i = 0; i < z; i++)
	{
		if(tmp[i] != 0)
		{
			string[s] = tmp[i];
			s++;
		}
	}
	string[s] = '\0';
	
}



int main(int argc, char* argv[])
{
	int z = 0;

	

	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			z++;		
		}				
	}
	char string[z+1];
	string[z] = '\0';
	int s = 0;
	for(int k=1; k < argc; k++)
	{
		for(int i = 0; argv[k][i] != '\0'; i++)
		{
			
			string[s] = argv[k][i];
			s++;
		}

	}
	aussortieren(string);
	printf(""x,y,q und X,Y,Q aussortiert: %s \n"",&string[0]);

	zeichen3(string);
	printf(""Der neue String lautet: %s \n"",&string[0]);
}"
Stubler,David,stubler@campus.tu-berlin.de,Beendet,"15. Januar 2021  11:52","24. Januar 2021  11:27","8 Tage 23 Stunden","12,38","Ein C-String ist ein Array von char-Variablen.","{232} {236} {240} {246} {Das} {ist} {ein} {String} {a} {ist} {ein} {String}","Nichts, da Programm nicht kompiliert.",5,5,"{232} {236} {240} {246} {D} {a} {s} {\0} {i} {s} {t} {\0} {' '} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0} {a} {i} {s} {t} {' '} {e} {i} {n} {' '} {S} {t} {r} {i} {r} {g} {\0}","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 11; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 12; Teil 57: %; Teil 58: %; Teil 59: 1; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 11; Teil 68: 208; Teil 69: %; Teil 70: %; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 12; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: 0; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 13; Teil 101: -; Teil 102: %; Teil 103: %; Teil 104: %; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 2(14); Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: 2; Teil 119: 1; Teil 120: 0; Teil 121: 0; Teil 122: 3(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 4(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 1; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: 0; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 5(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: %; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>


void factorize(long product, long *f1, long *f2)
{
    if (product == 1)
    {
        *f1 =  1;
        *f2 =  1;
    }
    else
    {
        int i;
        for (i = 2; i < product+1 ;i++)
        {
            if (product % i == 0)
            {
                *f1 =  (product/i);
                *f2 =  i;
                i = product+1;
            }
        else
            {

            }
        }



    }



}

int main(){
    long zahl = 0;
    long erste = 0;
    long zweite = 0;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &zahl);
	factorize(zahl, &erste, &zweite);
	printf(""Possible Factors of %ld are %ld and %ld.\n"" ,zahl,erste,zweite);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>

int zaehler = 0;
void ersetzen(char* dest, int zahl, char* src)
{

    int i;
    for (i = 0; i < zahl && *dest != '\0' && *src != '\0'; i++)
    {
        *dest = *src;
        dest = dest + 1;
        src = src + 1;
    }
    //&& *src != '\O'
}

void umdrehen( char* str )
{

// Zaehlt wie viele Durchläufe gemacht werden

  char ausgabe[50]=""                    "";
  int Schleif_2;
  int Erste_Schleife;
  int b = 0;
  int j = 0;

// Initzializiert die Variablen

  for (Erste_Schleife = (zaehler-1); Erste_Schleife >= 0; Erste_Schleife--)
    {
        ausgabe[j] = *(str + Erste_Schleife);
        j++;
    }
  for (Schleif_2 = (zaehler-1); Schleif_2 >= 0; Schleif_2--)
    {
      *(str + b) = ausgabe[b];
       b++;
    }
}


int main( int argc, char* argv[] )
{ 

  char test[11]= ""0123456789"";
  int a;
  for (a = 0; test[a] != '\0'; a++)
  {
      zaehler+=1;
  }
  printf( ""Das Original ist: %s \n"", test);
  ersetzen(test, atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test );
  umdrehen(test);
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

int main( int argc, char** argv)
{
    char text[100] = ""lasse roland max ivo"";
    char temp[100];
    char NeuString[100];
    int J = 0;
    int K = 0;
    int a = 1;
    int i;
    for ( i = 0; *(argv+i) != '\0'; i++)
    {
        if (*(argv+i) == ' ' || *(argv+i) == 'x' || *(argv+i) == 'y' || *(argv+i) == 'q'|| *(argv+i) == 'X'|| *(argv+i) == 'Y'|| *(argv+i) == 'Q')
            a++;
            continue;
        temp[J++] = *(argv+i);
    }
    temp[J] = 0;
    printf( ""x,y,q und X,Y,Q aussortiert: %s \n"", temp );
    for ( i = 0; temp[i] != '\0'; i++)
    {
        if (i == 0 || i % 3 == 0)
        NeuString[K++] = temp[i];
        continue;
    }
    NeuString[K] = 0;
    printf( ""Der neue String lautet: %s \n"", NeuString);
}"
Bauz,Noah,noah.bauz@campus.tu-berlin.de,Beendet,"15. Januar 2021  16:11","24. Januar 2021  17:53","9 Tage 1 Stunde","15,12",5,"Ein C-String ist ein Array von char-Variablen.",232,5,80,"{232} {236} {240} {246} {D} {a} {s} {\0} {i} {s} {t} {\0} {' '} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0} {a} {i} {s} {t} {' '} {e} {i} {n} {' '} {S} {t} {r} {i} {n} {g} {\0}","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
    if(product == 0 || product == 1){
        *f1 = 1;
        *f2 = product;
    }
    else{
        int i = 2;
        while(product%i){
            i++;
        }
        *f1 = product / i;
        *f2 = i;
    }
}

int main(){
    long x = 0;
    long f1 = 0;
    long f2 = 0;
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &x);
    factorize(x, &f1, &f2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", x, f1, f2);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
    for(int i = 0; i < zahl; i++){
        if(dest[i] == '\0') break;
        else dest[i] = src[i];
    }
}

void umdrehen( char* str )
{
    int cnt = 0;
    char tmp = ' ';
    while(str[cnt] != '\0') cnt++;
    for(int i = 0; i < (cnt / 2); i++){
        tmp = str[i];
        str[i] = str[cnt-1-i];
        str[cnt-1-i] = tmp;
    }
}

    

int main( int argc, char* argv[] )
{
    char test[11]= ""0123456789"";
    printf( ""Das Original ist: %s \n"", test );
    ersetzen( test , atoi(argv[1]), argv[2]);
    printf( ""Ersetzt : %s \n"", test );
    umdrehen( test );
    printf( ""Rückwärts : %s \n"", test );
 
}",-
Eichstädt,"Daniel Dominik",daniel.eichstaedt@campus.tu-berlin.de,Beendet,"15. Januar 2021  23:18","17. Januar 2021  22:20","1 Tag 23 Stunden","20,00","Nichts, da Programm nicht kompiliert.",5,5,5,"zeigefinger = (int*)((short*)zeigefinger - 4);","{232} {236} {240} {246} {D} {a} {s} {\0} {i} {s} {t} {\0} {' '} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0} {a} {i} {s} {t} {' '} {e} {i} {n} {' '} {S} {t} {r} {i} {n} {g} {\0}","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{  if      (product==0)    {*f1=1;*f2=product;}
   else if (product==1)    {*f1=1;*f2=product;}
else       {*f1=product/2;
                 while (product%*f1!=0)
                     {(*f1)--;}
         *f2=product/(*f1);
    }
}

int main(){
    long product;
    long faktor1=0;
    long faktor2=0;
    long*f1=&faktor1;
    long*f2=&faktor2;
	printf(""Please enter an Integer: "");
	scanf (""%ld"",&product);
	factorize(product,f1,f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",product,*f1,*f2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{ for (int i=0;i<zahl;i++)
        {if (src[i]=='\0'||dest[i]=='\0') break;
        else dest[i]=src[i];
        }
}

void umdrehen( char* str )
{char tmp[100]="""";
int fw=0;
    while (str[fw]!='\0')
     {tmp[fw]=str[fw];  fw++;}
    tmp[fw]='\0';       fw=0;
int bw=0;
    while (tmp[bw]!='\0')
    {bw++;}             bw--;
    while (bw!=0)
    {str[fw]=tmp[bw];   fw++; bw--;}
    str[fw]=tmp[bw]; fw++;
    str[fw]='\0';
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>

char aussortieren (char buchstabe)
{if (buchstabe=='x'||buchstabe=='y'||buchstabe=='q'||
     buchstabe=='X'||buchstabe=='Y'||buchstabe=='Q')
    return 1;
else return 0;
}

void ersetzen (char*src)
{char tmp[100]="""";
 int fw=0;
 while (src[fw]!='\0')
    {tmp[fw]=src[fw];fw++;}
    tmp[fw]='\0';
    fw=0;
int fw_mod=0;
while (tmp[fw]!='\0')
    {if (fw%3!=0)
        {fw++;}
    else 
        {src[fw_mod]=tmp[fw];
         fw++;
         fw_mod++;}
    }
src[fw_mod]='\0';
}

int main (int argc,char*argv[])
{char str[100]="""";
int c=1;
int lv_c=0;
int lv_argc=0;
while (c!=argc)
    {while (argv[c][lv_argc]!='\0')
        {if (aussortieren(argv[c][lv_argc])) 
         lv_argc++;
         else
         {str[lv_c]=argv[c][lv_argc];
          lv_c++;
          lv_argc++;}}
    c++;lv_argc=0;}
printf (""x,y,q und X,Y,Q aussortiert: %s\n"",str);
ersetzen(str);
printf (""Der neue String lautet: %s\n"",str);
}"
Allaham,"Mohamad Anas",m.allaham@tu-berlin.de,Beendet,"16. Januar 2021  08:45","18. Januar 2021  20:58","2 Tage 12 Stunden","18,30",232,5,5,80,"zeigefinger = (int*)((short*)zeigefinger - 4);","{232} {236} {240} {246} {D} {a} {s} {\0} {i} {s} {t} {\0} {' '} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0} {a} {D} {a} {s} {i} {s} {t} {e} {i} {n} {S} {t} {r} {i} {n} {g}","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: %; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: 201; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: 202; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: 203; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 13; Teil 134: -; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 2(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: 2; Teil 152: 1; Teil 153: 0; Teil 154: 0; Teil 155: 3(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: 200; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 4(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 5(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 3(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: 201; Teil 195: %; Teil 196: %; Teil 197: %; Teil 198: %; Teil 199: 6(14); Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: -; Teil 206: -; Teil 207: -; Teil 208: -; Teil 209: -; Teil 210: 15; Teil 211: %; Teil 212: %; Teil 213: %; Teil 214: %; Teil 215: %; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

int isWhole(long num) {
    int truncated = (int)num;
    if (num == truncated)
        return 1; 
    return 0;
}

int isMultiple(long n1, long n2) {
    if (n1 % n2 == 0) 
        return 1; 
    return 0;
}

void factorize(long product, long *f1, long *f2)
{
    // Your factorization
    if (product == 0) {
        *f1 = 1; 
        *f2 = product;
        return;
    }
    else if (product == 1) {
        *f1 = 1; 
        *f2 = product; 
        return;
    }

    long half = product / 2; 
    while (1) {
        if (isMultiple(product, half) && isWhole(half)) {
            *f1 = half; 
            *f2 = product / half;
            return;
        }
        else {
            half--; 
        }
    }
}

int main(){
    long l; 
    printf(""Please enter an Integer: "");
    scanf(""%ld"", &l);
    long f1 = 0; 
    long f2 = 0; 
    factorize(l, &f1, &f2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", l,  f1, f2);
    return 0;
}","#include <stdio.h> 

int main(int argc, char *argv[]) {

 printf(""x,y,q und X,Y,Q aussortiert: "");
 int count = 0; 
 for (int i = 1; i < argc; i++) 
    for (char *p = argv[i]; *p; ++p) {
     if (*p == 'x' || *p == 'y' || *p == 'q' || *p == 'X' || *p == 'Y' || *p == 'Q') 
        continue; 
     putchar(*p); 
     count += 1; 
 }   
 printf(""\n""); 

 printf(""Der neue String lautet: "");
 count = 0; 
 for (int i = 1; i < argc; i++) 
    for (char *p = argv[i]; *p; ++p) {
     if (*p == 'x' || *p == 'y' || *p == 'q' || *p == 'X' || *p == 'Y' || *p == 'Q') 
        continue; 
     if (count == 0) 
        putchar(*p); 
     count = (count + 1) % 3; 
 }   
 printf(""\n""); 
 return 0; 

}","#include <stdio.h>
#include <stdlib.h>

int length(char *p)
{
 int i = 0; 
    while (p[i] != '\0')
      i++;
  return i; 
}
 
void ersetzen(char* dest, int zahl, char* src)
{  
  int sizeS = length(src);
  int sizeD = length(dest);
 /*     char temp[sizeS]; 
    for (int i = 0; i <= sizeS-1; i++) 
        temp [i] = src[i];

  for (int i = 0; i <= zahl-1; i++) {
    if (i <= sizeD && i <= sizeS) {
        //dest[i] = temp[i];
        *dest = temp[i]; 

    }
  }*/
  int i = 1;
   while(*src && i <= sizeS && i <= sizeD && i <= zahl) {
    *dest++ = *src++;
    i++;
 }
}

void swap(char* a, char* b){
    char c = *a;
    *a = *b;
    *b = c;
}


void umdrehen( char* str )
{
    if (!*str) 
        return;

    char* i = str;
    char* j = i + length(str) - 1;
    while (i < j) {
        swap(i, j);
        i++;
        j--;
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Wahl,Moritz,moritz.wahl@campus.tu-berlin.de,Beendet,"16. Januar 2021  20:33","24. Januar 2021  23:54","8 Tage 3 Stunden","7,31",5,"Nichts, da Programm nicht kompiliert.",25,5,5,"{232} {236} {240} {246} {D} {a} {s} {\0} {i} {s} {t} {\0} {' '} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0} {a} {i} {s} {t} {' '} {e} {i} {n} {' '} {S} {t} {r} {i} {n} {g} {\0}","Teil 1: 9; Teil 2: ; Teil 3: ; Teil 4: ; Teil 5: ; Teil 6: ; Teil 7: ; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: ; Teil 12: 10; Teil 13: ; Teil 14: ; Teil 15: ; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: ; Teil 21: ; Teil 22: ; Teil 23: 11; Teil 24: ; Teil 25: ; Teil 26: ; Teil 27: ; Teil 28: ; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: 12; Teil 35: ; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: ; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: ; Teil 45: 13; Teil 46: ; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: ; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: ; Teil 56: 11; Teil 57: ; Teil 58: ; Teil 59: ; Teil 60: ; Teil 61: ; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: ; Teil 66: ; Teil 67: 12; Teil 68: ; Teil 69: ; Teil 70: ; Teil 71: ; Teil 72: ; Teil 73: ; Teil 74: ; Teil 75: ; Teil 76: ; Teil 77: ; Teil 78: 13; Teil 79: ; Teil 80: ; Teil 81: ; Teil 82: ; Teil 83: ; Teil 84: ; Teil 85: ; Teil 86: ; Teil 87: ; Teil 88: ; Teil 89: 11; Teil 90: ; Teil 91: ; Teil 92: ; Teil 93: ; Teil 94: ; Teil 95: ; Teil 96: ; Teil 97: ; Teil 98: ; Teil 99: ; Teil 100: 12; Teil 101: ; Teil 102: ; Teil 103: ; Teil 104: ; Teil 105: ; Teil 106: ; Teil 107: ; Teil 108: ; Teil 109: ; Teil 110: ; Teil 111: 13; Teil 112: ; Teil 113: ; Teil 114: ; Teil 115: ; Teil 116: ; Teil 117: ; Teil 118: ; Teil 119: ; Teil 120: ; Teil 121: ; Teil 122: 11; Teil 123: ; Teil 124: ; Teil 125: ; Teil 126: ; Teil 127: ; Teil 128: ; Teil 129: ; Teil 130: ; Teil 131: ; Teil 132: ; Teil 133: 13; Teil 134: ; Teil 135: ; Teil 136: ; Teil 137: ; Teil 138: ; Teil 139: ; Teil 140: ; Teil 141: ; Teil 142: ; Teil 143: ; Teil 144: 2(14); Teil 145: ; Teil 146: ; Teil 147: ; Teil 148: ; Teil 149: ; Teil 150: ; Teil 151: ; Teil 152: ; Teil 153: ; Teil 154: ; Teil 155: ; Teil 156: ; Teil 157: ; Teil 158: ; Teil 159: ; Teil 160: ; Teil 161: ; Teil 162: ; Teil 163: ; Teil 164: ; Teil 165: ; Teil 166: ; Teil 167: ; Teil 168: ; Teil 169: ; Teil 170: ; Teil 171: ; Teil 172: ; Teil 173: ; Teil 174: ; Teil 175: ; Teil 176: ; Teil 177: ; Teil 178: ; Teil 179: ; Teil 180: ; Teil 181: ; Teil 182: ; Teil 183: ; Teil 184: ; Teil 185: ; Teil 186: ; Teil 187: ; Teil 188: ; Teil 189: ; Teil 190: ; Teil 191: ; Teil 192: ; Teil 193: ; Teil 194: ; Teil 195: ; Teil 196: ; Teil 197: ; Teil 198: ; Teil 199: ; Teil 200: ; Teil 201: ; Teil 202: ; Teil 203: ; Teil 204: ; Teil 205: ; Teil 206: ; Teil 207: ; Teil 208: ; Teil 209: ; Teil 210: ; Teil 211: ; Teil 212: ; Teil 213: ; Teil 214: ; Teil 215: ; Teil 216: ; Teil 217: ; Teil 218: ; Teil 219: ; Teil 220:","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
    long pr_half;
	switch(product){
	    case(0):
	        *f1 = 1;
	        *f2 = product;
	        break;
	    case(1):
	        *f1 = 1;
	        *f2 = product;
	        break;
	    default:
	        pr_half = product/2;
	        while((product%pr_half) != 0){
	            pr_half -= 1;
	        }
	        *f1 = pr_half;
	        *f2 = product/pr_half;
	        
	        
	}
}

int main(){
    long product;
    long f1, f2;
    printf(""Please enter an Integer: "");
    scanf(""%ld"",&product);
    long* p_1 = &f1;
    long* p_2 = &f2;
    factorize(product, p_1, p_2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, f1, f2);
	return 0;
}","#include <stdio.h>

int main(int argc, char* argv[])
{
    int sum = 0;
    for(int i = 1; i < argc; i++)
    {
        int c = 1;
        int j = 0;
        while(c != 0)
        {
            sum++;
            c = argv[i][j];
            j++;
        }
    }
    sum-= (argc - 1);
    
    char string[sum];
    for(int i = 1; i < argc; i++)
    {
        int c = 1;
        int j = 0;
        while(c != 0)
        {
            string[i*j] = argv[i][j];
            j++;
        }
    }
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Breous,Alexandros,a.breous@campus.tu-berlin.de,Beendet,"17. Januar 2021  16:38","24. Januar 2021  23:59","7 Tage 7 Stunden","0,00",-,-,-,-,-,-,"Teil 1: ; Teil 2: ; Teil 3: ; Teil 4: ; Teil 5: ; Teil 6: ; Teil 7: ; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: ; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: ; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: ; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: ; Teil 26: ; Teil 27: ; Teil 28: ; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: ; Teil 35: ; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: ; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: ; Teil 45: ; Teil 46: ; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: ; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: ; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: ; Teil 60: ; Teil 61: ; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: ; Teil 66: ; Teil 67: ; Teil 68: ; Teil 69: ; Teil 70: ; Teil 71: ; Teil 72: ; Teil 73: ; Teil 74: ; Teil 75: ; Teil 76: ; Teil 77: ; Teil 78: ; Teil 79: ; Teil 80: ; Teil 81: ; Teil 82: ; Teil 83: ; Teil 84: ; Teil 85: ; Teil 86: ; Teil 87: ; Teil 88: ; Teil 89: ; Teil 90: ; Teil 91: ; Teil 92: ; Teil 93: ; Teil 94: ; Teil 95: ; Teil 96: ; Teil 97: ; Teil 98: ; Teil 99: ; Teil 100: ; Teil 101: ; Teil 102: ; Teil 103: ; Teil 104: ; Teil 105: ; Teil 106: ; Teil 107: ; Teil 108: ; Teil 109: ; Teil 110: ; Teil 111: ; Teil 112: ; Teil 113: ; Teil 114: ; Teil 115: ; Teil 116: ; Teil 117: ; Teil 118: ; Teil 119: ; Teil 120: ; Teil 121: ; Teil 122: ; Teil 123: ; Teil 124: ; Teil 125: ; Teil 126: ; Teil 127: ; Teil 128: ; Teil 129: ; Teil 130: ; Teil 131: ; Teil 132: ; Teil 133: ; Teil 134: ; Teil 135: ; Teil 136: ; Teil 137: ; Teil 138: ; Teil 139: ; Teil 140: ; Teil 141: ; Teil 142: ; Teil 143: ; Teil 144: ; Teil 145: ; Teil 146: ; Teil 147: ; Teil 148: ; Teil 149: ; Teil 150: ; Teil 151: ; Teil 152: ; Teil 153: ; Teil 154: ; Teil 155: ; Teil 156: ; Teil 157: ; Teil 158: ; Teil 159: ; Teil 160: ; Teil 161: ; Teil 162: ; Teil 163: ; Teil 164: ; Teil 165: ; Teil 166: ; Teil 167: ; Teil 168: ; Teil 169: ; Teil 170: ; Teil 171: ; Teil 172: ; Teil 173: ; Teil 174: ; Teil 175: ; Teil 176: ; Teil 177: ; Teil 178: ; Teil 179: ; Teil 180: ; Teil 181: ; Teil 182: ; Teil 183: ; Teil 184: ; Teil 185: ; Teil 186: ; Teil 187: ; Teil 188: ; Teil 189: ; Teil 190: ; Teil 191: ; Teil 192: ; Teil 193: ; Teil 194: ; Teil 195: ; Teil 196: ; Teil 197: ; Teil 198: ; Teil 199: ; Teil 200: ; Teil 201: ; Teil 202: ; Teil 203: ; Teil 204: ; Teil 205: ; Teil 206: ; Teil 207: ; Teil 208: ; Teil 209: ; Teil 210: ; Teil 211: ; Teil 212: ; Teil 213: ; Teil 214: ; Teil 215: ; Teil 216: ; Teil 217: ; Teil 218: ; Teil 219: ; Teil 220:","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	// Your factorization
}

int main(){
	printf(""Please enter an Integer: "");
	printf(""Possible Factors of %ld are %ld and %ld.\n"");
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",-
Ullrich,Gabriel,gabriel.ullrich@campus.tu-berlin.de,Beendet,"17. Januar 2021  16:51","24. Januar 2021  15:02","6 Tage 22 Stunden","19,18",5,5,"zeigefinger = (int*)((short*)zeigefinger - 4);",232,"Ein C-String ist ein Array von char-Variablen.","{232} {236} {240} {246} {D} {a} {s} {\0} {i} {s} {t} {\0} {k} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0} {a} {i} {s} {t} {k} {e} {i} {n} {' '} {S} {t} {r} {i} {n} {g} {\0}","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: %; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: 0; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 200; Teil 141: 204; Teil 142: 208; Teil 143: 212; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 216; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 224; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2){
        
        if(product == 0 || product == 1){ 
           *f1 = 1;
           *f2 = product;
        }
        else{
           
           for(int i = 2;; i++)if((product%i) == 0){*f2 = i; break;}
              *f1 = (product / *f2);
            }
}
        


int main(){
	long f1;
	long f2; 
	long product;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &product);
	factorize(product, &f1, &f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, f1, f2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src){  
  for(int i = 0; (i < zahl) && (dest[i] != '\0') && (src[i] != '\0'); i++){
      dest[i] = src[i];
  }
}

void umdrehen( char* str )
{
  char tmp[30] = """";
  int i = 0;
  for(;(str[i+1]) != '\0'; i++){}
  for(int j = 0; (str[j] != '\0'); j++) {tmp[j] = str[i-j];}
  for(int j = 0; (str[j] != '\0'); j++) {str[j] = tmp[j];}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
void xyqentfernen(char* str1){
	int i;
	int j;
	for ( i = 0,  j = 0;j<100; ++j){
	if ((str1[j] != 'x')&&(str1[j] != 'X')&&(str1[j] != 'y')&&(str1[j] != 'Y')&&(str1[j] != 'q')&&(str1[j] != 'Q'))
	str1[i++] = str1[j];
	
	}
}

void zsmfuegen(char* str1, char* str2){
	int j=0;
	for(;(str2[j])!=('\0');j++){}
	for (int i=0;str1[i]!='\0';i++){
		str2[j+i]=str1[i];
	}	
;}

void neuerstring(char* str1,char* str2){
	for (int i=0;str1[i]!='\0';i++){
		if((i+3)%3==0)str2[((i+3)/3)-1]=str1[i];
	}
}


int main(int argc,char** argv){
	if (argc<2) return 0;
	char zsm[100]="""";
	char neustr[100]="""";
	for(int i=1;i<argc;i++) {
		zsmfuegen(argv[i],zsm);}
		xyqentfernen(zsm);
	neuerstring(zsm,neustr);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",zsm);
	printf(""Der neue String lautet: %s"",neustr);
}"
Eichner,"Melvin Elon Bendix",melvin.eichner@campus.tu-berlin.de,Beendet,"17. Januar 2021  17:31","24. Januar 2021  23:59","7 Tage 6 Stunden","0,00",-,-,-,-,-,-,"Teil 1: ; Teil 2: ; Teil 3: ; Teil 4: ; Teil 5: ; Teil 6: ; Teil 7: ; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: ; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: ; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: ; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: ; Teil 26: ; Teil 27: ; Teil 28: ; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: ; Teil 35: ; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: ; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: ; Teil 45: ; Teil 46: ; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: ; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: ; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: ; Teil 60: ; Teil 61: ; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: ; Teil 66: ; Teil 67: ; Teil 68: ; Teil 69: ; Teil 70: ; Teil 71: ; Teil 72: ; Teil 73: ; Teil 74: ; Teil 75: ; Teil 76: ; Teil 77: ; Teil 78: ; Teil 79: ; Teil 80: ; Teil 81: ; Teil 82: ; Teil 83: ; Teil 84: ; Teil 85: ; Teil 86: ; Teil 87: ; Teil 88: ; Teil 89: ; Teil 90: ; Teil 91: ; Teil 92: ; Teil 93: ; Teil 94: ; Teil 95: ; Teil 96: ; Teil 97: ; Teil 98: ; Teil 99: ; Teil 100: ; Teil 101: ; Teil 102: ; Teil 103: ; Teil 104: ; Teil 105: ; Teil 106: ; Teil 107: ; Teil 108: ; Teil 109: ; Teil 110: ; Teil 111: ; Teil 112: ; Teil 113: ; Teil 114: ; Teil 115: ; Teil 116: ; Teil 117: ; Teil 118: ; Teil 119: ; Teil 120: ; Teil 121: ; Teil 122: ; Teil 123: ; Teil 124: ; Teil 125: ; Teil 126: ; Teil 127: ; Teil 128: ; Teil 129: ; Teil 130: ; Teil 131: ; Teil 132: ; Teil 133: ; Teil 134: ; Teil 135: ; Teil 136: ; Teil 137: ; Teil 138: ; Teil 139: ; Teil 140: ; Teil 141: ; Teil 142: ; Teil 143: ; Teil 144: ; Teil 145: ; Teil 146: ; Teil 147: ; Teil 148: ; Teil 149: ; Teil 150: ; Teil 151: ; Teil 152: ; Teil 153: ; Teil 154: ; Teil 155: ; Teil 156: ; Teil 157: ; Teil 158: ; Teil 159: ; Teil 160: ; Teil 161: ; Teil 162: ; Teil 163: ; Teil 164: ; Teil 165: ; Teil 166: ; Teil 167: ; Teil 168: ; Teil 169: ; Teil 170: ; Teil 171: ; Teil 172: ; Teil 173: ; Teil 174: ; Teil 175: ; Teil 176: ; Teil 177: ; Teil 178: ; Teil 179: ; Teil 180: ; Teil 181: ; Teil 182: ; Teil 183: ; Teil 184: ; Teil 185: ; Teil 186: ; Teil 187: ; Teil 188: ; Teil 189: ; Teil 190: ; Teil 191: ; Teil 192: ; Teil 193: ; Teil 194: ; Teil 195: ; Teil 196: ; Teil 197: ; Teil 198: ; Teil 199: ; Teil 200: ; Teil 201: ; Teil 202: ; Teil 203: ; Teil 204: ; Teil 205: ; Teil 206: ; Teil 207: ; Teil 208: ; Teil 209: ; Teil 210: ; Teil 211: ; Teil 212: ; Teil 213: ; Teil 214: ; Teil 215: ; Teil 216: ; Teil 217: ; Teil 218: ; Teil 219: ; Teil 220:","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	// Your factorization
}

int main(){
	printf(""Please enter an Integer: "");
	printf(""Possible Factors of %ld are %ld and %ld.\n"");
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Meyer,"Florian Philipp",florian.p.meyer@campus.tu-berlin.de,Beendet,"17. Januar 2021  19:17","24. Januar 2021  19:34","7 Tage","19,25","Ein C-String ist ein Array von char-Variablen.",5,"Nichts, da Programm nicht kompiliert.","{232} {236} {240} {246} {232} {236} {240} {246} {a} {ist} {ein} {String}","zeigefinger = (int*)((short*)zeigefinger - 4);","{232} {236} {240} {246} {D} {a} {s} {\0} {i} {s} {t} {\0} {' '} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0} {a} {i} {s} {t} {' '} {e} {i} {n} {' '} {S} {t} {r} {i} {n} {g} {\0}","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: -; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 2(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: 2; Teil 130: 1; Teil 131: 0; Teil 132: 0; Teil 133: 3(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: 200; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 4(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 5(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: 208; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 5(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	// keine funktion bisher
	*f2 = product;
	// Exeptions verhindern
	if(!product || product == 1)
	{
		*f1 = 1;
		*f2 = product;
	}
	else
	{
		long halfproduct = product/2;
		while(product%(halfproduct)!=0)
			halfproduct--;
		*f1 = halfproduct;
		*f2 = product/halfproduct;
	}
}

int main(){
	long productArray[3];
	printf(""Please enter an Integer: "");
	scanf(""%ld"", productArray);
	factorize(productArray[0], productArray+1, productArray+2);
	printf(""Possible Factors of %ld "", productArray[0]);
	printf(""are %ld and %ld.\n"", productArray[1], productArray[2]);
	return 0;
}","#include <stdio.h>

void str_append(char* dest, char* src)
{
  // Ende des Destinationsstrings finden und Pointer setzen
  for(int i=0; *dest != '\0'; i++)
    dest++;

  for(int i=0; src[i] != '\0'; i++)
  {
    *dest = src[i];
    dest++;
  }
  *dest+='\0';
}

void stripof(char* src, char* letters)
{
  char* tempstr = src;
  for(int i=0; letters[i]!='\0'; i++)
  {
    for(int i=0; *tempstr!='\0'; i++)
    {
      for(int j=0; letters[j]!='\0'; j++)
      {
        if(*tempstr==letters[j])
          break;
        else if(letters[j+1]=='\0')
        {
          *src=*tempstr; 
          src++;
        }
      }
      tempstr++;
    }
  }
  *src = '\0'; 
}
void rmthird(char* src)
{
  char* temp = src;
  int i = 0;
  int j;
  do
  {
    *temp = src[i];
    temp++;
   
    i+=3;
    j=i-2;    
  }
  while (src[i]!='\0' && src[j]!='\0' && src[j+=1]!='\0');
  *temp = '\0';
} 
int main(int args, char* args_p[])
{
  char newstring[100] = """";

  // über alle Wörter in args_p iterieren und an newstring heften
  for(int i=1; i<args; i++)
    str_append(newstring, args_p[i]);
  char letters[7] =  {'x','y','q','X','Y','Q'};
  stripof(newstring, letters);
  
  printf(""x,y,q und X,Y,Q aussortiert: %s\n"", newstring);

  rmthird(newstring);
  printf(""Der neue String lautet: %s\n"", newstring);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
   for(int i=0; i<zahl && *src!='\0' && *dest!='\0'; i++)
  {
      *dest = *src;
      dest++;
      src++;
  } 
}

void umdrehen( char* str )
{
    char temp[100] = """";
    char* ptemp = temp;
    for(int i=0; str[i]!=0; i++)
        temp[i] = str[i]; 

    while(*ptemp != '\0')
        ptemp++;
    
    ptemp--;
     
    while(*str!='\0')
    {
        *str = *ptemp;       
        ptemp--;
        str++;       
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Dirks,Leonhard,leonhard.dirks@campus.tu-berlin.de,Beendet,"17. Januar 2021  21:13","24. Januar 2021  21:23","7 Tage","19,51",5,5,5,232,80,"{232} {236} {240} {246} {D} {a} {s} {\0} {i} {s} {t} {\0} {' '} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0} {a} {i} {s} {t} {' '} {e} {i} {n} {' '} {S} {t} {r} {i} {n} {g} {\0}","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	if(product == 0 || product == 1){
		*f1 = 1;
		*f2 = product;
		return;
	}
	if(product%2 == 0){
		*f1 = product/2;
		*f2 = 2;
	}
	else{
		*f1 = product/2;
		while(product % *f1 != 0){
			*f1 = *f1 - 1;
		}
		*f2 = product / *f1;
	}
}

int main(){
	long Produkt, f1, f2;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &Produkt);
	factorize(Produkt, &f1, &f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", Produkt, f1, f2);
	return 0;
}","#include <stdio.h>

int main(int argc, char** argv){
	int groesse = 0;
	for(int i = 1; i < argc; i++){
		char* wort = argv[i];
		while(*wort != '\0'){
			groesse ++;
			wort ++;
		}
	}
	char satz[groesse + 1];
	int position = 0;
	for(int i = 1; i < argc; i++){
		char* wort = argv[i];
		while(*wort != '\0'){
			if(*wort != 'x'&&*wort != 'y'&&*wort != 'q'&&*wort != 'X' && *wort != 'Y'&&*wort != 'Q'){
				satz[position] = *wort;
				position ++;
			}
			wort ++;
		}
	}
	satz[position] = '\0';
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", satz);
	char satz2[groesse];
	int position2 = 0;
	for(int i = 0;i < position; i = i + 3){
		satz2[position2] = satz[i];
		position2 ++;
	}
	satz2[position2] = '\0';
	printf(""Der neue String lautet: %s\n"", satz2);
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	int position = 0;
	while(position < zahl && dest[position] != '\0' && src[position] != '\0'){
		dest[position] = src[position];
		position ++;
	}
}

void umdrehen( char* str )
{
	int groesse = 0;
	while(str[groesse] != '\0') groesse++;
	char kopie[groesse];
	for(int i = 0; i < groesse; i++) kopie[i] = str[i];
	for(int i = 0; i < groesse; i++){
		str[i] = kopie[groesse - 1 - i];
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Kruschel,"Annegret Claire",kruschel@campus.tu-berlin.de,Beendet,"17. Januar 2021  23:27","24. Januar 2021  23:27","6 Tage 23 Stunden","18,90","Nichts, da Programm nicht kompiliert.","{Das} {ist} {ein} {String} {Das} {ist} {ein} {String} {a} {ist} {ein} {String}",232,5,5,"{232} {236} {240} {246} {D} {a} {s} {\0} {i} {s} {t} {\0} {k} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0} {a} {i} {s} {t} {\0} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0}","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: %; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: %; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: %; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: %; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: %; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 2(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 3(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: 2; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 4(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 2(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 2; Teil 173: 2; Teil 174: 1; Teil 175: 0; Teil 176: 0; Teil 177: 4(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: %; Teil 196: %; Teil 197: %; Teil 198: %; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: -; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	int step = 0;
	switch (product){
		case 0: *f1=1;
		        *f2 = product;
			break;
		
		case 1: *f1 = 1;
			*f2 = product;
			break;

		default: 
		step = product/2;
		if (product % 2 == 0){
			*f1=step;
			*f2=2;
		}
		else{
			do{
				step--;
			}while ((product%step) != 0);
			*f1=step;
			*f2=product/step;
		}
	}
}
int main(){
	long number;
	long f1 = 0;
	long f2 = 0;
	long* a = &f1;
	long* b = &f2;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &number);
	factorize(number, a, b);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", number, f1, f2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	
  	int i;


    for (i = 0; src[i]!= '\0'; ++i) {
	if(i<zahl&&dest[i]!= '\0'){
	
        dest[i] = src[i];
	}
	if(i>=11)break;
    }

}


void umdrehen( char* str )
{
int length = 0;
int i = 0;
int j = 0;

char forward [100];

while(str[length]!='\0'){
length++;
}

j=length;

for(--length; length >= 0; length--){
forward[i++] = str[length];
}

for(int iii = 0; iii<j; iii++){
str[iii]=forward[iii];
}
}
int main( int argc, char* argv[] )
{  

  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen(test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){

char* compactstring = (char*) malloc(400* sizeof(char));
int x = 0;
for(int i=1; i < argc; i++){
	int j = 0;
while(*(argv[i]+j) != '\0'){
if((*(argv[i]+j) != 'x') && (*(argv[i]+j)!= 'y') && (*(argv[i]+j) != 'q')&& (*(argv[i]+j) != 'X')&& (*(argv[i]+j) != 'Y')&& (*(argv[i]+j) != 'Q')){
			*(compactstring+x) = *(argv[i]+j);
			x++;
	}
	j++;
}
}
compactstring = (char*) realloc(compactstring,x+sizeof(char));
int shortendlength=(x+1)/3;
char* shortend = (char*) malloc(shortendlength * sizeof(char));
int y = 0;
for (int i=0;i<x+1;i++){
if((i%3)==0){
	*(shortend+y) = *(compactstring+i);
	y++;
}
}
printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", compactstring,shortend);
}"
Klima,"Jakob Valentin",j.klima@campus.tu-berlin.de,Beendet,"17. Januar 2021  23:52","24. Januar 2021  23:59","7 Tage","0,49",-,-,-,-,"Ein C-String ist ein Array von char-Variablen.",-,"Teil 1: ; Teil 2: ; Teil 3: ; Teil 4: ; Teil 5: ; Teil 6: ; Teil 7: ; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: ; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: ; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: ; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: ; Teil 26: ; Teil 27: ; Teil 28: ; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: ; Teil 35: ; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: ; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: ; Teil 45: ; Teil 46: ; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: ; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: ; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: ; Teil 60: ; Teil 61: ; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: ; Teil 66: ; Teil 67: ; Teil 68: ; Teil 69: ; Teil 70: ; Teil 71: ; Teil 72: ; Teil 73: ; Teil 74: ; Teil 75: ; Teil 76: ; Teil 77: ; Teil 78: ; Teil 79: ; Teil 80: ; Teil 81: ; Teil 82: ; Teil 83: ; Teil 84: ; Teil 85: ; Teil 86: ; Teil 87: ; Teil 88: ; Teil 89: ; Teil 90: ; Teil 91: ; Teil 92: ; Teil 93: ; Teil 94: ; Teil 95: ; Teil 96: ; Teil 97: ; Teil 98: ; Teil 99: ; Teil 100: ; Teil 101: ; Teil 102: ; Teil 103: ; Teil 104: ; Teil 105: ; Teil 106: ; Teil 107: ; Teil 108: ; Teil 109: ; Teil 110: ; Teil 111: ; Teil 112: ; Teil 113: ; Teil 114: ; Teil 115: ; Teil 116: ; Teil 117: ; Teil 118: ; Teil 119: ; Teil 120: ; Teil 121: ; Teil 122: ; Teil 123: ; Teil 124: ; Teil 125: ; Teil 126: ; Teil 127: ; Teil 128: ; Teil 129: ; Teil 130: ; Teil 131: ; Teil 132: ; Teil 133: ; Teil 134: ; Teil 135: ; Teil 136: ; Teil 137: ; Teil 138: ; Teil 139: ; Teil 140: ; Teil 141: ; Teil 142: ; Teil 143: ; Teil 144: ; Teil 145: ; Teil 146: ; Teil 147: ; Teil 148: ; Teil 149: ; Teil 150: ; Teil 151: ; Teil 152: ; Teil 153: ; Teil 154: ; Teil 155: ; Teil 156: ; Teil 157: ; Teil 158: ; Teil 159: ; Teil 160: ; Teil 161: ; Teil 162: ; Teil 163: ; Teil 164: ; Teil 165: ; Teil 166: ; Teil 167: ; Teil 168: ; Teil 169: ; Teil 170: ; Teil 171: ; Teil 172: ; Teil 173: ; Teil 174: ; Teil 175: ; Teil 176: ; Teil 177: ; Teil 178: ; Teil 179: ; Teil 180: ; Teil 181: ; Teil 182: ; Teil 183: ; Teil 184: ; Teil 185: ; Teil 186: ; Teil 187: ; Teil 188: ; Teil 189: ; Teil 190: ; Teil 191: ; Teil 192: ; Teil 193: ; Teil 194: ; Teil 195: ; Teil 196: ; Teil 197: ; Teil 198: ; Teil 199: ; Teil 200: ; Teil 201: ; Teil 202: ; Teil 203: ; Teil 204: ; Teil 205: ; Teil 206: ; Teil 207: ; Teil 208: ; Teil 209: ; Teil 210: ; Teil 211: ; Teil 212: ; Teil 213: ; Teil 214: ; Teil 215: ; Teil 216: ; Teil 217: ; Teil 218: ; Teil 219: ; Teil 220:","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	// Your factorization
}

int main(){
	printf(""Please enter an Integer: "");
	printf(""Possible Factors of %ld are %ld and %ld.\n"");
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",-
Radke,"Simon Sebastian",s.radke@campus.tu-berlin.de,Beendet,"18. Januar 2021  00:01","24. Januar 2021  22:56","6 Tage 22 Stunden","5,42","{232} {236} {240} {246} {Das} {ist} {ein} {String} {a} {ist} {ein} {String}","zeigefinger = (int*)((short*)zeigefinger - 4);",80,232,"Ein C-String ist ein Array von char-Variablen.","{232} {236} {240} {246} {D} {a} {s} {\0} {i} {s} {t} {\0} {' '} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0} {a} {i} {s} {t} {' '} {e} {i} {n} {' '} {S} {t} {r} {i} {n} {g} {\0}","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 208; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 216; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 224; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 2(14); Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: 200; Teil 130: 208; Teil 131: 216; Teil 132: 224; Teil 133: 3(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: 200; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 4(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 5(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: 208; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 4(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 5(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: 216; Teil 195: %; Teil 196: %; Teil 197: %; Teil 198: %; Teil 199: 6(14); Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: -; Teil 206: -; Teil 207: -; Teil 208: -; Teil 209: -; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	// Your factorization
}

int main(){
	printf(""Please enter an Integer: "");
	printf(""Possible Factors of %ld are %ld and %ld.\n"");
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Butzer,Niklas,n.butzer@campus.tu-berlin.de,Beendet,"18. Januar 2021  00:05","24. Januar 2021  21:32","6 Tage 21 Stunden","9,86","Ein C-String ist ein Array von char-Variablen.",5,"{232} {236} {240} {246} {Das} {ist} {kein} {String} {a} {ist} {ein} {String}",80,232,"{232} {236} {240} {246} {D} {a} {s} {\0} {i} {s} {t} {\0} {' '} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0} {a} {i} {s} {t} {' '} {e} {i} {n} {' '} {S} {t} {r} {i} {n} {g} {\0}","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 4(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: %; Teil 196: %; Teil 197: %; Teil 198: %; Teil 199: 5(14); Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: 216; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 3(14); Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: -; Teil 217: -; Teil 218: -; Teil 219: -; Teil 220: -","#include <stdio.h>
#include <math.h>

void factorize(long product, long *f1, long *f2)
{
 if(product==0 || product==1){
    *f1=1;
    *f2=product;
 }
 else if(product>1){
 int i=2;
 long zproduct;
 zproduct=product/2;
 if(zproduct*2==product && product%2==0){
    *f1=zproduct;
    *f2=2;
}
else {
while(zproduct>1){
zproduct-=1;
if(product%zproduct==0){
    break;
}
}
*f1=zproduct;
*f2=product/zproduct;
}
}
}

int main(){
    long f1=0;
    long f2=0;
    int gZ=0;
	printf(""Please enter an Integer: "");
	scanf(""%i"", &gZ);
	factorize(gZ,&f1,&f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",gZ,f1,f2);
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Girod,"Lucie Chantal",lucie.girod@campus.tu-berlin.de,Beendet,"18. Januar 2021  12:44","24. Januar 2021  23:17","6 Tage 10 Stunden","19,10",5,-,232,"Nichts, da Programm nicht kompiliert.","Ein C-String ist ein Array von char-Variablen.","{232} {236} {240} {246} {D} {a} {s} {\0} {i} {s} {t} {\0} {' '} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0} {a} {i} {s} {t} {' '} {e} {i} {n} {' '} {S} {t} {r} {i} {n} {g} {\0}","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: -; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: %; Teil 196: %; Teil 197: %; Teil 198: %; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)

{
	int step = 0;
	switch(product){
		case 0: 	*f1 = 1;
					*f2 = product;
					break;
		case 1: 	*f1 = 1;
					*f2 = product;
					break;
		default: 
			step = product / 2;
			if (product % 2 == 0){
				*f1 = step;	
				*f2 = 2;
			}
			else {
				do{
					step--;
				} while((product % step) != 0);
				*f1 = step;
				*f2 = product/step;
		}
	}			
}

int main(){
	long zahl;
	long f1 = 0;
	long f2 = 0;
	long* a = &f1;
	long* b = &f2;
	
	
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &zahl);
	factorize(zahl, a, b);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", zahl, f1, f2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
		
    int i = 0;
	while (i < zahl && (src[i] != '\0') && (dest[i] != '\0')) {
		*(dest+i) = *(src+i);
		i++;
		}

}

void umdrehen( char* str )
{
  int laenge = 0;
	int j = 0;
	int z = 0;
	
	char new_str[100];

	while(str[laenge] != '\0'){
		laenge++;
		}
	
	z = laenge;	
		
	for(--laenge; laenge >= 0; laenge--){
		new_str[j++] = str[laenge];
		}
	
		
	for (int iii = 0; iii <z ; iii++){	
		
		str[iii] = new_str[iii];
		}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[]){
	
	char* text_str = malloc(400* sizeof(char));
	int idx = 0;
	for(int i = 1; i < argc; i++){
		int j = 0;
		while(*(argv[i]+j) != '\0'){
			if((*(argv[i]+j) != 'x') && (*(argv[i]+j) != 'y') && (*(argv[i]+j) != 'q') && (*(argv[i]+j) != 'X') && (*(argv[i]+j) != 'Y') && (*(argv[i]+j) != 'Q')){
			*(text_str+idx) = *(argv[i]+j);
			idx++;
			}
			j++;
		}
	}
	
	text_str = realloc(text_str,idx+1 * sizeof(char));
	int solution_length = (idx+1) / 3;
	char* solution = malloc(solution_length * sizeof(char));
	int count = 0;
	for(int i = 0; i < idx+1; i++){
		if((i % 3) == 0){
			*(solution+count) = *(text_str+i);
			count++;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s\n"", text_str, solution);
	
}"
Schultz,David,d.schultz@campus.tu-berlin.de,Beendet,"18. Januar 2021  15:09","24. Januar 2021  23:59","6 Tage 8 Stunden","4,93","Ein C-String ist ein Array von char-Variablen.",5,232,5,"zeigefinger = (int*)((short*)zeigefinger - 4);","{232} {236} {240} {246} {D} {a} {s} {\0} {i} {s} {t} {\0} {' '} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0} {a} {i} {s} {t} {' '} {e} {i} {n} {' '} {S} {t} {r} {i} {n} {g} {\0}","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 208; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 216; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 224; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 2(14); Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: 200; Teil 130: 208; Teil 131: 216; Teil 132: 224; Teil 133: 3(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: 200; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 4(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 5(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: 208; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 4(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 5(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: 216; Teil 195: %; Teil 196: %; Teil 197: %; Teil 198: %; Teil 199: 6(14); Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: -; Teil 206: -; Teil 207: -; Teil 208: -; Teil 209: -; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	// Your factorization
}

int main(){
	printf(""Please enter an Integer: "");
	printf(""Possible Factors of %ld are %ld and %ld.\n"");
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Batilla,Moritz,m.batilla@campus.tu-berlin.de,Beendet,"18. Januar 2021  16:56","24. Januar 2021  21:06","6 Tage 4 Stunden","16,03",5,232,"Nichts, da Programm nicht kompiliert.","{232} {236} {240} {246} {Das} {ist} {kein} {String} {a} {ist} {ein} {String}","Ein C-String ist ein Array von char-Variablen.","{232} {236} {240} {246} {D} {a} {s} {\0} {i} {s} {t} {\0} {k} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0} {a} {i} {s} {t} {' '} {e} {i} {n} {' '} {S} {t} {r} {i} {n} {g} {\0}","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	// Your factorization
}

int main(){
	printf(""Please enter an Integer: "");
	printf(""Possible Factors of %ld are %ld and %ld.\n"");
	return 0;
}","#include <stdio.h>

int main(int argc, char** argv)
{
   	    char string[100],i;
   	    if (argc == 3)
        {
        sprintf(string, ""%s%s"", argv[1],argv[2]);
   	    }
   	    else if (argc == 4)
        {
            sprintf(string, ""%s%s%s"", argv[1],argv[2],argv[3]);
        }
        else if (argc == 2)
        {
            sprintf(string, ""%s"", argv[1]);
        }
        else if (argc == 5)
        {
            sprintf(string, ""%s%s%s%s"", argv[1],argv[2],argv[3],argv[4]);
        }
        else if (argc == 6)
        {
            sprintf(string, ""%s%s%s%s%s"", argv[1],argv[2],argv[3],argv[4],argv[5]);
        }
        else if (argc == 7)
        {
            sprintf(string, ""%s%s%s%s%s%s"", argv[1],argv[2],argv[3],argv[4],argv[5],argv[6]);
        }
   	    else
            {
                printf(""mal sehen"");
                return 0;
            }

   for (int i = 0, j; string[i] != '\0'; i++)
    {
      while (!(string[i] !='q'&& string[i] !='x'&& string[i] !='y' && string[i] !='Y' && string[i] !='X' && string[i] !='Q') && !(string[i] == '\0'))
        {
         for (j = i; string[j] != '\0'; j++)
         {
            string[j] = string[j + 1];
         }
         string[j] = '\0';
      }
   }
   printf(""x,y,q und X,Y,Q aussortiert: %s\n"", string);

    for(i=0; string[i]!='\0'; ++i);

   printf(""Der neue String lautet: "");
   for (int r=0;r <i; r+=3)
   {
       printf(""%c"", string[r]);
   }
   }","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    int x;
    for(x = 0; x < zahl && *dest != '\0' && *src != '\0'; x++)
    {
       *dest = *src;
       src++;
       dest++;
    }
}

void umdrehen( char* str )
{
    int y = 0;
    int count = 0;
    int tmp = 0;

    for(count=0; str[count] != 0; count++);
    for(y = 0; y <count/2; y++)
    {
        tmp = str[y];
        str[y]=str[count - 1 - y];
        str[count - 1 - y] = tmp;
    }
    for(y = 0; y < count; y++);
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Ergin,"Can Mert",c.ergin@campus.tu-berlin.de,Beendet,"19. Januar 2021  00:06","24. Januar 2021  22:26","5 Tage 22 Stunden","18,19",5,5,232,"zeigefinger = (int*)((short*)zeigefinger - 4);","Ein C-String ist ein Array von char-Variablen.","{232} {236} {240} {246} {D} {a} {s} {\0} {i} {s} {t} {\0} {' '} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0} {a} {i} {s} {t} {' '} {e} {i} {n} {' '} {S} {t} {r} {i} {n} {g} {\0}","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 11; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 12; Teil 57: %; Teil 58: %; Teil 59: 1; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 11; Teil 68: 208; Teil 69: %; Teil 70: %; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 12; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: 0; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: 212; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 13; Teil 101: -; Teil 102: %; Teil 103: %; Teil 104: %; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 2(14); Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: 2; Teil 119: 1; Teil 120: 0; Teil 121: 0; Teil 122: 3(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: 200; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 4(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 204; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 5(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	if (product == 0) {
		*f1 = 1;
		*f2 = product;
	}
	else if (product == 1) {
		*f1 = 1;
		*f2 = product;
	}
	else {
		long t1 = product/2;
		for (t1; (product % t1) != 0; t1--)
			;
		*f1 = t1;
		*f2 = product / t1;
	}
}

int main(){
	long product, f1, f2;
	printf(""Please enter an Integer: "");
	scanf(""%ld"",&product);
	factorize(product, &f1, &f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",product, f1, f2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
	for (int i = 0; (i < zahl) && (i < 10) && (src[i] != '\0'); i++)
		dest[i] = src[i];
}

void umdrehen( char* str )
{
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	char copy[lange];
	for (int i = 0; i < lange; i++) {
		copy[lange-i-1] = str[i];
	}
	for (int i = 0; i < lange; i++)
		str[i] = copy[i];
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>

int main(int argc, char* argv[] )
{  
	char str[100];
	char str2[100];
	int j = 0;
	for (int i = 0; i < argc -1; i++)
	{
		int lange = 0;
		for (lange; *(*(argv+1+i)+lange) != '\0'; lange++)
		{
			str[j] = *(*(argv+1+i)+lange);
			j++;
		}
	}
	str[j] = '\0';
	for (int i = 0; i < j+1; i++)
	{
		if ((str[i] == 'x') || (str[i] == 'y') || (str[i] == 'q') || (str[i] == 'X') || (str[i] == 'Y') || (str[i] == 'Q'))
		{
			while (1)
			{
				str[i] = str[i+1];
				i++;
				if (str[i] == '\0')
				{	
					break;
				}
			}
			j--;
			i = 0;
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",str);
	for (int i = 0, z = 0; i < ((j/2)-2); i++, z += 3)
	{
		str2[i] = str[z];
	}
	int lange = 0;
	for (lange; str[lange] != '\0'; lange++)
		;
	str2[lange] = '\0';
	printf(""Der neue String lautet: %s"",str2);
}"
Grönefeld,Daniel,groenefeld@campus.tu-berlin.de,Beendet,"19. Januar 2021  11:44","22. Januar 2021  18:46","3 Tage 7 Stunden","20,00","Nichts, da Programm nicht kompiliert.",5,"zeigefinger = (int*)((short*)zeigefinger - 4);","{232} {236} {240} {246} {Das} {ist} {ein} {String} {a} {ist} {ein} {String}",5,"{232} {236} {240} {246} {D} {a} {s} {\0} {i} {s} {t} {\0} {' '} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0} {a} {i} {s} {t} {' '} {e} {i} {n} {' '} {S} {t} {r} {i} {n} {g} {\0}","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long* f1, long* f2)
{
	if(product == 0 || product == 1){
		*f1 = 1;
		*f2 = product;
		return;
	}
	*f1 = product / 2;
	if((product % 2) != 0){
		do{
		//printf(""%ld"", *f1);
		*f1 = *f1 - 1;
		//printf(""%ld"", *f1);
		}
		while(product % *f1 != 0);
	}
	*f2 = product / *f1;
}

int main(){
	long input = 0;
	long factor1 = 0;
	long factor2 = 0;
	long* f1 = &factor1;
	long* f2 = &factor2;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &input);
	factorize(input, f1, f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", input, factor1, factor2);
	return 0;
}","#include <stdio.h>
//Prototypendeklaration, da so die Aufrufreihenfolge nicht zu beachten ist → wartungsfreundlicher + gegenseitige Funktionsaufrufe problemlos möglich
char* strCat(char**, char*);
char* strSel(char*, char*);
int numberofstrings;




char* strCat(char** argv, char* longstr){
	int pos_longstr = 0;
	//char actual_string[50] = ""Johannes"";
	//char whole_input[500] =""Jasper"";
	//durch die Pointer der übergegebenen Strings iterieren
	for(int i = 1; i <= (numberofstrings-1); i++){	
		//durch die Character des aktuellen Strings iterieren
		for(int z = 0; argv[i][z] != '\0'; z++){	
	 	 	longstr[pos_longstr] = argv[i][z];
	 	 	//printf(""%c"", longstr[pos_longstr]);
	 	 	if(!(argv[i][z] == 'x' || argv[i][z] == 'X' || argv[i][z] == 'y' || argv[i][z] == 'Y' || argv[i][z] == 'q' || argv[i][z] == 'Q'))
	 	 		pos_longstr += 1;
		}
	}
	// Terminierungszeichen ans Ende der Zeichenkette setzen → bisher überflüssig
	longstr[pos_longstr] = '\0';		
	// die Länge des neuen Strings weitergeben
	numberofstrings = pos_longstr-1;
	return longstr;
}

char* strSel(char* longstr, char* sel_third_string){
	for(int i = 0, z= 0; i <= numberofstrings; i += 3, z ++){
		sel_third_string[z] = longstr[i];
	}
	return sel_third_string;
}

int main(int argc, char** argv){
	numberofstrings = argc;
	char longstr[500];
	char sel_third_string[50];
	// Aufruf und Ausgabe des Ergebnisses der Funktion
	char* p_stringwithoutxyq = strCat(argv, longstr);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", p_stringwithoutxyq);	
	// Aufruf und Ausgabe des Ergebnisses der Funktion
	char* p_sel_third_string = strSel(longstr, sel_third_string);
	printf(""Der neue String lautet: %s"", p_sel_third_string);
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{  
	for(int i = 0; src[i] != '\0' && dest[i] != '\0' && i < zahl; i++){
		dest[i] = src[i];
	}
}

void umdrehen( char* str)
{
	int length_str = 0;
	for( int i = 0; str[i] != '\0'; i++)
		length_str = i;
	char temp_string[length_str];
	for( int i = 0; i <= length_str; i++)
		temp_string[i] = str[length_str-i];
	for( int i = 0; i <= length_str; i++)
		str[i] = temp_string[i];
}

int main( int argc, char* argv[] )
{  
  char test[11] = ""0123456789"";
  printf( ""Das Original ist: %s \n"", test);
  ersetzen(test , atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test);
  umdrehen( test );	
  printf( ""Rückwärts : %s \n"", test );
}"
Atallah,"Ali H. R.",ali.atallah@campus.tu-berlin.de,Beendet,"19. Januar 2021  16:10","24. Januar 2021  23:59","5 Tage 7 Stunden","8,70",5,80,"23 2",5,"Nichts, da Programm nicht kompiliert.","{232} {236} {240} {246} {D} {a} {s} {\0} {' '} {s} {t} {\0} {k} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0} {a} {' '} {s} {t} {k} {e} {i} {n} {' '} {S} {t} {r} {i} {n} {g} {\0}","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: %; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: %; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: %; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 2(14); Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 3(14); Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: %; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 4(14); Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 5(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 6(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: -; Teil 185: -; Teil 186: -; Teil 187: -; Teil 188: ; Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: %; Teil 196: %; Teil 197: %; Teil 198: %; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: -; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: -; Teil 218: -; Teil 219: -; Teil 220: -","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{

		while((*f1) * (*f2) != product){
			int a = 0;
			for((*f1) = 2; (*f1) <= product; (*f1)++){
				if(a == 1){
					(*f1) -= 1;
					break;
				}
				for((*f2) = 1; (*f2) <= ((product / (*f1)) + 1); (*f2)++){
					if((*f1) * (*f2) == product){
						a = 1;
						break;
					}
				}
			}
			if((*f1)*(*f2) != product){
				*f1 = product;
				*f2 = 1;
			}
		}
}


int main(){
	long n; long i; long j;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &n);
	factorize(n, &i, &j);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", n, j, i);
	return 0;
}",-,"#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
"Florez Vargas",Catalina,c.florez@campus.tu-berlin.de,Beendet,"19. Januar 2021  20:42","22. Januar 2021  10:27","2 Tage 13 Stunden","17,90","zeigefinger = (int*)((short*)zeigefinger - 4);","Nichts, da Programm nicht kompiliert.",5,80,"Ein C-String ist ein Array von char-Variablen.","{232} {236} {240} {246} {D} {a} {s} {\0} {i} {s} {t} {\0} {' '} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0} {a} {i} {s} {t} {' '} {e} {i} {n} {' '} {S} {t} {r} {i} {n} {g} {\0}","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>
void factorize(int product, int *f1, int *f2)
{
    int u = product / 2;
    if (product == 0 || product == 1)
    {
        *f1 = 1;
        *f2 = product;
    }
    else
    {
        while ((product % u) != 0)
            u--;
        *f1 = u;
        *f2 = product / u;
    }
}
int main()
{
    int factor1, factor2;
    int integer;
    printf(""Please enter an Integer: "");
    scanf(""%i"", &integer);
    factorize(integer, &factor1, &factor2);
    printf(""Possible Factors of %i are %i and %i.\n"", integer, factor1, factor2);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char *dest, int zahl, char *src)
{
    for (int i = 0; i < zahl; i++)
    {
        if (src[i] != '\0' && i < 10)
        {
            dest[i] = src[i];
        }
        else
            break;
    }
}

void umdrehen(char *str)
{
     int zahl = 0;
    int x = 0;
    while (str[x] != '\0')
    {
        zahl++;
        x++;
    }

    for (int i = 0; i < (int)(zahl / 2); i++)
    {
        int u = zahl - i-1;
        char tmp;
        tmp = str[i];
        str[i] = str[u];
        str[u] = tmp;
    }
}

int main(int argc, char **argv)
{
    char test[11] = ""0123456789"";
    printf(""Das Original ist: %s \n"", test);
    ersetzen(test, atoi(argv[1]), argv[2]);
    printf(""Ersetzt : %s \n"", test);
    umdrehen(test);
    printf(""Rückwärts : %s \n"", test);
}","#include <stdio.h>

int main(int argc, char *argv[])

{
    int u;
    int f = 0;
    char neu[20];
    char nueva[15];
    int x = 0;
    for (int i = 1; i < argc; i++)
    {
        u = 0;
        while ((argv[i][u]) != '\0')
        {
            if (argv[i][u] != 'x' && argv[i][u] != 'y' && argv[i][u] != 'q' && argv[i][u] != 'X' && argv[i][u] != 'Y' && argv[i][u] != 'Q')
            {
                neu[f] = argv[i][u];
                f++;
            }
            u++;
        }
    }

    for (int i = 0; i <= f; i++)
    {
        if (x > (i / 3) || i == 0)
        {
            if (i == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
            if (((i) % 3) == 0)
            {
                nueva[x] = neu[i];
                x++;
            }
        }
    }

    printf(""x,y,q und X,Y,Q aussortiert: "");
    for (int i = 0; i < f; i++)
        if (neu[i] != '\0')
        {
            printf(""%c"", neu[i]);
        }

    printf(""\n"");

     printf(""Der neue String lautet: "");
    for (int i = 1; i < (f / 2)-1; i++)
            printf(""%c"", nueva[i]);
    if (neu[0] == 'z')
        printf(""z"");
}"
Paluteder,Sandro,paluteder@campus.tu-berlin.de,Beendet,"20. Januar 2021  13:22","24. Januar 2021  23:59","4 Tage 10 Stunden","7,17",5,5,5,80,"zeigefinger = (int*)((short*)zeigefinger - 4);","{200} {208} {216} {224} {' '} {D} {a} {s} {' '} {i} {s} {t} {' '} {k} {e} {i} {n} {' '} {S} {t} {r} {i} {n} {g} {\0} {200} {208} {216} {224} {232} {236} {240} {246} {\0} {' '} {S} {S} {i} {s} {t}","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: %; Teil 15: %; Teil 16: %; Teil 17: %; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: %; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: %; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: %; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 14; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 2(14); Teil 68: %; Teil 69: %; Teil 70: %; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 3(14); Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 4(14); Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 5(14); Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: %; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 9; Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 10; Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 11; Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 12; Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 13; Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 14; Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 2(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 3(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: %; Teil 196: %; Teil 197: %; Teil 198: %; Teil 199: 5(14); Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: %; Teil 213: %; Teil 214: %; Teil 215: %; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{   
    *f1 = 1;
    *f2 = 1;
    
    long MyModulo = product - 1;
    
    while (MyModulo > 0){
        
        //printf(""%ld \n"",product/2);
        
         if (product%MyModulo == 0){
             *f1 = MyModulo;
             *f2 = product/MyModulo;
             
             break;
         }
        
        MyModulo--;
    }
   
	// Your factorization
}

int main(){
	printf(""Please enter an Integer: "");
	
	long testInteger;
	scanf(""%ld"", &testInteger); 
	
	long MyOut1 = 0;
	long MyOut2 = 0;
	
	factorize(testInteger, &MyOut1, &MyOut2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", testInteger,MyOut1,MyOut2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
    
 
    
    

    int lengthDest = 0;
    int lengthSrc = 0;
       
    //printf( ""lengthDest: %d \n"", lengthDest ); 
    while (dest[lengthDest] != '\0') {
        ++lengthDest;
    }
    
    while (src[lengthSrc] != '\0') {
        ++lengthSrc;
    }
    
    printf( ""lengthDest: %d \n"", lengthDest );
    printf( ""LengthSRC: %d \n"", lengthSrc );
    
    /*
     char *str = ""some string thats not malloc'd"";
    char *tmp = NULL; 
    int i = 0; 
    for (i = 0; i < 6; i++) {
        tmp = &str[i];
    }
    printf(""%s\n"", tmp);*/
    
    dest = NULL; 
    
    //printf( ""Before : %s \n"", dest );
    
    for (int i = 0; i <= zahl; i++){
        
        if (i <= lengthSrc && i <= lengthDest){
            
            dest = &(src[lengthSrc - i]);
           //printf( ""Ersetzt : %s \n"", dest );
        }
    }
}

void umdrehen( char* str )
{   
    
    int lengthSrc = 0;
    
    while (str[lengthSrc] != '\0') {
        ++lengthSrc;
    }
    
    
    char *tmp = NULL; 
    int i = lengthSrc; 
    for (i = lengthSrc; i > 0; i--) {
        tmp = &str[lengthSrc-i];
    }
    
    printf(""%s\n"", tmp); 
 
    //str = &tmp;
 
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[])
{   
     // char *argv[] is a array of strings, each command line arguments
    // int argc is the amount of command line arguments
    
    //loop through all command line arguements. First command line argument is always taken by default so we start at 1.
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
  
        
        //printf(""Current 2 %c \n"",CurrentCommandString[0]);
       
        //int LengthOfString = sizeof(CurrentCommandString) / sizeof(char*);
        
        //printf(""Current Size %i \n"",LengthOfString);
        
        int i = 0;
        while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
            if (CurrentCommandString[i] == 'x' 
             || CurrentCommandString[i] == 'y' 
             || CurrentCommandString[i] == 'q'
             || CurrentCommandString[i] == 'X'
             || CurrentCommandString[i] == 'Y' 
             || CurrentCommandString[i] == 'Q')
             {   
                 int j = i;
                 while (CurrentCommandString[i] != '\0' && CurrentCommandString[i] != ' ') {
                    CurrentCommandString[j] = CurrentCommandString[j + 1]; 
                    ++j; 
                 }
             }
            ++i;
         }
        
        
        //printf(""x,y,q und X,Y,Q aussortiert TEST 1: %s \n"", argv[kk]);
    }
    
    char StringXYQRemoved[5000];
    int StringXYQRemovedIndex = 0;
       
    char StringThirdRemoved[5000];
    int StringThirdRemovedIndex = 0;
    
    for (int kk = 1; kk < argc; kk++){
        
        char * CurrentCommandString = argv[kk];  
        
        
        //String 1 
        
        int length, j;
        
          // store length of s1 in the length variable
          length = 0;
          while (StringXYQRemoved[length] != '\0' && StringXYQRemoved[length] != ' ') {
            ++length;
          }
        
          // concatenate s2 to s1
          for (j = 0; CurrentCommandString[j] != '\0' && CurrentCommandString[length] != ' '; ++j, ++length) {
            StringXYQRemoved[length] = CurrentCommandString[j];
          }
        
          // terminating the s1 string
          StringXYQRemoved[length] = '\0';       
    }
    
    
    
        //String2
        int length, j;
        // store length of s1 in the length variable
        length = 0;
        while (StringThirdRemoved[length] != '\0' && StringThirdRemoved[length] != ' ') {
        ++length;
        }
        
        // concatenate s2 to s1
        for (j = 0; StringXYQRemoved[j] != '\0' && StringXYQRemoved[length] != ' '; ++length) {
         StringThirdRemoved[length] = StringXYQRemoved[j];
         
         //printf(""WTFFFF %c \n"",StringXYQRemoved[j]);
         j+=3;
        }
        
        // terminating the s1 string
        StringThirdRemoved[length] = '\0';       
        
    printf(""x,y,q und X,Y,Q aussortiert: %s \n"", StringXYQRemoved);
    printf(""Der neue String lautet: %s"", StringThirdRemoved);
    
}"
Pahlke,"Victoria Sophie",v.pahlke@campus.tu-berlin.de,Beendet,"20. Januar 2021  18:37","24. Januar 2021  17:13","3 Tage 22 Stunden","9,63","{232} {236} {240} {246} {Das} {ist} {kein} {String} {a} {ist} {ein} {String}","zeigefinger = (int*)((short*)zeigefinger - 4);",80,232,"Nichts, da Programm nicht kompiliert.","{232} {236} {240} {246} {D} {a} {s} {\0} {i} {s} {t} {\0} {' '} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0} {a} {i} {s} {t} {' '} {e} {i} {n} {' '} {S} {t} {r} {i} {n} {g} {\0}","Teil 1: 9; Teil 2: %; Teil 3: %; Teil 4: %; Teil 5: %; Teil 6: %; Teil 7: %; Teil 8: %; Teil 9: %; Teil 10: %; Teil 11: %; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: 1; Teil 70: %; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: 0; Teil 103: %; Teil 104: %; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: 1; Teil 142: 0; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: -; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	if (product == 0) 
		{
		*f1=1;
		*f2=product;
		}
	if (product ==1)
		{
		*f1=1;
		*f2=product;
		}
	else
	{
		int x = product / 2;
		while ((product % x) !=0)
		{
		x--;
		}
		*f1 = x ;
		*f2 = product / x;
	}
}

int main(){
	long eingabe = 0;
	long f1 = 0;
	long f2 = 0;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &eingabe);
	factorize(eingabe, &f1, &f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", eingabe, f1, f2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
if (zahl == 0)
{
	for (int i=0; i < 11; i++)
	{
	*dest=*dest;
	}
}
if (zahl > 0)
{
	for (int i = 0; src[i] != '\0'; i++)
	{
	dest[i] = src[i];
	}
}
}

void umdrehen( char* str )
{
int zahl = 0;
int x = 0;
while (str[x] != '\0')
	{
	zahl++;
	x++;
	}

for (int i = 0; i < (zahl/2); i++)
	{
	int j = zahl - (i-1);
	char tmp;
	tmp = str[i];
	str[i]=str[j];
	str[j]=tmp;
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",-
Eckardt,"Jan Hartmut",jan.h.eckardt@campus.tu-berlin.de,Beendet,"20. Januar 2021  19:24","24. Januar 2021  23:59","4 Tage 4 Stunden","8,79",232,P,"{232} {236} {240} {246} {Das} {ist} {ein} {String} {a} {} {} {}",5,zeigefinger--;,"{232} {236} {240} {246} {D} {a} {s} {\0} {i} {s} {t} {\0} {k} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0} {a} {236} {} {} {} {} {} {} {' '} {} {} {} {} {} {} {}","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: 208; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 11; Teil 46: %; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 12; Teil 57: 216; Teil 58: %; Teil 59: 1; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 11; Teil 68: %; Teil 69: %; Teil 70: %; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 12; Teil 79: 224; Teil 80: %; Teil 81: %; Teil 82: 0; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: -; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 13; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: %; Teil 105: %; Teil 106: %; Teil 107: 2; Teil 108: 1; Teil 109: 0; Teil 110: 0; Teil 111: 2(14); Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: 240; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 3(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 4(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: 256; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: 272; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 5; Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(11); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	// Your factorization
}

int main(){
	printf(""Please enter an Integer: "");
	printf(""Possible Factors of %ld are %ld and %ld.\n"");
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  for(int i = 0; i<zahl && src[i] !='\0' && dest[i] != '\0'; i++)
  dest[i] = src[i]; 
}

void umdrehen( char* str )
{
int arraylange = 0;
for(int i = 0; str[i] != '\0'; i++){
arraylange += 1;  }
char kopie[arraylange];
for(int i = 0; str[i] !='\0'; i++){
  kopie[i] = str[i]; }
int a = arraylange - 1;
for(int i = 0; str[i] !=0; i++){
str[i] = kopie[a];
a--;
}}
int main( int argc, char* argv[] )
{  
  char test[10]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",-
Felisiak,"Ann Sophie",a.felisiak@campus.tu-berlin.de,Beendet,"20. Januar 2021  22:44","24. Januar 2021  22:14","3 Tage 23 Stunden","9,70",232,80,5,"Nichts, da Programm nicht kompiliert.",5,"{232} {236} {240} {246} {D} {a} {s} {\0} {i} {s} {t} {\0} {' '} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0} {a} {i} {s} {t} {' '} {e} {i} {n} {' '} {S} {t} {r} {i} {n} {g} {\0}","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 13; Teil 134: -; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 2(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: 2; Teil 152: 1; Teil 153: 0; Teil 154: 0; Teil 155: 3(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: 212; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 4(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 5(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: 220; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	// Your factorization
  if(product == 0 || product == 1)
  {
    *f1 = 1;
    *f2 = product;
  }
  else
  {
    for(long i = 2; i <= product; i++)
    {
      if(product % i == 0) {
        *f1 = product / i;
        *f2 = i;
        return;
      }
    }
  }
}

int main(){
  long product;
  long initF1;
  long initF2;
  long *f1 = &initF1;
  long *f2 = &initF2;

	printf(""Please enter an Integer: "");
  scanf(""%ld"", &product);
  factorize(product, f1, f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, *f1, *f2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",-
Bestgen,Jonas,bestgen@campus.tu-berlin.de,Beendet,"21. Januar 2021  02:26","24. Januar 2021  15:02","3 Tage 12 Stunden","19,20",5,232,5,"Ein C-String ist ein Array von char-Variablen.",5,"{232} {236} {240} {246} {D} {a} {S} {\0} {i} {s} {t} {\0} {k} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0} {a} {i} {s} {t} {k} {e} {i} {n} {' '} {S} {t} {r} {i} {n} {g} {\0}","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 200; Teil 141: 204; Teil 142: 208; Teil 143: 212; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 216; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 224; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: -; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{ if ((product==0)||(product==1)){*f1=1; *f2=product;}
	else {
	int i=2;
	while(1){ 
		if((product)%(i)==(0)) {*f2=i; break;}
		i++;}
	*f1=(product / *f2);
	}
}

int main(){
	long product;
	long f1;
	long f2;
	printf(""Please enter an Integer: "");
	scanf(""%ld"",&product);
	factorize(product,&f1,&f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",product,f1,f2);
	return 0;
}","#include <stdio.h>
void xyqentfernen(char* str1){
	int i;
	int j;
	for ( i = 0,  j = 0;j<100; ++j){
	if ((str1[j] != 'x')&&(str1[j] != 'X')&&(str1[j] != 'y')&&(str1[j] != 'Y')&&(str1[j] != 'q')&&(str1[j] != 'Q'))
	str1[i++] = str1[j];
	
	}
}

void zsmfuegen(char* str1, char* str2){
	int j=0;
	for(;(str2[j])!=('\0');j++){}
	for (int i=0;str1[i]!='\0';i++){
		str2[j+i]=str1[i];
	}	
;}

void neuerstring(char* str1,char* str2){
	for (int i=0;str1[i]!='\0';i++){
		if((i+3)%3==0)str2[((i+3)/3)-1]=str1[i];
	}
}


int main(int argc,char** argv){
	if (argc<2) return 0;
	char zsm[100]="""";
	char neustr[100]="""";
	for(int i=1;i<argc;i++) {
		zsmfuegen(argv[i],zsm);}
		xyqentfernen(zsm);
	neuerstring(zsm,neustr);
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"",zsm);
	printf(""Der neue String lautet: %s"",neustr);
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char* dest, int zahl, char* src)
{
	for (int i=0;((i<zahl)&&((dest[i])!=('\0')))&&((src[i])!=('\0'));i++)
dest[i]=src[i];

	
}

void umdrehen( char* str )
{	char temp[30]="""";
	int i=0;
	for(;(str[i+1])!=('\0');i++){}
	for(int j=0;(str[j])!=('\0');j++) {temp[j]=str[i-j];}
	for(int j=0;(str[j])!=('\0');j++) {str[j]=temp[(j)];}
	
}

int main( int argc, char* argv[] )
{
	char test[11]= ""0123456789"";
	printf( ""Das Original ist: %s \n"", test );
	ersetzen( test , atoi(argv[1]), argv[2] );
	printf( ""Ersetzt : %s \n"", test );
	umdrehen( test );
	printf( ""Rückwärts : %s \n"", test );
}"
Freier,"Constanze Cosima",c.freier@campus.tu-berlin.de,Beendet,"22. Januar 2021  10:10","24. Januar 2021  14:16","2 Tage 4 Stunden","19,16","Ein C-String ist ein Array von char-Variablen.",80,232,"{232} {236} {240} {246} {Das} {ist} {ein} {String} {a} {ist} {ein} {String}","Nichts, da Programm nicht kompiliert.","{232} {236} {240} {246} {D} {a} {s} {\0} {i} {s} {t} {\0} {' '} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0} {a} {i} {s} {t} {' '} {e} {i} {n} {' '} {S} {t} {r} {i} {n} {g} {\0}","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 11; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 12; Teil 57: %; Teil 58: %; Teil 59: 1; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 11; Teil 68: 208; Teil 69: %; Teil 70: %; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 12; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: 0; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: 212; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 13; Teil 101: -; Teil 102: %; Teil 103: %; Teil 104: %; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 2(14); Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: 2; Teil 119: 1; Teil 120: 0; Teil 121: 0; Teil 122: 3(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: 200; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 4(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 204; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 208; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 5(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: -; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
    if(product == 0 || product == 1){
        *f1 = 1;
        *f2 = product;
    }
    else
    {
        long half = product / 2;
        if ((product) % half == 0)
        {
            *f1 = half;
            *f2 = 2;
        }
        else
        {
            int i = 1;
            while ((product) % (half - i + 1) != 0)
            {
                *f1 = half - i;
                i++;
            }
            *f2 = product / (*f1);
        }
    }
}

int main()
{
    long product;
    long factor1, factor2;
    printf(""Please enter an Integer: "");
    scanf(""%ld\n"", &product);
    factorize(product, &factor1, &factor2);
    printf(""Possible Factors of %ld are %ld and %ld.\n"", product, factor1, factor2);
    return 0;
}","#include <stdio.h>
#include <stdlib.h>

void ersetzen(char *dest, int zahl, char *src)
{
    for (int i = 0; (i < zahl); i++)
    {
        if (dest[i] == '\0' || src[i] == '\0')
        {
            break;
        }
        dest[i] = src[i];
    }
}

void umdrehen(char *str)
{
    int numberofelements = 0;
    for (int j = 0; str[j] != '\0'; j++)
    {
        numberofelements += 1;
    }
    char Kopie[numberofelements];
    for (int i = 0; i < numberofelements; i++)
    {
        Kopie[numberofelements - i - 1] = str[i];
    }
    for (int i = 0; i < numberofelements; i++)
    {
        str[i] = Kopie[i];
    }
}

int main(int argc, char *argv[])
{
    char test[11] = ""0123456789"";
    printf(""Das Original ist: %s \n"", test);
    ersetzen(test, atoi(argv[1]), argv[2]);
    printf(""Ersetzt : %s \n"", test);
    umdrehen(test);
    printf(""Rückwärts : %s \n"", test);
}","#include <stdlib.h>
#include <stdio.h>
int Laenge(char *str)
{
    int size = 0;
    for (int j = 0; str[j] != '\0'; j++)
    {
        size += 1;
    }
    return size;
}

int Kopieren(char *dest, char *src)
{
    int i = 0;
    int j = 0;
    while (src[i] != '\0')
    {
        if (src[i] != 'q' && src[i] != 'x' && src[i] != 'y' && src[i] != 'Q' && src[i] != 'X' && src[i] != 'Y')
        {
            dest[j++] = src[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int Entfernen(char *Eingabe)
{
    int i = 0;
    int j = 0;
    while (Eingabe[i] != '\0')
    {
        if (i % 3 == 0)
        {
            Eingabe[j++] = Eingabe[i++];
        }
        else
        {
            i++;
        }
    }
    return j;
}

int main(int argc, char *argv[])
{
    int Gesamtlaenge = 0;
    for (int i = 1; i < argc; i++)
    {
        Gesamtlaenge += Laenge(argv[i]);
    }
    char Ausgabe[Gesamtlaenge + 1];
    char *Ziel = Ausgabe;
    for (int i = 1; i < argc; i++)
    {
        Ziel += Kopieren(Ziel, argv[i]);
    }
    *Ziel = '\0';
    printf(""x,y,q und X,Y,Q aussortiert: %s\n"", Ausgabe);
    Ausgabe[Entfernen(Ausgabe)] = '\0';
    printf(""Der neue String lautet: %s\n"", Ausgabe);
}"
Platena,Moritz,platena@campus.tu-berlin.de,Beendet,"22. Januar 2021  14:53","24. Januar 2021  21:04","2 Tage 6 Stunden","8,97",5,5,"zeigefinger = (int*)((short*)zeigefinger - 4);",5,"{232} {236} {240} {246} {Das} {ist} {kein} {String} {a} {ist} {ein} {String}","{232} {236} {240} {246} {D} {a} {s} {\0} {i} {s} {t} {\0} {k} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0} {a} {i} {s} {t} {' '} {e} {i} {n} {' '} {S} {t} {r} {i} {n} {g} {\0}","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 11; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 12; Teil 57: %; Teil 58: %; Teil 59: 1; Teil 60: 1; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 11; Teil 68: 208; Teil 69: %; Teil 70: %; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 12; Teil 79: %; Teil 80: %; Teil 81: 1; Teil 82: 0; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: 2; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: %; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 2(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 3(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 2; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 4(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: 2; Teil 153: %; Teil 154: %; Teil 155: 3(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: 0; Teil 165: 0; Teil 166: 4(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 2; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 5(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: %; Teil 196: %; Teil 197: %; Teil 198: %; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: -; Teil 206: -; Teil 207: -; Teil 208: -; Teil 209: -; Teil 210: 15; Teil 211: %; Teil 212: %; Teil 213: %; Teil 214: %; Teil 215: %; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	
    if (product == 1){
        return;
    }
    else{
    
    *f1 = product - 1;
    
    for ( int i = 0; i < 999; i++){
        if(product % *f1 == 0){
            break;
        }
        *f1 -= 1;
    }
    

    *f2 = product / *f1;
   
  
   }
    
   return;

}


int main(){
    long f1 = 1;
    long f2 = 1;
    long product;
	printf(""Please enter an Integer: "");
    scanf(""%ld"", &product);
    factorize(product, &f1, &f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, f1,  f2);
	return 0;
}","#include <stdio.h>



int main(int argc, char* argv[]) {
    int i = 0, j = 0, k = 0, l = 0, n = 0, x = 0, y = 0;
  
    for(i = 0; argv[1][i] != '\0'; ++i); 
  
   for(j = 0; argv[2][j] != '\0'; ++j, ++i)
   {
      argv[1][i] = argv[2][j];
   }

    argv[1][i] = '\0';
    for(i = 0; argv[1][i] != '\0'; ++i);

   for(k = 0; argv[3][k] != '\0'; ++k, ++i)
   {
      argv[1][i] = argv[3][k];
   }

    argv[1][i] = '\0';
   

    for(l = 0; argv[4][l] != '\0'; ++l, ++i)
   {
      argv[1][i] = argv[4][l];
   }

   argv[1][i] = '\0';
  
    
    for (i = 0, n = 0; argv[1][i] != '\0'; ++i) {

     
      while (!(argv[1][i] != 'x' ) && !(argv[1][i] == '\0')) {
         for (n = i; argv[1][n] != '\0'; ++n) {

        
            argv[1][n] = argv[1][n + 1];
         }
         argv[1][n] = '\0';
      }
      while (!(argv[1][i] != 'X' ) && !(argv[1][i] == '\0')) {
         for (n = i; argv[1][n] != '\0'; ++n) {

            
            argv[1][n] = argv[1][n + 1];
         }
         argv[1][n] = '\0';
      }
      while (!(argv[1][i] != 'y' ) && !(argv[1][i] == '\0')) {
         for (n = i; argv[1][n] != '\0'; ++n) {

           
            argv[1][n] = argv[1][n + 1];
         }
         argv[1][n] = '\0';
      }
      while (!(argv[1][i] != 'Y' ) && !(argv[1][i] == '\0')) {
         for (n = i; argv[1][n] != '\0'; ++n) {

          
            argv[1][n] = argv[1][n + 1];
         }
         argv[1][n] = '\0';
      }
      while (!(argv[1][i] != 'q' ) && !(argv[1][i] == '\0')) {
         for (n = i; argv[1][n] != '\0'; ++n) {

         
            argv[1][n] = argv[1][n + 1];
         }
         argv[1][n] = '\0';
      }
      while (!(argv[1][i] != 'Q' ) && !(argv[1][i] == '\0')) {
         for (n = i; argv[1][n] != '\0'; ++n) {

        
            argv[1][n] = argv[1][n + 1];
         }
         argv[1][n] = '\0';
      }
   }

    char arr[100] = """";

    for(x = 0, y = 0; x < 15; x += 3, y++){
        arr[y] += argv[1][x];
    }

   printf(""x,y,q und X,Y,Q aussortiert: %s\n"",argv[1]);
   printf(""Der neue String lautet: %s\n"", arr);
   return 0; 

}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Said,Yasmin,yasmin.said@campus.tu-berlin.de,Beendet,"22. Januar 2021  19:47","24. Januar 2021  21:13","2 Tage 1 Stunde","9,69","Nichts, da Programm nicht kompiliert.","zeigefinger = (int*)((short*)zeigefinger - 4);",5,5,5,"{232} {236} {240} {246} {D} {a} {s} {\0} {i} {s} {t} {\0} {k} {e} {i} {n} {\0} {S} {t} {r} {n} {g} {\0} {\0} {a} {i} {s} {t} {' '} {e} {i} {n} {' '} {S} {t} {r} {i} {n} {g} {\0}","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 3; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: 2; Teil 36: 2; Teil 37: 2; Teil 38: 1; Teil 39: 0; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: %; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: 1; Teil 69: 2; Teil 70: 1; Teil 71: 1; Teil 72: 0; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: 0; Teil 102: 2; Teil 103: 1; Teil 104: 0; Teil 105: 0; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: -; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 3; Teil 141: 2; Teil 142: 1; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 200; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 204; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 3(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>
    long fac1, fac2;
    long *f1=&fac1;
    long *f2=&fac2;

void factorize(long product, long *f1, long *f2)
{
	if (product==1){*f1=1;*f2=1;}
	else if (product==0){*f1=1;*f2=0;}
	else if (product%(product/2)==0){*f1=(product/2);*f2=2;}
	else if (product%(product/2)>0)
	{
	    int half=product/2;
	    for (int i=half-1;i>0;i--)
	    {
	        if (product%i==0){*f1=i;*f2=product/i;break;}
	    }
	}
}

int main(){
    long product;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &product);
	factorize(product, f1, f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, fac1, fac2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",-
Zell,"Caspar Valentin",zell@campus.tu-berlin.de,Beendet,"23. Januar 2021  13:21","24. Januar 2021  11:59","22 Stunden 38 Minuten","13,66","{Das} {ist} {ein} {String} {Das} {ist} {kein} {String} {a} {ist} {ein} {String}","zeigefinger = (int*)((short*)zeigefinger - 4);",232,80,5,"{D} {i} {' '} {S} {D} {a} {s} {\0} {i} {s} {t} {\0} {k} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0} {a} {i} {s} {t} {' '} {e} {i} {n} {' '} {S} {t} {r} {i} {n} {g} {\0}","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 11; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 12; Teil 57: %; Teil 58: %; Teil 59: 1; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 11; Teil 68: 208; Teil 69: %; Teil 70: %; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 12; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: 0; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: 212; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 13; Teil 101: -; Teil 102: %; Teil 103: %; Teil 104: %; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 2(14); Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: 2; Teil 119: 1; Teil 120: 0; Teil 121: 0; Teil 122: 3(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: 200; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 4(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 204; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 5(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: -; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 6(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: -; Teil 185: -; Teil 186: -; Teil 187: -; Teil 188: 14; Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: %; Teil 196: %; Teil 197: %; Teil 198: %; Teil 199: 15; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
   if((product==0) || (product == 1))
   {
      *f1 = 1;
      *f2 = product;
   }
   else
   {
      int i = 0;
      while((product)%(product/2 - i + 1) != 0) 
      {
         *f1 = product/2 - i;
         *f2 = product/(*f1);
         i++;
      }
   }
   
}

int main(){
	printf(""Please enter an Integer: "");
   long int Produkt, Faktor1, Faktor2;    
   scanf(""%ld"",&Produkt);
   factorize(Produkt, &Faktor1, &Faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"",Produkt, Faktor1, Faktor2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0;(i < zahl) && (i < 10) && (src[i] != '\0'); i++)
    {
        dest[i] = src[i];
    }
}

void umdrehen(char* str )
{
    int size;
    for (int j = 1; str[j] != '\0'; j++)
    {
        size = j + 2;
    }
    char Kopie[size];
    for (int i = 0; i < (size - 1); i++)
    {
        Kopie[size - 2- i] = str[i];
    }
    for (int i = 0; i < size; i++)
    {
        str[i] = Kopie[i];
    }
    str[size-1]='\0';
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen(test, atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{
    for (int i = 0;(i < zahl) && (i < 10) && (src[i] != '\0'); i++)
    {
        dest[i] = src[i];
    }
}

void umdrehen(char* str )
{
    int size;
    for (int j = 1; str[j] != '\0'; j++)
    {
        size = j + 2;
    }
    char Kopie[size];
    for (int i = 0; i < (size - 1); i++)
    {
        Kopie[size - 2- i] = str[i];
    }
    for (int i = 0; i < size; i++)
    {
        str[i] = Kopie[i];
    }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen(test, atoi(argv[1]), argv[2]);
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}"
Kühl,Jakob,jakob.kuehl@campus.tu-berlin.de,Beendet,"23. Januar 2021  15:14","24. Januar 2021  22:46","1 Tag 7 Stunden","13,85",5,"Ein C-String ist ein Array von char-Variablen.","{232} {236} {240} {246} {Das} {ist} {ein} {String} {a} {ist} {ein} {String}",5,5,"{232} {236} {240} {246} {D} {a} {s} {\0} {i} {s} {t} {\0} {' '} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0} {a} {i} {s} {t} {' '} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0}","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: %; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: 201; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: 1; Teil 70: %; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: 202; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: 0; Teil 103: %; Teil 104: %; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 13; Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 2(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: 200; Teil 152: 204; Teil 153: 208; Teil 154: 212; Teil 155: 3(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: 0; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 4(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 5(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: -; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	if(product % 2 == 0){
		*f1 = 2;
		*f2 = product/2;
	}else{
		if(product % 3 == 0){
			*f1 = 3;
			*f2 = product/3;
		}
		else{
			*f1 = product;
			*f2 = 1;
		}
	}
}

int main(){
	int prod = 50;
	long factor1 = 0;
	long factor2 = 0;
	printf(""Please enter an Integer: "");
	scanf(""%i"", &prod);
	getchar();
	long prod1 = prod;
	factorize(prod1, &factor1, &factor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", prod1, factor2, factor1);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include<stdio.h>

int main(int argc, char* argv[]){
	char a[100]= """";
	char b[100]="""";
	int x=0;
	for(int i=1 ;i<argc ;i++){
		for (int j=0; argv[i][j] != '\0'; j++){
			if(argv[i][j]== 'x' || argv[i][j]== 'y' || argv[i][j]== 'q' || argv[i][j]== 'X' || argv[i][j]== 'Y' || argv[i][j]== 'Q') continue;
			else {
				a[x]=argv[i][j];
				x+=1;
			}
		}
	}
	printf(""x,y,q und X,Y,Q aussortiert: %s\n"", a);
	int y=0;
	for(int i=0; i<100; i+=3){
		b[y]=a[i];
		y++;
	}
	printf(""Der neue String lautet: %s\n"", b);
}"
Mohr,Niklas,niklas.mohr@campus.tu-berlin.de,Beendet,"23. Januar 2021  19:54","24. Januar 2021  23:43","1 Tag 3 Stunden","9,54","Ein C-String ist ein Array von char-Variablen.",5,5,"Nichts, da Programm nicht kompiliert.","{232} {236} {240} {246} {Das} {ist} {ein} {String} {a} {ist} {kein} {String}","{232} {236} {240} {246} {D} {a} {s} {\0} {i} {s} {t} {\0} {' '} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0} {a} {i} {s} {t} {' '} {e} {i} {n} {' '} {S} {t} {r} {i} {n} {g} {\0}","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 3; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: 2; Teil 36: %; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: %; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: 1; Teil 69: %; Teil 70: %; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: 0; Teil 102: %; Teil 103: %; Teil 104: %; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 11; Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: %; Teil 130: %; Teil 131: %; Teil 132: %; Teil 133: 2(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: 3; Teil 141: 2; Teil 142: 1; Teil 143: 0; Teil 144: 3(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: 2; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 4(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: 1; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 4(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 6(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: -; Teil 195: -; Teil 196: -; Teil 197: -; Teil 198: -; Teil 199: 14; Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: %; Teil 206: %; Teil 207: %; Teil 208: %; Teil 209: %; Teil 210: 15; Teil 211: -; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
    int half = product / 2;
    if(product == 0) 
    {
        *f1 = 1;
        *f2 = product;
    }
    else if(product == 1) 
    {
        *f1 = 1;
        *f2 = product;
    }
    else for(int i = 2; i <= product; i++)
    {
        if(product % i == 0)
        {
            *f1 = product / i;
            *f2 = i;
            break;
        }
        else half -= 1;
    }
}

int main(){
	printf(""Please enter an Integer: "");
    long product, f1, f2;
    scanf(""%i"", &product);
    factorize(product, &f1, &f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, f1, f2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
   for(int i = 0; i <= 10; i++)
    {
        dest[i] = src[i];
    }
}

void umdrehen( char* str )
{
   for(int i = 0; i <= 5; i++)
    {
        char temp = str[i];
        str[i] = str[11 - i];
        str[11 - i] = temp;
    }

}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>

void aussortieren(char* str)
{
    int t = 0;
    char temp[50];
    for(int i = 0; str[i] != '\0'; i++)
    {
        int t = 0;
        char temp[50];
        if(str[i] == 'x'|| str[i] == 'y'|| str[i] == 'q');
        else if(str[i] == 'X'|| str[i] == 'Y'|| str[i] == 'Q');
        else 
        {
            temp[t] = str[i];
            t++;
        }
    }
    str = &temp;
}


char* sortieren(int länge, char* str[])
{
    int t = 0;
    char temp[200];
    for(int i = 0; i < länge; i++)
    {
        for(int a = 0; a != '\0'; a++)
        {
            temp[t] = str[i+1][a];
            t++;
        }
    }
}   


int main( int argc, char* argv[] )
{  
    int length = sizeof(argv) - 1;
    for(int i = 1; i <= length; i++)
    {
        aussortieren(argv[i]);
    }
    char zusammen = sortieren(length, argv);
    printf(""x,y,q und X,Y,Q aussortiert: %s"", zusammen); 
}"
Nie,"Tammo Hendrik",tammo.h.nie@campus.tu-berlin.de,Beendet,"24. Januar 2021  14:07","24. Januar 2021  23:56","9 Stunden 49 Minuten","14,18",80,5,"zeigefinger = (int*)((short*)zeigefinger - 4);","Nichts, da Programm nicht kompiliert.",5,"{232} {236} {240} {246} {D} {a} {S} {\0} {i} {s} {t} {\0} {' '} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0} {a} {i} {s} {t} {' '} {e} {i} {n} {' '} {S} {t} {r} {i} {n} {g} {\0}","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: %; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: 204; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: %; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: 208; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: %; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 2(14); Teil 123: -; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: 2; Teil 130: 1; Teil 131: 0; Teil 132: 0; Teil 133: 3(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: %; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 4(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 5(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: %; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 4(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 5(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: %; Teil 195: %; Teil 196: %; Teil 197: %; Teil 198: %; Teil 199: 6(14); Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: -; Teil 206: -; Teil 207: -; Teil 208: -; Teil 209: -; Teil 210: 15; Teil 211: %; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	if(product <= 1)
   {
      *f1 = 1;
      *f2 = product;
   }
   else
   {
      for(int i = 2; i <= product; i++)
      {
         if(product == ((product / i) * i))
         {
            *f2 = i;
            *f1 = product / i;
            break;
         }
      }
   }
   
}

int main(){
	printf(""Please enter an Integer: "");
   long int product;
   scanf(""%ld"",&product);
   long int f1;
   long int f2;
   factorize(product, &f1, &f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, f1, f2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{ 
  for(int i = 0; i < zahl && dest[i] != '\0'; i++)
  {
     dest[i] = src[i];
  }
}

void umdrehen( char* str )
{
  int lenght = 0;
  int* plengt = &lenght;
  for(int i = 0; str[i] != '\0'; i++)
  {
     *plengt += 1;
  }
  for(int i = 0; i < (lenght/2); i++)
  {
     char temp;
     temp = str[i];
     str[i] = str[lenght - 1 - i];
     str[lenght - 1 - i] = temp;
  }
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
 
int main(int argc, char* argv[52])
{
   //aneinanderhängen

   int zahl = 0;
   int* p_zahl = &zahl;
   int counter = 1;
   int* p_counter = &counter;
   char str[30];
   for(int i = 0; i < argc-1 ; i++)
   {
      for(int j = 0; argv[counter][j] != '\0'; j++)
      {
         str[zahl] = argv[counter][j];
         *p_zahl += 1;
         
      }
      *p_counter += 1;
   }
   str[zahl+1] = '\0';

   int nummer = 0;
   int* p_nummer = &nummer;
   char str2[25];
   for(int i = 0; ; i++)
   {
      if((str[i] != 'x') && (str[i] != 'y') && (str[i] != 'q') && (str[i] != 'X') && (str[i] != 'Y') && (str[i] != 'Q'))
      {
         
         str2[nummer] = str[i];
         if(str[i] == '\0') break;
         *p_nummer += 1;
      }
   }

   //jedes dritte in str3
   char str3[35];
   for(int i = 0; i < 57; i +=3)
   {
      //if((str2[i] == '\0')) break;
      str3[i/3] = str2[i];  
      str3[i/3+1] = '\0'  ;
   }
   //drucken:

   printf(""x,y,q und X,Y,Q aussortiert: %s\nDer neue String lautet: %s"", str2, str3);
}"
Gerndt,Alexander,5afb11f6268c4f6be6cd43c56fdb1902,Beendet,"24. Januar 2021  16:56","24. Januar 2021  17:39","43 Minuten 12 Sekunden","1,95",80,5,232,"Beim Lesen merkt sich ein C-String die aktuelle Position.",5,"{} {} {} {} {} {} {} {} {} {} {} {} {} {} {} {} {} {} {} {} {} {} {} {} {} {D} {a} {s} {i} {s} {t} {e} {i} {n} {S} {t} {r} {i} {n} {g}","Teil 1: 1; Teil 2: ; Teil 3: ; Teil 4: ; Teil 5: ; Teil 6: ; Teil 7: ; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: ; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: ; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: ; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: ; Teil 26: ; Teil 27: ; Teil 28: ; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: ; Teil 35: ; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: ; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: ; Teil 45: ; Teil 46: ; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: ; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: ; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: ; Teil 60: ; Teil 61: ; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: ; Teil 66: ; Teil 67: ; Teil 68: ; Teil 69: ; Teil 70: ; Teil 71: ; Teil 72: ; Teil 73: ; Teil 74: ; Teil 75: ; Teil 76: ; Teil 77: ; Teil 78: ; Teil 79: ; Teil 80: ; Teil 81: ; Teil 82: ; Teil 83: ; Teil 84: ; Teil 85: ; Teil 86: ; Teil 87: ; Teil 88: ; Teil 89: ; Teil 90: ; Teil 91: ; Teil 92: ; Teil 93: ; Teil 94: ; Teil 95: ; Teil 96: ; Teil 97: ; Teil 98: ; Teil 99: ; Teil 100: ; Teil 101: ; Teil 102: ; Teil 103: ; Teil 104: ; Teil 105: ; Teil 106: ; Teil 107: ; Teil 108: ; Teil 109: ; Teil 110: ; Teil 111: ; Teil 112: ; Teil 113: ; Teil 114: ; Teil 115: ; Teil 116: ; Teil 117: ; Teil 118: ; Teil 119: ; Teil 120: ; Teil 121: ; Teil 122: ; Teil 123: ; Teil 124: ; Teil 125: ; Teil 126: ; Teil 127: ; Teil 128: ; Teil 129: ; Teil 130: ; Teil 131: ; Teil 132: ; Teil 133: ; Teil 134: ; Teil 135: ; Teil 136: ; Teil 137: ; Teil 138: ; Teil 139: ; Teil 140: ; Teil 141: ; Teil 142: ; Teil 143: ; Teil 144: ; Teil 145: ; Teil 146: ; Teil 147: ; Teil 148: ; Teil 149: ; Teil 150: ; Teil 151: ; Teil 152: ; Teil 153: ; Teil 154: ; Teil 155: ; Teil 156: ; Teil 157: ; Teil 158: ; Teil 159: ; Teil 160: ; Teil 161: ; Teil 162: ; Teil 163: ; Teil 164: ; Teil 165: ; Teil 166: ; Teil 167: ; Teil 168: ; Teil 169: ; Teil 170: ; Teil 171: ; Teil 172: ; Teil 173: ; Teil 174: ; Teil 175: ; Teil 176: ; Teil 177: ; Teil 178: ; Teil 179: ; Teil 180: ; Teil 181: ; Teil 182: ; Teil 183: ; Teil 184: ; Teil 185: ; Teil 186: ; Teil 187: ; Teil 188: ; Teil 189: ; Teil 190: ; Teil 191: ; Teil 192: ; Teil 193: ; Teil 194: ; Teil 195: ; Teil 196: ; Teil 197: ; Teil 198: ; Teil 199: ; Teil 200: ; Teil 201: ; Teil 202: ; Teil 203: ; Teil 204: ; Teil 205: ; Teil 206: ; Teil 207: ; Teil 208: ; Teil 209: ; Teil 210: ; Teil 211: ; Teil 212: ; Teil 213: ; Teil 214: ; Teil 215: ; Teil 216: ; Teil 217: ; Teil 218: ; Teil 219: ; Teil 220:","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	if (product % 2 == 0) {
		*f1 = product / 2;
			*f2 = 2;
	}
	else
	{
		*f1 = product / 3;
		*f2 = 3;
	}
	
}

int main() {
	long product = 0;
	long *f1 = 0;
	long *f2 = 0;
	printf(""Please enter an Integer: "");
	scanf(""%ld"", &product);
	factorize(product, *f1, *f2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", product, *f1, *f2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",-
Werner,"Sören Sven",soeren.werner@campus.tu-berlin.de,Beendet,"24. Januar 2021  17:02","24. Januar 2021  23:53","6 Stunden 50 Minuten","12,52","char *daumen = (char*)zeigefinger - 2;
zeigefinger = (int*)daumen;","Nichts, da Programm nicht kompiliert.",232,5,"Ein C-String ist ein Array von char-Variablen.","{232} {236} {240} {246} {D} {a} {s} {\0} {i} {s} {t} {\0} {k} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0} {a} {i} {s} {t} {k} {e} {i} {n} {' '} {S} {t} {r} {i} {n} {g} {\0}","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: 200; Teil 25: %; Teil 26: %; Teil 27: %; Teil 28: %; Teil 29: %; Teil 30: %; Teil 31: %; Teil 32: %; Teil 33: %; Teil 34: 12; Teil 35: %; Teil 36: 2; Teil 37: %; Teil 38: %; Teil 39: %; Teil 40: %; Teil 41: %; Teil 42: %; Teil 43: %; Teil 44: %; Teil 45: 13; Teil 46: 204; Teil 47: %; Teil 48: %; Teil 49: %; Teil 50: %; Teil 51: %; Teil 52: %; Teil 53: %; Teil 54: %; Teil 55: %; Teil 56: 11; Teil 57: %; Teil 58: %; Teil 59: %; Teil 60: %; Teil 61: %; Teil 62: %; Teil 63: %; Teil 64: %; Teil 65: %; Teil 66: %; Teil 67: 12; Teil 68: %; Teil 69: %; Teil 70: 1; Teil 71: %; Teil 72: %; Teil 73: %; Teil 74: %; Teil 75: %; Teil 76: %; Teil 77: %; Teil 78: 13; Teil 79: 208; Teil 80: %; Teil 81: %; Teil 82: %; Teil 83: %; Teil 84: %; Teil 85: %; Teil 86: %; Teil 87: %; Teil 88: %; Teil 89: 11; Teil 90: %; Teil 91: %; Teil 92: %; Teil 93: %; Teil 94: %; Teil 95: %; Teil 96: %; Teil 97: %; Teil 98: %; Teil 99: %; Teil 100: 12; Teil 101: %; Teil 102: %; Teil 103: %; Teil 104: 0; Teil 105: %; Teil 106: %; Teil 107: %; Teil 108: %; Teil 109: %; Teil 110: %; Teil 111: 13; Teil 112: 212; Teil 113: %; Teil 114: %; Teil 115: %; Teil 116: %; Teil 117: %; Teil 118: %; Teil 119: %; Teil 120: %; Teil 121: %; Teil 122: 2(14); Teil 123: %; Teil 124: %; Teil 125: %; Teil 126: %; Teil 127: %; Teil 128: %; Teil 129: 200; Teil 130: 204; Teil 131: 208; Teil 132: 212; Teil 133: 3(14); Teil 134: %; Teil 135: %; Teil 136: %; Teil 137: %; Teil 138: %; Teil 139: 200; Teil 140: %; Teil 141: %; Teil 142: %; Teil 143: %; Teil 144: 4(14); Teil 145: %; Teil 146: %; Teil 147: %; Teil 148: %; Teil 149: %; Teil 150: %; Teil 151: %; Teil 152: %; Teil 153: %; Teil 154: %; Teil 155: 5(14); Teil 156: %; Teil 157: %; Teil 158: %; Teil 159: %; Teil 160: %; Teil 161: 204; Teil 162: %; Teil 163: %; Teil 164: %; Teil 165: %; Teil 166: 3(14); Teil 167: %; Teil 168: %; Teil 169: %; Teil 170: %; Teil 171: %; Teil 172: %; Teil 173: %; Teil 174: %; Teil 175: %; Teil 176: %; Teil 177: 4(14); Teil 178: %; Teil 179: %; Teil 180: %; Teil 181: %; Teil 182: %; Teil 183: %; Teil 184: %; Teil 185: %; Teil 186: %; Teil 187: %; Teil 188: 5(14); Teil 189: %; Teil 190: %; Teil 191: %; Teil 192: %; Teil 193: %; Teil 194: 208; Teil 195: %; Teil 196: %; Teil 197: %; Teil 198: %; Teil 199: 6(14); Teil 200: %; Teil 201: %; Teil 202: %; Teil 203: %; Teil 204: %; Teil 205: -; Teil 206: -; Teil 207: -; Teil 208: -; Teil 209: -; Teil 210: 15; Teil 211: -; Teil 212: -; Teil 213: -; Teil 214: -; Teil 215: -; Teil 216: %; Teil 217: %; Teil 218: %; Teil 219: %; Teil 220: %","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	long tmp = product/2;
	long teiler = 2;

	if(product == 0 || product == 1){
		*f1 = 1;
		*f2 = product;
	}else if((product/2) % 2 == 0){
		*f1 = (product/2);
		*f2 = 2;
	}else{
		while(tmp * teiler != product){
			if((tmp * (teiler+1)) > product){
				tmp--;
			}else{
				teiler++;
			}
		}
		*f1 = tmp;
		*f2 = teiler;
	}
}

int main(){

	long produkt = 0;
	long faktor1 = 0;
	long faktor2 = 0;

	printf(""Please enter an Integer: "");
	scanf(""%ld"",&produkt);

	factorize(produkt ,&faktor1, &faktor2);
	printf(""Possible Factors of %ld are %ld and %ld.\n"", produkt, faktor1, faktor2);
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src){  

	if(zahl<=10){
		for(int i = 0; i < zahl; i++){
			if(src[i] == '\0'){
				return;
			}else{
				dest[i] = src[i];
			}
		}
	}else{
		int i = 0;
		while(dest[i] != '\0'){
			dest[i] = src[i];
			i++;
		}
	}
}


void umdrehen(char* str){
	
	char copy[11];
	for(int i = 0; i < 11; i++){
		copy[i] = str[i];
	}
	for(int i = 0; i < 10; i++){
		str[9-i] = copy[i];
	}
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}","#include <stdio.h>
#include <stdlib.h>
#include <string.h>
/*
int zaehlen(char* str){
	int counter = 0;
	while(str[counter] != '\0'){
		counter++;
	}
	return counter;
}*/

int main( int argc, char* argv[]){



	char str[100] = """";

	for(int i = 1; i<argc; i++){
		strcat(str, argv[i]);
	}
	printf(""%s\n"", str);


}"
Gaida-Ernst,Louis,13815be4325b61b808a04255a1731a15,Beendet,"24. Januar 2021  18:02","24. Januar 2021  18:44","42 Minuten 4 Sekunden","4,12",5,"zeigefinger = (int*)((short*)zeigefinger - 4);",5,"Nichts, da Programm nicht kompiliert.",5,"{232} {236} {240} {246} {D} {a} {s} {\0} {i} {s} {t} {\0} {' '} {e} {i} {n} {\0} {S} {t} {r} {i} {n} {g} {\0} {a} {i} {s} {t} {' '} {e} {i} {n} {' '} {S} {t} {r} {i} {n} {g} {\0}","Teil 1: 9; Teil 2: -; Teil 3: -; Teil 4: -; Teil 5: -; Teil 6: -; Teil 7: -; Teil 8: -; Teil 9: -; Teil 10: -; Teil 11: -; Teil 12: 10; Teil 13: %; Teil 14: 3; Teil 15: 2; Teil 16: 1; Teil 17: 0; Teil 18: %; Teil 19: %; Teil 20: %; Teil 21: %; Teil 22: %; Teil 23: 11; Teil 24: ; Teil 25: ; Teil 26: ; Teil 27: ; Teil 28: ; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: ; Teil 35: ; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: ; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: ; Teil 45: ; Teil 46: ; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: ; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: ; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: ; Teil 60: ; Teil 61: ; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: ; Teil 66: ; Teil 67: ; Teil 68: ; Teil 69: ; Teil 70: ; Teil 71: ; Teil 72: ; Teil 73: ; Teil 74: ; Teil 75: ; Teil 76: ; Teil 77: ; Teil 78: ; Teil 79: ; Teil 80: ; Teil 81: ; Teil 82: ; Teil 83: ; Teil 84: ; Teil 85: ; Teil 86: ; Teil 87: ; Teil 88: ; Teil 89: ; Teil 90: ; Teil 91: ; Teil 92: ; Teil 93: ; Teil 94: ; Teil 95: ; Teil 96: ; Teil 97: ; Teil 98: ; Teil 99: ; Teil 100: ; Teil 101: ; Teil 102: ; Teil 103: ; Teil 104: ; Teil 105: ; Teil 106: ; Teil 107: ; Teil 108: ; Teil 109: ; Teil 110: ; Teil 111: ; Teil 112: ; Teil 113: ; Teil 114: ; Teil 115: ; Teil 116: ; Teil 117: ; Teil 118: ; Teil 119: ; Teil 120: ; Teil 121: ; Teil 122: ; Teil 123: ; Teil 124: ; Teil 125: ; Teil 126: ; Teil 127: ; Teil 128: ; Teil 129: ; Teil 130: ; Teil 131: ; Teil 132: ; Teil 133: ; Teil 134: ; Teil 135: ; Teil 136: ; Teil 137: ; Teil 138: ; Teil 139: ; Teil 140: ; Teil 141: ; Teil 142: ; Teil 143: ; Teil 144: ; Teil 145: ; Teil 146: ; Teil 147: ; Teil 148: ; Teil 149: ; Teil 150: ; Teil 151: ; Teil 152: ; Teil 153: ; Teil 154: ; Teil 155: ; Teil 156: ; Teil 157: ; Teil 158: ; Teil 159: ; Teil 160: ; Teil 161: ; Teil 162: ; Teil 163: ; Teil 164: ; Teil 165: ; Teil 166: ; Teil 167: ; Teil 168: ; Teil 169: ; Teil 170: ; Teil 171: ; Teil 172: ; Teil 173: ; Teil 174: ; Teil 175: ; Teil 176: ; Teil 177: ; Teil 178: ; Teil 179: ; Teil 180: ; Teil 181: ; Teil 182: ; Teil 183: ; Teil 184: ; Teil 185: ; Teil 186: ; Teil 187: ; Teil 188: ; Teil 189: ; Teil 190: ; Teil 191: ; Teil 192: ; Teil 193: ; Teil 194: ; Teil 195: ; Teil 196: ; Teil 197: ; Teil 198: ; Teil 199: ; Teil 200: ; Teil 201: ; Teil 202: ; Teil 203: ; Teil 204: ; Teil 205: ; Teil 206: ; Teil 207: ; Teil 208: ; Teil 209: ; Teil 210: ; Teil 211: ; Teil 212: ; Teil 213: ; Teil 214: ; Teil 215: ; Teil 216: ; Teil 217: ; Teil 218: ; Teil 219: ; Teil 220:","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	// Your factorization
}

int main(){
	printf(""Please enter an Integer: "");
	printf(""Possible Factors of %ld are %ld and %ld.\n"");
	return 0;
}","#include <stdio.h>
#include <stdlib.h>
 
void ersetzen(char* dest, int zahl, char* src)
{  
  
}

void umdrehen( char* str )
{
  
}

int main( int argc, char* argv[] )
{  
  char test[11]= ""0123456789"";
  printf( ""Das Original ist: %s \n"", test );
  ersetzen( test , atoi(argv[1]), argv[2] );
  printf( ""Ersetzt : %s \n"", test );
  umdrehen( test );
  printf( ""Rückwärts : %s \n"", test );
}",-
Andree,Benedikt,85c8efa1191eb1bf6dd959433f88a563,Beendet,"24. Januar 2021  23:05","24. Januar 2021  23:12","7 Minuten 35 Sekunden","0,08",Peter,"{Das} {ist} {kein} {String} {200} {208} {216} {224} {a} {200} {232} {String}",100,0,"*zeigefinger = leute;",-,"Teil 1: ; Teil 2: ; Teil 3: ; Teil 4: ; Teil 5: ; Teil 6: ; Teil 7: ; Teil 8: ; Teil 9: ; Teil 10: ; Teil 11: ; Teil 12: ; Teil 13: ; Teil 14: ; Teil 15: ; Teil 16: ; Teil 17: ; Teil 18: ; Teil 19: ; Teil 20: ; Teil 21: ; Teil 22: ; Teil 23: ; Teil 24: ; Teil 25: ; Teil 26: ; Teil 27: ; Teil 28: ; Teil 29: ; Teil 30: ; Teil 31: ; Teil 32: ; Teil 33: ; Teil 34: ; Teil 35: ; Teil 36: ; Teil 37: ; Teil 38: ; Teil 39: ; Teil 40: ; Teil 41: ; Teil 42: ; Teil 43: ; Teil 44: ; Teil 45: ; Teil 46: ; Teil 47: ; Teil 48: ; Teil 49: ; Teil 50: ; Teil 51: ; Teil 52: ; Teil 53: ; Teil 54: ; Teil 55: ; Teil 56: ; Teil 57: ; Teil 58: ; Teil 59: ; Teil 60: ; Teil 61: ; Teil 62: ; Teil 63: ; Teil 64: ; Teil 65: ; Teil 66: ; Teil 67: ; Teil 68: ; Teil 69: ; Teil 70: ; Teil 71: ; Teil 72: ; Teil 73: ; Teil 74: ; Teil 75: ; Teil 76: ; Teil 77: ; Teil 78: ; Teil 79: ; Teil 80: ; Teil 81: ; Teil 82: ; Teil 83: ; Teil 84: ; Teil 85: ; Teil 86: ; Teil 87: ; Teil 88: ; Teil 89: ; Teil 90: ; Teil 91: ; Teil 92: ; Teil 93: ; Teil 94: ; Teil 95: ; Teil 96: ; Teil 97: ; Teil 98: ; Teil 99: ; Teil 100: ; Teil 101: ; Teil 102: ; Teil 103: ; Teil 104: ; Teil 105: ; Teil 106: ; Teil 107: ; Teil 108: ; Teil 109: ; Teil 110: ; Teil 111: ; Teil 112: ; Teil 113: ; Teil 114: ; Teil 115: ; Teil 116: ; Teil 117: ; Teil 118: ; Teil 119: ; Teil 120: ; Teil 121: ; Teil 122: ; Teil 123: ; Teil 124: ; Teil 125: ; Teil 126: ; Teil 127: ; Teil 128: ; Teil 129: ; Teil 130: ; Teil 131: ; Teil 132: ; Teil 133: ; Teil 134: ; Teil 135: ; Teil 136: ; Teil 137: ; Teil 138: ; Teil 139: ; Teil 140: ; Teil 141: ; Teil 142: ; Teil 143: ; Teil 144: ; Teil 145: ; Teil 146: ; Teil 147: ; Teil 148: ; Teil 149: ; Teil 150: ; Teil 151: ; Teil 152: ; Teil 153: ; Teil 154: ; Teil 155: ; Teil 156: ; Teil 157: ; Teil 158: ; Teil 159: ; Teil 160: ; Teil 161: ; Teil 162: ; Teil 163: ; Teil 164: ; Teil 165: ; Teil 166: ; Teil 167: ; Teil 168: ; Teil 169: ; Teil 170: ; Teil 171: ; Teil 172: ; Teil 173: ; Teil 174: ; Teil 175: ; Teil 176: ; Teil 177: ; Teil 178: ; Teil 179: ; Teil 180: ; Teil 181: ; Teil 182: ; Teil 183: ; Teil 184: ; Teil 185: ; Teil 186: ; Teil 187: ; Teil 188: ; Teil 189: ; Teil 190: ; Teil 191: ; Teil 192: ; Teil 193: ; Teil 194: ; Teil 195: ; Teil 196: ; Teil 197: ; Teil 198: ; Teil 199: ; Teil 200: ; Teil 201: ; Teil 202: ; Teil 203: ; Teil 204: ; Teil 205: ; Teil 206: ; Teil 207: ; Teil 208: ; Teil 209: ; Teil 210: ; Teil 211: ; Teil 212: ; Teil 213: ; Teil 214: ; Teil 215: ; Teil 216: ; Teil 217: ; Teil 218: ; Teil 219: ; Teil 220:","#include <stdio.h>

void factorize(long product, long *f1, long *f2)
{
	// Your factorization
}

int main(){
	printf(""Please enter an Integer: "");
	printf(""Possible Factors of %ld are %ld and %ld.\n"");
	return 0;
}",-,-
